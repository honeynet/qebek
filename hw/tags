!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.7	//
ABRT_ERR	.\ide.c	55;"	d	file:
AC97_IRQ	.\mainstone.h	24;"	d
ACPI_DATA_SIZE	.\pc.c	43;"	d	file:
ACPI_DBG_IO_ADDR	.\acpi.c	32;"	d	file:
ACPI_DISABLE	.\acpi.c	64;"	d	file:
ACPI_ENABLE	.\acpi.c	63;"	d	file:
ADBBusState	.\ppc_mac.h	/^typedef struct ADBBusState {$/;"	s
ADBBusState	.\ppc_mac.h	/^} ADBBusState;$/;"	t	typeref:struct:ADBBusState
ADBDevice	.\ppc_mac.h	/^struct ADBDevice {$/;"	s
ADBDevice	.\ppc_mac.h	/^typedef struct ADBDevice ADBDevice;$/;"	t	typeref:struct:ADBDevice
ADBDeviceRequest	.\ppc_mac.h	/^typedef int ADBDeviceRequest(ADBDevice *d, uint8_t *buf_out,$/;"	t
ADBDeviceReset	.\ppc_mac.h	/^typedef int ADBDeviceReset(ADBDevice *d);$/;"	t
ADB_BUSRESET	.\adb.c	29;"	d	file:
ADB_CMD_CHANGE_ID	.\adb.c	36;"	d	file:
ADB_CMD_CHANGE_ID_AND_ACT	.\adb.c	37;"	d	file:
ADB_CMD_CHANGE_ID_AND_ENABLE	.\adb.c	38;"	d	file:
ADB_CMD_SELF_TEST	.\adb.c	35;"	d	file:
ADB_DONGLE	.\adb.c	41;"	d	file:
ADB_FLUSH	.\adb.c	30;"	d	file:
ADB_KEYBOARD	.\adb.c	42;"	d	file:
ADB_MAX_OUT_LEN	.\ppc_mac.h	75;"	d
ADB_MISC	.\adb.c	46;"	d	file:
ADB_MODEM	.\adb.c	45;"	d	file:
ADB_MOUSE	.\adb.c	43;"	d	file:
ADB_PACKET	.\cuda.c	57;"	d	file:
ADB_READREG	.\adb.c	32;"	d	file:
ADB_RET_NOTPRESENT	.\adb.c	49;"	d	file:
ADB_TABLET	.\adb.c	44;"	d	file:
ADB_WRITEREG	.\adb.c	31;"	d	file:
ADC_CHANNEL	.\es1370.c	157;"	d	file:
ADDR	.\dma.c	54;"	d	file:
ADDRESS_ERROR	.\sd.h	33;"	d
ADDR_SHIFT	.\nand.c	100;"	d	file:
ADDR_SHIFT	.\nand.c	105;"	d	file:
ADDR_SHIFT	.\nand.c	659;"	d	file:
ADDR_SHIFT	.\nand.c	95;"	d	file:
ADLIB_KILL_TIMERS	.\adlib.c	33;"	d	file:
ADS_TEMP0	.\ads7846.c	42;"	d	file:
ADS_TEMP1	.\ads7846.c	43;"	d	file:
ADS_VAUX	.\ads7846.c	41;"	d	file:
ADS_VBAT	.\ads7846.c	40;"	d	file:
ADS_XPOS	.\ads7846.c	44;"	d	file:
ADS_YPOS	.\ads7846.c	45;"	d	file:
ADS_Z1POS	.\ads7846.c	46;"	d	file:
ADS_Z2POS	.\ads7846.c	47;"	d	file:
AKE_SEQ_ERROR	.\sd.h	52;"	d
AKITA_MAX_ADDR	.\spitz.c	958;"	d	file:
ALE	.\tc58128.c	10;"	d	file:
ALL_CPU_MASK	.\arm_gic.c	49;"	d	file:
ALWAYS_ENABLED	.\omap1_clk.c	32;"	d	file:
AMS_ENT	.\fmopl.c	100;"	d	file:
AMS_SHIFT	.\fmopl.c	101;"	d	file:
AMS_TABLE	.\fmopl.c	/^static INT32 *AMS_TABLE;$/;"	v	file:
AN5206_MBAR_ADDR	.\an5206.c	15;"	d	file:
AN5206_RAMBAR_ADDR	.\an5206.c	16;"	d	file:
APBState	.\apb_pci.c	/^typedef PCIHostState APBState;$/;"	t	file:
APB_MEM_BASE	.\sun4u.c	42;"	d	file:
APB_SPECIAL_BASE	.\sun4u.c	41;"	d	file:
APICState	.\apic.c	/^typedef struct APICState {$/;"	s	file:
APICState	.\apic.c	/^} APICState;$/;"	t	typeref:struct:APICState	file:
APIC_DESTMODE_CLUSTER	.\apic.c	47;"	d	file:
APIC_DESTMODE_FLAT	.\apic.c	46;"	d	file:
APIC_DM_EXTINT	.\apic.c	43;"	d	file:
APIC_DM_FIXED	.\apic.c	37;"	d	file:
APIC_DM_INIT	.\apic.c	41;"	d	file:
APIC_DM_LOWPRI	.\apic.c	38;"	d	file:
APIC_DM_NMI	.\apic.c	40;"	d	file:
APIC_DM_SIPI	.\apic.c	42;"	d	file:
APIC_DM_SMI	.\apic.c	39;"	d	file:
APIC_INPUT_POLARITY	.\apic.c	56;"	d	file:
APIC_LVT_ERROR	.\apic.c	33;"	d	file:
APIC_LVT_LEVEL_TRIGGER	.\apic.c	54;"	d	file:
APIC_LVT_LINT0	.\apic.c	31;"	d	file:
APIC_LVT_LINT1	.\apic.c	32;"	d	file:
APIC_LVT_MASKED	.\apic.c	53;"	d	file:
APIC_LVT_NB	.\apic.c	34;"	d	file:
APIC_LVT_PERFORM	.\apic.c	30;"	d	file:
APIC_LVT_REMOTE_IRR	.\apic.c	55;"	d	file:
APIC_LVT_THERMAL	.\apic.c	29;"	d	file:
APIC_LVT_TIMER	.\apic.c	28;"	d	file:
APIC_LVT_TIMER_PERIODIC	.\apic.c	52;"	d	file:
APIC_SEND_PENDING	.\apic.c	57;"	d	file:
APIC_SV_ENABLE	.\apic.c	63;"	d	file:
APIC_TRIGGER_EDGE	.\apic.c	49;"	d	file:
APIC_TRIGGER_LEVEL	.\apic.c	50;"	d	file:
APP_CMD	.\sd.h	51;"	d
APP_READ_BLOCK	.\sd.c	1373;"	d	file:
APP_WRITE_BLOCK	.\sd.c	1374;"	d	file:
AR	.\fmopl.h	/^	INT32 *AR;		\/* attack rate     :&AR_TABLE[AR<<2]   *\/$/;"	m	struct:fm_opl_slot
ARB_CNTL	.\pxa2xx.c	478;"	d	file:
ARM_MISC_H	.\arm-misc.h	12;"	d
ARM_PIC_CPU_FIQ	.\arm-misc.h	16;"	d
ARM_PIC_CPU_IRQ	.\arm-misc.h	15;"	d
AR_TABLE	.\fmopl.h	/^	INT32 AR_TABLE[75];	\/* atttack rate tables *\/$/;"	m	struct:fm_opl_f
ASC_ILLEGAL_OPCODE	.\ide.c	293;"	d	file:
ASC_INV_FIELD_IN_CMD_PACKET	.\ide.c	295;"	d	file:
ASC_LOGICAL_BLOCK_OOR	.\ide.c	294;"	d	file:
ASC_MEDIUM_NOT_PRESENT	.\ide.c	296;"	d	file:
ASC_SAVING_PARAMETERS_NOT_SUPPORTED	.\ide.c	297;"	d	file:
ATAPI_INT_REASON_CD	.\ide.c	287;"	d	file:
ATAPI_INT_REASON_IO	.\ide.c	288;"	d	file:
ATAPI_INT_REASON_REL	.\ide.c	289;"	d	file:
ATAPI_INT_REASON_TAG	.\ide.c	290;"	d	file:
ATAPI_PACKET_SIZE	.\ide.c	207;"	d	file:
AUX1_VAL	.\tsc210x.c	139;"	d	file:
AUX2_PWRFAIL	.\slavio_misc.c	73;"	d	file:
AUX2_PWRINTCLR	.\slavio_misc.c	72;"	d	file:
AUX2_PWROFF	.\slavio_misc.c	71;"	d	file:
AUX2_VAL	.\tsc210x.c	140;"	d	file:
AUX_ACK	.\pckbd.c	109;"	d	file:
AUX_ACK	.\ps2.c	65;"	d	file:
AUX_DISABLE_DEV	.\pckbd.c	106;"	d	file:
AUX_DISABLE_DEV	.\ps2.c	62;"	d	file:
AUX_ENABLE_DEV	.\pckbd.c	105;"	d	file:
AUX_ENABLE_DEV	.\ps2.c	61;"	d	file:
AUX_GET_SCALE	.\pckbd.c	97;"	d	file:
AUX_GET_SCALE	.\ps2.c	53;"	d	file:
AUX_GET_TYPE	.\pckbd.c	103;"	d	file:
AUX_GET_TYPE	.\ps2.c	59;"	d	file:
AUX_POLL	.\pckbd.c	99;"	d	file:
AUX_POLL	.\ps2.c	55;"	d	file:
AUX_RESET	.\pckbd.c	108;"	d	file:
AUX_RESET	.\ps2.c	64;"	d	file:
AUX_RESET_WRAP	.\pckbd.c	100;"	d	file:
AUX_RESET_WRAP	.\ps2.c	56;"	d	file:
AUX_SET_DEFAULT	.\pckbd.c	107;"	d	file:
AUX_SET_DEFAULT	.\ps2.c	63;"	d	file:
AUX_SET_REMOTE	.\pckbd.c	102;"	d	file:
AUX_SET_REMOTE	.\ps2.c	58;"	d	file:
AUX_SET_RES	.\pckbd.c	96;"	d	file:
AUX_SET_RES	.\ps2.c	52;"	d	file:
AUX_SET_SAMPLE	.\pckbd.c	104;"	d	file:
AUX_SET_SAMPLE	.\ps2.c	60;"	d	file:
AUX_SET_SCALE11	.\pckbd.c	94;"	d	file:
AUX_SET_SCALE11	.\ps2.c	50;"	d	file:
AUX_SET_SCALE21	.\pckbd.c	95;"	d	file:
AUX_SET_SCALE21	.\ps2.c	51;"	d	file:
AUX_SET_STREAM	.\pckbd.c	98;"	d	file:
AUX_SET_STREAM	.\ps2.c	54;"	d	file:
AUX_SET_WRAP	.\pckbd.c	101;"	d	file:
AUX_SET_WRAP	.\ps2.c	57;"	d	file:
AcceptAllPhys	.\rtl8139.c	/^    AcceptAllPhys = 0x01,$/;"	e	enum:rx_mode_bits	file:
AcceptBroadcast	.\rtl8139.c	/^    AcceptBroadcast = 0x08,$/;"	e	enum:rx_mode_bits	file:
AcceptErr	.\rtl8139.c	/^    AcceptErr = 0x20,$/;"	e	enum:rx_mode_bits	file:
AcceptMulticast	.\rtl8139.c	/^    AcceptMulticast = 0x04,$/;"	e	enum:rx_mode_bits	file:
AcceptMyPhys	.\rtl8139.c	/^    AcceptMyPhys = 0x02,$/;"	e	enum:rx_mode_bits	file:
AcceptRunt	.\rtl8139.c	/^    AcceptRunt = 0x10,$/;"	e	enum:rx_mode_bits	file:
AdlibState	.\adlib.c	/^} AdlibState;$/;"	t	typeref:struct:__anon2	file:
Adlib_fini	.\adlib.c	/^static void Adlib_fini (AdlibState *s)$/;"	f	file:
Adlib_init	.\adlib.c	/^int Adlib_init (AudioState *audio, qemu_irq *pic)$/;"	f
BADF	.\lsi53c895a.c	23;"	d	file:
BADF	.\lsi53c895a.c	27;"	d	file:
BADF	.\pl022.c	18;"	d	file:
BADF	.\pl022.c	22;"	d	file:
BADF	.\pl061.c	19;"	d	file:
BADF	.\pl061.c	23;"	d	file:
BADF	.\scsi-disk.c	25;"	d	file:
BADF	.\scsi-generic.c	37;"	d	file:
BADF	.\smbus.c	21;"	d	file:
BADF	.\smbus.c	25;"	d	file:
BADF	.\ssd0303.c	22;"	d	file:
BADF	.\ssd0303.c	26;"	d	file:
BADF	.\ssd0323.c	22;"	d	file:
BADF	.\ssd0323.c	26;"	d	file:
BADF	.\ssi-sd.c	18;"	d	file:
BADF	.\ssi-sd.c	22;"	d	file:
BADF	.\stellaris_enet.c	19;"	d	file:
BADF	.\stellaris_enet.c	23;"	d	file:
BAT1_VAL	.\tsc210x.c	137;"	d	file:
BAT2_VAL	.\tsc210x.c	138;"	d	file:
BBD_ERR	.\ide.c	60;"	d	file:
BCR_BSBC	.\pcnet.c	96;"	d	file:
BCR_DWIO	.\pcnet.c	101;"	d	file:
BCR_EECAS	.\pcnet.c	97;"	d	file:
BCR_FDC	.\pcnet.c	95;"	d	file:
BCR_LED1	.\pcnet.c	92;"	d	file:
BCR_LED2	.\pcnet.c	93;"	d	file:
BCR_LED3	.\pcnet.c	94;"	d	file:
BCR_LNKST	.\pcnet.c	91;"	d	file:
BCR_MC	.\pcnet.c	90;"	d	file:
BCR_MSRDA	.\pcnet.c	88;"	d	file:
BCR_MSWRA	.\pcnet.c	89;"	d	file:
BCR_PLAT	.\pcnet.c	99;"	d	file:
BCR_SSIZE32	.\pcnet.c	102;"	d	file:
BCR_SWS	.\pcnet.c	98;"	d	file:
BCR_SWSTYLE	.\pcnet.c	103;"	d	file:
BF_WIDTH	.\openpic.c	108;"	d	file:
BGR_FORMAT	.\vga.c	825;"	d	file:
BGR_FORMAT	.\vga.c	832;"	d	file:
BGR_FORMAT	.\vga.c	839;"	d	file:
BGR_FORMAT	.\vga_template.h	525;"	d
BIG	.\vga.c	82;"	d	file:
BIG	.\vga.c	84;"	d	file:
BIOS_ADDRESS	.\shix.c	36;"	d	file:
BIOS_FILENAME	.\mips_malta.c	43;"	d	file:
BIOS_FILENAME	.\mips_malta.c	45;"	d	file:
BIOS_FILENAME	.\mips_mipssim.c	36;"	d	file:
BIOS_FILENAME	.\mips_mipssim.c	38;"	d	file:
BIOS_FILENAME	.\mips_pica61.c	34;"	d	file:
BIOS_FILENAME	.\mips_pica61.c	36;"	d	file:
BIOS_FILENAME	.\mips_r4k.c	19;"	d	file:
BIOS_FILENAME	.\mips_r4k.c	21;"	d	file:
BIOS_FILENAME	.\pc.c	38;"	d	file:
BIOS_FILENAME	.\ppc405_boards.c	36;"	d	file:
BIOS_FILENAME	.\ppc_mac.h	31;"	d
BIOS_FILENAME	.\ppc_prep.c	43;"	d	file:
BIOS_FILENAME	.\shix.c	35;"	d	file:
BIOS_SIZE	.\ppc405_boards.c	37;"	d	file:
BIOS_SIZE	.\ppc405_boards.c	38;"	d	file:
BIT	.\eepro100.c	109;"	d	file:
BITS	.\eepro100.c	110;"	d	file:
BITS	.\pl110.c	89;"	d	file:
BITS	.\pl110.c	91;"	d	file:
BITS	.\pl110.c	93;"	d	file:
BITS	.\pl110.c	95;"	d	file:
BITS	.\pl110.c	97;"	d	file:
BITS	.\pl110_template.h	91;"	d
BITS	.\pxa2xx_lcd.c	975;"	d	file:
BITS	.\pxa2xx_lcd.c	977;"	d	file:
BITS	.\pxa2xx_lcd.c	979;"	d	file:
BITS	.\pxa2xx_lcd.c	981;"	d	file:
BITS	.\pxa2xx_lcd.c	983;"	d	file:
BITS	.\pxa2xx_template.h	425;"	d
BLANK	.\scsi-generic.c	49;"	d	file:
BLK_READ_BLOCK	.\sd.c	1371;"	d	file:
BLK_WRITE_BLOCK	.\sd.c	1372;"	d	file:
BLOCK_LEN_ERROR	.\sd.h	34;"	d
BLOCK_SIZE	.\sd.c	243;"	d	file:
BMDMAState	.\ide.c	/^typedef struct BMDMAState {$/;"	s	file:
BMDMAState	.\ide.c	/^} BMDMAState;$/;"	t	typeref:struct:BMDMAState	file:
BM_CMD_READ	.\ide.c	384;"	d	file:
BM_CMD_START	.\ide.c	383;"	d	file:
BM_STATUS_DMAING	.\ide.c	379;"	d	file:
BM_STATUS_ERROR	.\ide.c	380;"	d	file:
BM_STATUS_INT	.\ide.c	381;"	d	file:
BOOT_DEF	.\pxa2xx.c	477;"	d	file:
BORDER	.\pl110_template.h	28;"	d
BORDER	.\pl110_template.h	35;"	d
BORDER	.\pl110_template.h	37;"	d
BORDER	.\pl110_template.h	44;"	d
BOTH	.\wm8750.c	201;"	d	file:
BPP	.\omap_lcd_template.h	171;"	d
BPP	.\omap_lcd_template.h	31;"	d
BPP	.\omap_lcd_template.h	34;"	d
BPP	.\omap_lcd_template.h	37;"	d
BPP	.\vga_template.h	26;"	d
BPP	.\vga_template.h	29;"	d
BPP	.\vga_template.h	32;"	d
BPP	.\vga_template.h	522;"	d
BPP_1	.\pl110.c	/^    BPP_1,$/;"	e	enum:pl110_bppmode	file:
BPP_16	.\pl110.c	/^    BPP_16,$/;"	e	enum:pl110_bppmode	file:
BPP_2	.\pl110.c	/^    BPP_2,$/;"	e	enum:pl110_bppmode	file:
BPP_32	.\pl110.c	/^    BPP_32$/;"	e	enum:pl110_bppmode	file:
BPP_4	.\pl110.c	/^    BPP_4,$/;"	e	enum:pl110_bppmode	file:
BPP_8	.\pl110.c	/^    BPP_8,$/;"	e	enum:pl110_bppmode	file:
BP_GAMEPAD	.\stellaris.c	31;"	d	file:
BP_OLED_I2C	.\stellaris.c	29;"	d	file:
BP_OLED_SSI	.\stellaris.c	30;"	d	file:
BSCNTR	.\pxa2xx_lcd.c	118;"	d	file:
BSCNTR0	.\pxa2xx.c	479;"	d	file:
BSCNTR1	.\pxa2xx.c	480;"	d	file:
BSCNTR2	.\pxa2xx.c	483;"	d	file:
BSCNTR3	.\pxa2xx.c	484;"	d	file:
BSHL	.\spitz.c	70;"	d	file:
BSHR	.\spitz.c	65;"	d	file:
BUILD_YM3812	.\fmopl.h	5;"	d
BUSY_STAT	.\ide.c	50;"	d	file:
BasicModeCtrl	.\rtl8139.c	/^    BasicModeCtrl = 0x62,$/;"	e	enum:RTL8139_registers	file:
BasicModeCtrl	.\rtl8139.c	/^    uint16_t BasicModeCtrl;$/;"	m	struct:RTL8139State	file:
BasicModeStatus	.\rtl8139.c	/^    BasicModeStatus = 0x64,$/;"	e	enum:RTL8139_registers	file:
BasicModeStatus	.\rtl8139.c	/^    uint16_t BasicModeStatus;$/;"	m	struct:RTL8139State	file:
CALC_FCSLOT	.\fmopl.c	/^INLINE void CALC_FCSLOT(OPL_CH *CH,OPL_SLOT *SLOT)$/;"	f
CARD_ECC_DISABLED	.\sd.h	47;"	d
CARD_ECC_FAILED	.\sd.h	42;"	d
CARD_IS_LOCKED	.\sd.h	38;"	d
CARD_STATUS_A	.\sd.c	290;"	d	file:
CARD_STATUS_B	.\sd.c	291;"	d	file:
CARD_STATUS_C	.\sd.c	292;"	d	file:
CASE_GET_REG32	.\lsi53c895a.c	1213;"	d	file:
CASE_GET_REG32	.\lsi53c895a.c	1374;"	d	file:
CASE_SET_REG32	.\lsi53c895a.c	1379;"	d	file:
CASE_SET_REG32	.\lsi53c895a.c	1587;"	d	file:
CB_A0	.\ads7846.c	30;"	d	file:
CB_A1	.\ads7846.c	31;"	d	file:
CB_A2	.\ads7846.c	32;"	d	file:
CB_MODE	.\ads7846.c	29;"	d	file:
CB_PD0	.\ads7846.c	26;"	d	file:
CB_PD0	.\max111x.c	23;"	d	file:
CB_PD1	.\ads7846.c	27;"	d	file:
CB_PD1	.\max111x.c	24;"	d	file:
CB_SEL0	.\max111x.c	27;"	d	file:
CB_SEL1	.\max111x.c	28;"	d	file:
CB_SEL2	.\max111x.c	29;"	d	file:
CB_SER	.\ads7846.c	28;"	d	file:
CB_SGL	.\max111x.c	25;"	d	file:
CB_START	.\ads7846.c	33;"	d	file:
CB_START	.\max111x.c	30;"	d	file:
CB_UNI	.\max111x.c	26;"	d	file:
CCCR	.\pxa2xx.c	170;"	d	file:
CCR	.\pxa2xx_lcd.c	106;"	d	file:
CCR_CEN	.\pxa2xx_lcd.c	154;"	d	file:
CCSR	.\pxa2xx.c	173;"	d	file:
CC_ERROR	.\sd.h	43;"	d
CD	.\ide.c	64;"	d	file:
CE1	.\tc58128.c	6;"	d	file:
CE2	.\tc58128.c	7;"	d	file:
CFA_ACCESS_METADATA_STORAGE	.\ide.c	155;"	d	file:
CFA_ADDRESS_OVERFLOW	.\ide.c	303;"	d	file:
CFA_ERASE_SECTORS	.\ide.c	156;"	d	file:
CFA_IDLEIMMEDIATE	.\ide.c	143;"	d	file:
CFA_INVALID_ADDRESS	.\ide.c	302;"	d	file:
CFA_INVALID_COMMAND	.\ide.c	301;"	d	file:
CFA_MISC_ERROR	.\ide.c	300;"	d	file:
CFA_NO_ERROR	.\ide.c	299;"	d	file:
CFA_REQ_EXT_ERROR_CODE	.\ide.c	77;"	d	file:
CFA_TRANSLATE_SECTOR	.\ide.c	138;"	d	file:
CFA_WEAR_LEVEL	.\ide.c	196;"	d	file:
CFA_WRITE_MULTI_WO_ERASE	.\ide.c	166;"	d	file:
CFA_WRITE_SECT_WO_ERASE	.\ide.c	114;"	d	file:
CFG1_RESREPT	.\esp.c	140;"	d	file:
CFG2_MASK	.\esp.c	142;"	d	file:
CFG_PWRINTEN	.\slavio_misc.c	75;"	d	file:
CHANNEL_NUM	.\max111x.c	32;"	d	file:
CHECK_RMD	.\pcnet.c	478;"	d	file:
CHECK_RMD	.\pcnet.c	493;"	d	file:
CHECK_TMD	.\pcnet.c	485;"	d	file:
CHECK_TMD	.\pcnet.c	526;"	d	file:
CHN_C	.\slavio_serial.c	79;"	d	file:
CH_8100	.\rtl8139.c	/^    CH_8100,$/;"	e	enum:__anon87	file:
CH_8100B_8139D	.\rtl8139.c	/^    CH_8100B_8139D,$/;"	e	enum:__anon87	file:
CH_8101	.\rtl8139.c	/^    CH_8101,$/;"	e	enum:__anon87	file:
CH_8130	.\rtl8139.c	/^    CH_8130,$/;"	e	enum:__anon87	file:
CH_8139	.\rtl8139.c	/^    CH_8139 = 0,$/;"	e	enum:__anon87	file:
CH_8139A	.\rtl8139.c	/^    CH_8139A,$/;"	e	enum:__anon87	file:
CH_8139A_G	.\rtl8139.c	/^    CH_8139A_G,$/;"	e	enum:__anon87	file:
CH_8139B	.\rtl8139.c	/^    CH_8139B,$/;"	e	enum:__anon87	file:
CH_8139C	.\rtl8139.c	/^    CH_8139C,$/;"	e	enum:__anon87	file:
CH_8139_K	.\rtl8139.c	/^    CH_8139_K,$/;"	e	enum:__anon87	file:
CH_ATTR_SIZE	.\vga_int.h	79;"	d
CID_CSD_OVERWRITE	.\sd.h	45;"	d
CIRRUS_BANKING_DUAL	.\cirrus_vga.c	95;"	d	file:
CIRRUS_BANKING_GRANULARITY_16K	.\cirrus_vga.c	96;"	d	file:
CIRRUS_BLTBUFSIZE	.\cirrus_vga.c	260;"	d	file:
CIRRUS_BLTMODEEXT_COLOREXPINV	.\cirrus_vga.c	141;"	d	file:
CIRRUS_BLTMODEEXT_DWORDGRANULARITY	.\cirrus_vga.c	142;"	d	file:
CIRRUS_BLTMODEEXT_SOLIDFILL	.\cirrus_vga.c	140;"	d	file:
CIRRUS_BLTMODE_BACKWARDS	.\cirrus_vga.c	99;"	d	file:
CIRRUS_BLTMODE_COLOREXPAND	.\cirrus_vga.c	104;"	d	file:
CIRRUS_BLTMODE_MEMSYSDEST	.\cirrus_vga.c	100;"	d	file:
CIRRUS_BLTMODE_MEMSYSSRC	.\cirrus_vga.c	101;"	d	file:
CIRRUS_BLTMODE_PATTERNCOPY	.\cirrus_vga.c	103;"	d	file:
CIRRUS_BLTMODE_PIXELWIDTH16	.\cirrus_vga.c	107;"	d	file:
CIRRUS_BLTMODE_PIXELWIDTH24	.\cirrus_vga.c	108;"	d	file:
CIRRUS_BLTMODE_PIXELWIDTH32	.\cirrus_vga.c	109;"	d	file:
CIRRUS_BLTMODE_PIXELWIDTH8	.\cirrus_vga.c	106;"	d	file:
CIRRUS_BLTMODE_PIXELWIDTHMASK	.\cirrus_vga.c	105;"	d	file:
CIRRUS_BLTMODE_TRANSPARENTCOMP	.\cirrus_vga.c	102;"	d	file:
CIRRUS_BLT_AUTOSTART	.\cirrus_vga.c	116;"	d	file:
CIRRUS_BLT_BUSY	.\cirrus_vga.c	112;"	d	file:
CIRRUS_BLT_FIFOUSED	.\cirrus_vga.c	115;"	d	file:
CIRRUS_BLT_RESET	.\cirrus_vga.c	114;"	d	file:
CIRRUS_BLT_START	.\cirrus_vga.c	113;"	d	file:
CIRRUS_BUSTYPE_ISA	.\cirrus_vga.c	89;"	d	file:
CIRRUS_BUSTYPE_PCI	.\cirrus_vga.c	87;"	d	file:
CIRRUS_BUSTYPE_VLBFAST	.\cirrus_vga.c	86;"	d	file:
CIRRUS_BUSTYPE_VLBSLOW	.\cirrus_vga.c	88;"	d	file:
CIRRUS_CURSOR_HIDDENPEL	.\cirrus_vga.c	82;"	d	file:
CIRRUS_CURSOR_LARGE	.\cirrus_vga.c	83;"	d	file:
CIRRUS_CURSOR_SHOW	.\cirrus_vga.c	81;"	d	file:
CIRRUS_HOOK_HANDLED	.\cirrus_vga.c	221;"	d	file:
CIRRUS_HOOK_NOT_HANDLED	.\cirrus_vga.c	220;"	d	file:
CIRRUS_ID_CLGD5422	.\cirrus_vga.c	54;"	d	file:
CIRRUS_ID_CLGD5424	.\cirrus_vga.c	56;"	d	file:
CIRRUS_ID_CLGD5426	.\cirrus_vga.c	55;"	d	file:
CIRRUS_ID_CLGD5428	.\cirrus_vga.c	57;"	d	file:
CIRRUS_ID_CLGD5430	.\cirrus_vga.c	58;"	d	file:
CIRRUS_ID_CLGD5434	.\cirrus_vga.c	59;"	d	file:
CIRRUS_ID_CLGD5436	.\cirrus_vga.c	60;"	d	file:
CIRRUS_ID_CLGD5446	.\cirrus_vga.c	61;"	d	file:
CIRRUS_MEMFLAGS_BANKSWITCH	.\cirrus_vga.c	78;"	d	file:
CIRRUS_MEMSIZEEXT_DOUBLE	.\cirrus_vga.c	92;"	d	file:
CIRRUS_MEMSIZE_1M	.\cirrus_vga.c	76;"	d	file:
CIRRUS_MEMSIZE_2M	.\cirrus_vga.c	77;"	d	file:
CIRRUS_MEMSIZE_512k	.\cirrus_vga.c	75;"	d	file:
CIRRUS_MMIO_BLTBGCOLOR	.\cirrus_vga.c	145;"	d	file:
CIRRUS_MMIO_BLTDESTADDR	.\cirrus_vga.c	151;"	d	file:
CIRRUS_MMIO_BLTDESTPITCH	.\cirrus_vga.c	149;"	d	file:
CIRRUS_MMIO_BLTFGCOLOR	.\cirrus_vga.c	146;"	d	file:
CIRRUS_MMIO_BLTHEIGHT	.\cirrus_vga.c	148;"	d	file:
CIRRUS_MMIO_BLTMODE	.\cirrus_vga.c	154;"	d	file:
CIRRUS_MMIO_BLTMODEEXT	.\cirrus_vga.c	156;"	d	file:
CIRRUS_MMIO_BLTROP	.\cirrus_vga.c	155;"	d	file:
CIRRUS_MMIO_BLTSRCADDR	.\cirrus_vga.c	152;"	d	file:
CIRRUS_MMIO_BLTSRCPITCH	.\cirrus_vga.c	150;"	d	file:
CIRRUS_MMIO_BLTSTATUS	.\cirrus_vga.c	173;"	d	file:
CIRRUS_MMIO_BLTTRANSPARENTCOLOR	.\cirrus_vga.c	157;"	d	file:
CIRRUS_MMIO_BLTTRANSPARENTCOLORMASK	.\cirrus_vga.c	158;"	d	file:
CIRRUS_MMIO_BLTWIDTH	.\cirrus_vga.c	147;"	d	file:
CIRRUS_MMIO_BLTWRITEMASK	.\cirrus_vga.c	153;"	d	file:
CIRRUS_MMIO_BRESENHAM_DELTA_MAJOR	.\cirrus_vga.c	170;"	d	file:
CIRRUS_MMIO_BRESENHAM_DIRECTION	.\cirrus_vga.c	171;"	d	file:
CIRRUS_MMIO_BRESENHAM_ERROR	.\cirrus_vga.c	169;"	d	file:
CIRRUS_MMIO_BRESENHAM_K1	.\cirrus_vga.c	167;"	d	file:
CIRRUS_MMIO_BRESENHAM_K3	.\cirrus_vga.c	168;"	d	file:
CIRRUS_MMIO_ENABLE	.\cirrus_vga.c	90;"	d	file:
CIRRUS_MMIO_LINEARDRAW_END_X	.\cirrus_vga.c	161;"	d	file:
CIRRUS_MMIO_LINEARDRAW_END_Y	.\cirrus_vga.c	162;"	d	file:
CIRRUS_MMIO_LINEARDRAW_LINESTYLE_ACCUM	.\cirrus_vga.c	166;"	d	file:
CIRRUS_MMIO_LINEARDRAW_LINESTYLE_INC	.\cirrus_vga.c	163;"	d	file:
CIRRUS_MMIO_LINEARDRAW_LINESTYLE_MASK	.\cirrus_vga.c	165;"	d	file:
CIRRUS_MMIO_LINEARDRAW_LINESTYLE_ROLLOVER	.\cirrus_vga.c	164;"	d	file:
CIRRUS_MMIO_LINEARDRAW_START_X	.\cirrus_vga.c	159;"	d	file:
CIRRUS_MMIO_LINEARDRAW_START_Y	.\cirrus_vga.c	160;"	d	file:
CIRRUS_MMIO_LINEDRAW_MODE	.\cirrus_vga.c	172;"	d	file:
CIRRUS_MMIO_USE_PCIADDR	.\cirrus_vga.c	91;"	d	file:
CIRRUS_PNPMMIO_SIZE	.\cirrus_vga.c	216;"	d	file:
CIRRUS_ROP_0	.\cirrus_vga.c	119;"	d	file:
CIRRUS_ROP_1	.\cirrus_vga.c	125;"	d	file:
CIRRUS_ROP_NOP	.\cirrus_vga.c	121;"	d	file:
CIRRUS_ROP_NOP_INDEX	.\cirrus_vga.c	136;"	d	file:
CIRRUS_ROP_NOTDST	.\cirrus_vga.c	123;"	d	file:
CIRRUS_ROP_NOTSRC	.\cirrus_vga.c	132;"	d	file:
CIRRUS_ROP_NOTSRC_AND_DST	.\cirrus_vga.c	126;"	d	file:
CIRRUS_ROP_NOTSRC_AND_NOTDST	.\cirrus_vga.c	134;"	d	file:
CIRRUS_ROP_NOTSRC_OR_DST	.\cirrus_vga.c	133;"	d	file:
CIRRUS_ROP_NOTSRC_OR_NOTDST	.\cirrus_vga.c	129;"	d	file:
CIRRUS_ROP_SRC	.\cirrus_vga.c	124;"	d	file:
CIRRUS_ROP_SRC_AND_DST	.\cirrus_vga.c	120;"	d	file:
CIRRUS_ROP_SRC_AND_NOTDST	.\cirrus_vga.c	122;"	d	file:
CIRRUS_ROP_SRC_INDEX	.\cirrus_vga.c	137;"	d	file:
CIRRUS_ROP_SRC_NOTXOR_DST	.\cirrus_vga.c	130;"	d	file:
CIRRUS_ROP_SRC_OR_DST	.\cirrus_vga.c	128;"	d	file:
CIRRUS_ROP_SRC_OR_NOTDST	.\cirrus_vga.c	131;"	d	file:
CIRRUS_ROP_SRC_XOR_DST	.\cirrus_vga.c	127;"	d	file:
CIRRUS_SR7_BPP_16	.\cirrus_vga.c	70;"	d	file:
CIRRUS_SR7_BPP_16_DOUBLEVCLK	.\cirrus_vga.c	68;"	d	file:
CIRRUS_SR7_BPP_24	.\cirrus_vga.c	69;"	d	file:
CIRRUS_SR7_BPP_32	.\cirrus_vga.c	71;"	d	file:
CIRRUS_SR7_BPP_8	.\cirrus_vga.c	67;"	d	file:
CIRRUS_SR7_BPP_MASK	.\cirrus_vga.c	66;"	d	file:
CIRRUS_SR7_BPP_SVGA	.\cirrus_vga.c	65;"	d	file:
CIRRUS_SR7_BPP_VGA	.\cirrus_vga.c	64;"	d	file:
CIRRUS_SR7_ISAADDR_MASK	.\cirrus_vga.c	72;"	d	file:
CISTPL_CFTABLE_ENTRY	.\pcmcia.h	37;"	d
CISTPL_CONFIG	.\pcmcia.h	36;"	d
CISTPL_DEVICE	.\pcmcia.h	31;"	d
CISTPL_DEVICE_GEO	.\pcmcia.h	40;"	d
CISTPL_DEVICE_GEO_A	.\pcmcia.h	41;"	d
CISTPL_DEVICE_OA	.\pcmcia.h	39;"	d
CISTPL_DEVICE_OC	.\pcmcia.h	38;"	d
CISTPL_END	.\pcmcia.h	45;"	d
CISTPL_ENDMARK	.\pcmcia.h	46;"	d
CISTPL_FUNCE	.\pcmcia.h	44;"	d
CISTPL_FUNCID	.\pcmcia.h	43;"	d
CISTPL_JEDEC_A	.\pcmcia.h	35;"	d
CISTPL_JEDEC_C	.\pcmcia.h	34;"	d
CISTPL_MANFID	.\pcmcia.h	42;"	d
CISTPL_NO_LINK	.\pcmcia.h	32;"	d
CISTPL_VERS_1	.\pcmcia.h	33;"	d
CKEN	.\pxa2xx.c	171;"	d	file:
CLE	.\tc58128.c	11;"	d	file:
CLOCK_IN_OMAP1510	.\omap1_clk.c	35;"	d	file:
CLOCK_IN_OMAP16XX	.\omap1_clk.c	36;"	d	file:
CLOCK_IN_OMAP310	.\omap1_clk.c	33;"	d	file:
CLOCK_IN_OMAP730	.\omap1_clk.c	34;"	d	file:
CLOCK_TRXC	.\slavio_serial.c	161;"	d	file:
CMDAT_DATA_EN	.\pxa2xx_mmci.c	80;"	d	file:
CMDAT_DMA_EN	.\pxa2xx_mmci.c	82;"	d	file:
CMDAT_RES_TYPE	.\pxa2xx_mmci.c	79;"	d	file:
CMDAT_STOP_TRAN	.\pxa2xx_mmci.c	83;"	d	file:
CMDAT_WR_RD	.\pxa2xx_mmci.c	81;"	d	file:
CMDCR	.\pxa2xx_lcd.c	108;"	d	file:
CMDLINE_ADDR	.\ppc.c	1366;"	d	file:
CMDLINE_ADDR	.\sun4m.c	72;"	d	file:
CMDLINE_ADDR	.\sun4u.c	36;"	d	file:
CMD_BLOCK_CONTROLLER	.\dma.c	/^    CMD_BLOCK_CONTROLLER = 0x04,$/;"	e	enum:__anon9	file:
CMD_BUSRESET	.\esp.c	110;"	d	file:
CMD_CLR_IUS	.\slavio_serial.c	121;"	d	file:
CMD_CLR_TXINT	.\slavio_serial.c	120;"	d	file:
CMD_CMD	.\esp.c	105;"	d	file:
CMD_CMD_MASK	.\slavio_serial.c	118;"	d	file:
CMD_COMPRESSED_TIME	.\dma.c	/^    CMD_COMPRESSED_TIME  = 0x08,$/;"	e	enum:__anon9	file:
CMD_CYCLIC_PRIORITY	.\dma.c	/^    CMD_CYCLIC_PRIORITY  = 0x10,$/;"	e	enum:__anon9	file:
CMD_DMA	.\esp.c	104;"	d	file:
CMD_ENSEL	.\esp.c	117;"	d	file:
CMD_EXTENDED_WRITE	.\dma.c	/^    CMD_EXTENDED_WRITE   = 0x20,$/;"	e	enum:__anon9	file:
CMD_FIXED_ADDRESS	.\dma.c	/^    CMD_FIXED_ADDRESS    = 0x02,$/;"	e	enum:__anon9	file:
CMD_FLUSH	.\esp.c	108;"	d	file:
CMD_HI	.\slavio_serial.c	119;"	d	file:
CMD_ICCS	.\esp.c	112;"	d	file:
CMD_LOW_DACK	.\dma.c	/^    CMD_LOW_DACK         = 0x80,$/;"	e	enum:__anon9	file:
CMD_LOW_DREQ	.\dma.c	/^    CMD_LOW_DREQ         = 0x40,$/;"	e	enum:__anon9	file:
CMD_MEMORY_TO_MEMORY	.\dma.c	/^    CMD_MEMORY_TO_MEMORY = 0x01,$/;"	e	enum:__anon9	file:
CMD_MSGACC	.\esp.c	113;"	d	file:
CMD_NOP	.\esp.c	107;"	d	file:
CMD_NOT_SUPPORTED	.\dma.c	/^    CMD_NOT_SUPPORTED    = CMD_MEMORY_TO_MEMORY | CMD_FIXED_ADDRESS$/;"	e	enum:__anon9	file:
CMD_PTR_MASK	.\slavio_serial.c	117;"	d	file:
CMD_RESET	.\esp.c	109;"	d	file:
CMD_SATN	.\esp.c	114;"	d	file:
CMD_SELATN	.\esp.c	115;"	d	file:
CMD_SELATNS	.\esp.c	116;"	d	file:
CMD_TI	.\esp.c	111;"	d	file:
CMULT_SHIFT	.\sd.c	242;"	d	file:
CODEC	.\wm8750.c	17;"	d	file:
COM_CRC_ERROR	.\sd.h	40;"	d
CON	.\fmopl.h	/^	UINT8 CON;			\/* connection type                     *\/$/;"	m	struct:fm_opl_channel
CONFIG_BOCHS_VBE	.\vga_int.h	31;"	d
COPY_PIXEL	.\pl110_template.h	15;"	d
COPY_PIXEL	.\pl110_template.h	17;"	d
COPY_PIXEL	.\pl110_template.h	19;"	d
COPY_PIXEL	.\pl110_template.h	22;"	d
COPY_PIXEL	.\pl110_template.h	92;"	d
COPY_PIXEL	.\pxa2xx_template.h	14;"	d
COPY_PIXEL	.\pxa2xx_template.h	16;"	d
COPY_PIXEL	.\pxa2xx_template.h	18;"	d
COPY_PIXEL	.\pxa2xx_template.h	21;"	d
COPY_PIXEL	.\pxa2xx_template.h	426;"	d
CORGI_SSP_PORT	.\spitz.c	824;"	d	file:
COUNT	.\dma.c	55;"	d	file:
CPCCNT	.\pxa2xx.c	359;"	d	file:
CPEVTSEL	.\pxa2xx.c	362;"	d	file:
CPFLAG	.\pxa2xx.c	361;"	d	file:
CPINTEN	.\pxa2xx.c	360;"	d	file:
CPPMN0	.\pxa2xx.c	364;"	d	file:
CPPMN1	.\pxa2xx.c	365;"	d	file:
CPPMN2	.\pxa2xx.c	366;"	d	file:
CPPMN3	.\pxa2xx.c	367;"	d	file:
CPPMNC	.\pxa2xx.c	358;"	d	file:
CPU_HARDIRQ_MASK	.\slavio_intctl.c	74;"	d	file:
CPU_IRQ_INT15_IN	.\slavio_intctl.c	75;"	d	file:
CPU_IRQ_INT15_MASK	.\slavio_intctl.c	76;"	d	file:
CPU_SOFTIRQ_MASK	.\slavio_intctl.c	73;"	d	file:
CPU_TIMER_OFFSET	.\slavio_timer.c	74;"	d	file:
CPU_TIMER_SIZE	.\slavio_timer.c	71;"	d	file:
CP_RX_BUFFER_SIZE_MASK	.\rtl8139.c	950;"	d	file:
CP_RX_EOR	.\rtl8139.c	948;"	d	file:
CP_RX_OWN	.\rtl8139.c	946;"	d	file:
CP_RX_STATUS_BAR	.\rtl8139.c	1044;"	d	file:
CP_RX_STATUS_CRC	.\rtl8139.c	1048;"	d	file:
CP_RX_STATUS_FS	.\rtl8139.c	1036;"	d	file:
CP_RX_STATUS_IPF	.\rtl8139.c	1050;"	d	file:
CP_RX_STATUS_LS	.\rtl8139.c	1038;"	d	file:
CP_RX_STATUS_MAR	.\rtl8139.c	1040;"	d	file:
CP_RX_STATUS_PAM	.\rtl8139.c	1042;"	d	file:
CP_RX_STATUS_RUNT	.\rtl8139.c	1046;"	d	file:
CP_RX_STATUS_TCPF	.\rtl8139.c	1054;"	d	file:
CP_RX_STATUS_UDPF	.\rtl8139.c	1052;"	d	file:
CP_RX_TAGC	.\rtl8139.c	1954;"	d	file:
CP_RX_TAVA	.\rtl8139.c	952;"	d	file:
CP_RX_VLAN_TAG_MASK	.\rtl8139.c	954;"	d	file:
CP_TC_LGSEN_MSS_MASK	.\rtl8139.c	1941;"	d	file:
CP_TX_BUFFER_SIZE	.\rtl8139.c	1951;"	d	file:
CP_TX_BUFFER_SIZE_MASK	.\rtl8139.c	1952;"	d	file:
CP_TX_EOR	.\rtl8139.c	1933;"	d	file:
CP_TX_FS	.\rtl8139.c	1935;"	d	file:
CP_TX_IPCS	.\rtl8139.c	1944;"	d	file:
CP_TX_LGSEN	.\rtl8139.c	1939;"	d	file:
CP_TX_LS	.\rtl8139.c	1937;"	d	file:
CP_TX_OWN	.\rtl8139.c	1931;"	d	file:
CP_TX_STATUS_EXC	.\rtl8139.c	1970;"	d	file:
CP_TX_STATUS_LNKF	.\rtl8139.c	1968;"	d	file:
CP_TX_STATUS_OWC	.\rtl8139.c	1966;"	d	file:
CP_TX_STATUS_TES	.\rtl8139.c	1964;"	d	file:
CP_TX_STATUS_UNF	.\rtl8139.c	1962;"	d	file:
CP_TX_TCPCS	.\rtl8139.c	1948;"	d	file:
CP_TX_UDPCS	.\rtl8139.c	1946;"	d	file:
CP_TX_VLAN_TAG_MASK	.\rtl8139.c	1956;"	d	file:
CPlusRxChkSum	.\rtl8139.c	/^    CPlusRxChkSum = 0x0020, \/* enable receive checksum offloading *\/$/;"	e	enum:CplusCmdBits	file:
CPlusRxEnb	.\rtl8139.c	/^    CPlusRxEnb    = 0x0002,$/;"	e	enum:CplusCmdBits	file:
CPlusRxVLAN	.\rtl8139.c	/^    CPlusRxVLAN   = 0x0040, \/* enable receive VLAN detagging *\/$/;"	e	enum:CplusCmdBits	file:
CPlusTxEnb	.\rtl8139.c	/^    CPlusTxEnb    = 0x0001,$/;"	e	enum:CplusCmdBits	file:
CRC	.\pcnet.c	582;"	d	file:
CSCR	.\rtl8139.c	/^    CSCR = 0x74,        \/* Chip Status and Configuration Register. *\/$/;"	e	enum:RTL8139_registers	file:
CSCR	.\rtl8139.c	/^    uint16_t CSCR;$/;"	m	struct:RTL8139State	file:
CSCRBits	.\rtl8139.c	/^enum CSCRBits {$/;"	g	file:
CSCR_Con_status	.\rtl8139.c	/^    CSCR_Con_status = 1<<3, \/* This bit indicates the status of the connection. 1 = valid connected link detected; 0 = disconnected link detected. RO def 0*\/$/;"	e	enum:CSCRBits	file:
CSCR_Con_status_En	.\rtl8139.c	/^    CSCR_Con_status_En = 1<<2, \/* Assertion of this bit configures LED1 pin to indicate connection status. def 0*\/$/;"	e	enum:CSCRBits	file:
CSCR_F_Connect	.\rtl8139.c	/^    CSCR_F_Connect  = 1<<5,  \/* Assertion of this bit forces the disconnect function to be bypassed. def 0*\/$/;"	e	enum:CSCRBits	file:
CSCR_F_LINK_100	.\rtl8139.c	/^    CSCR_F_LINK_100 = 1<<6, \/* Used to login force good link in 100Mbps for diagnostic purposes. 1 = DISABLE, 0 = ENABLE. def 1*\/$/;"	e	enum:CSCRBits	file:
CSCR_HEART_BIT	.\rtl8139.c	/^    CSCR_HEART_BIT = 1<<8,  \/* 1 = HEART BEAT enable, 0 = HEART BEAT disable. HEART BEAT function is only valid in 10Mbps mode. def 1*\/$/;"	e	enum:CSCRBits	file:
CSCR_JBEN	.\rtl8139.c	/^    CSCR_JBEN = 1<<7,  \/* 1 = enable jabber function. 0 = disable jabber function, def 1*\/$/;"	e	enum:CSCRBits	file:
CSCR_LD	.\rtl8139.c	/^    CSCR_LD  = 1<<9,  \/* Active low TPI link disable signal. When low, TPI still transmits link pulses and TPI stays in good link state. def 1*\/$/;"	e	enum:CSCRBits	file:
CSCR_PASS_SCR	.\rtl8139.c	/^    CSCR_PASS_SCR = 1<<0, \/* Bypass Scramble, def 0*\/$/;"	e	enum:CSCRBits	file:
CSCR_Testfun	.\rtl8139.c	/^    CSCR_Testfun = 1<<15, \/* 1 = Auto-neg speeds up internal timer, WO, def 0 *\/$/;"	e	enum:CSCRBits	file:
CSMKeyControll	.\fmopl.c	/^INLINE void CSMKeyControll(OPL_CH *CH)$/;"	f
CSR_ASTRP_RCV	.\pcnet.c	115;"	d	file:
CSR_BADR	.\pcnet.c	145;"	d	file:
CSR_BADX	.\pcnet.c	148;"	d	file:
CSR_BSWP	.\pcnet.c	112;"	d	file:
CSR_CRBA	.\pcnet.c	142;"	d	file:
CSR_CRBC	.\pcnet.c	127;"	d	file:
CSR_CRDA	.\pcnet.c	147;"	d	file:
CSR_CRST	.\pcnet.c	128;"	d	file:
CSR_CXBA	.\pcnet.c	143;"	d	file:
CSR_CXBC	.\pcnet.c	129;"	d	file:
CSR_CXDA	.\pcnet.c	150;"	d	file:
CSR_CXST	.\pcnet.c	130;"	d	file:
CSR_DPOLL	.\pcnet.c	116;"	d	file:
CSR_DRCVBC	.\pcnet.c	124;"	d	file:
CSR_DRCVPA	.\pcnet.c	123;"	d	file:
CSR_DRX	.\pcnet.c	120;"	d	file:
CSR_DTX	.\pcnet.c	121;"	d	file:
CSR_DXSUFLO	.\pcnet.c	114;"	d	file:
CSR_IADR	.\pcnet.c	141;"	d	file:
CSR_INEA	.\pcnet.c	111;"	d	file:
CSR_INIT	.\pcnet.c	105;"	d	file:
CSR_LAPPEN	.\pcnet.c	113;"	d	file:
CSR_LOOP	.\pcnet.c	122;"	d	file:
CSR_LTINTEN	.\pcnet.c	118;"	d	file:
CSR_MISSC	.\pcnet.c	139;"	d	file:
CSR_NNRD	.\pcnet.c	151;"	d	file:
CSR_NNXD	.\pcnet.c	152;"	d	file:
CSR_NRBA	.\pcnet.c	144;"	d	file:
CSR_NRBC	.\pcnet.c	131;"	d	file:
CSR_NRDA	.\pcnet.c	146;"	d	file:
CSR_NRST	.\pcnet.c	132;"	d	file:
CSR_NXBA	.\pcnet.c	154;"	d	file:
CSR_NXDA	.\pcnet.c	149;"	d	file:
CSR_PINT	.\pcnet.c	134;"	d	file:
CSR_POLL	.\pcnet.c	133;"	d	file:
CSR_PROM	.\pcnet.c	125;"	d	file:
CSR_PXDA	.\pcnet.c	153;"	d	file:
CSR_RCVRC	.\pcnet.c	135;"	d	file:
CSR_RCVRL	.\pcnet.c	137;"	d	file:
CSR_RXON	.\pcnet.c	110;"	d	file:
CSR_SPND	.\pcnet.c	117;"	d	file:
CSR_STOP	.\pcnet.c	107;"	d	file:
CSR_STRT	.\pcnet.c	106;"	d	file:
CSR_TDMD	.\pcnet.c	108;"	d	file:
CSR_TOKINTD	.\pcnet.c	119;"	d	file:
CSR_TXON	.\pcnet.c	109;"	d	file:
CSR_XMTRC	.\pcnet.c	136;"	d	file:
CSR_XMTRL	.\pcnet.c	138;"	d	file:
CSState	.\cs4231.c	/^typedef struct CSState {$/;"	s	file:
CSState	.\cs4231.c	/^} CSState;$/;"	t	typeref:struct:CSState	file:
CS_CDC_VER	.\cs4231.c	47;"	d	file:
CS_DREGS	.\cs4231.c	36;"	d	file:
CS_MAXADDR	.\cs4231.c	33;"	d	file:
CS_MAXDREG	.\cs4231.c	37;"	d	file:
CS_RAP	.\cs4231.c	45;"	d	file:
CS_REGS	.\cs4231.c	35;"	d	file:
CS_SIZE	.\cs4231.c	34;"	d	file:
CS_VER	.\cs4231.c	46;"	d	file:
CTRL	.\spitz.c	298;"	d	file:
CTRL	.\spitz.c	454;"	d	file:
CTRL_ADC_EN	.\es1370.c	96;"	d	file:
CTRL_ADC_STOP	.\es1370.c	80;"	d	file:
CTRL_BREQ	.\es1370.c	93;"	d	file:
CTRL_CCB_INTRM	.\es1370.c	90;"	d	file:
CTRL_CDC_EN	.\es1370.c	99;"	d	file:
CTRL_DAC1_EN	.\es1370.c	94;"	d	file:
CTRL_DAC2_EN	.\es1370.c	95;"	d	file:
CTRL_DAC_SYNC	.\es1370.c	89;"	d	file:
CTRL_IEN	.\ide.c	/^    CTRL_IEN		= 0x02,$/;"	e	enum:md_ctrl	file:
CTRL_JYSTK_EN	.\es1370.c	98;"	d	file:
CTRL_MSFMTSEL	.\es1370.c	85;"	d	file:
CTRL_M_CB	.\es1370.c	91;"	d	file:
CTRL_M_SBB	.\es1370.c	86;"	d	file:
CTRL_OPEN	.\es1370.c	82;"	d	file:
CTRL_PCLKDIV	.\es1370.c	83;"	d	file:
CTRL_SERR_DIS	.\es1370.c	100;"	d	file:
CTRL_SH_PCLKDIV	.\es1370.c	84;"	d	file:
CTRL_SH_WTSRSEL	.\es1370.c	88;"	d	file:
CTRL_SRST	.\ide.c	/^    CTRL_SRST		= 0x04,$/;"	e	enum:md_ctrl	file:
CTRL_UART_EN	.\es1370.c	97;"	d	file:
CTRL_WTSRSEL	.\es1370.c	87;"	d	file:
CTRL_XCTL0	.\es1370.c	92;"	d	file:
CTRL_XCTL1	.\es1370.c	81;"	d	file:
CTR_AUTO_RELEASE	.\smc91c111.c	68;"	d	file:
CTR_RELOAD	.\smc91c111.c	69;"	d	file:
CTR_STORE	.\smc91c111.c	70;"	d	file:
CUDAState	.\cuda.c	/^typedef struct CUDAState {$/;"	s	file:
CUDAState	.\cuda.c	/^} CUDAState;$/;"	t	typeref:struct:CUDAState	file:
CUDATimer	.\cuda.c	/^typedef struct CUDATimer {$/;"	s	file:
CUDATimer	.\cuda.c	/^} CUDATimer;$/;"	t	typeref:struct:CUDATimer	file:
CUDA_ADB_POLL_FREQ	.\cuda.c	95;"	d	file:
CUDA_AUTOPOLL	.\cuda.c	68;"	d	file:
CUDA_BATTERY_SWAP_SENSE	.\cuda.c	79;"	d	file:
CUDA_COMBINED_FORMAT_IIC	.\cuda.c	92;"	d	file:
CUDA_FILE_SERVER_FLAG	.\cuda.c	82;"	d	file:
CUDA_GET_6805_ADDR	.\cuda.c	69;"	d	file:
CUDA_GET_AUTO_RATE	.\cuda.c	84;"	d	file:
CUDA_GET_DEVICE_LIST	.\cuda.c	86;"	d	file:
CUDA_GET_PRAM	.\cuda.c	71;"	d	file:
CUDA_GET_SET_IIC	.\cuda.c	89;"	d	file:
CUDA_GET_TIME	.\cuda.c	70;"	d	file:
CUDA_MS_RESET	.\cuda.c	77;"	d	file:
CUDA_PACKET	.\cuda.c	58;"	d	file:
CUDA_POWERDOWN	.\cuda.c	74;"	d	file:
CUDA_POWERUP_TIME	.\cuda.c	75;"	d	file:
CUDA_RESET_SYSTEM	.\cuda.c	80;"	d	file:
CUDA_SEND_DFAC	.\cuda.c	78;"	d	file:
CUDA_SET_6805_ADDR	.\cuda.c	72;"	d	file:
CUDA_SET_AUTO_RATE	.\cuda.c	83;"	d	file:
CUDA_SET_DEVICE_LIST	.\cuda.c	85;"	d	file:
CUDA_SET_IPL	.\cuda.c	81;"	d	file:
CUDA_SET_ONE_SECOND_MODE	.\cuda.c	87;"	d	file:
CUDA_SET_POWER_MESSAGES	.\cuda.c	88;"	d	file:
CUDA_SET_PRAM	.\cuda.c	76;"	d	file:
CUDA_SET_TIME	.\cuda.c	73;"	d	file:
CUDA_TIMER_FREQ	.\cuda.c	94;"	d	file:
CUDA_TIMER_TICKLE	.\cuda.c	91;"	d	file:
CUDA_WAKEUP	.\cuda.c	90;"	d	file:
CUDA_WARM_START	.\cuda.c	67;"	d	file:
CURRENT_STATE	.\sd.h	49;"	d
CU_CMD_BASE	.\eepro100.c	118;"	d	file:
CU_DUMPSTATS	.\eepro100.c	119;"	d	file:
CU_NOP	.\eepro100.c	113;"	d	file:
CU_RESUME	.\eepro100.c	115;"	d	file:
CU_SHOWSTATS	.\eepro100.c	117;"	d	file:
CU_SRESUME	.\eepro100.c	120;"	d	file:
CU_START	.\eepro100.c	114;"	d	file:
CU_STATSADDR	.\eepro100.c	116;"	d	file:
Cfg1_Driver_Load	.\rtl8139.c	/^    Cfg1_Driver_Load = 0x20,$/;"	e	enum:Config1Bits	file:
Cfg1_LED0	.\rtl8139.c	/^    Cfg1_LED0 = 0x40,$/;"	e	enum:Config1Bits	file:
Cfg1_LED1	.\rtl8139.c	/^    Cfg1_LED1 = 0x80,$/;"	e	enum:Config1Bits	file:
Cfg1_MMIO	.\rtl8139.c	/^    Cfg1_MMIO = 0x08,$/;"	e	enum:Config1Bits	file:
Cfg1_PIO	.\rtl8139.c	/^    Cfg1_PIO = 0x04,$/;"	e	enum:Config1Bits	file:
Cfg1_PM_Enable	.\rtl8139.c	/^    Cfg1_PM_Enable = 0x01,$/;"	e	enum:Config1Bits	file:
Cfg1_VPD_Enable	.\rtl8139.c	/^    Cfg1_VPD_Enable = 0x02,$/;"	e	enum:Config1Bits	file:
Cfg3_CLKRUN_En	.\rtl8139.c	/^    Cfg3_CLKRUN_En = (1 << 2), \/* 1 = enable CLKRUN *\/$/;"	e	enum:Config3Bits	file:
Cfg3_CardB_En	.\rtl8139.c	/^    Cfg3_CardB_En  = (1 << 3), \/* 1 = enable CardBus registers *\/$/;"	e	enum:Config3Bits	file:
Cfg3_FBtBEn	.\rtl8139.c	/^    Cfg3_FBtBEn    = (1 << 0), \/* 1 = Fast Back to Back *\/$/;"	e	enum:Config3Bits	file:
Cfg3_FuncRegEn	.\rtl8139.c	/^    Cfg3_FuncRegEn = (1 << 1), \/* 1 = enable CardBus Function registers *\/$/;"	e	enum:Config3Bits	file:
Cfg3_GNTSel	.\rtl8139.c	/^    Cfg3_GNTSel    = (1 << 7), \/* 1 = delay 1 clock from PCI GNT signal *\/$/;"	e	enum:Config3Bits	file:
Cfg3_LinkUp	.\rtl8139.c	/^    Cfg3_LinkUp    = (1 << 4), \/* 1 = wake up on link up *\/$/;"	e	enum:Config3Bits	file:
Cfg3_Magic	.\rtl8139.c	/^    Cfg3_Magic     = (1 << 5), \/* 1 = wake up on Magic Packet (tm) *\/$/;"	e	enum:Config3Bits	file:
Cfg3_PARM_En	.\rtl8139.c	/^    Cfg3_PARM_En   = (1 << 6), \/* 0 = software can set twister parameters *\/$/;"	e	enum:Config3Bits	file:
Cfg5_BWF	.\rtl8139.c	/^    Cfg5_BWF         = (1 << 6), \/* 1 = accept broadcast wakeup frame *\/$/;"	e	enum:Config5Bits	file:
Cfg5_FIFOAddrPtr	.\rtl8139.c	/^    Cfg5_FIFOAddrPtr = (1 << 3), \/* Realtek internal SRAM testing *\/$/;"	e	enum:Config5Bits	file:
Cfg5_LANWake	.\rtl8139.c	/^    Cfg5_LANWake     = (1 << 1), \/* 1 = enable LANWake signal *\/$/;"	e	enum:Config5Bits	file:
Cfg5_LDPS	.\rtl8139.c	/^    Cfg5_LDPS        = (1 << 2), \/* 0 = save power when link is down *\/$/;"	e	enum:Config5Bits	file:
Cfg5_MWF	.\rtl8139.c	/^    Cfg5_MWF         = (1 << 5), \/* 1 = accept multicast wakeup frame *\/$/;"	e	enum:Config5Bits	file:
Cfg5_PME_STS	.\rtl8139.c	/^    Cfg5_PME_STS     = (1 << 0), \/* 1 = PCI reset resets PME_Status *\/$/;"	e	enum:Config5Bits	file:
Cfg5_UWF	.\rtl8139.c	/^    Cfg5_UWF         = (1 << 4), \/* 1 = accept unicast wakeup frame *\/$/;"	e	enum:Config5Bits	file:
Cfg9346	.\rtl8139.c	/^    Cfg9346 = 0x50,$/;"	e	enum:RTL8139_registers	file:
Cfg9346	.\rtl8139.c	/^    uint8_t  Cfg9346;$/;"	m	struct:RTL8139State	file:
Cfg9346Bits	.\rtl8139.c	/^enum Cfg9346Bits {$/;"	g	file:
Cfg9346_Lock	.\rtl8139.c	/^    Cfg9346_Lock = 0x00,$/;"	e	enum:Cfg9346Bits	file:
Cfg9346_Unlock	.\rtl8139.c	/^    Cfg9346_Unlock = 0xC0,$/;"	e	enum:Cfg9346Bits	file:
ChannelState	.\slavio_serial.c	/^typedef struct ChannelState {$/;"	s	file:
ChannelState	.\slavio_serial.c	/^} ChannelState;$/;"	t	typeref:struct:ChannelState	file:
Chip9346Mode	.\rtl8139.c	/^enum Chip9346Mode$/;"	g	file:
Chip9346Operation	.\rtl8139.c	/^enum Chip9346Operation$/;"	g	file:
Chip9346_data_read	.\rtl8139.c	/^    Chip9346_data_read,      \/* from output register *\/$/;"	e	enum:Chip9346Mode	file:
Chip9346_data_write	.\rtl8139.c	/^    Chip9346_data_write,     \/* to input register, then to contents at specified address *\/$/;"	e	enum:Chip9346Mode	file:
Chip9346_data_write_all	.\rtl8139.c	/^    Chip9346_data_write_all, \/* to input register, then filling contents *\/$/;"	e	enum:Chip9346Mode	file:
Chip9346_enter_command_mode	.\rtl8139.c	/^    Chip9346_enter_command_mode,$/;"	e	enum:Chip9346Mode	file:
Chip9346_none	.\rtl8139.c	/^    Chip9346_none = 0,$/;"	e	enum:Chip9346Mode	file:
Chip9346_op_ext_mask	.\rtl8139.c	/^    Chip9346_op_ext_mask = 0xf0,      \/* 11 zzzzzz *\/$/;"	e	enum:Chip9346Operation	file:
Chip9346_op_mask	.\rtl8139.c	/^    Chip9346_op_mask = 0xc0,          \/* 10 zzzzzz *\/$/;"	e	enum:Chip9346Operation	file:
Chip9346_op_read	.\rtl8139.c	/^    Chip9346_op_read = 0x80,          \/* 10 AAAAAA *\/$/;"	e	enum:Chip9346Operation	file:
Chip9346_op_write	.\rtl8139.c	/^    Chip9346_op_write = 0x40,         \/* 01 AAAAAA D(15)..D(0) *\/$/;"	e	enum:Chip9346Operation	file:
Chip9346_op_write_all	.\rtl8139.c	/^    Chip9346_op_write_all = 0x10,     \/* 00 01zzzz *\/$/;"	e	enum:Chip9346Operation	file:
Chip9346_op_write_disable	.\rtl8139.c	/^    Chip9346_op_write_disable = 0x00, \/* 00 00zzzz *\/$/;"	e	enum:Chip9346Operation	file:
Chip9346_op_write_enable	.\rtl8139.c	/^    Chip9346_op_write_enable = 0x30,  \/* 00 11zzzz *\/$/;"	e	enum:Chip9346Operation	file:
Chip9346_read_command	.\rtl8139.c	/^    Chip9346_read_command,$/;"	e	enum:Chip9346Mode	file:
ChipCmd	.\rtl8139.c	/^    ChipCmd = 0x37,$/;"	e	enum:RTL8139_registers	file:
ChipCmdBits	.\rtl8139.c	/^enum ChipCmdBits {$/;"	g	file:
ChipCmdClear	.\rtl8139.c	/^    ChipCmdClear = 0xE2,$/;"	e	enum:ClearBitMasks	file:
CirrusVGAState	.\cirrus_vga.c	/^typedef struct CirrusVGAState {$/;"	s	file:
CirrusVGAState	.\cirrus_vga.c	/^} CirrusVGAState;$/;"	t	typeref:struct:CirrusVGAState	file:
ClearBitMasks	.\rtl8139.c	/^enum ClearBitMasks {$/;"	g	file:
ClearHubFeature	.\usb-hub.c	43;"	d	file:
ClearPortFeature	.\usb-hub.c	44;"	d	file:
CmdConfigure	.\eepro100.c	/^    CmdConfigure = 2,$/;"	e	enum:commands	file:
CmdDiagnose	.\eepro100.c	/^    CmdDiagnose = 7,$/;"	e	enum:commands	file:
CmdDump	.\eepro100.c	/^    CmdDump = 6,$/;"	e	enum:commands	file:
CmdIASetup	.\eepro100.c	/^    CmdIASetup = 1,$/;"	e	enum:commands	file:
CmdIntr	.\eepro100.c	/^    CmdIntr = 0x2000,           \/* Interrupt after completion. *\/$/;"	e	enum:commands	file:
CmdMulticastList	.\eepro100.c	/^    CmdMulticastList = 3,$/;"	e	enum:commands	file:
CmdNOp	.\eepro100.c	/^    CmdNOp = 0,$/;"	e	enum:commands	file:
CmdReset	.\rtl8139.c	/^    CmdReset = 0x10,$/;"	e	enum:ChipCmdBits	file:
CmdRxEnb	.\rtl8139.c	/^    CmdRxEnb = 0x08,$/;"	e	enum:ChipCmdBits	file:
CmdSuspend	.\eepro100.c	/^    CmdSuspend = 0x4000,        \/* Suspend after completion. *\/$/;"	e	enum:commands	file:
CmdTDR	.\eepro100.c	/^    CmdTDR = 5,                 \/* load microcode *\/$/;"	e	enum:commands	file:
CmdTx	.\eepro100.c	/^    CmdTx = 4,$/;"	e	enum:commands	file:
CmdTxEnb	.\rtl8139.c	/^    CmdTxEnb = 0x04,$/;"	e	enum:ChipCmdBits	file:
CmdTxFlex	.\eepro100.c	/^    CmdTxFlex = 0x0008,         \/* Use "Flexible mode" for CmdTx command. *\/$/;"	e	enum:commands	file:
Cnt	.\fmopl.h	/^	UINT32 Cnt;		\/* frequency count :                   *\/$/;"	m	struct:fm_opl_slot
Config0	.\rtl8139.c	/^    Config0 = 0x51,$/;"	e	enum:RTL8139_registers	file:
Config0	.\rtl8139.c	/^    uint8_t  Config0;$/;"	m	struct:RTL8139State	file:
Config1	.\rtl8139.c	/^    Config1 = 0x52,$/;"	e	enum:RTL8139_registers	file:
Config1	.\rtl8139.c	/^    uint8_t  Config1;$/;"	m	struct:RTL8139State	file:
Config1Bits	.\rtl8139.c	/^enum Config1Bits {$/;"	g	file:
Config1Clear	.\rtl8139.c	/^    Config1Clear = (1<<7)|(1<<6)|(1<<3)|(1<<2)|(1<<1),$/;"	e	enum:ClearBitMasks	file:
Config3	.\rtl8139.c	/^    Config3 = 0x59,$/;"	e	enum:RTL8139_registers	file:
Config3	.\rtl8139.c	/^    uint8_t  Config3;$/;"	m	struct:RTL8139State	file:
Config3Bits	.\rtl8139.c	/^enum Config3Bits {$/;"	g	file:
Config4	.\rtl8139.c	/^    Config4 = 0x5A,        \/* absent on RTL-8139A *\/$/;"	e	enum:RTL8139_registers	file:
Config4	.\rtl8139.c	/^    uint8_t  Config4;$/;"	m	struct:RTL8139State	file:
Config4Bits	.\rtl8139.c	/^enum Config4Bits {$/;"	g	file:
Config5	.\rtl8139.c	/^    Config5 = 0xD8,        \/* absent on RTL-8139A *\/$/;"	e	enum:RTL8139_registers	file:
Config5	.\rtl8139.c	/^    uint8_t  Config5;$/;"	m	struct:RTL8139State	file:
Config5Bits	.\rtl8139.c	/^enum Config5Bits {$/;"	g	file:
CpCmd	.\rtl8139.c	/^    CpCmd        = 0xE0, \/* C+ Command register (C+ mode only) *\/$/;"	e	enum:RTL8139_registers	file:
CpCmd	.\rtl8139.c	/^    uint16_t CpCmd;$/;"	m	struct:RTL8139State	file:
CplusCmdBits	.\rtl8139.c	/^enum CplusCmdBits {$/;"	g	file:
DAC1_CHANNEL	.\es1370.c	155;"	d	file:
DAC2_CHANNEL	.\es1370.c	156;"	d	file:
DAC2_DIVTOSR	.\es1370.c	78;"	d	file:
DAC2_SRTODIV	.\es1370.c	77;"	d	file:
DALGN	.\pxa2xx_dma.c	56;"	d	file:
DATA	.\ssd0323.c	100;"	d	file:
DCMD	.\pxa2xx_dma.c	72;"	d	file:
DCMD_CMPEN	.\pxa2xx_dma.c	86;"	d	file:
DCMD_ENDIRQEN	.\pxa2xx_dma.c	84;"	d	file:
DCMD_FLOWSRC	.\pxa2xx_dma.c	88;"	d	file:
DCMD_FLOWTRG	.\pxa2xx_dma.c	87;"	d	file:
DCMD_FLYBYS	.\pxa2xx_dma.c	83;"	d	file:
DCMD_FLYBYT	.\pxa2xx_dma.c	82;"	d	file:
DCMD_INCSRCADDR	.\pxa2xx_dma.c	90;"	d	file:
DCMD_INCTRGADDR	.\pxa2xx_dma.c	89;"	d	file:
DCMD_LEN	.\pxa2xx_dma.c	79;"	d	file:
DCMD_SIZE	.\pxa2xx_dma.c	81;"	d	file:
DCMD_STARTIRQEN	.\pxa2xx_dma.c	85;"	d	file:
DCMD_WIDTH	.\pxa2xx_dma.c	80;"	d	file:
DCRN_NB	.\ppc.c	1134;"	d	file:
DCR_UICCR	.\ppc4xx_devs.c	/^    DCR_UICCR  = 0x003,$/;"	e	enum:__anon74	file:
DCR_UICER	.\ppc4xx_devs.c	/^    DCR_UICER  = 0x002,$/;"	e	enum:__anon74	file:
DCR_UICMAX	.\ppc4xx_devs.c	/^    DCR_UICMAX = 0x009,$/;"	e	enum:__anon74	file:
DCR_UICMSR	.\ppc4xx_devs.c	/^    DCR_UICMSR = 0x006,$/;"	e	enum:__anon74	file:
DCR_UICPR	.\ppc4xx_devs.c	/^    DCR_UICPR  = 0x004,$/;"	e	enum:__anon74	file:
DCR_UICSR	.\ppc4xx_devs.c	/^    DCR_UICSR  = 0x000,$/;"	e	enum:__anon74	file:
DCR_UICSRS	.\ppc4xx_devs.c	/^    DCR_UICSRS = 0x001,$/;"	e	enum:__anon74	file:
DCR_UICTR	.\ppc4xx_devs.c	/^    DCR_UICTR  = 0x005,$/;"	e	enum:__anon74	file:
DCR_UICVCR	.\ppc4xx_devs.c	/^    DCR_UICVCR = 0x008,$/;"	e	enum:__anon74	file:
DCR_UICVR	.\ppc4xx_devs.c	/^    DCR_UICVR  = 0x007,$/;"	e	enum:__anon74	file:
DCSR0	.\pxa2xx_dma.c	54;"	d	file:
DCSR31	.\pxa2xx_dma.c	55;"	d	file:
DCSR_BUSERRINTR	.\pxa2xx_dma.c	91;"	d	file:
DCSR_CLRCMPST	.\pxa2xx_dma.c	101;"	d	file:
DCSR_CMPST	.\pxa2xx_dma.c	98;"	d	file:
DCSR_ENDINTR	.\pxa2xx_dma.c	93;"	d	file:
DCSR_EORINT	.\pxa2xx_dma.c	97;"	d	file:
DCSR_EORIRQEN	.\pxa2xx_dma.c	105;"	d	file:
DCSR_EORJMPEN	.\pxa2xx_dma.c	104;"	d	file:
DCSR_EORSTOPEN	.\pxa2xx_dma.c	103;"	d	file:
DCSR_MASKRUN	.\pxa2xx_dma.c	99;"	d	file:
DCSR_NODESCFETCH	.\pxa2xx_dma.c	107;"	d	file:
DCSR_RASINTR	.\pxa2xx_dma.c	95;"	d	file:
DCSR_RASIRQEN	.\pxa2xx_dma.c	100;"	d	file:
DCSR_REQPEND	.\pxa2xx_dma.c	96;"	d	file:
DCSR_RUN	.\pxa2xx_dma.c	108;"	d	file:
DCSR_SETCMPST	.\pxa2xx_dma.c	102;"	d	file:
DCSR_STARTINTR	.\pxa2xx_dma.c	92;"	d	file:
DCSR_STOPINTR	.\pxa2xx_dma.c	94;"	d	file:
DCSR_STOPIRQEN	.\pxa2xx_dma.c	106;"	d	file:
DDADR	.\pxa2xx_dma.c	69;"	d	file:
DDADR_BREN	.\pxa2xx_dma.c	78;"	d	file:
DDADR_STOP	.\pxa2xx_dma.c	77;"	d	file:
DEBUG_BOARD_INIT	.\ppc405_boards.c	45;"	d	file:
DEBUG_CLOCKS	.\ppc405_uc.c	42;"	d	file:
DEBUG_GPIO	.\ppc405_uc.c	36;"	d	file:
DEBUG_GPT	.\ppc405_uc.c	40;"	d	file:
DEBUG_MAL	.\ppc405_uc.c	41;"	d	file:
DEBUG_OCM	.\ppc405_uc.c	38;"	d	file:
DEBUG_OPBA	.\ppc405_uc.c	34;"	d	file:
DEBUG_PPC_IO	.\ppc_prep.c	51;"	d	file:
DEBUG_PRINT	.\rtl8139.c	78;"	d	file:
DEBUG_PRINT	.\rtl8139.c	80;"	d	file:
DEBUG_SDRAM	.\ppc405_uc.c	35;"	d	file:
DEBUG_SERIAL	.\ppc405_uc.c	37;"	d	file:
DEBUG_UIC	.\ppc4xx_devs.c	34;"	d	file:
DELTAT_MIXING_LEVEL	.\fmopl.c	62;"	d	file:
DEPTH	.\cirrus_vga_rop.h	167;"	d
DEPTH	.\cirrus_vga_rop.h	170;"	d
DEPTH	.\cirrus_vga_rop.h	173;"	d
DEPTH	.\cirrus_vga_rop.h	176;"	d
DEPTH	.\cirrus_vga_rop2.h	/^glue(glue(glue(cirrus_colorexpand_, ROP_NAME), _),DEPTH)$/;"	f
DEPTH	.\cirrus_vga_rop2.h	/^glue(glue(glue(cirrus_colorexpand_pattern_, ROP_NAME), _),DEPTH)$/;"	f
DEPTH	.\cirrus_vga_rop2.h	/^glue(glue(glue(cirrus_colorexpand_pattern_transp_, ROP_NAME), _),DEPTH)$/;"	f
DEPTH	.\cirrus_vga_rop2.h	/^glue(glue(glue(cirrus_colorexpand_transp_, ROP_NAME), _),DEPTH)$/;"	f
DEPTH	.\cirrus_vga_rop2.h	/^glue(glue(glue(cirrus_fill_, ROP_NAME), _),DEPTH)$/;"	f
DEPTH	.\cirrus_vga_rop2.h	/^glue(glue(glue(cirrus_patternfill_, ROP_NAME), _),DEPTH)$/;"	f
DEPTH	.\cirrus_vga_rop2.h	280;"	d
DEPTH	.\omap_lcd_template.h	170;"	d
DEPTH	.\omap_lcdc.c	76;"	d	file:
DEPTH	.\omap_lcdc.c	78;"	d	file:
DEPTH	.\omap_lcdc.c	80;"	d	file:
DEPTH	.\omap_lcdc.c	82;"	d	file:
DEPTH	.\vga.c	819;"	d	file:
DEPTH	.\vga.c	822;"	d	file:
DEPTH	.\vga.c	826;"	d	file:
DEPTH	.\vga.c	829;"	d	file:
DEPTH	.\vga.c	833;"	d	file:
DEPTH	.\vga.c	836;"	d	file:
DEPTH	.\vga.c	840;"	d	file:
DEPTH	.\vga_template.h	521;"	d
DINT	.\pxa2xx_dma.c	61;"	d	file:
DIRECT_VRAM	.\vmware_vga.c	30;"	d	file:
DISABLE_SEAGATE	.\ide.c	200;"	d	file:
DMA0_CR0	.\ppc405_uc.c	/^    DMA0_CR0 = 0x100,$/;"	e	enum:__anon66	file:
DMA0_CR1	.\ppc405_uc.c	/^    DMA0_CR1 = 0x108,$/;"	e	enum:__anon66	file:
DMA0_CR2	.\ppc405_uc.c	/^    DMA0_CR2 = 0x110,$/;"	e	enum:__anon66	file:
DMA0_CR3	.\ppc405_uc.c	/^    DMA0_CR3 = 0x118,$/;"	e	enum:__anon66	file:
DMA0_CT0	.\ppc405_uc.c	/^    DMA0_CT0 = 0x101,$/;"	e	enum:__anon66	file:
DMA0_CT1	.\ppc405_uc.c	/^    DMA0_CT1 = 0x109,$/;"	e	enum:__anon66	file:
DMA0_CT2	.\ppc405_uc.c	/^    DMA0_CT2 = 0x111,$/;"	e	enum:__anon66	file:
DMA0_CT3	.\ppc405_uc.c	/^    DMA0_CT3 = 0x119,$/;"	e	enum:__anon66	file:
DMA0_DA0	.\ppc405_uc.c	/^    DMA0_DA0 = 0x102,$/;"	e	enum:__anon66	file:
DMA0_DA1	.\ppc405_uc.c	/^    DMA0_DA1 = 0x10A,$/;"	e	enum:__anon66	file:
DMA0_DA2	.\ppc405_uc.c	/^    DMA0_DA2 = 0x112,$/;"	e	enum:__anon66	file:
DMA0_DA3	.\ppc405_uc.c	/^    DMA0_DA3 = 0x11A,$/;"	e	enum:__anon66	file:
DMA0_POL	.\ppc405_uc.c	/^    DMA0_POL = 0x126,$/;"	e	enum:__anon66	file:
DMA0_SA0	.\ppc405_uc.c	/^    DMA0_SA0 = 0x103,$/;"	e	enum:__anon66	file:
DMA0_SA1	.\ppc405_uc.c	/^    DMA0_SA1 = 0x10B,$/;"	e	enum:__anon66	file:
DMA0_SA2	.\ppc405_uc.c	/^    DMA0_SA2 = 0x113,$/;"	e	enum:__anon66	file:
DMA0_SA3	.\ppc405_uc.c	/^    DMA0_SA3 = 0x11B,$/;"	e	enum:__anon66	file:
DMA0_SG0	.\ppc405_uc.c	/^    DMA0_SG0 = 0x104,$/;"	e	enum:__anon66	file:
DMA0_SG1	.\ppc405_uc.c	/^    DMA0_SG1 = 0x10C,$/;"	e	enum:__anon66	file:
DMA0_SG2	.\ppc405_uc.c	/^    DMA0_SG2 = 0x114,$/;"	e	enum:__anon66	file:
DMA0_SG3	.\ppc405_uc.c	/^    DMA0_SG3 = 0x11C,$/;"	e	enum:__anon66	file:
DMA0_SGC	.\ppc405_uc.c	/^    DMA0_SGC = 0x123,$/;"	e	enum:__anon66	file:
DMA0_SLP	.\ppc405_uc.c	/^    DMA0_SLP = 0x125,$/;"	e	enum:__anon66	file:
DMA0_SR	.\ppc405_uc.c	/^    DMA0_SR  = 0x120,$/;"	e	enum:__anon66	file:
DMA8_AUTO	.\sb16.c	198;"	d	file:
DMA8_HIGH	.\sb16.c	199;"	d	file:
DMAC	.\sh7750.c	/^	DMAC, PCIC1, TMU2, RTC, SCI1, SCIF, REF,$/;"	e	enum:__anon94	file:
DMAC_DMAE	.\sh7750.c	/^	DMAC_DMAE,$/;"	e	enum:__anon94	file:
DMAC_DMTE0	.\sh7750.c	/^	DMAC_DMTE0, DMAC_DMTE1, DMAC_DMTE2, DMAC_DMTE3,$/;"	e	enum:__anon94	file:
DMAC_DMTE1	.\sh7750.c	/^	DMAC_DMTE0, DMAC_DMTE1, DMAC_DMTE2, DMAC_DMTE3,$/;"	e	enum:__anon94	file:
DMAC_DMTE2	.\sh7750.c	/^	DMAC_DMTE0, DMAC_DMTE1, DMAC_DMTE2, DMAC_DMTE3,$/;"	e	enum:__anon94	file:
DMAC_DMTE3	.\sh7750.c	/^	DMAC_DMTE0, DMAC_DMTE1, DMAC_DMTE2, DMAC_DMTE3,$/;"	e	enum:__anon94	file:
DMAC_DMTE4	.\sh7750.c	/^	DMAC_DMTE4, DMAC_DMTE5, DMAC_DMTE6, DMAC_DMTE7,$/;"	e	enum:__anon94	file:
DMAC_DMTE5	.\sh7750.c	/^	DMAC_DMTE4, DMAC_DMTE5, DMAC_DMTE6, DMAC_DMTE7,$/;"	e	enum:__anon94	file:
DMAC_DMTE6	.\sh7750.c	/^	DMAC_DMTE4, DMAC_DMTE5, DMAC_DMTE6, DMAC_DMTE7,$/;"	e	enum:__anon94	file:
DMAC_DMTE7	.\sh7750.c	/^	DMAC_DMTE4, DMAC_DMTE5, DMAC_DMTE6, DMAC_DMTE7,$/;"	e	enum:__anon94	file:
DMAState	.\sparc32_dma.c	/^struct DMAState {$/;"	s	file:
DMAState	.\sparc32_dma.c	/^typedef struct DMAState DMAState;$/;"	t	typeref:struct:DMAState	file:
DMA_DRAIN_FIFO	.\sparc32_dma.c	55;"	d	file:
DMA_FDADR	.\pxa2xx_lcd.c	112;"	d	file:
DMA_FIDR	.\pxa2xx_lcd.c	114;"	d	file:
DMA_FSADR	.\pxa2xx_lcd.c	113;"	d	file:
DMA_INTR	.\sparc32_dma.c	51;"	d	file:
DMA_INTREN	.\sparc32_dma.c	52;"	d	file:
DMA_LDCMD	.\pxa2xx_lcd.c	115;"	d	file:
DMA_LOADED	.\sparc32_dma.c	54;"	d	file:
DMA_MAXADDR	.\sparc32_dma.c	48;"	d	file:
DMA_REGS	.\sparc32_dma.c	46;"	d	file:
DMA_RESET	.\sparc32_dma.c	56;"	d	file:
DMA_SIZE	.\sparc32_dma.c	47;"	d	file:
DMA_VER	.\sparc32_dma.c	50;"	d	file:
DMA_WRITE_MEM	.\sparc32_dma.c	53;"	d	file:
DMA_get_channel_mode	.\dma.c	/^int DMA_get_channel_mode (int nchan)$/;"	f
DMA_get_channel_mode	.\sun4m.c	/^int DMA_get_channel_mode (int nchan)$/;"	f
DMA_get_channel_mode	.\sun4u.c	/^int DMA_get_channel_mode (int nchan)$/;"	f
DMA_hold_DREQ	.\dma.c	/^void DMA_hold_DREQ (int nchan)$/;"	f
DMA_hold_DREQ	.\sun4m.c	/^void DMA_hold_DREQ (int nchan) {}$/;"	f
DMA_hold_DREQ	.\sun4u.c	/^void DMA_hold_DREQ (int nchan) {}$/;"	f
DMA_init	.\dma.c	/^void DMA_init (int high_page_enable)$/;"	f
DMA_init	.\sun4m.c	/^void DMA_init (int high_page_enable) {}$/;"	f
DMA_init	.\sun4u.c	/^void DMA_init (int high_page_enable) {}$/;"	f
DMA_read_memory	.\dma.c	/^int DMA_read_memory (int nchan, void *buf, int pos, int len)$/;"	f
DMA_read_memory	.\sun4m.c	/^int DMA_read_memory (int nchan, void *buf, int pos, int size)$/;"	f
DMA_read_memory	.\sun4u.c	/^int DMA_read_memory (int nchan, void *buf, int pos, int size)$/;"	f
DMA_register_channel	.\dma.c	/^void DMA_register_channel (int nchan,$/;"	f
DMA_register_channel	.\sun4m.c	/^void DMA_register_channel (int nchan,$/;"	f
DMA_register_channel	.\sun4u.c	/^void DMA_register_channel (int nchan,$/;"	f
DMA_release_DREQ	.\dma.c	/^void DMA_release_DREQ (int nchan)$/;"	f
DMA_release_DREQ	.\sun4m.c	/^void DMA_release_DREQ (int nchan) {}$/;"	f
DMA_release_DREQ	.\sun4u.c	/^void DMA_release_DREQ (int nchan) {}$/;"	f
DMA_run	.\an5206.c	/^void DMA_run (void)$/;"	f
DMA_run	.\dma.c	/^void DMA_run (void)$/;"	f
DMA_run	.\etraxfs.c	/^void DMA_run(void)$/;"	f
DMA_run	.\integratorcp.c	/^void DMA_run (void)$/;"	f
DMA_run	.\shix.c	/^void DMA_run(void)$/;"	f
DMA_run	.\sun4m.c	/^void DMA_run (void) {}$/;"	f
DMA_run	.\sun4u.c	/^void DMA_run (void) {}$/;"	f
DMA_schedule	.\dma.c	/^void DMA_schedule(int nchan)$/;"	f
DMA_schedule	.\sun4m.c	/^void DMA_schedule(int nchan) {}$/;"	f
DMA_schedule	.\sun4u.c	/^void DMA_schedule(int nchan) {}$/;"	f
DMA_write_memory	.\dma.c	/^int DMA_write_memory (int nchan, void *buf, int pos, int len)$/;"	f
DMA_write_memory	.\sun4m.c	/^int DMA_write_memory (int nchan, void *buf, int pos, int size)$/;"	f
DMA_write_memory	.\sun4u.c	/^int DMA_write_memory (int nchan, void *buf, int pos, int size)$/;"	f
DPCSR	.\pxa2xx_dma.c	57;"	d	file:
DPRINTF	.\arm_gic.c	17;"	d	file:
DPRINTF	.\arm_gic.c	20;"	d	file:
DPRINTF	.\cs4231.c	50;"	d	file:
DPRINTF	.\cs4231.c	53;"	d	file:
DPRINTF	.\eccmemctl.c	31;"	d	file:
DPRINTF	.\eccmemctl.c	34;"	d	file:
DPRINTF	.\esp.c	43;"	d	file:
DPRINTF	.\esp.c	46;"	d	file:
DPRINTF	.\iommu.c	31;"	d	file:
DPRINTF	.\iommu.c	34;"	d	file:
DPRINTF	.\lsi53c895a.c	21;"	d	file:
DPRINTF	.\lsi53c895a.c	26;"	d	file:
DPRINTF	.\mcf_fec.c	17;"	d	file:
DPRINTF	.\mcf_fec.c	20;"	d	file:
DPRINTF	.\openpic.c	42;"	d	file:
DPRINTF	.\openpic.c	44;"	d	file:
DPRINTF	.\pflash_cfi01.c	53;"	d	file:
DPRINTF	.\pflash_cfi01.c	58;"	d	file:
DPRINTF	.\pflash_cfi02.c	46;"	d	file:
DPRINTF	.\pflash_cfi02.c	51;"	d	file:
DPRINTF	.\pl022.c	16;"	d	file:
DPRINTF	.\pl022.c	21;"	d	file:
DPRINTF	.\pl031.c	20;"	d	file:
DPRINTF	.\pl031.c	23;"	d	file:
DPRINTF	.\pl061.c	17;"	d	file:
DPRINTF	.\pl061.c	22;"	d	file:
DPRINTF	.\pl181.c	17;"	d	file:
DPRINTF	.\pl181.c	20;"	d	file:
DPRINTF	.\sbi.c	31;"	d	file:
DPRINTF	.\sbi.c	34;"	d	file:
DPRINTF	.\scsi-disk.c	19;"	d	file:
DPRINTF	.\scsi-disk.c	22;"	d	file:
DPRINTF	.\scsi-generic.c	31;"	d	file:
DPRINTF	.\scsi-generic.c	34;"	d	file:
DPRINTF	.\sd.c	39;"	d	file:
DPRINTF	.\sd.c	42;"	d	file:
DPRINTF	.\slavio_intctl.c	32;"	d	file:
DPRINTF	.\slavio_intctl.c	35;"	d	file:
DPRINTF	.\slavio_timer.c	31;"	d	file:
DPRINTF	.\slavio_timer.c	34;"	d	file:
DPRINTF	.\smbus.c	19;"	d	file:
DPRINTF	.\smbus.c	24;"	d	file:
DPRINTF	.\sparc32_dma.c	40;"	d	file:
DPRINTF	.\sparc32_dma.c	43;"	d	file:
DPRINTF	.\ssd0303.c	20;"	d	file:
DPRINTF	.\ssd0303.c	25;"	d	file:
DPRINTF	.\ssd0323.c	20;"	d	file:
DPRINTF	.\ssd0323.c	25;"	d	file:
DPRINTF	.\ssi-sd.c	16;"	d	file:
DPRINTF	.\ssi-sd.c	21;"	d	file:
DPRINTF	.\stellaris_enet.c	17;"	d	file:
DPRINTF	.\stellaris_enet.c	22;"	d	file:
DPRINTF	.\sun4c_intctl.c	31;"	d	file:
DPRINTF	.\sun4c_intctl.c	34;"	d	file:
DPRINTF	.\sun4m.c	65;"	d	file:
DPRINTF	.\sun4m.c	68;"	d	file:
DPRINTF	.\usb-msd.c	18;"	d	file:
DPRINTF	.\usb-msd.c	21;"	d	file:
DPRINTF	.\vmmouse.c	48;"	d	file:
DPRINTF	.\vmmouse.c	50;"	d	file:
DR	.\fmopl.h	/^	INT32 *DR;		\/* decay rate      :&DR_TALBE[DR<<2]   *\/$/;"	m	struct:fm_opl_slot
DRCMR0	.\pxa2xx_dma.c	62;"	d	file:
DRCMR63	.\pxa2xx_dma.c	63;"	d	file:
DRCMR64	.\pxa2xx_dma.c	65;"	d	file:
DRCMR74	.\pxa2xx_dma.c	66;"	d	file:
DRCMR_CHLNUM	.\pxa2xx_dma.c	75;"	d	file:
DRCMR_MAPVLD	.\pxa2xx_dma.c	76;"	d	file:
DRQSR0	.\pxa2xx_dma.c	58;"	d	file:
DRQSR1	.\pxa2xx_dma.c	59;"	d	file:
DRQSR2	.\pxa2xx_dma.c	60;"	d	file:
DRQ_STAT	.\ide.c	45;"	d	file:
DRVR_INT	.\eepro100.c	129;"	d	file:
DR_TABLE	.\fmopl.h	/^	INT32 DR_TABLE[75];	\/* decay rate tables   *\/$/;"	m	struct:fm_opl_f
DSADR	.\pxa2xx_dma.c	70;"	d	file:
DTADR	.\pxa2xx_dma.c	71;"	d	file:
DV	.\fmopl.c	127;"	d	file:
DV	.\fmopl.c	171;"	d	file:
D_CH0	.\pxa2xx_dma.c	64;"	d	file:
DeviceOutRequest	.\usb.h	81;"	d
DeviceRequest	.\usb.h	80;"	d
E8390_CMD	.\ne2000.c	34;"	d	file:
E8390_NODMA	.\ne2000.c	83;"	d	file:
E8390_PAGE0	.\ne2000.c	84;"	d	file:
E8390_PAGE1	.\ne2000.c	85;"	d	file:
E8390_PAGE2	.\ne2000.c	86;"	d	file:
E8390_RREAD	.\ne2000.c	81;"	d	file:
E8390_RWRITE	.\ne2000.c	82;"	d	file:
E8390_START	.\ne2000.c	79;"	d	file:
E8390_STOP	.\ne2000.c	78;"	d	file:
E8390_TRANS	.\ne2000.c	80;"	d	file:
EBC0_CFGADDR	.\ppc405_uc.c	/^    EBC0_CFGADDR = 0x012,$/;"	e	enum:__anon65	file:
EBC0_CFGDATA	.\ppc405_uc.c	/^    EBC0_CFGDATA = 0x013,$/;"	e	enum:__anon65	file:
ECCState	.\eccmemctl.c	/^typedef struct ECCState {$/;"	s	file:
ECCState	.\eccmemctl.c	/^} ECCState;$/;"	t	typeref:struct:ECCState	file:
ECC_ADDR_MASK	.\eccmemctl.c	90;"	d	file:
ECC_DIAG_CB0	.\eccmemctl.c	79;"	d	file:
ECC_DIAG_CB1	.\eccmemctl.c	80;"	d	file:
ECC_DIAG_CB16	.\eccmemctl.c	84;"	d	file:
ECC_DIAG_CB2	.\eccmemctl.c	81;"	d	file:
ECC_DIAG_CB32	.\eccmemctl.c	85;"	d	file:
ECC_DIAG_CB4	.\eccmemctl.c	82;"	d	file:
ECC_DIAG_CB8	.\eccmemctl.c	83;"	d	file:
ECC_DIAG_CBX	.\eccmemctl.c	78;"	d	file:
ECC_DIAG_DMODE	.\eccmemctl.c	86;"	d	file:
ECC_DIAG_REG	.\eccmemctl.c	48;"	d	file:
ECC_ERR	.\ide.c	59;"	d	file:
ECC_FAR0_BMODE	.\eccmemctl.c	72;"	d	file:
ECC_FAR0_CACHE	.\eccmemctl.c	70;"	d	file:
ECC_FAR0_LOCK	.\eccmemctl.c	71;"	d	file:
ECC_FAR0_PADDR	.\eccmemctl.c	67;"	d	file:
ECC_FAR0_REG	.\eccmemctl.c	46;"	d	file:
ECC_FAR0_S	.\eccmemctl.c	74;"	d	file:
ECC_FAR0_SIZE	.\eccmemctl.c	69;"	d	file:
ECC_FAR0_TYPE	.\eccmemctl.c	68;"	d	file:
ECC_FAR0_VADDR	.\eccmemctl.c	73;"	d	file:
ECC_FAR1_REG	.\eccmemctl.c	47;"	d	file:
ECC_FARO_MID	.\eccmemctl.c	75;"	d	file:
ECC_FCR_EE	.\eccmemctl.c	51;"	d	file:
ECC_FCR_EI	.\eccmemctl.c	52;"	d	file:
ECC_FCR_IMPL	.\eccmemctl.c	54;"	d	file:
ECC_FCR_REG	.\eccmemctl.c	44;"	d	file:
ECC_FCR_VER	.\eccmemctl.c	53;"	d	file:
ECC_FSR_BS	.\eccmemctl.c	58;"	d	file:
ECC_FSR_C2ERR	.\eccmemctl.c	64;"	d	file:
ECC_FSR_CE	.\eccmemctl.c	57;"	d	file:
ECC_FSR_DW	.\eccmemctl.c	61;"	d	file:
ECC_FSR_ME	.\eccmemctl.c	63;"	d	file:
ECC_FSR_REG	.\eccmemctl.c	45;"	d	file:
ECC_FSR_SYND	.\eccmemctl.c	62;"	d	file:
ECC_FSR_TO	.\eccmemctl.c	59;"	d	file:
ECC_FSR_UE	.\eccmemctl.c	60;"	d	file:
ECC_NREGS	.\eccmemctl.c	88;"	d	file:
ECC_SIZE	.\eccmemctl.c	89;"	d	file:
ECC_STAT	.\ide.c	44;"	d	file:
EEPRO100State	.\eepro100.c	/^} EEPRO100State;$/;"	t	typeref:struct:__anon16	file:
EEPROM93XX_H	.\eeprom93xx.h	22;"	d
EEPROM_9346_ADDR_BITS	.\rtl8139.c	355;"	d	file:
EEPROM_9346_ADDR_MASK	.\rtl8139.c	357;"	d	file:
EEPROM_9346_SIZE	.\rtl8139.c	356;"	d	file:
EEPROM_CS	.\eepro100.c	911;"	d	file:
EEPROM_DI	.\eepro100.c	913;"	d	file:
EEPROM_DO	.\eepro100.c	914;"	d	file:
EEPROM_SIZE	.\eepro100.c	103;"	d	file:
EEPROM_SK	.\eepro100.c	912;"	d	file:
EEprom9346	.\rtl8139.c	/^typedef struct EEprom9346$/;"	s	file:
EEprom9346	.\rtl8139.c	/^} EEprom9346;$/;"	t	typeref:struct:EEprom9346	file:
EG_AED	.\fmopl.c	92;"	d	file:
EG_AST	.\fmopl.c	93;"	d	file:
EG_DED	.\fmopl.c	90;"	d	file:
EG_DST	.\fmopl.c	91;"	d	file:
EG_ENT	.\fmopl.c	85;"	d	file:
EG_OFF	.\fmopl.c	89;"	d	file:
EG_STEP	.\fmopl.c	95;"	d	file:
EMBED_STDVGA	.\vmware_vga.c	29;"	d	file:
EN0_BOUNDARY	.\ne2000.c	40;"	d	file:
EN0_CLDAHI	.\ne2000.c	38;"	d	file:
EN0_CLDALO	.\ne2000.c	36;"	d	file:
EN0_COUNTER0	.\ne2000.c	59;"	d	file:
EN0_COUNTER1	.\ne2000.c	61;"	d	file:
EN0_COUNTER2	.\ne2000.c	63;"	d	file:
EN0_CRDAHI	.\ne2000.c	50;"	d	file:
EN0_CRDALO	.\ne2000.c	48;"	d	file:
EN0_DCFG	.\ne2000.c	60;"	d	file:
EN0_FIFO	.\ne2000.c	45;"	d	file:
EN0_IMR	.\ne2000.c	62;"	d	file:
EN0_ISR	.\ne2000.c	47;"	d	file:
EN0_NCR	.\ne2000.c	43;"	d	file:
EN0_RCNTHI	.\ne2000.c	54;"	d	file:
EN0_RCNTLO	.\ne2000.c	52;"	d	file:
EN0_RSARHI	.\ne2000.c	51;"	d	file:
EN0_RSARLO	.\ne2000.c	49;"	d	file:
EN0_RSR	.\ne2000.c	56;"	d	file:
EN0_RTL8029ID0	.\ne2000.c	53;"	d	file:
EN0_RTL8029ID1	.\ne2000.c	55;"	d	file:
EN0_RXCR	.\ne2000.c	57;"	d	file:
EN0_STARTPG	.\ne2000.c	37;"	d	file:
EN0_STOPPG	.\ne2000.c	39;"	d	file:
EN0_TCNTHI	.\ne2000.c	46;"	d	file:
EN0_TCNTLO	.\ne2000.c	44;"	d	file:
EN0_TPSR	.\ne2000.c	42;"	d	file:
EN0_TSR	.\ne2000.c	41;"	d	file:
EN0_TXCR	.\ne2000.c	58;"	d	file:
EN1_CURPAG	.\ne2000.c	66;"	d	file:
EN1_MULT	.\ne2000.c	67;"	d	file:
EN1_PHYS	.\ne2000.c	65;"	d	file:
EN2_STARTPG	.\ne2000.c	69;"	d	file:
EN2_STOPPG	.\ne2000.c	70;"	d	file:
EN3_CONFIG0	.\ne2000.c	72;"	d	file:
EN3_CONFIG1	.\ne2000.c	73;"	d	file:
EN3_CONFIG2	.\ne2000.c	74;"	d	file:
EN3_CONFIG3	.\ne2000.c	75;"	d	file:
END_BLOCK_INTR	.\omap.c	492;"	d	file:
END_FRAME_INTR	.\omap.c	490;"	d	file:
ENISR_ALL	.\ne2000.c	97;"	d	file:
ENISR_COUNTERS	.\ne2000.c	94;"	d	file:
ENISR_OVER	.\ne2000.c	93;"	d	file:
ENISR_RDC	.\ne2000.c	95;"	d	file:
ENISR_RESET	.\ne2000.c	96;"	d	file:
ENISR_RX	.\ne2000.c	89;"	d	file:
ENISR_RX_ERR	.\ne2000.c	91;"	d	file:
ENISR_TX	.\ne2000.c	90;"	d	file:
ENISR_TX_ERR	.\ne2000.c	92;"	d	file:
ENRSR_CRC	.\ne2000.c	101;"	d	file:
ENRSR_DEF	.\ne2000.c	107;"	d	file:
ENRSR_DIS	.\ne2000.c	106;"	d	file:
ENRSR_FAE	.\ne2000.c	102;"	d	file:
ENRSR_FO	.\ne2000.c	103;"	d	file:
ENRSR_MPA	.\ne2000.c	104;"	d	file:
ENRSR_PHY	.\ne2000.c	105;"	d	file:
ENRSR_RXOK	.\ne2000.c	100;"	d	file:
ENTSR_ABT	.\ne2000.c	113;"	d	file:
ENTSR_CDH	.\ne2000.c	116;"	d	file:
ENTSR_COL	.\ne2000.c	112;"	d	file:
ENTSR_CRS	.\ne2000.c	114;"	d	file:
ENTSR_FU	.\ne2000.c	115;"	d	file:
ENTSR_ND	.\ne2000.c	111;"	d	file:
ENTSR_OWC	.\ne2000.c	117;"	d	file:
ENTSR_PTX	.\ne2000.c	110;"	d	file:
ENVP_ADDR	.\mips_malta.c	54;"	d	file:
ENVP_ENTRY_SIZE	.\mips_malta.c	58;"	d	file:
ENVP_NB_ENTRIES	.\mips_malta.c	57;"	d	file:
ENV_BITS	.\fmopl.c	83;"	d	file:
ENV_CURVE	.\fmopl.c	/^static INT32 ENV_CURVE[2*EG_ENT+1];$/;"	v	file:
ENV_MOD_AR	.\fmopl.c	114;"	d	file:
ENV_MOD_DR	.\fmopl.c	113;"	d	file:
ENV_MOD_RR	.\fmopl.c	112;"	d	file:
ERASE_PARAM	.\sd.h	36;"	d
ERASE_RESET	.\sd.h	48;"	d
ERASE_SEQ_ERROR	.\sd.h	35;"	d
ERROR	.\openpic.c	46;"	d	file:
ERROR_PACKET	.\cuda.c	59;"	d	file:
ERR_STAT	.\ide.c	42;"	d	file:
ES1370State	.\es1370.c	/^typedef struct ES1370State {$/;"	s	file:
ES1370State	.\es1370.c	/^} ES1370State;$/;"	t	typeref:struct:ES1370State	file:
ES1370_REG_ADC_FRAMEADR	.\es1370.c	70;"	d	file:
ES1370_REG_ADC_FRAMECNT	.\es1370.c	71;"	d	file:
ES1370_REG_ADC_SCOUNT	.\es1370.c	64;"	d	file:
ES1370_REG_CODEC	.\es1370.c	60;"	d	file:
ES1370_REG_CONTROL	.\es1370.c	53;"	d	file:
ES1370_REG_DAC1_FRAMEADR	.\es1370.c	66;"	d	file:
ES1370_REG_DAC1_FRAMECNT	.\es1370.c	67;"	d	file:
ES1370_REG_DAC1_SCOUNT	.\es1370.c	62;"	d	file:
ES1370_REG_DAC2_FRAMEADR	.\es1370.c	68;"	d	file:
ES1370_REG_DAC2_FRAMECNT	.\es1370.c	69;"	d	file:
ES1370_REG_DAC2_SCOUNT	.\es1370.c	63;"	d	file:
ES1370_REG_MEMPAGE	.\es1370.c	59;"	d	file:
ES1370_REG_PHANTOM_FRAMEADR	.\es1370.c	72;"	d	file:
ES1370_REG_PHANTOM_FRAMECNT	.\es1370.c	73;"	d	file:
ES1370_REG_SERIAL_CONTROL	.\es1370.c	61;"	d	file:
ES1370_REG_STATUS	.\es1370.c	54;"	d	file:
ES1370_REG_UART_CONTROL	.\es1370.c	57;"	d	file:
ES1370_REG_UART_DATA	.\es1370.c	55;"	d	file:
ES1370_REG_UART_STATUS	.\es1370.c	56;"	d	file:
ES1370_REG_UART_TEST	.\es1370.c	58;"	d	file:
ESPState	.\esp.c	/^struct ESPState {$/;"	s	file:
ESPState	.\esp.c	/^typedef struct ESPState ESPState;$/;"	t	typeref:struct:ESPState	file:
ESP_CFG1	.\esp.c	93;"	d	file:
ESP_CFG2	.\esp.c	98;"	d	file:
ESP_CFG3	.\esp.c	99;"	d	file:
ESP_CMD	.\esp.c	84;"	d	file:
ESP_FIFO	.\esp.c	83;"	d	file:
ESP_MASK	.\esp.c	49;"	d	file:
ESP_MAX_DEVS	.\sun4m.h	61;"	d
ESP_REGS	.\esp.c	50;"	d	file:
ESP_RES3	.\esp.c	100;"	d	file:
ESP_RES4	.\esp.c	102;"	d	file:
ESP_RFLAGS	.\esp.c	91;"	d	file:
ESP_RINTR	.\esp.c	87;"	d	file:
ESP_RRES1	.\esp.c	94;"	d	file:
ESP_RRES2	.\esp.c	96;"	d	file:
ESP_RSEQ	.\esp.c	89;"	d	file:
ESP_RSTAT	.\esp.c	85;"	d	file:
ESP_SIZE	.\esp.c	51;"	d	file:
ESP_TCHI	.\esp.c	101;"	d	file:
ESP_TCLO	.\esp.c	81;"	d	file:
ESP_TCMID	.\esp.c	82;"	d	file:
ESP_WBUSID	.\esp.c	86;"	d	file:
ESP_WCCF	.\esp.c	95;"	d	file:
ESP_WSEL	.\esp.c	88;"	d	file:
ESP_WSYNO	.\esp.c	92;"	d	file:
ESP_WSYNTP	.\esp.c	90;"	d	file:
ESP_WTEST	.\esp.c	97;"	d	file:
ESR_ILLEGAL_ADDRESS	.\apic.c	61;"	d	file:
ETHERNET_IRQ	.\mainstone.h	23;"	d
ETH_HLEN	.\rtl8139.c	2079;"	d	file:
ETH_MTU	.\rtl8139.c	2080;"	d	file:
ETH_P_IP	.\rtl8139.c	2078;"	d	file:
EVENPORTMASK	.\sh7750.c	86;"	d	file:
EVENT_DROP_INTR	.\omap.c	488;"	d	file:
EXABYTE_ENABLE_NEST	.\ide.c	189;"	d	file:
EXBRD_IRQ	.\mainstone.h	27;"	d
EXTINT_BRKINT	.\slavio_serial.c	171;"	d	file:
EXTINT_CTSINT	.\slavio_serial.c	169;"	d	file:
EXTINT_DCD	.\slavio_serial.c	167;"	d	file:
EXTINT_SYNCINT	.\slavio_serial.c	168;"	d	file:
EXTINT_TXUNDRN	.\slavio_serial.c	170;"	d	file:
EXT_IRQ	.\openpic.c	70;"	d	file:
E_CH	.\fmopl.c	/^static OPL_CH *E_CH;$/;"	v	file:
EndTransferFunc	.\ide.c	/^typedef void EndTransferFunc(struct IDEState *);$/;"	t	file:
EndpointOutRequest	.\usb.h	87;"	d
EndpointRequest	.\usb.h	86;"	d
FAE	.\rtl8139.c	/^    uint16_t   FAE;$/;"	m	struct:RTL8139TallyCounters	file:
FB	.\fmopl.h	/^	UINT8 FB;			\/* feed back       :(shift down bit)   *\/$/;"	m	struct:fm_opl_channel
FBR0	.\pxa2xx_lcd.c	87;"	d	file:
FBR1	.\pxa2xx_lcd.c	88;"	d	file:
FBR2	.\pxa2xx_lcd.c	89;"	d	file:
FBR3	.\pxa2xx_lcd.c	90;"	d	file:
FBR4	.\pxa2xx_lcd.c	91;"	d	file:
FBR5	.\pxa2xx_lcd.c	92;"	d	file:
FBR6	.\pxa2xx_lcd.c	93;"	d	file:
FBR_BINT	.\pxa2xx_lcd.c	156;"	d	file:
FBR_BRA	.\pxa2xx_lcd.c	155;"	d	file:
FBR_SRCADDR	.\pxa2xx_lcd.c	157;"	d	file:
FDISK_DBL_SIDES	.\fdc.c	/^    FDISK_DBL_SIDES  = 0x01,$/;"	e	enum:fdisk_flags_t	file:
FDRIVE_DISK_144	.\fdc.c	/^    FDRIVE_DISK_144   = 0x02, \/* 1.44 MB disk           *\/$/;"	e	enum:fdisk_type_t	file:
FDRIVE_DISK_288	.\fdc.c	/^    FDRIVE_DISK_288   = 0x01, \/* 2.88 MB disk           *\/$/;"	e	enum:fdisk_type_t	file:
FDRIVE_DISK_720	.\fdc.c	/^    FDRIVE_DISK_720   = 0x03, \/* 720 kB disk            *\/$/;"	e	enum:fdisk_type_t	file:
FDRIVE_DISK_NONE	.\fdc.c	/^    FDRIVE_DISK_NONE  = 0x05, \/* No disk                *\/$/;"	e	enum:fdisk_type_t	file:
FDRIVE_DISK_USER	.\fdc.c	/^    FDRIVE_DISK_USER  = 0x04, \/* User defined geometry  *\/$/;"	e	enum:fdisk_type_t	file:
FDRIVE_DRV_120	.\fdc.c	/^    FDRIVE_DRV_120  = 0x02,   \/* 1.2  MB 5"25 drive     *\/$/;"	e	enum:fdrive_type_t	file:
FDRIVE_DRV_144	.\fdc.c	/^    FDRIVE_DRV_144  = 0x00,   \/* 1.44 MB 3"5 drive      *\/$/;"	e	enum:fdrive_type_t	file:
FDRIVE_DRV_288	.\fdc.c	/^    FDRIVE_DRV_288  = 0x01,   \/* 2.88 MB 3"5 drive      *\/$/;"	e	enum:fdrive_type_t	file:
FDRIVE_DRV_NONE	.\fdc.c	/^    FDRIVE_DRV_NONE = 0x03,   \/* No drive connected     *\/$/;"	e	enum:fdrive_type_t	file:
FDRIVE_MOTOR_ON	.\fdc.c	/^    FDRIVE_MOTOR_ON   = 0x01, \/* motor on\/off           *\/$/;"	e	enum:fdrive_flags_t	file:
FD_CTRL_ACTIVE	.\fdc.c	/^    FD_CTRL_ACTIVE = 0x01, \/* XXX: suppress that *\/$/;"	e	enum:__anon18	file:
FD_CTRL_BUSY	.\fdc.c	/^    FD_CTRL_BUSY   = 0x08, \/* dma transfer in progress *\/$/;"	e	enum:__anon18	file:
FD_CTRL_INTR	.\fdc.c	/^    FD_CTRL_INTR   = 0x10,$/;"	e	enum:__anon18	file:
FD_CTRL_RESET	.\fdc.c	/^    FD_CTRL_RESET  = 0x02,$/;"	e	enum:__anon18	file:
FD_CTRL_SLEEP	.\fdc.c	/^    FD_CTRL_SLEEP  = 0x04, \/* XXX: suppress that *\/$/;"	e	enum:__anon18	file:
FD_DID_SEEK	.\fdc.c	367;"	d	file:
FD_DIR_READ	.\fdc.c	/^    FD_DIR_READ    = 1,$/;"	e	enum:__anon19	file:
FD_DIR_SCANE	.\fdc.c	/^    FD_DIR_SCANE   = 2,$/;"	e	enum:__anon19	file:
FD_DIR_SCANH	.\fdc.c	/^    FD_DIR_SCANH   = 4,$/;"	e	enum:__anon19	file:
FD_DIR_SCANL	.\fdc.c	/^    FD_DIR_SCANL   = 3,$/;"	e	enum:__anon19	file:
FD_DIR_WRITE	.\fdc.c	/^    FD_DIR_WRITE   = 0,$/;"	e	enum:__anon19	file:
FD_FORMAT_CMD	.\fdc.c	368;"	d	file:
FD_MULTI_TRACK	.\fdc.c	366;"	d	file:
FD_SECTOR_LEN	.\fdc.c	52;"	d	file:
FD_SECTOR_SC	.\fdc.c	53;"	d	file:
FD_SET_STATE	.\fdc.c	364;"	d	file:
FD_STATE	.\fdc.c	363;"	d	file:
FD_STATE_CMD	.\fdc.c	/^    FD_STATE_CMD    = 0x00,$/;"	e	enum:__anon20	file:
FD_STATE_DATA	.\fdc.c	/^    FD_STATE_DATA   = 0x02,$/;"	e	enum:__anon20	file:
FD_STATE_FORMAT	.\fdc.c	/^    FD_STATE_FORMAT = 0x40,$/;"	e	enum:__anon20	file:
FD_STATE_MULTI	.\fdc.c	/^    FD_STATE_MULTI  = 0x10,$/;"	e	enum:__anon20	file:
FD_STATE_SEEK	.\fdc.c	/^    FD_STATE_SEEK   = 0x20,$/;"	e	enum:__anon20	file:
FD_STATE_STATE	.\fdc.c	/^    FD_STATE_STATE  = 0x03,$/;"	e	enum:__anon20	file:
FD_STATE_STATUS	.\fdc.c	/^    FD_STATE_STATUS = 0x01,$/;"	e	enum:__anon20	file:
FEC_BD_ABC	.\mcf_fec.c	96;"	d	file:
FEC_BD_BC	.\mcf_fec.c	98;"	d	file:
FEC_BD_CR	.\mcf_fec.c	102;"	d	file:
FEC_BD_E	.\mcf_fec.c	90;"	d	file:
FEC_BD_L	.\mcf_fec.c	94;"	d	file:
FEC_BD_LG	.\mcf_fec.c	100;"	d	file:
FEC_BD_M	.\mcf_fec.c	97;"	d	file:
FEC_BD_MC	.\mcf_fec.c	99;"	d	file:
FEC_BD_NO	.\mcf_fec.c	101;"	d	file:
FEC_BD_O1	.\mcf_fec.c	91;"	d	file:
FEC_BD_O2	.\mcf_fec.c	93;"	d	file:
FEC_BD_OV	.\mcf_fec.c	103;"	d	file:
FEC_BD_R	.\mcf_fec.c	89;"	d	file:
FEC_BD_TC	.\mcf_fec.c	95;"	d	file:
FEC_BD_TR	.\mcf_fec.c	104;"	d	file:
FEC_BD_W	.\mcf_fec.c	92;"	d	file:
FEC_EN	.\mcf_fec.c	61;"	d	file:
FEC_INT_BABR	.\mcf_fec.c	48;"	d	file:
FEC_INT_BABT	.\mcf_fec.c	49;"	d	file:
FEC_INT_EB	.\mcf_fec.c	56;"	d	file:
FEC_INT_GRA	.\mcf_fec.c	50;"	d	file:
FEC_INT_HB	.\mcf_fec.c	47;"	d	file:
FEC_INT_LC	.\mcf_fec.c	57;"	d	file:
FEC_INT_MII	.\mcf_fec.c	55;"	d	file:
FEC_INT_RL	.\mcf_fec.c	58;"	d	file:
FEC_INT_RXB	.\mcf_fec.c	54;"	d	file:
FEC_INT_RXF	.\mcf_fec.c	53;"	d	file:
FEC_INT_TXB	.\mcf_fec.c	52;"	d	file:
FEC_INT_TXF	.\mcf_fec.c	51;"	d	file:
FEC_INT_UN	.\mcf_fec.c	59;"	d	file:
FEC_MAX_FRAME_SIZE	.\mcf_fec.c	23;"	d	file:
FEC_NUM_IRQ	.\mcf_fec.c	65;"	d	file:
FEC_RESET	.\mcf_fec.c	62;"	d	file:
FIFOTMS	.\rtl8139.c	/^    FIFOTMS = 0x70,        \/* FIFO Control and test. *\/$/;"	e	enum:RTL8139_registers	file:
FIRMWARE_ABI_H	.\firmware_abi.h	2;"	d
FLAG_RDLOAD	.\arm_boot.c	115;"	d	file:
FLAG_RDPROMPT	.\arm_boot.c	116;"	d	file:
FLAG_READONLY	.\arm_boot.c	114;"	d	file:
FLASHCTL_ALE	.\spitz.c	45;"	d	file:
FLASHCTL_CE0	.\spitz.c	43;"	d	file:
FLASHCTL_CE1	.\spitz.c	47;"	d	file:
FLASHCTL_CLE	.\spitz.c	44;"	d	file:
FLASHCTL_NCE	.\spitz.c	49;"	d	file:
FLASHCTL_RYBY	.\spitz.c	48;"	d	file:
FLASHCTL_WP	.\spitz.c	46;"	d	file:
FLASH_1024M	.\spitz.c	/^    FLASH_1024M,$/;"	e	enum:__anon104	file:
FLASH_128M	.\spitz.c	/^    FLASH_128M,$/;"	e	enum:__anon104	file:
FLASH_BASE	.\spitz.c	34;"	d	file:
FLASH_ECCCLRR	.\spitz.c	39;"	d	file:
FLASH_ECCCNTR	.\spitz.c	38;"	d	file:
FLASH_ECCCP	.\spitz.c	37;"	d	file:
FLASH_ECCLPLB	.\spitz.c	35;"	d	file:
FLASH_ECCLPUB	.\spitz.c	36;"	d	file:
FLASH_FLASHCTL	.\spitz.c	41;"	d	file:
FLASH_FLASHIO	.\spitz.c	40;"	d	file:
FLASH_SIZE	.\tc58128.c	27;"	d	file:
FLOPPY_DPRINTF	.\fdc.c	39;"	d	file:
FLOPPY_DPRINTF	.\fdc.c	42;"	d	file:
FLOPPY_ERROR	.\fdc.c	45;"	d	file:
FM_OPL	.\fmopl.h	/^} FM_OPL;$/;"	t	typeref:struct:fm_opl_f
FN	.\pl110_template.h	124;"	d
FN	.\pl110_template.h	139;"	d
FN	.\pl110_template.h	151;"	d
FN	.\pl110_template.h	166;"	d
FN	.\pl110_template.h	178;"	d
FN	.\pl110_template.h	193;"	d
FN	.\pl110_template.h	204;"	d
FN	.\pl110_template.h	216;"	d
FN	.\pxa2xx_template.h	39;"	d
FN	.\pxa2xx_template.h	51;"	d
FN	.\pxa2xx_template.h	63;"	d
FN	.\pxa2xx_template.h	75;"	d
FN	.\pxa2xx_template.h	87;"	d
FN	.\pxa2xx_template.h	99;"	d
FN	.\spitz.c	299;"	d	file:
FN	.\spitz.c	455;"	d	file:
FN_2	.\pl110_template.h	114;"	d
FN_2	.\pxa2xx_template.h	30;"	d
FN_4	.\pl110_template.h	115;"	d
FN_4	.\pxa2xx_template.h	31;"	d
FN_8	.\pl110_template.h	116;"	d
FN_TABLE	.\fmopl.h	/^	UINT32 FN_TABLE[1024];  \/* fnumber -> increment counter *\/$/;"	m	struct:fm_opl_f
FPGA_GPIO_PIN	.\mst_fpga.c	15;"	d	file:
FRAME_MAX_LOOPS	.\usb-uhci.c	65;"	d	file:
FRAME_TIMER_FREQ	.\usb-uhci.c	63;"	d	file:
FREQ_BITS	.\fmopl.c	64;"	d	file:
FREQ_RATE	.\fmopl.c	67;"	d	file:
FlashReg	.\rtl8139.c	/^    FlashReg = 0x54,$/;"	e	enum:RTL8139_registers	file:
GAFR_L	.\pxa2xx_gpio.c	/^        GAFR_L,$/;"	e	enum:__anon82::__anon83	file:
GAFR_U	.\pxa2xx_gpio.c	/^        GAFR_U,$/;"	e	enum:__anon82::__anon83	file:
GBL_EN	.\acpi.c	56;"	d	file:
GEDR	.\pxa2xx_gpio.c	/^        GEDR,$/;"	e	enum:__anon82::__anon83	file:
GET_FIELD	.\pcnet.c	278;"	d	file:
GET_IDLE	.\usb-hid.c	31;"	d	file:
GET_PLANE	.\vga.c	88;"	d	file:
GET_PLANE	.\vga.c	90;"	d	file:
GET_PROTOCOL	.\usb-hid.c	32;"	d	file:
GET_REPORT	.\usb-hid.c	30;"	d	file:
GFER	.\pxa2xx_gpio.c	/^        GFER,$/;"	e	enum:__anon82::__anon83	file:
GIC_BASE_IRQ	.\arm_gic.c	29;"	d	file:
GIC_BASE_IRQ	.\arm_gic.c	34;"	d	file:
GIC_CLEAR_ACTIVE	.\arm_gic.c	58;"	d	file:
GIC_CLEAR_ENABLED	.\arm_gic.c	52;"	d	file:
GIC_CLEAR_LEVEL	.\arm_gic.c	64;"	d	file:
GIC_CLEAR_MODEL	.\arm_gic.c	61;"	d	file:
GIC_CLEAR_PENDING	.\arm_gic.c	55;"	d	file:
GIC_CLEAR_TRIGGER	.\arm_gic.c	67;"	d	file:
GIC_DIST_OFFSET	.\arm_gic.c	26;"	d	file:
GIC_DIST_OFFSET	.\arm_gic.c	33;"	d	file:
GIC_GET_PRIORITY	.\arm_gic.c	69;"	d	file:
GIC_NIRQ	.\armv7m_nvic.c	19;"	d	file:
GIC_NIRQ	.\mpcore.c	19;"	d	file:
GIC_NIRQ	.\realview_gic.c	13;"	d	file:
GIC_SET_ACTIVE	.\arm_gic.c	57;"	d	file:
GIC_SET_ENABLED	.\arm_gic.c	51;"	d	file:
GIC_SET_LEVEL	.\arm_gic.c	63;"	d	file:
GIC_SET_MODEL	.\arm_gic.c	60;"	d	file:
GIC_SET_PENDING	.\arm_gic.c	54;"	d	file:
GIC_SET_TRIGGER	.\arm_gic.c	66;"	d	file:
GIC_TARGET	.\arm_gic.c	72;"	d	file:
GIC_TARGET	.\arm_gic.c	74;"	d	file:
GIC_TEST_ACTIVE	.\arm_gic.c	59;"	d	file:
GIC_TEST_ENABLED	.\arm_gic.c	53;"	d	file:
GIC_TEST_LEVEL	.\arm_gic.c	65;"	d	file:
GIC_TEST_MODEL	.\arm_gic.c	62;"	d	file:
GIC_TEST_PENDING	.\arm_gic.c	56;"	d	file:
GIC_TEST_TRIGGER	.\arm_gic.c	68;"	d	file:
GMODE_BLANK	.\vga.c	1610;"	d	file:
GMODE_GRAPH	.\vga.c	1609;"	d	file:
GMODE_TEXT	.\vga.c	1608;"	d	file:
GPCMD_BLANK	.\ide.c	211;"	d	file:
GPCMD_CLOSE_TRACK	.\ide.c	212;"	d	file:
GPCMD_FLUSH_CACHE	.\ide.c	213;"	d	file:
GPCMD_FORMAT_UNIT	.\ide.c	214;"	d	file:
GPCMD_GET_CONFIGURATION	.\ide.c	215;"	d	file:
GPCMD_GET_EVENT_STATUS_NOTIFICATION	.\ide.c	216;"	d	file:
GPCMD_GET_MEDIA_STATUS	.\ide.c	271;"	d	file:
GPCMD_GET_PERFORMANCE	.\ide.c	217;"	d	file:
GPCMD_INQUIRY	.\ide.c	218;"	d	file:
GPCMD_LOAD_UNLOAD	.\ide.c	219;"	d	file:
GPCMD_MECHANISM_STATUS	.\ide.c	220;"	d	file:
GPCMD_MODE_SELECT_10	.\ide.c	221;"	d	file:
GPCMD_MODE_SENSE_10	.\ide.c	222;"	d	file:
GPCMD_MODE_SENSE_6	.\ide.c	272;"	d	file:
GPCMD_PAUSE_RESUME	.\ide.c	223;"	d	file:
GPCMD_PLAYAUDIO_TI	.\ide.c	266;"	d	file:
GPCMD_PLAY_AUDIO_10	.\ide.c	224;"	d	file:
GPCMD_PLAY_AUDIO_MSF	.\ide.c	225;"	d	file:
GPCMD_PLAY_AUDIO_TI	.\ide.c	226;"	d	file:
GPCMD_PLAY_CD	.\ide.c	227;"	d	file:
GPCMD_PREVENT_ALLOW_MEDIUM_REMOVAL	.\ide.c	228;"	d	file:
GPCMD_READ_10	.\ide.c	229;"	d	file:
GPCMD_READ_12	.\ide.c	230;"	d	file:
GPCMD_READ_CD	.\ide.c	232;"	d	file:
GPCMD_READ_CDVD_CAPACITY	.\ide.c	231;"	d	file:
GPCMD_READ_CD_MSF	.\ide.c	233;"	d	file:
GPCMD_READ_DISC_INFO	.\ide.c	234;"	d	file:
GPCMD_READ_DVD_STRUCTURE	.\ide.c	235;"	d	file:
GPCMD_READ_FORMAT_CAPACITIES	.\ide.c	236;"	d	file:
GPCMD_READ_HEADER	.\ide.c	237;"	d	file:
GPCMD_READ_SUBCHANNEL	.\ide.c	239;"	d	file:
GPCMD_READ_TOC_PMA_ATIP	.\ide.c	240;"	d	file:
GPCMD_READ_TRACK_RZONE_INFO	.\ide.c	238;"	d	file:
GPCMD_REPAIR_RZONE_TRACK	.\ide.c	241;"	d	file:
GPCMD_REPORT_KEY	.\ide.c	242;"	d	file:
GPCMD_REQUEST_SENSE	.\ide.c	243;"	d	file:
GPCMD_RESERVE_RZONE_TRACK	.\ide.c	244;"	d	file:
GPCMD_SCAN	.\ide.c	245;"	d	file:
GPCMD_SEEK	.\ide.c	246;"	d	file:
GPCMD_SEND_DVD_STRUCTURE	.\ide.c	247;"	d	file:
GPCMD_SEND_EVENT	.\ide.c	248;"	d	file:
GPCMD_SEND_KEY	.\ide.c	249;"	d	file:
GPCMD_SEND_OPC	.\ide.c	250;"	d	file:
GPCMD_SET_READ_AHEAD	.\ide.c	251;"	d	file:
GPCMD_SET_SPEED	.\ide.c	263;"	d	file:
GPCMD_SET_STREAMING	.\ide.c	252;"	d	file:
GPCMD_START_STOP_UNIT	.\ide.c	253;"	d	file:
GPCMD_STOP_PLAY_SCAN	.\ide.c	254;"	d	file:
GPCMD_TEST_UNIT_READY	.\ide.c	255;"	d	file:
GPCMD_VERIFY_10	.\ide.c	256;"	d	file:
GPCMD_WRITE_10	.\ide.c	257;"	d	file:
GPCMD_WRITE_AND_VERIFY_10	.\ide.c	258;"	d	file:
GPCR	.\pxa2xx_gpio.c	/^        GPCR,$/;"	e	enum:__anon82::__anon83	file:
GPDR	.\pxa2xx_gpio.c	/^        GPDR,$/;"	e	enum:__anon82::__anon83	file:
GPIOI	.\sh7750.c	/^	HUDI, GPIOI,$/;"	e	enum:__anon94	file:
GPIO_A	.\stellaris.c	21;"	d	file:
GPIO_B	.\stellaris.c	22;"	d	file:
GPIO_C	.\stellaris.c	23;"	d	file:
GPIO_D	.\stellaris.c	24;"	d	file:
GPIO_E	.\stellaris.c	25;"	d	file:
GPIO_F	.\stellaris.c	26;"	d	file:
GPIO_G	.\stellaris.c	27;"	d	file:
GPIO_NONE	.\pxa2xx_gpio.c	/^        GPIO_NONE,$/;"	e	enum:__anon82::__anon83	file:
GPLR	.\pxa2xx_gpio.c	/^        GPLR,$/;"	e	enum:__anon82::__anon83	file:
GPMODE_ALL_PAGES	.\ide.c	282;"	d	file:
GPMODE_AUDIO_CTL_PAGE	.\ide.c	277;"	d	file:
GPMODE_CAPABILITIES_PAGE	.\ide.c	281;"	d	file:
GPMODE_CDROM_PAGE	.\ide.c	285;"	d	file:
GPMODE_FAULT_FAIL_PAGE	.\ide.c	279;"	d	file:
GPMODE_POWER_PAGE	.\ide.c	278;"	d	file:
GPMODE_R_W_ERROR_PAGE	.\ide.c	275;"	d	file:
GPMODE_TO_PROTECT_PAGE	.\ide.c	280;"	d	file:
GPMODE_WRITE_PARMS_PAGE	.\ide.c	276;"	d	file:
GPSR	.\pxa2xx_gpio.c	/^        GPSR,$/;"	e	enum:__anon82::__anon83	file:
GRER	.\pxa2xx_gpio.c	/^        GRER,$/;"	e	enum:__anon82::__anon83	file:
GT64120PCIState	.\gt64xxx.c	/^typedef PCIHostState GT64120PCIState;$/;"	t	file:
GT64120State	.\gt64xxx.c	/^typedef struct GT64120State {$/;"	s	file:
GT64120State	.\gt64xxx.c	/^} GT64120State;$/;"	t	typeref:struct:GT64120State	file:
GT_ADERR	.\gt64xxx.c	112;"	d	file:
GT_BOOTHD	.\gt64xxx.c	111;"	d	file:
GT_BOOTLD	.\gt64xxx.c	110;"	d	file:
GT_CPU	.\gt64xxx.c	44;"	d	file:
GT_CPUERR_ADDRHI	.\gt64xxx.c	84;"	d	file:
GT_CPUERR_ADDRLO	.\gt64xxx.c	83;"	d	file:
GT_CPUERR_DATAHI	.\gt64xxx.c	86;"	d	file:
GT_CPUERR_DATALO	.\gt64xxx.c	85;"	d	file:
GT_CPUERR_PARITY	.\gt64xxx.c	87;"	d	file:
GT_CPU_INTSEL	.\gt64xxx.c	221;"	d	file:
GT_CS0HD	.\gt64xxx.c	103;"	d	file:
GT_CS0LD	.\gt64xxx.c	102;"	d	file:
GT_CS1HD	.\gt64xxx.c	105;"	d	file:
GT_CS1LD	.\gt64xxx.c	104;"	d	file:
GT_CS20HD	.\gt64xxx.c	53;"	d	file:
GT_CS20LD	.\gt64xxx.c	52;"	d	file:
GT_CS20R	.\gt64xxx.c	72;"	d	file:
GT_CS2HD	.\gt64xxx.c	107;"	d	file:
GT_CS2LD	.\gt64xxx.c	106;"	d	file:
GT_CS3BOOTHD	.\gt64xxx.c	55;"	d	file:
GT_CS3BOOTLD	.\gt64xxx.c	54;"	d	file:
GT_CS3BOOTR	.\gt64xxx.c	73;"	d	file:
GT_CS3HD	.\gt64xxx.c	109;"	d	file:
GT_CS3LD	.\gt64xxx.c	108;"	d	file:
GT_DEV_B0	.\gt64xxx.c	127;"	d	file:
GT_DEV_B1	.\gt64xxx.c	128;"	d	file:
GT_DEV_B2	.\gt64xxx.c	129;"	d	file:
GT_DEV_B3	.\gt64xxx.c	130;"	d	file:
GT_DEV_BOOT	.\gt64xxx.c	131;"	d	file:
GT_DMA0_CNT	.\gt64xxx.c	141;"	d	file:
GT_DMA0_CTRL	.\gt64xxx.c	163;"	d	file:
GT_DMA0_CUR	.\gt64xxx.c	157;"	d	file:
GT_DMA0_DA	.\gt64xxx.c	149;"	d	file:
GT_DMA0_NEXT	.\gt64xxx.c	153;"	d	file:
GT_DMA0_SA	.\gt64xxx.c	145;"	d	file:
GT_DMA1_CNT	.\gt64xxx.c	142;"	d	file:
GT_DMA1_CTRL	.\gt64xxx.c	164;"	d	file:
GT_DMA1_CUR	.\gt64xxx.c	158;"	d	file:
GT_DMA1_DA	.\gt64xxx.c	150;"	d	file:
GT_DMA1_NEXT	.\gt64xxx.c	154;"	d	file:
GT_DMA1_SA	.\gt64xxx.c	146;"	d	file:
GT_DMA2_CNT	.\gt64xxx.c	143;"	d	file:
GT_DMA2_CTRL	.\gt64xxx.c	165;"	d	file:
GT_DMA2_CUR	.\gt64xxx.c	159;"	d	file:
GT_DMA2_DA	.\gt64xxx.c	151;"	d	file:
GT_DMA2_NEXT	.\gt64xxx.c	155;"	d	file:
GT_DMA2_SA	.\gt64xxx.c	147;"	d	file:
GT_DMA3_CNT	.\gt64xxx.c	144;"	d	file:
GT_DMA3_CTRL	.\gt64xxx.c	166;"	d	file:
GT_DMA3_CUR	.\gt64xxx.c	160;"	d	file:
GT_DMA3_DA	.\gt64xxx.c	152;"	d	file:
GT_DMA3_NEXT	.\gt64xxx.c	156;"	d	file:
GT_DMA3_SA	.\gt64xxx.c	148;"	d	file:
GT_DMA_ARB	.\gt64xxx.c	169;"	d	file:
GT_ECC_CALC	.\gt64xxx.c	137;"	d	file:
GT_ECC_ERRADDR	.\gt64xxx.c	138;"	d	file:
GT_ECC_ERRDATAHI	.\gt64xxx.c	135;"	d	file:
GT_ECC_ERRDATALO	.\gt64xxx.c	134;"	d	file:
GT_ECC_MEM	.\gt64xxx.c	136;"	d	file:
GT_HINTRCAUSE	.\gt64xxx.c	223;"	d	file:
GT_HINTRMASK	.\gt64xxx.c	224;"	d	file:
GT_INTRCAUSE	.\gt64xxx.c	217;"	d	file:
GT_INTRMASK	.\gt64xxx.c	218;"	d	file:
GT_ISD	.\gt64xxx.c	68;"	d	file:
GT_MULTI	.\gt64xxx.c	45;"	d	file:
GT_PCI0IOHD	.\gt64xxx.c	57;"	d	file:
GT_PCI0IOLD	.\gt64xxx.c	56;"	d	file:
GT_PCI0IOREMAP	.\gt64xxx.c	75;"	d	file:
GT_PCI0M0HD	.\gt64xxx.c	59;"	d	file:
GT_PCI0M0LD	.\gt64xxx.c	58;"	d	file:
GT_PCI0M0REMAP	.\gt64xxx.c	76;"	d	file:
GT_PCI0M1HD	.\gt64xxx.c	61;"	d	file:
GT_PCI0M1LD	.\gt64xxx.c	60;"	d	file:
GT_PCI0M1REMAP	.\gt64xxx.c	77;"	d	file:
GT_PCI0SYNC	.\gt64xxx.c	90;"	d	file:
GT_PCI0_BARE	.\gt64xxx.c	187;"	d	file:
GT_PCI0_BS_CS20	.\gt64xxx.c	183;"	d	file:
GT_PCI0_BS_CS3BT	.\gt64xxx.c	184;"	d	file:
GT_PCI0_BS_SCS10	.\gt64xxx.c	181;"	d	file:
GT_PCI0_BS_SCS32	.\gt64xxx.c	182;"	d	file:
GT_PCI0_CFGADDR	.\gt64xxx.c	213;"	d	file:
GT_PCI0_CFGDATA	.\gt64xxx.c	214;"	d	file:
GT_PCI0_CMD	.\gt64xxx.c	179;"	d	file:
GT_PCI0_CS20_BAR	.\gt64xxx.c	191;"	d	file:
GT_PCI0_CS3BT_BAR	.\gt64xxx.c	192;"	d	file:
GT_PCI0_HICMASK	.\gt64xxx.c	225;"	d	file:
GT_PCI0_IACK	.\gt64xxx.c	186;"	d	file:
GT_PCI0_ICMASK	.\gt64xxx.c	219;"	d	file:
GT_PCI0_INTSEL	.\gt64xxx.c	222;"	d	file:
GT_PCI0_PREFMBR	.\gt64xxx.c	188;"	d	file:
GT_PCI0_SCS10_BAR	.\gt64xxx.c	189;"	d	file:
GT_PCI0_SCS32_BAR	.\gt64xxx.c	190;"	d	file:
GT_PCI0_SCS3BT_BAR	.\gt64xxx.c	195;"	d	file:
GT_PCI0_SERR0MASK	.\gt64xxx.c	220;"	d	file:
GT_PCI0_SSCS10_BAR	.\gt64xxx.c	193;"	d	file:
GT_PCI0_SSCS32_BAR	.\gt64xxx.c	194;"	d	file:
GT_PCI0_TOR	.\gt64xxx.c	180;"	d	file:
GT_PCI1IOHD	.\gt64xxx.c	63;"	d	file:
GT_PCI1IOLD	.\gt64xxx.c	62;"	d	file:
GT_PCI1IOREMAP	.\gt64xxx.c	78;"	d	file:
GT_PCI1M0HD	.\gt64xxx.c	65;"	d	file:
GT_PCI1M0LD	.\gt64xxx.c	64;"	d	file:
GT_PCI1M0REMAP	.\gt64xxx.c	79;"	d	file:
GT_PCI1M1HD	.\gt64xxx.c	67;"	d	file:
GT_PCI1M1LD	.\gt64xxx.c	66;"	d	file:
GT_PCI1M1REMAP	.\gt64xxx.c	80;"	d	file:
GT_PCI1SYNC	.\gt64xxx.c	91;"	d	file:
GT_PCI1_BARE	.\gt64xxx.c	202;"	d	file:
GT_PCI1_BS_CS20	.\gt64xxx.c	200;"	d	file:
GT_PCI1_BS_CS3BT	.\gt64xxx.c	201;"	d	file:
GT_PCI1_BS_SCS10	.\gt64xxx.c	198;"	d	file:
GT_PCI1_BS_SCS32	.\gt64xxx.c	199;"	d	file:
GT_PCI1_CFGADDR	.\gt64xxx.c	211;"	d	file:
GT_PCI1_CFGDATA	.\gt64xxx.c	212;"	d	file:
GT_PCI1_CMD	.\gt64xxx.c	196;"	d	file:
GT_PCI1_CS20_BAR	.\gt64xxx.c	206;"	d	file:
GT_PCI1_CS3BT_BAR	.\gt64xxx.c	207;"	d	file:
GT_PCI1_IACK	.\gt64xxx.c	185;"	d	file:
GT_PCI1_PREFMBR	.\gt64xxx.c	203;"	d	file:
GT_PCI1_SCS10_BAR	.\gt64xxx.c	204;"	d	file:
GT_PCI1_SCS32_BAR	.\gt64xxx.c	205;"	d	file:
GT_PCI1_SCS3BT_BAR	.\gt64xxx.c	210;"	d	file:
GT_PCI1_SERR1MASK	.\gt64xxx.c	226;"	d	file:
GT_PCI1_SSCS10_BAR	.\gt64xxx.c	208;"	d	file:
GT_PCI1_SSCS32_BAR	.\gt64xxx.c	209;"	d	file:
GT_PCI1_TOR	.\gt64xxx.c	197;"	d	file:
GT_REGS	.\gt64xxx.c	41;"	d	file:
GT_SCS0HD	.\gt64xxx.c	95;"	d	file:
GT_SCS0LD	.\gt64xxx.c	94;"	d	file:
GT_SCS10AR	.\gt64xxx.c	70;"	d	file:
GT_SCS10HD	.\gt64xxx.c	49;"	d	file:
GT_SCS10LD	.\gt64xxx.c	48;"	d	file:
GT_SCS1HD	.\gt64xxx.c	97;"	d	file:
GT_SCS1LD	.\gt64xxx.c	96;"	d	file:
GT_SCS2HD	.\gt64xxx.c	99;"	d	file:
GT_SCS2LD	.\gt64xxx.c	98;"	d	file:
GT_SCS32AR	.\gt64xxx.c	71;"	d	file:
GT_SCS32HD	.\gt64xxx.c	51;"	d	file:
GT_SCS32LD	.\gt64xxx.c	50;"	d	file:
GT_SCS3HD	.\gt64xxx.c	101;"	d	file:
GT_SCS3LD	.\gt64xxx.c	100;"	d	file:
GT_SDRAM_ADDRDECODE	.\gt64xxx.c	118;"	d	file:
GT_SDRAM_B0	.\gt64xxx.c	121;"	d	file:
GT_SDRAM_B1	.\gt64xxx.c	122;"	d	file:
GT_SDRAM_B2	.\gt64xxx.c	123;"	d	file:
GT_SDRAM_B3	.\gt64xxx.c	124;"	d	file:
GT_SDRAM_BM	.\gt64xxx.c	117;"	d	file:
GT_SDRAM_CFG	.\gt64xxx.c	115;"	d	file:
GT_SDRAM_OPMODE	.\gt64xxx.c	116;"	d	file:
GT_TC0	.\gt64xxx.c	172;"	d	file:
GT_TC1	.\gt64xxx.c	173;"	d	file:
GT_TC2	.\gt64xxx.c	174;"	d	file:
GT_TC3	.\gt64xxx.c	175;"	d	file:
GT_TC_CONTROL	.\gt64xxx.c	176;"	d	file:
GUEST_OS_BASE	.\vmware_vga.c	229;"	d	file:
GetHubDescriptor	.\usb-hub.c	45;"	d	file:
GetHubStatus	.\usb-hub.c	46;"	d	file:
GetMaxLun	.\usb-msd.c	26;"	d	file:
GetPortStatus	.\usb-hub.c	47;"	d	file:
GrackleState	.\grackle_pci.c	/^typedef PCIHostState GrackleState;$/;"	t	file:
HALF_FRAME_INTR	.\omap.c	489;"	d	file:
HAS_YM3812	.\fmopl.c	35;"	d	file:
HID_GET_IDLE	.\usb-wacom.c	38;"	d	file:
HID_GET_PROTOCOL	.\usb-wacom.c	39;"	d	file:
HID_GET_REPORT	.\usb-wacom.c	37;"	d	file:
HID_SET_IDLE	.\usb-wacom.c	40;"	d	file:
HID_SET_PROTOCOL	.\usb-wacom.c	41;"	d	file:
HUDI	.\sh7750.c	/^	HUDI, GPIOI,$/;"	e	enum:__anon94	file:
HWBLOCK_SHIFT	.\sd.c	239;"	d	file:
HW_BOARDS_H	.\boards.h	4;"	d
HW_FILL_ACCEL	.\vmware_vga.c	32;"	d	file:
HW_MCF_H	.\mcf.h	2;"	d
HW_MIPS_H	.\mips.h	2;"	d
HW_MOUSE_ACCEL	.\vmware_vga.c	33;"	d	file:
HW_PC_H	.\pc.h	2;"	d
HW_RECT_ACCEL	.\vmware_vga.c	31;"	d	file:
HW_REVID	.\rtl8139.c	345;"	d	file:
HW_REVID_MASK	.\rtl8139.c	347;"	d	file:
HasHltClk	.\rtl8139.c	/^    HasHltClk = (1 << 0),$/;"	e	enum:chip_flags	file:
HasLWake	.\rtl8139.c	/^    HasLWake = (1 << 1),$/;"	e	enum:chip_flags	file:
HeathrowPIC	.\heathrow_pic.c	/^typedef struct HeathrowPIC {$/;"	s	file:
HeathrowPIC	.\heathrow_pic.c	/^} HeathrowPIC;$/;"	t	typeref:struct:HeathrowPIC	file:
HeathrowPICS	.\heathrow_pic.c	/^typedef struct HeathrowPICS {$/;"	s	file:
HeathrowPICS	.\heathrow_pic.c	/^} HeathrowPICS;$/;"	t	typeref:struct:HeathrowPICS	file:
HltClk	.\rtl8139.c	/^    HltClk = 0x5B,$/;"	e	enum:RTL8139_registers	file:
I2C_FINISH	.\i2c.h	/^    I2C_FINISH,$/;"	e	enum:i2c_event
I2C_NACK	.\i2c.h	/^    I2C_NACK \/* Masker NACKed a receive byte.  *\/$/;"	e	enum:i2c_event
I2C_START_RECV	.\i2c.h	/^    I2C_START_RECV,$/;"	e	enum:i2c_event
I2C_START_SEND	.\i2c.h	/^    I2C_START_SEND,$/;"	e	enum:i2c_event
I440FXState	.\piix_pci.c	/^typedef PCIHostState I440FXState;$/;"	t	file:
IBMR	.\pxa2xx.c	1287;"	d	file:
IBM_SENSE_CONDITION	.\ide.c	190;"	d	file:
ICCR	.\pxa2xx_pic.c	19;"	d	file:
ICCR0	.\pxa2xx.c	1820;"	d	file:
ICCR1	.\pxa2xx.c	1821;"	d	file:
ICCR2	.\pxa2xx.c	1822;"	d	file:
ICDR	.\pxa2xx.c	1823;"	d	file:
ICFOR	.\pxa2xx.c	1826;"	d	file:
ICFP	.\pxa2xx_pic.c	17;"	d	file:
ICFP2	.\pxa2xx_pic.c	26;"	d	file:
ICHP	.\pxa2xx_pic.c	20;"	d	file:
ICIP	.\pxa2xx_pic.c	14;"	d	file:
ICIP2	.\pxa2xx_pic.c	23;"	d	file:
ICLR	.\pxa2xx_pic.c	16;"	d	file:
ICLR2	.\pxa2xx_pic.c	25;"	d	file:
ICMR	.\pxa2xx_pic.c	15;"	d	file:
ICMR2	.\pxa2xx_pic.c	24;"	d	file:
ICPR	.\pxa2xx_pic.c	18;"	d	file:
ICPR2	.\pxa2xx_pic.c	27;"	d	file:
ICR	.\pxa2xx.c	1289;"	d	file:
ICRC_ERR	.\ide.c	61;"	d	file:
ICSR0	.\pxa2xx.c	1824;"	d	file:
ICSR1	.\pxa2xx.c	1825;"	d	file:
IDBR	.\pxa2xx.c	1288;"	d	file:
IDEState	.\ide.c	/^typedef struct IDEState {$/;"	s	file:
IDEState	.\ide.c	/^} IDEState;$/;"	t	typeref:struct:IDEState	file:
IDE_CMD_DISABLE_IRQ	.\ide.c	70;"	d	file:
IDE_CMD_RESET	.\ide.c	69;"	d	file:
IDE_TYPE_CMD646	.\ide.c	387;"	d	file:
IDE_TYPE_PIIX3	.\ide.c	386;"	d	file:
IDE_TYPE_PIIX4	.\ide.c	388;"	d	file:
ID_ERR	.\ide.c	57;"	d	file:
IER_CLR	.\cuda.c	47;"	d	file:
IER_SET	.\cuda.c	46;"	d	file:
ILLEGAL_COMMAND	.\sd.h	41;"	d
INDEX_STAT	.\ide.c	43;"	d	file:
INITRD_LOAD_ADDR	.\arm_boot.c	16;"	d	file:
INITRD_LOAD_ADDR	.\ppc405_boards.c	41;"	d	file:
INITRD_LOAD_ADDR	.\ppc_mac.h	36;"	d
INITRD_LOAD_ADDR	.\ppc_prep.c	45;"	d	file:
INITRD_LOAD_ADDR	.\sun4m.c	73;"	d	file:
INITRD_LOAD_ADDR	.\sun4u.c	37;"	d	file:
INLINE	.\fmopl.c	34;"	d	file:
INT16	.\fmopl.h	/^typedef signed short	INT16;   \/* signed 16bit   *\/$/;"	t
INT32	.\fmopl.h	/^typedef signed int		INT32;   \/* signed 32bit   *\/$/;"	t
INT8	.\fmopl.h	/^typedef signed char		INT8;    \/* signed  8bit   *\/$/;"	t
INTCTLM_MASK	.\slavio_intctl.c	70;"	d	file:
INTCTLM_MAXADDR	.\slavio_intctl.c	68;"	d	file:
INTCTLM_SIZE	.\slavio_intctl.c	69;"	d	file:
INTCTL_MAXADDR	.\slavio_intctl.c	66;"	d	file:
INTCTL_MAXADDR	.\sun4c_intctl.c	55;"	d	file:
INTCTL_SIZE	.\slavio_intctl.c	67;"	d	file:
INTCTL_SIZE	.\sun4c_intctl.c	56;"	d	file:
INTC_A7	.\sh_intc.c	19;"	d	file:
INTC_ARRAY	.\sh_intc.c	20;"	d	file:
INTC_GROUP	.\sh_intc.h	18;"	d
INTC_MODE_DUAL_CLR	.\sh_intc.c	104;"	d	file:
INTC_MODE_DUAL_SET	.\sh_intc.c	103;"	d	file:
INTC_MODE_ENABLE_REG	.\sh_intc.c	105;"	d	file:
INTC_MODE_IS_PRIO	.\sh_intc.c	107;"	d	file:
INTC_MODE_MASK_REG	.\sh_intc.c	106;"	d	file:
INTC_MODE_NONE	.\sh_intc.c	102;"	d	file:
INTC_VECT	.\sh_intc.h	11;"	d
INTR_BS	.\esp.c	133;"	d	file:
INTR_DC	.\esp.c	134;"	d	file:
INTR_EXTINTA	.\slavio_serial.c	199;"	d	file:
INTR_EXTINTB	.\slavio_serial.c	196;"	d	file:
INTR_FC	.\esp.c	132;"	d	file:
INTR_INTALL	.\slavio_serial.c	123;"	d	file:
INTR_RST	.\esp.c	135;"	d	file:
INTR_RXINT1ST	.\slavio_serial.c	126;"	d	file:
INTR_RXINTA	.\slavio_serial.c	201;"	d	file:
INTR_RXINTALL	.\slavio_serial.c	127;"	d	file:
INTR_RXINTB	.\slavio_serial.c	198;"	d	file:
INTR_RXMODEMSK	.\slavio_serial.c	125;"	d	file:
INTR_TXINT	.\slavio_serial.c	124;"	d	file:
INTR_TXINTA	.\slavio_serial.c	200;"	d	file:
INTR_TXINTB	.\slavio_serial.c	197;"	d	file:
INT_ALLOC	.\smc91c111.c	63;"	d	file:
INT_CLK_OFF	.\pxa2xx_mmci.c	88;"	d	file:
INT_DATA_DONE	.\pxa2xx_mmci.c	84;"	d	file:
INT_DAT_ERR	.\pxa2xx_mmci.c	92;"	d	file:
INT_END_CMD	.\pxa2xx_mmci.c	86;"	d	file:
INT_EPH	.\smc91c111.c	61;"	d	file:
INT_ERCV	.\smc91c111.c	60;"	d	file:
INT_FALLING_EDGE	.\omap.c	147;"	d	file:
INT_LOW_LEVEL	.\omap.c	148;"	d	file:
INT_MASK	.\eepro100.c	128;"	d	file:
INT_MD	.\smc91c111.c	59;"	d	file:
INT_PRG_DONE	.\pxa2xx_mmci.c	85;"	d	file:
INT_RCV	.\smc91c111.c	66;"	d	file:
INT_RD_STALLED	.\pxa2xx_mmci.c	94;"	d	file:
INT_RES_ERR	.\pxa2xx_mmci.c	93;"	d	file:
INT_RXFIFO_REQ	.\pxa2xx_mmci.c	89;"	d	file:
INT_RX_OVRN	.\smc91c111.c	62;"	d	file:
INT_SDIO_INT	.\pxa2xx_mmci.c	95;"	d	file:
INT_SDIO_SACK	.\pxa2xx_mmci.c	96;"	d	file:
INT_STOP_CMD	.\pxa2xx_mmci.c	87;"	d	file:
INT_TINT	.\pxa2xx_mmci.c	91;"	d	file:
INT_TX	.\smc91c111.c	65;"	d	file:
INT_TXFIFO_REQ	.\pxa2xx_mmci.c	90;"	d	file:
INT_TX_EMPTY	.\smc91c111.c	64;"	d	file:
IN_PORT_N	.\wm8750.c	14;"	d	file:
IO	.\ide.c	65;"	d	file:
IOAPICState	.\apic.c	/^struct IOAPICState {$/;"	s	file:
IOAPICState	.\pc.h	/^typedef struct IOAPICState IOAPICState;$/;"	t	typeref:struct:IOAPICState
IOAPIC_NUM_PINS	.\apic.c	59;"	d	file:
IOMMUState	.\iommu.c	/^typedef struct IOMMUState {$/;"	s	file:
IOMMUState	.\iommu.c	/^} IOMMUState;$/;"	t	typeref:struct:IOMMUState	file:
IOMMU_AFAR	.\iommu.c	79;"	d	file:
IOMMU_AFSR	.\iommu.c	62;"	d	file:
IOMMU_AFSR_BE	.\iommu.c	68;"	d	file:
IOMMU_AFSR_ERR	.\iommu.c	63;"	d	file:
IOMMU_AFSR_FAV	.\iommu.c	76;"	d	file:
IOMMU_AFSR_LE	.\iommu.c	64;"	d	file:
IOMMU_AFSR_MASK	.\iommu.c	77;"	d	file:
IOMMU_AFSR_ME	.\iommu.c	74;"	d	file:
IOMMU_AFSR_RD	.\iommu.c	75;"	d	file:
IOMMU_AFSR_RESV	.\iommu.c	72;"	d	file:
IOMMU_AFSR_S	.\iommu.c	71;"	d	file:
IOMMU_AFSR_SIZE	.\iommu.c	70;"	d	file:
IOMMU_AFSR_TO	.\iommu.c	66;"	d	file:
IOMMU_ARBEN	.\iommu.c	94;"	d	file:
IOMMU_ARBEN_MASK	.\iommu.c	95;"	d	file:
IOMMU_BASE	.\iommu.c	53;"	d	file:
IOMMU_BASE_MASK	.\iommu.c	54;"	d	file:
IOMMU_CTRL	.\iommu.c	38;"	d	file:
IOMMU_CTRL_ENAB	.\iommu.c	50;"	d	file:
IOMMU_CTRL_IMPL	.\iommu.c	39;"	d	file:
IOMMU_CTRL_MASK	.\iommu.c	51;"	d	file:
IOMMU_CTRL_RNGE	.\iommu.c	41;"	d	file:
IOMMU_CTRL_VERS	.\iommu.c	40;"	d	file:
IOMMU_MID	.\iommu.c	96;"	d	file:
IOMMU_NREGS	.\iommu.c	37;"	d	file:
IOMMU_PGFLUSH	.\iommu.c	59;"	d	file:
IOMMU_PGFLUSH_MASK	.\iommu.c	60;"	d	file:
IOMMU_RNGE_128MB	.\iommu.c	45;"	d	file:
IOMMU_RNGE_16MB	.\iommu.c	42;"	d	file:
IOMMU_RNGE_1GB	.\iommu.c	48;"	d	file:
IOMMU_RNGE_256MB	.\iommu.c	46;"	d	file:
IOMMU_RNGE_2GB	.\iommu.c	49;"	d	file:
IOMMU_RNGE_32MB	.\iommu.c	43;"	d	file:
IOMMU_RNGE_512MB	.\iommu.c	47;"	d	file:
IOMMU_RNGE_64MB	.\iommu.c	44;"	d	file:
IOMMU_SBCFG0	.\iommu.c	81;"	d	file:
IOMMU_SBCFG1	.\iommu.c	82;"	d	file:
IOMMU_SBCFG2	.\iommu.c	83;"	d	file:
IOMMU_SBCFG3	.\iommu.c	84;"	d	file:
IOMMU_SBCFG_BA16	.\iommu.c	87;"	d	file:
IOMMU_SBCFG_BA8	.\iommu.c	88;"	d	file:
IOMMU_SBCFG_BYPASS	.\iommu.c	89;"	d	file:
IOMMU_SBCFG_MASK	.\iommu.c	92;"	d	file:
IOMMU_SBCFG_SAB30	.\iommu.c	85;"	d	file:
IOMMU_TLBFLUSH	.\iommu.c	56;"	d	file:
IOMMU_TLBFLUSH_MASK	.\iommu.c	57;"	d	file:
IOPTE_CACHE	.\iommu.c	100;"	d	file:
IOPTE_PAGE	.\iommu.c	99;"	d	file:
IOPTE_VALID	.\iommu.c	103;"	d	file:
IOPTE_WAZ	.\iommu.c	104;"	d	file:
IOPTE_WRITE	.\iommu.c	102;"	d	file:
IOPortReadFunc	.\hw.h	/^typedef uint32_t (IOPortReadFunc)(void *opaque, uint32_t address);$/;"	t
IOPortWriteFunc	.\hw.h	/^typedef void (IOPortWriteFunc)(void *opaque, uint32_t address, uint32_t data);$/;"	t
IO_READ_PROTO	.\adlib.c	/^static IO_READ_PROTO(adlib_read)$/;"	f	file:
IO_READ_PROTO	.\adlib.c	55;"	d	file:
IO_READ_PROTO	.\es1370.c	/^IO_READ_PROTO (es1370_readb)$/;"	f
IO_READ_PROTO	.\es1370.c	/^IO_READ_PROTO (es1370_readl)$/;"	f
IO_READ_PROTO	.\es1370.c	/^IO_READ_PROTO (es1370_readw)$/;"	f
IO_READ_PROTO	.\es1370.c	159;"	d	file:
IO_READ_PROTO	.\sb16.c	/^static IO_READ_PROTO (dsp_read)$/;"	f	file:
IO_READ_PROTO	.\sb16.c	/^static IO_READ_PROTO(mixer_read)$/;"	f	file:
IO_READ_PROTO	.\sb16.c	43;"	d	file:
IO_WRITE_PROTO	.\adlib.c	/^static IO_WRITE_PROTO(adlib_write)$/;"	f	file:
IO_WRITE_PROTO	.\adlib.c	57;"	d	file:
IO_WRITE_PROTO	.\es1370.c	/^IO_WRITE_PROTO (es1370_writeb)$/;"	f
IO_WRITE_PROTO	.\es1370.c	/^IO_WRITE_PROTO (es1370_writel)$/;"	f
IO_WRITE_PROTO	.\es1370.c	/^IO_WRITE_PROTO (es1370_writew)$/;"	f
IO_WRITE_PROTO	.\es1370.c	161;"	d	file:
IO_WRITE_PROTO	.\sb16.c	/^static IO_WRITE_PROTO (dsp_write)$/;"	f	file:
IO_WRITE_PROTO	.\sb16.c	/^static IO_WRITE_PROTO(mixer_write_datab)$/;"	f	file:
IO_WRITE_PROTO	.\sb16.c	/^static IO_WRITE_PROTO(mixer_write_indexb)$/;"	f	file:
IO_WRITE_PROTO	.\sb16.c	/^static IO_WRITE_PROTO(mixer_write_indexw)$/;"	f	file:
IO_WRITE_PROTO	.\sb16.c	45;"	d	file:
IPR0	.\pxa2xx_pic.c	21;"	d	file:
IPR31	.\pxa2xx_pic.c	22;"	d	file:
IPR32	.\pxa2xx_pic.c	28;"	d	file:
IPR39	.\pxa2xx_pic.c	29;"	d	file:
IPVP_ACTIVITY	.\openpic.c	/^    IPVP_ACTIVITY = 30,$/;"	e	enum:IPVP_bits	file:
IPVP_MASK	.\openpic.c	/^    IPVP_MASK     = 31,$/;"	e	enum:IPVP_bits	file:
IPVP_MODE	.\openpic.c	/^    IPVP_MODE     = 29,$/;"	e	enum:IPVP_bits	file:
IPVP_POLARITY	.\openpic.c	/^    IPVP_POLARITY = 23,$/;"	e	enum:IPVP_bits	file:
IPVP_PRIORITY	.\openpic.c	155;"	d	file:
IPVP_PRIORITY_MASK	.\openpic.c	154;"	d	file:
IPVP_SENSE	.\openpic.c	/^    IPVP_SENSE    = 22,$/;"	e	enum:IPVP_bits	file:
IPVP_VECTOR	.\openpic.c	157;"	d	file:
IPVP_VECTOR_MASK	.\openpic.c	156;"	d	file:
IPVP_bits	.\openpic.c	/^enum IPVP_bits {$/;"	g	file:
IP_HEADER_LENGTH	.\rtl8139.c	1819;"	d	file:
IP_HEADER_VERSION	.\rtl8139.c	1818;"	d	file:
IP_HEADER_VERSION_4	.\rtl8139.c	1817;"	d	file:
IP_PROTO_TCP	.\rtl8139.c	1850;"	d	file:
IP_PROTO_UDP	.\rtl8139.c	1851;"	d	file:
IRL0	.\sh7750.c	/^	IRL0, IRL1, IRL2, IRL3, \/* only IRLM mode supported *\/$/;"	e	enum:__anon94	file:
IRL1	.\sh7750.c	/^	IRL0, IRL1, IRL2, IRL3, \/* only IRLM mode supported *\/$/;"	e	enum:__anon94	file:
IRL2	.\sh7750.c	/^	IRL0, IRL1, IRL2, IRL3, \/* only IRLM mode supported *\/$/;"	e	enum:__anon94	file:
IRL3	.\sh7750.c	/^	IRL0, IRL1, IRL2, IRL3, \/* only IRLM mode supported *\/$/;"	e	enum:__anon94	file:
IRQ	.\m48t59.c	/^    qemu_irq IRQ;$/;"	m	struct:m48t59_t	file:
IRQHandler	.\fmopl.h	/^	OPL_IRQHANDLER    IRQHandler;		\/* IRQ handler    *\/$/;"	m	struct:fm_opl_f
IRQParam	.\fmopl.h	/^	int IRQParam;						\/* IRQ parameter  *\/$/;"	m	struct:fm_opl_f
IRQState	.\irq.c	/^struct IRQState {$/;"	s	file:
IRQ_DBL0	.\openpic.c	102;"	d	file:
IRQ_DBL0	.\openpic.c	104;"	d	file:
IRQ_ERR	.\openpic.c	98;"	d	file:
IRQ_EXTERNAL	.\openpic.c	/^    IRQ_EXTERNAL = 0x01,$/;"	e	enum:__anon43	file:
IRQ_FE	.\openpic.c	97;"	d	file:
IRQ_IDE	.\openpic.c	/^    IRQ_IDE,$/;"	e	enum:__anon42	file:
IRQ_INTERNAL	.\openpic.c	/^    IRQ_INTERNAL = 0x02,$/;"	e	enum:__anon43	file:
IRQ_IPI0	.\openpic.c	101;"	d	file:
IRQ_IPVP	.\openpic.c	/^    IRQ_IPVP = 0,$/;"	e	enum:__anon42	file:
IRQ_MBX0	.\openpic.c	105;"	d	file:
IRQ_SPECIAL	.\openpic.c	/^    IRQ_SPECIAL  = 0x08,$/;"	e	enum:__anon43	file:
IRQ_TIM0	.\openpic.c	99;"	d	file:
IRQ_TIMER	.\openpic.c	/^    IRQ_TIMER    = 0x04,$/;"	e	enum:__anon43	file:
IRQ_check	.\openpic.c	/^static void IRQ_check (openpic_t *opp, IRQ_queue_t *q)$/;"	f	file:
IRQ_dst_t	.\openpic.c	/^typedef struct IRQ_dst_t {$/;"	s	file:
IRQ_dst_t	.\openpic.c	/^} IRQ_dst_t;$/;"	t	typeref:struct:IRQ_dst_t	file:
IRQ_get_next	.\openpic.c	/^static int IRQ_get_next (openpic_t *opp, IRQ_queue_t *q)$/;"	f	file:
IRQ_local_pipe	.\openpic.c	/^static void IRQ_local_pipe (openpic_t *opp, int n_CPU, int n_IRQ)$/;"	f	file:
IRQ_queue_t	.\openpic.c	/^typedef struct IRQ_queue_t {$/;"	s	file:
IRQ_queue_t	.\openpic.c	/^} IRQ_queue_t;$/;"	t	typeref:struct:IRQ_queue_t	file:
IRQ_resetbit	.\openpic.c	/^static inline void IRQ_resetbit (IRQ_queue_t *q, int n_IRQ)$/;"	f	file:
IRQ_setbit	.\openpic.c	/^static inline void IRQ_setbit (IRQ_queue_t *q, int n_IRQ)$/;"	f	file:
IRQ_src_t	.\openpic.c	/^typedef struct IRQ_src_t {$/;"	s	file:
IRQ_src_t	.\openpic.c	/^} IRQ_src_t;$/;"	t	typeref:struct:IRQ_src_t	file:
IRQ_src_type	.\openpic.c	/^} IRQ_src_type;$/;"	v	typeref:enum:__anon43
IRQ_testbit	.\openpic.c	/^static inline int IRQ_testbit (IRQ_queue_t *q, int n_IRQ)$/;"	f	file:
ISAR	.\pxa2xx.c	1291;"	d	file:
ISR	.\pxa2xx.c	1290;"	d	file:
IVEC_HINOINT	.\slavio_serial.c	191;"	d	file:
IVEC_HIRXINTA	.\slavio_serial.c	192;"	d	file:
IVEC_HIRXINTB	.\slavio_serial.c	193;"	d	file:
IVEC_HITXINTA	.\slavio_serial.c	194;"	d	file:
IVEC_LONOINT	.\slavio_serial.c	187;"	d	file:
IVEC_LORXINTA	.\slavio_serial.c	188;"	d	file:
IVEC_LORXINTB	.\slavio_serial.c	189;"	d	file:
IVEC_LOTXINTA	.\slavio_serial.c	190;"	d	file:
IVEC_TXINTB	.\slavio_serial.c	186;"	d	file:
Incr	.\fmopl.h	/^	UINT32 Incr;	\/* frequency step  :                   *\/$/;"	m	struct:fm_opl_slot
InterfaceOutRequest	.\usb.h	84;"	d
InterfaceRequest	.\usb.h	82;"	d
IntrMask	.\rtl8139.c	/^    IntrMask = 0x3C,$/;"	e	enum:RTL8139_registers	file:
IntrMask	.\rtl8139.c	/^    uint16_t IntrMask;$/;"	m	struct:RTL8139State	file:
IntrMitigate	.\rtl8139.c	/^    IntrMitigate    = 0xE2,    \/* rx\/tx interrupt mitigation control *\/$/;"	e	enum:RTL8139_registers	file:
IntrStatus	.\rtl8139.c	/^    IntrStatus = 0x3E,$/;"	e	enum:RTL8139_registers	file:
IntrStatus	.\rtl8139.c	/^    uint16_t IntrStatus;$/;"	m	struct:RTL8139State	file:
IntrStatusBits	.\rtl8139.c	/^enum IntrStatusBits {$/;"	g	file:
KBDState	.\adb.c	/^typedef struct KBDState {$/;"	s	file:
KBDState	.\adb.c	/^} KBDState;$/;"	t	typeref:struct:KBDState	file:
KBDState	.\pckbd.c	/^typedef struct KBDState {$/;"	s	file:
KBDState	.\pckbd.c	/^} KBDState;$/;"	t	typeref:struct:KBDState	file:
KBD_CCMD_DISABLE_A20	.\pckbd.c	54;"	d	file:
KBD_CCMD_ENABLE_A20	.\pckbd.c	55;"	d	file:
KBD_CCMD_GET_VERSION	.\pckbd.c	39;"	d	file:
KBD_CCMD_KBD_DISABLE	.\pckbd.c	45;"	d	file:
KBD_CCMD_KBD_ENABLE	.\pckbd.c	46;"	d	file:
KBD_CCMD_KBD_TEST	.\pckbd.c	44;"	d	file:
KBD_CCMD_MOUSE_DISABLE	.\pckbd.c	40;"	d	file:
KBD_CCMD_MOUSE_ENABLE	.\pckbd.c	41;"	d	file:
KBD_CCMD_READ_INPORT	.\pckbd.c	47;"	d	file:
KBD_CCMD_READ_MODE	.\pckbd.c	37;"	d	file:
KBD_CCMD_READ_OUTPORT	.\pckbd.c	48;"	d	file:
KBD_CCMD_RESET	.\pckbd.c	56;"	d	file:
KBD_CCMD_SELF_TEST	.\pckbd.c	43;"	d	file:
KBD_CCMD_TEST_MOUSE	.\pckbd.c	42;"	d	file:
KBD_CCMD_WRITE_AUX_OBUF	.\pckbd.c	51;"	d	file:
KBD_CCMD_WRITE_MODE	.\pckbd.c	38;"	d	file:
KBD_CCMD_WRITE_MOUSE	.\pckbd.c	53;"	d	file:
KBD_CCMD_WRITE_OBUF	.\pckbd.c	50;"	d	file:
KBD_CCMD_WRITE_OUTPORT	.\pckbd.c	49;"	d	file:
KBD_CMD_ECHO	.\pckbd.c	60;"	d	file:
KBD_CMD_ECHO	.\ps2.c	36;"	d	file:
KBD_CMD_ENABLE	.\pckbd.c	63;"	d	file:
KBD_CMD_ENABLE	.\ps2.c	39;"	d	file:
KBD_CMD_GET_ID	.\pckbd.c	61;"	d	file:
KBD_CMD_GET_ID	.\ps2.c	37;"	d	file:
KBD_CMD_RESET	.\pckbd.c	66;"	d	file:
KBD_CMD_RESET	.\ps2.c	42;"	d	file:
KBD_CMD_RESET_DISABLE	.\pckbd.c	64;"	d	file:
KBD_CMD_RESET_DISABLE	.\ps2.c	40;"	d	file:
KBD_CMD_RESET_ENABLE	.\pckbd.c	65;"	d	file:
KBD_CMD_RESET_ENABLE	.\ps2.c	41;"	d	file:
KBD_CMD_SET_LEDS	.\pckbd.c	59;"	d	file:
KBD_CMD_SET_LEDS	.\ps2.c	35;"	d	file:
KBD_CMD_SET_RATE	.\pckbd.c	62;"	d	file:
KBD_CMD_SET_RATE	.\ps2.c	38;"	d	file:
KBD_DPRINTF	.\slavio_serial.c	63;"	d	file:
KBD_DPRINTF	.\slavio_serial.c	66;"	d	file:
KBD_MODE_DISABLE_KBD	.\pckbd.c	88;"	d	file:
KBD_MODE_DISABLE_MOUSE	.\pckbd.c	89;"	d	file:
KBD_MODE_KBD_INT	.\pckbd.c	84;"	d	file:
KBD_MODE_KCC	.\pckbd.c	90;"	d	file:
KBD_MODE_MOUSE_INT	.\pckbd.c	85;"	d	file:
KBD_MODE_NO_KEYLOCK	.\pckbd.c	87;"	d	file:
KBD_MODE_RFU	.\pckbd.c	91;"	d	file:
KBD_MODE_SYS	.\pckbd.c	86;"	d	file:
KBD_PENDING_AUX	.\pckbd.c	118;"	d	file:
KBD_PENDING_KBD	.\pckbd.c	117;"	d	file:
KBD_QUEUE_SIZE	.\pckbd.c	115;"	d	file:
KBD_REPLY_ACK	.\pckbd.c	70;"	d	file:
KBD_REPLY_ACK	.\ps2.c	46;"	d	file:
KBD_REPLY_POR	.\pckbd.c	69;"	d	file:
KBD_REPLY_POR	.\ps2.c	45;"	d	file:
KBD_REPLY_RESEND	.\pckbd.c	71;"	d	file:
KBD_REPLY_RESEND	.\ps2.c	47;"	d	file:
KBD_STAT_CMD	.\pckbd.c	77;"	d	file:
KBD_STAT_GTO	.\pckbd.c	80;"	d	file:
KBD_STAT_IBF	.\pckbd.c	75;"	d	file:
KBD_STAT_MOUSE_OBF	.\pckbd.c	79;"	d	file:
KBD_STAT_OBF	.\pckbd.c	74;"	d	file:
KBD_STAT_PERR	.\pckbd.c	81;"	d	file:
KBD_STAT_SELFTEST	.\pckbd.c	76;"	d	file:
KBD_STAT_UNLOCKED	.\pckbd.c	78;"	d	file:
KERNEL_ARGS_ADDR	.\arm_boot.c	14;"	d	file:
KERNEL_LOAD_ADDR	.\an5206.c	14;"	d	file:
KERNEL_LOAD_ADDR	.\arm_boot.c	15;"	d	file:
KERNEL_LOAD_ADDR	.\dummy_m68k.c	13;"	d	file:
KERNEL_LOAD_ADDR	.\ppc405_boards.c	40;"	d	file:
KERNEL_LOAD_ADDR	.\ppc_mac.h	35;"	d
KERNEL_LOAD_ADDR	.\ppc_prep.c	44;"	d	file:
KERNEL_LOAD_ADDR	.\sun4m.c	71;"	d	file:
KERNEL_LOAD_ADDR	.\sun4u.c	35;"	d	file:
KPAS	.\pxa2xx_keypad.c	22;"	d	file:
KPASMKP0	.\pxa2xx_keypad.c	23;"	d	file:
KPASMKP1	.\pxa2xx_keypad.c	25;"	d	file:
KPASMKP2	.\pxa2xx_keypad.c	27;"	d	file:
KPASMKP3	.\pxa2xx_keypad.c	29;"	d	file:
KPASMKPx_MKC	.\pxa2xx_keypad.c	77;"	d	file:
KPASMKPx_SO	.\pxa2xx_keypad.c	74;"	d	file:
KPAS_SO	.\pxa2xx_keypad.c	73;"	d	file:
KPC	.\pxa2xx_keypad.c	18;"	d	file:
KPC_AS	.\pxa2xx_keypad.c	35;"	d	file:
KPC_ASACT	.\pxa2xx_keypad.c	36;"	d	file:
KPC_DE	.\pxa2xx_keypad.c	54;"	d	file:
KPC_DI	.\pxa2xx_keypad.c	50;"	d	file:
KPC_DIE	.\pxa2xx_keypad.c	55;"	d	file:
KPC_DK_DEB_SEL	.\pxa2xx_keypad.c	49;"	d	file:
KPC_IMKP	.\pxa2xx_keypad.c	38;"	d	file:
KPC_ME	.\pxa2xx_keypad.c	47;"	d	file:
KPC_MI	.\pxa2xx_keypad.c	37;"	d	file:
KPC_MIE	.\pxa2xx_keypad.c	48;"	d	file:
KPC_MS0	.\pxa2xx_keypad.c	46;"	d	file:
KPC_MS1	.\pxa2xx_keypad.c	45;"	d	file:
KPC_MS2	.\pxa2xx_keypad.c	44;"	d	file:
KPC_MS3	.\pxa2xx_keypad.c	43;"	d	file:
KPC_MS4	.\pxa2xx_keypad.c	42;"	d	file:
KPC_MS5	.\pxa2xx_keypad.c	41;"	d	file:
KPC_MS6	.\pxa2xx_keypad.c	40;"	d	file:
KPC_MS7	.\pxa2xx_keypad.c	39;"	d	file:
KPC_REE0	.\pxa2xx_keypad.c	53;"	d	file:
KPC_REE1	.\pxa2xx_keypad.c	52;"	d	file:
KPC_RE_ZERO_DEB	.\pxa2xx_keypad.c	51;"	d	file:
KPDK	.\pxa2xx_keypad.c	19;"	d	file:
KPDK_DK0	.\pxa2xx_keypad.c	65;"	d	file:
KPDK_DK1	.\pxa2xx_keypad.c	64;"	d	file:
KPDK_DK2	.\pxa2xx_keypad.c	63;"	d	file:
KPDK_DK3	.\pxa2xx_keypad.c	62;"	d	file:
KPDK_DK4	.\pxa2xx_keypad.c	61;"	d	file:
KPDK_DK5	.\pxa2xx_keypad.c	60;"	d	file:
KPDK_DK6	.\pxa2xx_keypad.c	59;"	d	file:
KPDK_DK7	.\pxa2xx_keypad.c	58;"	d	file:
KPDK_DKP	.\pxa2xx_keypad.c	57;"	d	file:
KPKDI	.\pxa2xx_keypad.c	31;"	d	file:
KPMK	.\pxa2xx_keypad.c	21;"	d	file:
KPMK_MKP	.\pxa2xx_keypad.c	72;"	d	file:
KPREC	.\pxa2xx_keypad.c	20;"	d	file:
KPREC_OF0	.\pxa2xx_keypad.c	69;"	d	file:
KPREC_OF1	.\pxa2xx_keypad.c	67;"	d	file:
KPREC_UF0	.\pxa2xx_keypad.c	70;"	d	file:
KPREC_UF1	.\pxa2xx_keypad.c	68;"	d	file:
KSL_TABLE	.\fmopl.c	/^static const UINT32 KSL_TABLE[8*16]=$/;"	v	file:
KSR	.\fmopl.h	/^	UINT8  KSR;		\/* key scale rate  :(shift down bit)   *\/$/;"	m	struct:fm_opl_slot
KiB	.\eepro100.c	74;"	d	file:
LAST_FRAME_INTR	.\omap.c	491;"	d	file:
LCCR0	.\pxa2xx_lcd.c	80;"	d	file:
LCCR0_BSM0	.\pxa2xx_lcd.c	133;"	d	file:
LCCR0_CMDIM	.\pxa2xx_lcd.c	137;"	d	file:
LCCR0_CMS	.\pxa2xx_lcd.c	122;"	d	file:
LCCR0_DIS	.\pxa2xx_lcd.c	130;"	d	file:
LCCR0_DPD	.\pxa2xx_lcd.c	129;"	d	file:
LCCR0_ENB	.\pxa2xx_lcd.c	121;"	d	file:
LCCR0_EOFM0	.\pxa2xx_lcd.c	127;"	d	file:
LCCR0_IUM	.\pxa2xx_lcd.c	126;"	d	file:
LCCR0_LCDT	.\pxa2xx_lcd.c	135;"	d	file:
LCCR0_LDDALT	.\pxa2xx_lcd.c	139;"	d	file:
LCCR0_LDM	.\pxa2xx_lcd.c	124;"	d	file:
LCCR0_OUC	.\pxa2xx_lcd.c	138;"	d	file:
LCCR0_OUM	.\pxa2xx_lcd.c	134;"	d	file:
LCCR0_PAS	.\pxa2xx_lcd.c	128;"	d	file:
LCCR0_PDD	.\pxa2xx_lcd.c	132;"	d	file:
LCCR0_QDM	.\pxa2xx_lcd.c	131;"	d	file:
LCCR0_RDSTM	.\pxa2xx_lcd.c	136;"	d	file:
LCCR0_SDS	.\pxa2xx_lcd.c	123;"	d	file:
LCCR0_SOFM0	.\pxa2xx_lcd.c	125;"	d	file:
LCCR1	.\pxa2xx_lcd.c	81;"	d	file:
LCCR1_PPL	.\pxa2xx_lcd.c	140;"	d	file:
LCCR2	.\pxa2xx_lcd.c	82;"	d	file:
LCCR2_LPP	.\pxa2xx_lcd.c	141;"	d	file:
LCCR3	.\pxa2xx_lcd.c	83;"	d	file:
LCCR3_API	.\pxa2xx_lcd.c	142;"	d	file:
LCCR3_BPP	.\pxa2xx_lcd.c	143;"	d	file:
LCCR3_PDFOR	.\pxa2xx_lcd.c	144;"	d	file:
LCCR4	.\pxa2xx_lcd.c	84;"	d	file:
LCCR4_K1	.\pxa2xx_lcd.c	145;"	d	file:
LCCR4_K2	.\pxa2xx_lcd.c	146;"	d	file:
LCCR4_K3	.\pxa2xx_lcd.c	147;"	d	file:
LCCR4_PALFOR	.\pxa2xx_lcd.c	148;"	d	file:
LCCR5	.\pxa2xx_lcd.c	85;"	d	file:
LCCR5_BSM	.\pxa2xx_lcd.c	151;"	d	file:
LCCR5_EOFM	.\pxa2xx_lcd.c	150;"	d	file:
LCCR5_IUM	.\pxa2xx_lcd.c	152;"	d	file:
LCCR5_SOFM	.\pxa2xx_lcd.c	149;"	d	file:
LCDBSCNTR	.\pxa2xx.c	481;"	d	file:
LCDTG_DUTYCTRL	.\spitz.c	759;"	d	file:
LCDTG_GPOR3	.\spitz.c	762;"	d	file:
LCDTG_PHACTRL	.\spitz.c	758;"	d	file:
LCDTG_PICTRL	.\spitz.c	763;"	d	file:
LCDTG_POLCTRL	.\spitz.c	764;"	d	file:
LCDTG_POWERREG0	.\spitz.c	760;"	d	file:
LCDTG_POWERREG1	.\spitz.c	761;"	d	file:
LCDTG_RESCTL	.\spitz.c	757;"	d	file:
LCSR0	.\pxa2xx_lcd.c	96;"	d	file:
LCSR0_ABC	.\pxa2xx_lcd.c	161;"	d	file:
LCSR0_BER	.\pxa2xx_lcd.c	160;"	d	file:
LCSR0_BERCH	.\pxa2xx_lcd.c	171;"	d	file:
LCSR0_BS0	.\pxa2xx_lcd.c	167;"	d	file:
LCSR0_CMDINT	.\pxa2xx_lcd.c	170;"	d	file:
LCSR0_EOF0	.\pxa2xx_lcd.c	166;"	d	file:
LCSR0_IU0	.\pxa2xx_lcd.c	162;"	d	file:
LCSR0_IU1	.\pxa2xx_lcd.c	163;"	d	file:
LCSR0_LDD	.\pxa2xx_lcd.c	158;"	d	file:
LCSR0_OU	.\pxa2xx_lcd.c	164;"	d	file:
LCSR0_QD	.\pxa2xx_lcd.c	165;"	d	file:
LCSR0_RDST	.\pxa2xx_lcd.c	169;"	d	file:
LCSR0_SINT	.\pxa2xx_lcd.c	168;"	d	file:
LCSR0_SOF0	.\pxa2xx_lcd.c	159;"	d	file:
LCSR1	.\pxa2xx_lcd.c	95;"	d	file:
LCSR1_BS	.\pxa2xx_lcd.c	174;"	d	file:
LCSR1_EOF	.\pxa2xx_lcd.c	173;"	d	file:
LCSR1_IU	.\pxa2xx_lcd.c	175;"	d	file:
LCSR1_SOF	.\pxa2xx_lcd.c	172;"	d	file:
LDCMD_EOFINT	.\pxa2xx_lcd.c	177;"	d	file:
LDCMD_LENGTH	.\pxa2xx_lcd.c	176;"	d	file:
LDCMD_PAL	.\pxa2xx_lcd.c	179;"	d	file:
LDCMD_SOFINT	.\pxa2xx_lcd.c	178;"	d	file:
LED_MAXADDR	.\slavio_misc.c	59;"	d	file:
LED_SIZE	.\slavio_misc.c	60;"	d	file:
LENOFA	.\dma.c	40;"	d	file:
LENOFA	.\sb16.c	30;"	d	file:
LIIDR	.\pxa2xx_lcd.c	97;"	d	file:
LIMIT_TO_PERIODS	.\slavio_timer.c	88;"	d	file:
LNC_POLYNOMIAL	.\pcnet.c	567;"	d	file:
LNC_POLYNOMIAL	.\pcnet.c	579;"	d	file:
LOAD_UNLOAD	.\scsi-generic.c	47;"	d	file:
LOCK_UNLOCK_FAILED	.\sd.h	39;"	d
LOCK_VALUE	.\arm_sysctl.c	14;"	d	file:
LOG	.\fmopl.c	243;"	d	file:
LOG_ERR	.\fmopl.c	235;"	d	file:
LOG_INF	.\fmopl.c	237;"	d	file:
LOG_LEVEL	.\fmopl.c	240;"	d	file:
LOG_WAR	.\fmopl.c	236;"	d	file:
LP_OPTIONS	.\nand.c	163;"	d	file:
LP_OPTIONS16	.\nand.c	164;"	d	file:
LSB	.\pl110_template.h	232;"	d
LSB	.\pl110_template.h	262;"	d
LSB	.\pl110_template.h	275;"	d
LSB	.\pl110_template.h	292;"	d
LSIState	.\lsi53c895a.c	/^} LSIState;$/;"	t	typeref:struct:__anon25	file:
LSI_CCNTL0_DILS	.\lsi53c895a.c	140;"	d	file:
LSI_CCNTL0_DISFC	.\lsi53c895a.c	141;"	d	file:
LSI_CCNTL0_ENNDJ	.\lsi53c895a.c	142;"	d	file:
LSI_CCNTL0_ENPMJ	.\lsi53c895a.c	144;"	d	file:
LSI_CCNTL0_PMJCTL	.\lsi53c895a.c	143;"	d	file:
LSI_CTEST2_CIO	.\lsi53c895a.c	129;"	d	file:
LSI_CTEST2_CM	.\lsi53c895a.c	128;"	d	file:
LSI_CTEST2_DACK	.\lsi53c895a.c	124;"	d	file:
LSI_CTEST2_DDIR	.\lsi53c895a.c	131;"	d	file:
LSI_CTEST2_DREQ	.\lsi53c895a.c	125;"	d	file:
LSI_CTEST2_PCICIE	.\lsi53c895a.c	127;"	d	file:
LSI_CTEST2_SIGP	.\lsi53c895a.c	130;"	d	file:
LSI_CTEST2_TEOP	.\lsi53c895a.c	126;"	d	file:
LSI_CTEST5_ADCK	.\lsi53c895a.c	138;"	d	file:
LSI_CTEST5_BBCK	.\lsi53c895a.c	137;"	d	file:
LSI_CTEST5_BL2	.\lsi53c895a.c	133;"	d	file:
LSI_CTEST5_DDIR	.\lsi53c895a.c	134;"	d	file:
LSI_CTEST5_DFSN	.\lsi53c895a.c	136;"	d	file:
LSI_CTEST5_MASR	.\lsi53c895a.c	135;"	d	file:
LSI_DCNTL_CLSE	.\lsi53c895a.c	115;"	d	file:
LSI_DCNTL_COM	.\lsi53c895a.c	108;"	d	file:
LSI_DCNTL_IRQD	.\lsi53c895a.c	109;"	d	file:
LSI_DCNTL_IRQM	.\lsi53c895a.c	111;"	d	file:
LSI_DCNTL_PFEN	.\lsi53c895a.c	113;"	d	file:
LSI_DCNTL_PFF	.\lsi53c895a.c	114;"	d	file:
LSI_DCNTL_SSM	.\lsi53c895a.c	112;"	d	file:
LSI_DCNTL_STD	.\lsi53c895a.c	110;"	d	file:
LSI_DMODE_BOF	.\lsi53c895a.c	118;"	d	file:
LSI_DMODE_DIOM	.\lsi53c895a.c	121;"	d	file:
LSI_DMODE_ERL	.\lsi53c895a.c	120;"	d	file:
LSI_DMODE_ERMP	.\lsi53c895a.c	119;"	d	file:
LSI_DMODE_MAN	.\lsi53c895a.c	117;"	d	file:
LSI_DMODE_SIOM	.\lsi53c895a.c	122;"	d	file:
LSI_DSTAT_ABRT	.\lsi53c895a.c	103;"	d	file:
LSI_DSTAT_BF	.\lsi53c895a.c	104;"	d	file:
LSI_DSTAT_DFE	.\lsi53c895a.c	106;"	d	file:
LSI_DSTAT_IID	.\lsi53c895a.c	100;"	d	file:
LSI_DSTAT_MDPE	.\lsi53c895a.c	105;"	d	file:
LSI_DSTAT_SIR	.\lsi53c895a.c	101;"	d	file:
LSI_DSTAT_SSI	.\lsi53c895a.c	102;"	d	file:
LSI_ISTAT0_ABRT	.\lsi53c895a.c	62;"	d	file:
LSI_ISTAT0_CON	.\lsi53c895a.c	58;"	d	file:
LSI_ISTAT0_DIP	.\lsi53c895a.c	55;"	d	file:
LSI_ISTAT0_INTF	.\lsi53c895a.c	57;"	d	file:
LSI_ISTAT0_SEM	.\lsi53c895a.c	59;"	d	file:
LSI_ISTAT0_SIGP	.\lsi53c895a.c	60;"	d	file:
LSI_ISTAT0_SIP	.\lsi53c895a.c	56;"	d	file:
LSI_ISTAT0_SRST	.\lsi53c895a.c	61;"	d	file:
LSI_ISTAT1_FLSH	.\lsi53c895a.c	66;"	d	file:
LSI_ISTAT1_SI	.\lsi53c895a.c	64;"	d	file:
LSI_ISTAT1_SRUN	.\lsi53c895a.c	65;"	d	file:
LSI_MAX_DEVS	.\pci.h	100;"	d
LSI_MAX_MSGIN_LEN	.\lsi53c895a.c	155;"	d	file:
LSI_SCNTL0_AAP	.\lsi53c895a.c	32;"	d	file:
LSI_SCNTL0_EPC	.\lsi53c895a.c	33;"	d	file:
LSI_SCNTL0_START	.\lsi53c895a.c	35;"	d	file:
LSI_SCNTL0_TRG	.\lsi53c895a.c	31;"	d	file:
LSI_SCNTL0_WATN	.\lsi53c895a.c	34;"	d	file:
LSI_SCNTL1_ADB	.\lsi53c895a.c	43;"	d	file:
LSI_SCNTL1_AESP	.\lsi53c895a.c	39;"	d	file:
LSI_SCNTL1_CON	.\lsi53c895a.c	41;"	d	file:
LSI_SCNTL1_DHP	.\lsi53c895a.c	42;"	d	file:
LSI_SCNTL1_EXC	.\lsi53c895a.c	44;"	d	file:
LSI_SCNTL1_IARB	.\lsi53c895a.c	38;"	d	file:
LSI_SCNTL1_RST	.\lsi53c895a.c	40;"	d	file:
LSI_SCNTL1_SST	.\lsi53c895a.c	37;"	d	file:
LSI_SCNTL2_CHM	.\lsi53c895a.c	52;"	d	file:
LSI_SCNTL2_SDU	.\lsi53c895a.c	53;"	d	file:
LSI_SCNTL2_SLPHBEN	.\lsi53c895a.c	50;"	d	file:
LSI_SCNTL2_SLPMD	.\lsi53c895a.c	51;"	d	file:
LSI_SCNTL2_VUE0	.\lsi53c895a.c	47;"	d	file:
LSI_SCNTL2_VUE1	.\lsi53c895a.c	48;"	d	file:
LSI_SCNTL2_WSR	.\lsi53c895a.c	46;"	d	file:
LSI_SCNTL2_WSS	.\lsi53c895a.c	49;"	d	file:
LSI_SIST0_CMP	.\lsi53c895a.c	83;"	d	file:
LSI_SIST0_MA	.\lsi53c895a.c	84;"	d	file:
LSI_SIST0_PAR	.\lsi53c895a.c	77;"	d	file:
LSI_SIST0_RSL	.\lsi53c895a.c	81;"	d	file:
LSI_SIST0_RST	.\lsi53c895a.c	78;"	d	file:
LSI_SIST0_SEL	.\lsi53c895a.c	82;"	d	file:
LSI_SIST0_SGE	.\lsi53c895a.c	80;"	d	file:
LSI_SIST0_UDC	.\lsi53c895a.c	79;"	d	file:
LSI_SIST1_GEN	.\lsi53c895a.c	87;"	d	file:
LSI_SIST1_HTH	.\lsi53c895a.c	86;"	d	file:
LSI_SIST1_SBMC	.\lsi53c895a.c	89;"	d	file:
LSI_SIST1_STO	.\lsi53c895a.c	88;"	d	file:
LSI_SOCL_ACK	.\lsi53c895a.c	97;"	d	file:
LSI_SOCL_ATN	.\lsi53c895a.c	94;"	d	file:
LSI_SOCL_BSY	.\lsi53c895a.c	96;"	d	file:
LSI_SOCL_CD	.\lsi53c895a.c	92;"	d	file:
LSI_SOCL_IO	.\lsi53c895a.c	91;"	d	file:
LSI_SOCL_MSG	.\lsi53c895a.c	93;"	d	file:
LSI_SOCL_REQ	.\lsi53c895a.c	98;"	d	file:
LSI_SOCL_SEL	.\lsi53c895a.c	95;"	d	file:
LSI_SSTAT0_AIP	.\lsi53c895a.c	72;"	d	file:
LSI_SSTAT0_ILF	.\lsi53c895a.c	75;"	d	file:
LSI_SSTAT0_LOA	.\lsi53c895a.c	71;"	d	file:
LSI_SSTAT0_OLF	.\lsi53c895a.c	73;"	d	file:
LSI_SSTAT0_ORF	.\lsi53c895a.c	74;"	d	file:
LSI_SSTAT0_RST	.\lsi53c895a.c	69;"	d	file:
LSI_SSTAT0_SDP0	.\lsi53c895a.c	68;"	d	file:
LSI_SSTAT0_WOA	.\lsi53c895a.c	70;"	d	file:
LSI_TAG_VALID	.\lsi53c895a.c	158;"	d	file:
LWAKE	.\rtl8139.c	/^    LWAKE = 0x10,        \/* not on 8139, 8139A *\/$/;"	e	enum:Config1Bits	file:
LWPTN	.\rtl8139.c	/^    LWPTN = (1 << 2),    \/* not on 8139, 8139A *\/$/;"	e	enum:Config4Bits	file:
L_ONLY	.\wm8750.c	200;"	d	file:
LedState	.\jazz_led.c	/^typedef struct LedState {$/;"	s	file:
LedState	.\jazz_led.c	/^} LedState;$/;"	t	typeref:struct:LedState	file:
Limit	.\fmopl.c	/^INLINE int Limit( int val, int max, int min ) {$/;"	f
LoadStateHandler	.\hw.h	/^typedef int LoadStateHandler(QEMUFile *f, void *opaque, int version_id);$/;"	t
MAC0	.\rtl8139.c	/^    MAC0 = 0,        \/* Ethernet hardware address. *\/$/;"	e	enum:RTL8139_registers	file:
MACIIC_PACKET	.\cuda.c	62;"	d	file:
MAGIC_CHG	.\spitz.c	1139;"	d	file:
MAGNIFY	.\ssd0303.c	31;"	d	file:
MAGNIFY	.\ssd0323.c	31;"	d	file:
MAL0_CFG	.\ppc405_uc.c	/^    MAL0_CFG      = 0x180,$/;"	e	enum:__anon68	file:
MAL0_ESR	.\ppc405_uc.c	/^    MAL0_ESR      = 0x181,$/;"	e	enum:__anon68	file:
MAL0_IER	.\ppc405_uc.c	/^    MAL0_IER      = 0x182,$/;"	e	enum:__anon68	file:
MAL0_RCBS0	.\ppc405_uc.c	/^    MAL0_RCBS0    = 0x1E0,$/;"	e	enum:__anon68	file:
MAL0_RCBS1	.\ppc405_uc.c	/^    MAL0_RCBS1    = 0x1E1,$/;"	e	enum:__anon68	file:
MAL0_RXCARR	.\ppc405_uc.c	/^    MAL0_RXCARR   = 0x191,$/;"	e	enum:__anon68	file:
MAL0_RXCASR	.\ppc405_uc.c	/^    MAL0_RXCASR   = 0x190,$/;"	e	enum:__anon68	file:
MAL0_RXCTP0R	.\ppc405_uc.c	/^    MAL0_RXCTP0R  = 0x1C0,$/;"	e	enum:__anon68	file:
MAL0_RXCTP1R	.\ppc405_uc.c	/^    MAL0_RXCTP1R  = 0x1C1,$/;"	e	enum:__anon68	file:
MAL0_RXDEIR	.\ppc405_uc.c	/^    MAL0_RXDEIR   = 0x193,$/;"	e	enum:__anon68	file:
MAL0_RXEOBISR	.\ppc405_uc.c	/^    MAL0_RXEOBISR = 0x192,$/;"	e	enum:__anon68	file:
MAL0_TXCARR	.\ppc405_uc.c	/^    MAL0_TXCARR   = 0x185,$/;"	e	enum:__anon68	file:
MAL0_TXCASR	.\ppc405_uc.c	/^    MAL0_TXCASR   = 0x184,$/;"	e	enum:__anon68	file:
MAL0_TXCTP0R	.\ppc405_uc.c	/^    MAL0_TXCTP0R  = 0x1A0,$/;"	e	enum:__anon68	file:
MAL0_TXCTP1R	.\ppc405_uc.c	/^    MAL0_TXCTP1R  = 0x1A1,$/;"	e	enum:__anon68	file:
MAL0_TXCTP2R	.\ppc405_uc.c	/^    MAL0_TXCTP2R  = 0x1A2,$/;"	e	enum:__anon68	file:
MAL0_TXCTP3R	.\ppc405_uc.c	/^    MAL0_TXCTP3R  = 0x1A3,$/;"	e	enum:__anon68	file:
MAL0_TXDEIR	.\ppc405_uc.c	/^    MAL0_TXDEIR   = 0x187,$/;"	e	enum:__anon68	file:
MAL0_TXEOBISR	.\ppc405_uc.c	/^    MAL0_TXEOBISR = 0x186,$/;"	e	enum:__anon68	file:
MAR0	.\rtl8139.c	/^    MAR0 = 8,        \/* Multicast filter. *\/$/;"	e	enum:RTL8139_registers	file:
MARK_ERR	.\ide.c	53;"	d	file:
MASTER_DISABLE	.\slavio_intctl.c	72;"	d	file:
MASTER_IRQ_MASK	.\slavio_intctl.c	71;"	d	file:
MAX1111_ACIN_VOLT	.\spitz.c	874;"	d	file:
MAX1111_BATT_TEMP	.\spitz.c	873;"	d	file:
MAX1111_BATT_VOLT	.\spitz.c	872;"	d	file:
MAXX	.\tcx.c	29;"	d	file:
MAXY	.\tcx.c	30;"	d	file:
MAX_ADB_DEVICES	.\ppc_mac.h	73;"	d
MAX_APICS	.\apic.c	65;"	d	file:
MAX_APIC_WORDS	.\apic.c	66;"	d	file:
MAX_CPU	.\openpic.c	53;"	d	file:
MAX_CPU	.\openpic.c	68;"	d	file:
MAX_CPUS	.\ppc_mac.h	29;"	d
MAX_CPUS	.\ppc_prep.c	39;"	d	file:
MAX_CPUS	.\sbi.c	37;"	d	file:
MAX_CPUS	.\slavio_intctl.c	49;"	d	file:
MAX_CPUS	.\slavio_timer.c	52;"	d	file:
MAX_CPUS	.\sun4m.c	78;"	d	file:
MAX_DBL	.\openpic.c	55;"	d	file:
MAX_DBL	.\openpic.c	71;"	d	file:
MAX_ETH_FRAME_SIZE	.\eepro100.c	92;"	d	file:
MAX_ETH_FRAME_SIZE	.\mipsnet.c	26;"	d	file:
MAX_ETH_FRAME_SIZE	.\ne2000.c	32;"	d	file:
MAX_FD	.\fdc.h	2;"	d
MAX_FD	.\mips_pica61.c	48;"	d	file:
MAX_IDE_BUS	.\mips_malta.c	60;"	d	file:
MAX_IDE_BUS	.\mips_pica61.c	47;"	d	file:
MAX_IDE_BUS	.\mips_r4k.c	28;"	d	file:
MAX_IDE_BUS	.\pc.c	45;"	d	file:
MAX_IDE_BUS	.\ppc_chrp.c	35;"	d	file:
MAX_IDE_BUS	.\ppc_oldworld.c	36;"	d	file:
MAX_IDE_BUS	.\ppc_prep.c	41;"	d	file:
MAX_IDE_BUS	.\sun4u.c	46;"	d	file:
MAX_IOUNITS	.\sun4m.c	102;"	d	file:
MAX_IPI	.\openpic.c	59;"	d	file:
MAX_IPI	.\openpic.c	75;"	d	file:
MAX_IRQ	.\openpic.c	54;"	d	file:
MAX_IRQ	.\openpic.c	69;"	d	file:
MAX_MBX	.\openpic.c	56;"	d	file:
MAX_MBX	.\openpic.c	72;"	d	file:
MAX_MULT_SECTORS	.\ide.c	203;"	d	file:
MAX_OOB	.\nand.c	46;"	d	file:
MAX_PAGE	.\nand.c	45;"	d	file:
MAX_PILS	.\slavio_intctl.c	50;"	d	file:
MAX_PILS	.\sun4c_intctl.c	42;"	d	file:
MAX_PILS	.\sun4m.c	79;"	d	file:
MAX_PORTS	.\usb-hub.c	29;"	d	file:
MAX_TMR	.\openpic.c	57;"	d	file:
MAX_TMR	.\openpic.c	73;"	d	file:
MAX_UINT	.\scsi-generic.c	58;"	d	file:
MCATT0	.\pxa2xx.c	472;"	d	file:
MCATT1	.\pxa2xx.c	473;"	d	file:
MCF_UART_BC0	.\mcf_uart.c	46;"	d	file:
MCF_UART_BC1	.\mcf_uart.c	47;"	d	file:
MCF_UART_COSINT	.\mcf_uart.c	43;"	d	file:
MCF_UART_DBINT	.\mcf_uart.c	42;"	d	file:
MCF_UART_ERR	.\mcf_uart.c	51;"	d	file:
MCF_UART_FE	.\mcf_uart.c	36;"	d	file:
MCF_UART_FFULL	.\mcf_uart.c	31;"	d	file:
MCF_UART_OE	.\mcf_uart.c	34;"	d	file:
MCF_UART_PE	.\mcf_uart.c	35;"	d	file:
MCF_UART_PM0	.\mcf_uart.c	49;"	d	file:
MCF_UART_PM1	.\mcf_uart.c	50;"	d	file:
MCF_UART_PT	.\mcf_uart.c	48;"	d	file:
MCF_UART_RB	.\mcf_uart.c	37;"	d	file:
MCF_UART_RxINT	.\mcf_uart.c	41;"	d	file:
MCF_UART_RxIRQ	.\mcf_uart.c	52;"	d	file:
MCF_UART_RxRDY	.\mcf_uart.c	30;"	d	file:
MCF_UART_RxRTS	.\mcf_uart.c	53;"	d	file:
MCF_UART_TxEMP	.\mcf_uart.c	33;"	d	file:
MCF_UART_TxINT	.\mcf_uart.c	40;"	d	file:
MCF_UART_TxRDY	.\mcf_uart.c	32;"	d	file:
MCIO0	.\pxa2xx.c	474;"	d	file:
MCIO1	.\pxa2xx.c	475;"	d	file:
MCMEM0	.\pxa2xx.c	470;"	d	file:
MCMEM1	.\pxa2xx.c	471;"	d	file:
MCR_ERR	.\ide.c	56;"	d	file:
MC_ERR	.\ide.c	58;"	d	file:
MDCNFG	.\pxa2xx.c	463;"	d	file:
MDI	.\eepro100.c	86;"	d	file:
MDMRS	.\pxa2xx.c	476;"	d	file:
MDMRSLP	.\pxa2xx.c	482;"	d	file:
MDREFR	.\pxa2xx.c	464;"	d	file:
MDT_MON	.\sd.c	216;"	d	file:
MDT_YR	.\sd.c	215;"	d	file:
MECR	.\pxa2xx.c	468;"	d	file:
METADATA_SIZE	.\ide.c	3148;"	d	file:
MID	.\sd.c	211;"	d	file:
MINTR_RST_A	.\slavio_serial.c	157;"	d	file:
MINTR_RST_ALL	.\slavio_serial.c	158;"	d	file:
MINTR_RST_B	.\slavio_serial.c	156;"	d	file:
MINTR_RST_MASK	.\slavio_serial.c	155;"	d	file:
MINTR_STATUSHI	.\slavio_serial.c	154;"	d	file:
MIN_BUF_SIZE	.\eepro100.c	1475;"	d	file:
MIN_BUF_SIZE	.\ne2000.c	224;"	d	file:
MIN_BUF_SIZE	.\pcnet.c	1059;"	d	file:
MIN_BUF_SIZE	.\rtl8139.c	781;"	d	file:
MIPSNET_BUSY	.\mipsnet.c	15;"	d	file:
MIPSNET_DEV_ID	.\mipsnet.c	13;"	d	file:
MIPSNET_DEV_ID_STRING	.\mipsnet.c	14;"	d	file:
MIPSNET_INTCTL_RXDONE	.\mipsnet.c	20;"	d	file:
MIPSNET_INTCTL_TESTBIT	.\mipsnet.c	21;"	d	file:
MIPSNET_INTCTL_TXDONE	.\mipsnet.c	19;"	d	file:
MIPSNET_INTERRUPT_INFO	.\mipsnet.c	22;"	d	file:
MIPSNET_INT_CTL	.\mipsnet.c	18;"	d	file:
MIPSNET_RX_DATA_BUFFER	.\mipsnet.c	23;"	d	file:
MIPSNET_RX_DATA_COUNT	.\mipsnet.c	16;"	d	file:
MIPSNET_TX_DATA_BUFFER	.\mipsnet.c	24;"	d	file:
MIPSNET_TX_DATA_COUNT	.\mipsnet.c	17;"	d	file:
MIPSnetState	.\mipsnet.c	/^typedef struct MIPSnetState {$/;"	s	file:
MIPSnetState	.\mipsnet.c	/^} MIPSnetState;$/;"	t	typeref:struct:MIPSnetState	file:
MISC2_PLLDIS	.\slavio_serial.c	165;"	d	file:
MISC_AUX1	.\slavio_misc.c	65;"	d	file:
MISC_AUX2	.\slavio_misc.c	66;"	d	file:
MISC_CFG	.\slavio_misc.c	64;"	d	file:
MISC_DIAG	.\slavio_misc.c	67;"	d	file:
MISC_DPRINTF	.\slavio_misc.c	40;"	d	file:
MISC_DPRINTF	.\slavio_misc.c	43;"	d	file:
MISC_LEDS	.\slavio_misc.c	63;"	d	file:
MISC_MASK	.\slavio_misc.c	62;"	d	file:
MISC_MDM	.\slavio_misc.c	68;"	d	file:
MISC_SIZE	.\slavio_misc.c	56;"	d	file:
MISC_SYS	.\slavio_misc.c	69;"	d	file:
ML	.\fmopl.c	200;"	d	file:
ML	.\fmopl.c	206;"	d	file:
MMC_ARGH	.\pxa2xx_mmci.c	62;"	d	file:
MMC_ARGL	.\pxa2xx_mmci.c	63;"	d	file:
MMC_BLKLEN	.\pxa2xx_mmci.c	56;"	d	file:
MMC_BLKS_REM	.\pxa2xx_mmci.c	68;"	d	file:
MMC_CLKRT	.\pxa2xx_mmci.c	51;"	d	file:
MMC_CMD	.\pxa2xx_mmci.c	61;"	d	file:
MMC_CMDAT	.\pxa2xx_mmci.c	53;"	d	file:
MMC_IRQ	.\mainstone.h	20;"	d
MMC_I_MASK	.\pxa2xx_mmci.c	59;"	d	file:
MMC_I_REG	.\pxa2xx_mmci.c	60;"	d	file:
MMC_NUMBLK	.\pxa2xx_mmci.c	57;"	d	file:
MMC_PRTBUF	.\pxa2xx_mmci.c	58;"	d	file:
MMC_RDTO	.\pxa2xx_mmci.c	55;"	d	file:
MMC_RDWAIT	.\pxa2xx_mmci.c	67;"	d	file:
MMC_RES	.\pxa2xx_mmci.c	64;"	d	file:
MMC_RESTO	.\pxa2xx_mmci.c	54;"	d	file:
MMC_RXFIFO	.\pxa2xx_mmci.c	65;"	d	file:
MMC_SPI	.\pxa2xx_mmci.c	52;"	d	file:
MMC_STAT	.\pxa2xx_mmci.c	50;"	d	file:
MMC_STRPCL	.\pxa2xx_mmci.c	49;"	d	file:
MMC_TXFIFO	.\pxa2xx_mmci.c	66;"	d	file:
MMIO_AREA_BITS	.\ppc4xx_devs.c	66;"	d	file:
MMIO_AREA_LEN	.\ppc4xx_devs.c	67;"	d	file:
MMIO_AREA_NB	.\ppc4xx_devs.c	68;"	d	file:
MMIO_IDX	.\ppc4xx_devs.c	69;"	d	file:
MOD2	.\rtl8139.c	74;"	d	file:
MOUSE_STATUS_ENABLED	.\pckbd.c	112;"	d	file:
MOUSE_STATUS_ENABLED	.\ps2.c	68;"	d	file:
MOUSE_STATUS_REMOTE	.\pckbd.c	111;"	d	file:
MOUSE_STATUS_REMOTE	.\ps2.c	67;"	d	file:
MOUSE_STATUS_SCALE21	.\pckbd.c	113;"	d	file:
MOUSE_STATUS_SCALE21	.\ps2.c	69;"	d	file:
MPCORE_PRIV_BASE	.\mpcore.c	14;"	d	file:
MRDMODE	.\ide.c	391;"	d	file:
MRDMODE_BLK_CH0	.\ide.c	394;"	d	file:
MRDMODE_BLK_CH1	.\ide.c	395;"	d	file:
MRDMODE_INTR_CH0	.\ide.c	392;"	d	file:
MRDMODE_INTR_CH1	.\ide.c	393;"	d	file:
MSB	.\pl110_template.h	233;"	d
MSB	.\pl110_template.h	261;"	d
MSB	.\pl110_template.h	276;"	d
MSB	.\pl110_template.h	291;"	d
MSC0	.\pxa2xx.c	465;"	d	file:
MSC1	.\pxa2xx.c	466;"	d	file:
MSC2	.\pxa2xx.c	467;"	d	file:
MSDState	.\usb-msd.c	/^} MSDState;$/;"	t	typeref:struct:__anon122	file:
MSINS_IRQ	.\mainstone.h	26;"	d
MSR_COLOR_EMULATION	.\vga_int.h	24;"	d
MSR_PAGE_SELECT	.\vga_int.h	25;"	d
MST_BASE	.\mst_fpga.c	17;"	d	file:
MST_ETH_PHYS	.\mainstone.h	15;"	d
MST_FLASH_0	.\mainstone.h	16;"	d
MST_FLASH_1	.\mainstone.h	17;"	d
MST_FPGA_PHYS	.\mainstone.h	14;"	d
MST_GPSWR	.\mst_fpga.c	21;"	d	file:
MST_INTMSKENA	.\mst_fpga.c	26;"	d	file:
MST_INTSETCLR	.\mst_fpga.c	27;"	d	file:
MST_LEDCTRL	.\mst_fpga.c	20;"	d	file:
MST_LEDDAT1	.\mst_fpga.c	18;"	d	file:
MST_LEDDAT2	.\mst_fpga.c	19;"	d	file:
MST_MSCRD	.\mst_fpga.c	25;"	d	file:
MST_MSCWR1	.\mst_fpga.c	22;"	d	file:
MST_MSCWR2	.\mst_fpga.c	23;"	d	file:
MST_MSCWR3	.\mst_fpga.c	24;"	d	file:
MST_NUM_IRQS	.\mst_fpga.c	16;"	d	file:
MST_PCMCIA0	.\mst_fpga.c	28;"	d	file:
MST_PCMCIA1	.\mst_fpga.c	29;"	d	file:
MS_DPRINTF	.\slavio_serial.c	69;"	d	file:
MS_DPRINTF	.\slavio_serial.c	72;"	d	file:
MULTICAST_FILTER_LEN	.\pcnet.c	563;"	d	file:
MUL_TABLE	.\fmopl.c	/^static const UINT32 MUL_TABLE[16]= {$/;"	v	file:
MacIONVRAMState	.\mac_nvram.c	/^struct MacIONVRAMState {$/;"	s	file:
MacIONVRAMState	.\ppc_mac.h	/^typedef struct MacIONVRAMState MacIONVRAMState;$/;"	t	typeref:struct:MacIONVRAMState
MaltaFPGAState	.\mips_malta.c	/^} MaltaFPGAState;$/;"	t	typeref:struct:__anon34	file:
MassStorageReset	.\usb-msd.c	25;"	d	file:
MediaStatus	.\rtl8139.c	/^    MediaStatus = 0x58,$/;"	e	enum:RTL8139_registers	file:
MiscState	.\slavio_misc.c	/^typedef struct MiscState {$/;"	s	file:
MiscState	.\slavio_misc.c	/^} MiscState;$/;"	t	typeref:struct:MiscState	file:
MissPkt	.\rtl8139.c	/^    uint16_t   MissPkt;$/;"	m	struct:RTL8139TallyCounters	file:
MouseState	.\adb.c	/^typedef struct MouseState {$/;"	s	file:
MouseState	.\adb.c	/^} MouseState;$/;"	t	typeref:struct:MouseState	file:
MultiIntr	.\rtl8139.c	/^    MultiIntr = 0x5C,$/;"	e	enum:RTL8139_registers	file:
MultiIntr	.\rtl8139.c	/^    uint16_t MultiIntr;$/;"	m	struct:RTL8139State	file:
MultiIntrClear	.\rtl8139.c	/^    MultiIntrClear = 0xF000,$/;"	e	enum:ClearBitMasks	file:
NAME	.\pl110_template.h	102;"	d
NAME	.\pl110_template.h	108;"	d
NAME	.\pl110_template.h	299;"	d
NAME	.\pl110_template.h	97;"	d
NAND_4PAGE_ARRAY	.\nand.c	78;"	d	file:
NAND_BUSWIDTH_16	.\nand.c	73;"	d	file:
NAND_CACHEPRG	.\nand.c	75;"	d	file:
NAND_CMD_BLOCKERASE1	.\nand.c	32;"	d	file:
NAND_CMD_BLOCKERASE2	.\nand.c	33;"	d	file:
NAND_CMD_CACHEPROGRAM2	.\nand.c	31;"	d	file:
NAND_CMD_COPYBACKPRG1	.\nand.c	35;"	d	file:
NAND_CMD_LPREAD2	.\nand.c	23;"	d	file:
NAND_CMD_NOSERIALREAD2	.\nand.c	24;"	d	file:
NAND_CMD_PAGEPROGRAM1	.\nand.c	29;"	d	file:
NAND_CMD_PAGEPROGRAM2	.\nand.c	30;"	d	file:
NAND_CMD_RANDOMREAD1	.\nand.c	25;"	d	file:
NAND_CMD_RANDOMREAD2	.\nand.c	26;"	d	file:
NAND_CMD_READ0	.\nand.c	20;"	d	file:
NAND_CMD_READ1	.\nand.c	21;"	d	file:
NAND_CMD_READ2	.\nand.c	22;"	d	file:
NAND_CMD_READID	.\nand.c	27;"	d	file:
NAND_CMD_READSTATUS	.\nand.c	34;"	d	file:
NAND_CMD_RESET	.\nand.c	28;"	d	file:
NAND_COPYBACK	.\nand.c	76;"	d	file:
NAND_IO	.\nand.c	82;"	d	file:
NAND_IOSTATUS_BUSY	.\nand.c	42;"	d	file:
NAND_IOSTATUS_ERROR	.\nand.c	37;"	d	file:
NAND_IOSTATUS_PLANE0	.\nand.c	38;"	d	file:
NAND_IOSTATUS_PLANE1	.\nand.c	39;"	d	file:
NAND_IOSTATUS_PLANE2	.\nand.c	40;"	d	file:
NAND_IOSTATUS_PLANE3	.\nand.c	41;"	d	file:
NAND_IOSTATUS_UNPROTCT	.\nand.c	43;"	d	file:
NAND_IS_AND	.\nand.c	77;"	d	file:
NAND_MFR_FUJITSU	.\flash.h	30;"	d
NAND_MFR_HYNIX	.\flash.h	34;"	d
NAND_MFR_MICRON	.\flash.h	35;"	d
NAND_MFR_NATIONAL	.\flash.h	31;"	d
NAND_MFR_RENESAS	.\flash.h	32;"	d
NAND_MFR_SAMSUNG	.\flash.h	29;"	d
NAND_MFR_STMICRO	.\flash.h	33;"	d
NAND_MFR_TOSHIBA	.\flash.h	28;"	d
NAND_NO_AUTOINCR	.\nand.c	72;"	d	file:
NAND_NO_PADDING	.\nand.c	74;"	d	file:
NAND_NO_READRDY	.\nand.c	79;"	d	file:
NAND_SAMSUNG_LP	.\nand.c	80;"	d	file:
NB_CHANNELS	.\es1370.c	154;"	d	file:
NB_DEPTHS	.\vga.c	1006;"	d	file:
NB_DEVICES	.\sh7750.c	34;"	d	file:
NB_PORTS	.\usb-uhci.c	67;"	d	file:
NCPU	.\armv7m_nvic.c	20;"	d	file:
NCPU	.\mpcore.c	15;"	d	file:
NCPU	.\realview_gic.c	14;"	d	file:
NE2000State	.\ne2000.c	/^typedef struct NE2000State {$/;"	s	file:
NE2000State	.\ne2000.c	/^} NE2000State;$/;"	t	typeref:struct:NE2000State	file:
NE2000_MEM_SIZE	.\ne2000.c	122;"	d	file:
NE2000_NB_MAX	.\pc.c	646;"	d	file:
NE2000_NB_MAX	.\ppc_prep.c	79;"	d	file:
NE2000_PMEM_END	.\ne2000.c	121;"	d	file:
NE2000_PMEM_SIZE	.\ne2000.c	119;"	d	file:
NE2000_PMEM_START	.\ne2000.c	120;"	d	file:
NONE	.\wm8750.c	202;"	d	file:
NR_SOURCES	.\sh7750.c	/^	NR_SOURCES,$/;"	e	enum:__anon94	file:
NUM_PACKETS	.\smc91c111.c	17;"	d	file:
NVIC	.\armv7m_nvic.c	21;"	d	file:
NVRAM_H	.\nvram.h	2;"	d
NVRAM_PRINTF	.\m48t59.c	33;"	d	file:
NVRAM_PRINTF	.\m48t59.c	35;"	d	file:
NVRAM_SIZE	.\ppc_mac.h	33;"	d
NVRAM_SIZE	.\ppc_prep.c	535;"	d	file:
NVRAM_SIZE	.\sun4u.c	45;"	d	file:
NVRAM_compute_crc	.\ppc.c	/^uint16_t NVRAM_compute_crc (nvram_t *nvram, uint32_t start, uint32_t count)$/;"	f
NVRAM_crc_update	.\ppc.c	/^static uint16_t NVRAM_crc_update (uint16_t prev, uint16_t value)$/;"	f	file:
NVRAM_get_byte	.\ppc.c	/^uint8_t NVRAM_get_byte (nvram_t *nvram, uint32_t addr)$/;"	f
NVRAM_get_lword	.\ppc.c	/^uint32_t NVRAM_get_lword (nvram_t *nvram, uint32_t addr)$/;"	f
NVRAM_get_string	.\ppc.c	/^int NVRAM_get_string (nvram_t *nvram, uint8_t *dst, uint16_t addr, int max)$/;"	f
NVRAM_get_word	.\ppc.c	/^uint16_t NVRAM_get_word (nvram_t *nvram, uint32_t addr)$/;"	f
NVRAM_image	.\firmware_abi.h	/^    uint64_t NVRAM_image;$/;"	m	struct:ohwcfg_v3_t
NVRAM_readb	.\m48t59.c	/^static uint32_t NVRAM_readb (void *opaque, uint32_t addr)$/;"	f	file:
NVRAM_set_byte	.\ppc.c	/^void NVRAM_set_byte (nvram_t *nvram, uint32_t addr, uint8_t value)$/;"	f
NVRAM_set_lword	.\ppc.c	/^void NVRAM_set_lword (nvram_t *nvram, uint32_t addr, uint32_t value)$/;"	f
NVRAM_set_string	.\ppc.c	/^void NVRAM_set_string (nvram_t *nvram, uint32_t addr,$/;"	f
NVRAM_set_word	.\ppc.c	/^void NVRAM_set_word (nvram_t *nvram, uint32_t addr, uint16_t value)$/;"	f
NVRAM_writeb	.\m48t59.c	/^static void NVRAM_writeb (void *opaque, uint32_t addr, uint32_t val)$/;"	f	file:
NWayAdvert	.\rtl8139.c	/^    NWayAdvert = 0x66,$/;"	e	enum:RTL8139_registers	file:
NWayAdvert	.\rtl8139.c	/^    uint16_t NWayAdvert;$/;"	m	struct:RTL8139State	file:
NWayExpansion	.\rtl8139.c	/^    NWayExpansion = 0x6A,$/;"	e	enum:RTL8139_registers	file:
NWayExpansion	.\rtl8139.c	/^    uint16_t NWayExpansion;$/;"	m	struct:RTL8139State	file:
NWayLPAR	.\rtl8139.c	/^    NWayLPAR = 0x68,$/;"	e	enum:RTL8139_registers	file:
NWayLPAR	.\rtl8139.c	/^    uint16_t NWayLPAR;$/;"	m	struct:RTL8139State	file:
OCM0_DSACNTL	.\ppc405_uc.c	/^    OCM0_DSACNTL = 0x01B,$/;"	e	enum:__anon67	file:
OCM0_DSARC	.\ppc405_uc.c	/^    OCM0_DSARC   = 0x01A,$/;"	e	enum:__anon67	file:
OCM0_ISACNTL	.\ppc405_uc.c	/^    OCM0_ISACNTL = 0x019,$/;"	e	enum:__anon67	file:
OCM0_ISARC	.\ppc405_uc.c	/^    OCM0_ISARC   = 0x018,$/;"	e	enum:__anon67	file:
ODDPORTMASK	.\sh7750.c	98;"	d	file:
OHCIPCIState	.\usb-ohci.c	/^} OHCIPCIState;$/;"	t	typeref:struct:__anon124	file:
OHCIPort	.\usb-ohci.c	/^typedef struct OHCIPort {$/;"	s	file:
OHCIPort	.\usb-ohci.c	/^} OHCIPort;$/;"	t	typeref:struct:OHCIPort	file:
OHCIState	.\usb-ohci.c	/^} OHCIState;$/;"	t	typeref:struct:__anon123	file:
OHCI_BM	.\usb-ohci.c	178;"	d	file:
OHCI_CC_BITSTUFFING	.\usb-ohci.c	294;"	d	file:
OHCI_CC_BUFFEROVERRUN	.\usb-ohci.c	302;"	d	file:
OHCI_CC_BUFFERUNDERRUN	.\usb-ohci.c	303;"	d	file:
OHCI_CC_CRC	.\usb-ohci.c	293;"	d	file:
OHCI_CC_DATAOVERRUN	.\usb-ohci.c	300;"	d	file:
OHCI_CC_DATATOGGLEMISMATCH	.\usb-ohci.c	295;"	d	file:
OHCI_CC_DATAUNDERRUN	.\usb-ohci.c	301;"	d	file:
OHCI_CC_DEVICENOTRESPONDING	.\usb-ohci.c	297;"	d	file:
OHCI_CC_NOERROR	.\usb-ohci.c	292;"	d	file:
OHCI_CC_PIDCHECKFAILURE	.\usb-ohci.c	298;"	d	file:
OHCI_CC_STALL	.\usb-ohci.c	296;"	d	file:
OHCI_CC_UNDEXPETEDPID	.\usb-ohci.c	299;"	d	file:
OHCI_CTL_BLE	.\usb-ohci.c	218;"	d	file:
OHCI_CTL_CBSR	.\usb-ohci.c	214;"	d	file:
OHCI_CTL_CLE	.\usb-ohci.c	217;"	d	file:
OHCI_CTL_HCFS	.\usb-ohci.c	219;"	d	file:
OHCI_CTL_IE	.\usb-ohci.c	216;"	d	file:
OHCI_CTL_IR	.\usb-ohci.c	224;"	d	file:
OHCI_CTL_PLE	.\usb-ohci.c	215;"	d	file:
OHCI_CTL_RWC	.\usb-ohci.c	225;"	d	file:
OHCI_CTL_RWE	.\usb-ohci.c	226;"	d	file:
OHCI_DPTR_MASK	.\usb-ohci.c	176;"	d	file:
OHCI_EDPTR_MASK	.\usb-ohci.c	247;"	d	file:
OHCI_ED_C	.\usb-ohci.c	145;"	d	file:
OHCI_ED_D_MASK	.\usb-ohci.c	136;"	d	file:
OHCI_ED_D_SHIFT	.\usb-ohci.c	135;"	d	file:
OHCI_ED_EN_MASK	.\usb-ohci.c	134;"	d	file:
OHCI_ED_EN_SHIFT	.\usb-ohci.c	133;"	d	file:
OHCI_ED_F	.\usb-ohci.c	139;"	d	file:
OHCI_ED_FA_MASK	.\usb-ohci.c	132;"	d	file:
OHCI_ED_FA_SHIFT	.\usb-ohci.c	131;"	d	file:
OHCI_ED_H	.\usb-ohci.c	144;"	d	file:
OHCI_ED_K	.\usb-ohci.c	138;"	d	file:
OHCI_ED_MPS_MASK	.\usb-ohci.c	141;"	d	file:
OHCI_ED_MPS_SHIFT	.\usb-ohci.c	140;"	d	file:
OHCI_ED_S	.\usb-ohci.c	137;"	d	file:
OHCI_FMI_FI	.\usb-ohci.c	249;"	d	file:
OHCI_FMI_FIT	.\usb-ohci.c	251;"	d	file:
OHCI_FMI_FSMPS	.\usb-ohci.c	250;"	d	file:
OHCI_FR_RT	.\usb-ohci.c	253;"	d	file:
OHCI_HCCA_MASK	.\usb-ohci.c	245;"	d	file:
OHCI_HCCA_SIZE	.\usb-ohci.c	244;"	d	file:
OHCI_HRESET_FSBIR	.\usb-ohci.c	305;"	d	file:
OHCI_INTR_FNO	.\usb-ohci.c	239;"	d	file:
OHCI_INTR_MIE	.\usb-ohci.c	242;"	d	file:
OHCI_INTR_OC	.\usb-ohci.c	241;"	d	file:
OHCI_INTR_RD	.\usb-ohci.c	237;"	d	file:
OHCI_INTR_RHSC	.\usb-ohci.c	240;"	d	file:
OHCI_INTR_SF	.\usb-ohci.c	236;"	d	file:
OHCI_INTR_SO	.\usb-ohci.c	234;"	d	file:
OHCI_INTR_UE	.\usb-ohci.c	238;"	d	file:
OHCI_INTR_WD	.\usb-ohci.c	235;"	d	file:
OHCI_LS_THRESH	.\usb-ohci.c	255;"	d	file:
OHCI_MAX_PORTS	.\usb-ohci.c	51;"	d	file:
OHCI_OFFSET_MASK	.\usb-ohci.c	174;"	d	file:
OHCI_PAGE_MASK	.\usb-ohci.c	173;"	d	file:
OHCI_PORT_CCS	.\usb-ohci.c	272;"	d	file:
OHCI_PORT_CSC	.\usb-ohci.c	279;"	d	file:
OHCI_PORT_LSDA	.\usb-ohci.c	278;"	d	file:
OHCI_PORT_OCIC	.\usb-ohci.c	282;"	d	file:
OHCI_PORT_PES	.\usb-ohci.c	273;"	d	file:
OHCI_PORT_PESC	.\usb-ohci.c	280;"	d	file:
OHCI_PORT_POCI	.\usb-ohci.c	275;"	d	file:
OHCI_PORT_PPS	.\usb-ohci.c	277;"	d	file:
OHCI_PORT_PRS	.\usb-ohci.c	276;"	d	file:
OHCI_PORT_PRSC	.\usb-ohci.c	283;"	d	file:
OHCI_PORT_PSS	.\usb-ohci.c	274;"	d	file:
OHCI_PORT_PSSC	.\usb-ohci.c	281;"	d	file:
OHCI_PORT_WTC	.\usb-ohci.c	284;"	d	file:
OHCI_RHA_DT	.\usb-ohci.c	260;"	d	file:
OHCI_RHA_NOCP	.\usb-ohci.c	262;"	d	file:
OHCI_RHA_NPS	.\usb-ohci.c	259;"	d	file:
OHCI_RHA_OCPM	.\usb-ohci.c	261;"	d	file:
OHCI_RHA_POTPGT_MASK	.\usb-ohci.c	263;"	d	file:
OHCI_RHA_PSM	.\usb-ohci.c	258;"	d	file:
OHCI_RHA_RW_MASK	.\usb-ohci.c	257;"	d	file:
OHCI_RHS_CRWE	.\usb-ohci.c	270;"	d	file:
OHCI_RHS_DRWE	.\usb-ohci.c	267;"	d	file:
OHCI_RHS_LPS	.\usb-ohci.c	265;"	d	file:
OHCI_RHS_LPSC	.\usb-ohci.c	268;"	d	file:
OHCI_RHS_OCI	.\usb-ohci.c	266;"	d	file:
OHCI_RHS_OCIC	.\usb-ohci.c	269;"	d	file:
OHCI_SET_BM	.\usb-ohci.c	181;"	d	file:
OHCI_STATUS_BLF	.\usb-ohci.c	230;"	d	file:
OHCI_STATUS_CLF	.\usb-ohci.c	229;"	d	file:
OHCI_STATUS_HCR	.\usb-ohci.c	228;"	d	file:
OHCI_STATUS_OCR	.\usb-ohci.c	231;"	d	file:
OHCI_STATUS_SOC	.\usb-ohci.c	232;"	d	file:
OHCI_TD_CC_MASK	.\usb-ohci.c	158;"	d	file:
OHCI_TD_CC_SHIFT	.\usb-ohci.c	157;"	d	file:
OHCI_TD_DIR_IN	.\usb-ohci.c	289;"	d	file:
OHCI_TD_DIR_OUT	.\usb-ohci.c	288;"	d	file:
OHCI_TD_DIR_RESERVED	.\usb-ohci.c	290;"	d	file:
OHCI_TD_DIR_SETUP	.\usb-ohci.c	287;"	d	file:
OHCI_TD_DI_MASK	.\usb-ohci.c	152;"	d	file:
OHCI_TD_DI_SHIFT	.\usb-ohci.c	151;"	d	file:
OHCI_TD_DP_MASK	.\usb-ohci.c	150;"	d	file:
OHCI_TD_DP_SHIFT	.\usb-ohci.c	149;"	d	file:
OHCI_TD_EC_MASK	.\usb-ohci.c	156;"	d	file:
OHCI_TD_EC_SHIFT	.\usb-ohci.c	155;"	d	file:
OHCI_TD_FC_MASK	.\usb-ohci.c	165;"	d	file:
OHCI_TD_FC_SHIFT	.\usb-ohci.c	164;"	d	file:
OHCI_TD_PSW_CC_MASK	.\usb-ohci.c	169;"	d	file:
OHCI_TD_PSW_CC_SHIFT	.\usb-ohci.c	168;"	d	file:
OHCI_TD_PSW_SIZE_MASK	.\usb-ohci.c	171;"	d	file:
OHCI_TD_PSW_SIZE_SHIFT	.\usb-ohci.c	170;"	d	file:
OHCI_TD_R	.\usb-ohci.c	148;"	d	file:
OHCI_TD_SF_MASK	.\usb-ohci.c	163;"	d	file:
OHCI_TD_SF_SHIFT	.\usb-ohci.c	162;"	d	file:
OHCI_TD_T0	.\usb-ohci.c	153;"	d	file:
OHCI_TD_T1	.\usb-ohci.c	154;"	d	file:
OHCI_TYPE_PCI	.\usb-ohci.c	/^    OHCI_TYPE_PCI,$/;"	e	enum:ohci_type	file:
OHCI_TYPE_PXA	.\usb-ohci.c	/^    OHCI_TYPE_PXA$/;"	e	enum:ohci_type	file:
OHCI_USB_OPERATIONAL	.\usb-ohci.c	222;"	d	file:
OHCI_USB_RESET	.\usb-ohci.c	220;"	d	file:
OHCI_USB_RESUME	.\usb-ohci.c	221;"	d	file:
OHCI_USB_SUSPEND	.\usb-ohci.c	223;"	d	file:
OHW_ARCH_PTR	.\firmware_abi.h	184;"	d
OHW_BOOT_CPU	.\firmware_abi.h	186;"	d
OHW_GF_NOGRAPHICS	.\firmware_abi.h	64;"	d
OHW_RAM_SIZE	.\firmware_abi.h	185;"	d
OHW_compute_crc	.\firmware_abi.h	/^OHW_compute_crc (ohwcfg_v3_t *header, uint32_t start, uint32_t count)$/;"	f
OHW_crc_update	.\firmware_abi.h	/^OHW_crc_update (uint16_t prev, uint16_t value)$/;"	f
OID	.\sd.c	212;"	d	file:
OIER	.\pxa2xx_timer.c	38;"	d	file:
OMAP15XX_SRAM_SIZE	.\omap.h	35;"	d
OMAP1611_SRAM_SIZE	.\omap.h	37;"	d
OMAP16XX_SRAM_SIZE	.\omap.h	36;"	d
OMAP730_SRAM_SIZE	.\omap.h	34;"	d
OMAP_16B_REG	.\omap.h	741;"	d
OMAP_16B_REG	.\omap.h	749;"	d
OMAP_32B_REG	.\omap.h	744;"	d
OMAP_32B_REG	.\omap.h	750;"	d
OMAP_8B_REG	.\omap.h	738;"	d
OMAP_8B_REG	.\omap.h	748;"	d
OMAP_BAD_REG	.\omap.h	728;"	d
OMAP_CS0_BASE	.\omap.h	25;"	d
OMAP_CS0_SIZE	.\omap.h	38;"	d
OMAP_CS1_BASE	.\omap.h	26;"	d
OMAP_CS1_SIZE	.\omap.h	39;"	d
OMAP_CS2_BASE	.\omap.h	27;"	d
OMAP_CS2_SIZE	.\omap.h	40;"	d
OMAP_CS3_BASE	.\omap.h	28;"	d
OMAP_CS3_SIZE	.\omap.h	41;"	d
OMAP_DMA_CAMERA_IF_RX	.\omap.h	436;"	d
OMAP_DMA_CCP_ATTN	.\omap.h	454;"	d
OMAP_DMA_CCP_FIFO_NOT_EMPTY	.\omap.h	455;"	d
OMAP_DMA_CMT_APE_RV_CHAN_0	.\omap.h	457;"	d
OMAP_DMA_CMT_APE_RV_CHAN_1	.\omap.h	459;"	d
OMAP_DMA_CMT_APE_RV_CHAN_2	.\omap.h	461;"	d
OMAP_DMA_CMT_APE_RV_CHAN_3	.\omap.h	463;"	d
OMAP_DMA_CMT_APE_RV_CHAN_4	.\omap.h	465;"	d
OMAP_DMA_CMT_APE_RV_CHAN_5	.\omap.h	467;"	d
OMAP_DMA_CMT_APE_RV_CHAN_6	.\omap.h	469;"	d
OMAP_DMA_CMT_APE_RV_CHAN_7	.\omap.h	471;"	d
OMAP_DMA_CMT_APE_TX_CHAN_0	.\omap.h	456;"	d
OMAP_DMA_CMT_APE_TX_CHAN_1	.\omap.h	458;"	d
OMAP_DMA_CMT_APE_TX_CHAN_2	.\omap.h	460;"	d
OMAP_DMA_CMT_APE_TX_CHAN_3	.\omap.h	462;"	d
OMAP_DMA_CMT_APE_TX_CHAN_4	.\omap.h	464;"	d
OMAP_DMA_CMT_APE_TX_CHAN_5	.\omap.h	466;"	d
OMAP_DMA_CMT_APE_TX_CHAN_6	.\omap.h	468;"	d
OMAP_DMA_CMT_APE_TX_CHAN_7	.\omap.h	470;"	d
OMAP_DMA_CRYPTO_DES_IN	.\omap.h	450;"	d
OMAP_DMA_CRYPTO_DES_OUT	.\omap.h	474;"	d
OMAP_DMA_CRYPTO_HASH	.\omap.h	453;"	d
OMAP_DMA_EXT_NDMA_REQ0	.\omap.h	421;"	d
OMAP_DMA_EXT_NDMA_REQ1	.\omap.h	422;"	d
OMAP_DMA_I2C_RX	.\omap.h	419;"	d
OMAP_DMA_I2C_TX	.\omap.h	420;"	d
OMAP_DMA_IRQ_LCD_LINE	.\omap.h	440;"	d
OMAP_DMA_MCBSP1_RX	.\omap.h	425;"	d
OMAP_DMA_MCBSP1_TX	.\omap.h	424;"	d
OMAP_DMA_MCBSP2_RX	.\omap.h	433;"	d
OMAP_DMA_MCBSP2_TX	.\omap.h	432;"	d
OMAP_DMA_MCBSP3_RX	.\omap.h	427;"	d
OMAP_DMA_MCBSP3_TX	.\omap.h	426;"	d
OMAP_DMA_MCSI1_RX	.\omap.h	418;"	d
OMAP_DMA_MCSI1_TX	.\omap.h	417;"	d
OMAP_DMA_MEMORY_STICK	.\omap.h	441;"	d
OMAP_DMA_MMC2_RX	.\omap.h	473;"	d
OMAP_DMA_MMC2_TX	.\omap.h	472;"	d
OMAP_DMA_MMC_RX	.\omap.h	438;"	d
OMAP_DMA_MMC_TX	.\omap.h	437;"	d
OMAP_DMA_NAND	.\omap.h	439;"	d
OMAP_DMA_NO_DEVICE	.\omap.h	416;"	d
OMAP_DMA_SPI_RX	.\omap.h	452;"	d
OMAP_DMA_SPI_TX	.\omap.h	451;"	d
OMAP_DMA_UART1_RX	.\omap.h	429;"	d
OMAP_DMA_UART1_TX	.\omap.h	428;"	d
OMAP_DMA_UART2_RX	.\omap.h	431;"	d
OMAP_DMA_UART2_TX	.\omap.h	430;"	d
OMAP_DMA_UART3_RX	.\omap.h	435;"	d
OMAP_DMA_UART3_TX	.\omap.h	434;"	d
OMAP_DMA_USB_W2FC_RX0	.\omap.h	442;"	d
OMAP_DMA_USB_W2FC_RX1	.\omap.h	443;"	d
OMAP_DMA_USB_W2FC_RX2	.\omap.h	444;"	d
OMAP_DMA_USB_W2FC_TX0	.\omap.h	445;"	d
OMAP_DMA_USB_W2FC_TX1	.\omap.h	446;"	d
OMAP_DMA_USB_W2FC_TX2	.\omap.h	447;"	d
OMAP_DMA_UWIRE_TX	.\omap.h	423;"	d
OMAP_EMIFF_BASE	.\omap.h	29;"	d
OMAP_EMIFS_BASE	.\omap.h	24;"	d
OMAP_FMT_plx	.\omap.h	711;"	d
OMAP_FMT_plx	.\omap.h	713;"	d
OMAP_IMIF_BASE	.\omap.h	30;"	d
OMAP_INT_1510_BT_MCSI1RX	.\omap.h	177;"	d
OMAP_INT_1510_BT_MCSI1TX	.\omap.h	176;"	d
OMAP_INT_1510_COM_SPI_RO	.\omap.h	180;"	d
OMAP_INT_1510_DSP_MAILBOX1	.\omap.h	102;"	d
OMAP_INT_1510_DSP_MAILBOX2	.\omap.h	103;"	d
OMAP_INT_1510_MEM_STICK	.\omap.h	179;"	d
OMAP_INT_1510_SPI_RX	.\omap.h	101;"	d
OMAP_INT_1510_SPI_TX	.\omap.h	100;"	d
OMAP_INT_1510_SoSSI_MATCH	.\omap.h	178;"	d
OMAP_INT_15XX_IH2_IRQ	.\omap.h	93;"	d
OMAP_INT_15XX_LB_MMU	.\omap.h	94;"	d
OMAP_INT_15XX_LOCAL_BUS	.\omap.h	95;"	d
OMAP_INT_1610_BT_MCSI1RX	.\omap.h	201;"	d
OMAP_INT_1610_BT_MCSI1TX	.\omap.h	200;"	d
OMAP_INT_1610_CF	.\omap.h	216;"	d
OMAP_INT_1610_DMA_CH10	.\omap.h	224;"	d
OMAP_INT_1610_DMA_CH11	.\omap.h	225;"	d
OMAP_INT_1610_DMA_CH12	.\omap.h	226;"	d
OMAP_INT_1610_DMA_CH13	.\omap.h	227;"	d
OMAP_INT_1610_DMA_CH14	.\omap.h	228;"	d
OMAP_INT_1610_DMA_CH15	.\omap.h	229;"	d
OMAP_INT_1610_DMA_CH6	.\omap.h	220;"	d
OMAP_INT_1610_DMA_CH7	.\omap.h	221;"	d
OMAP_INT_1610_DMA_CH8	.\omap.h	222;"	d
OMAP_INT_1610_DMA_CH9	.\omap.h	223;"	d
OMAP_INT_1610_DSP_MAILBOX1	.\omap.h	120;"	d
OMAP_INT_1610_DSP_MAILBOX2	.\omap.h	121;"	d
OMAP_INT_1610_FAC	.\omap.h	196;"	d
OMAP_INT_1610_GPIO_BANK2	.\omap.h	213;"	d
OMAP_INT_1610_GPIO_BANK3	.\omap.h	214;"	d
OMAP_INT_1610_GPIO_BANK4	.\omap.h	218;"	d
OMAP_INT_1610_GPTIMER1	.\omap.h	123;"	d
OMAP_INT_1610_GPTIMER2	.\omap.h	124;"	d
OMAP_INT_1610_GPTIMER3	.\omap.h	207;"	d
OMAP_INT_1610_GPTIMER4	.\omap.h	208;"	d
OMAP_INT_1610_GPTIMER5	.\omap.h	209;"	d
OMAP_INT_1610_GPTIMER6	.\omap.h	210;"	d
OMAP_INT_1610_GPTIMER7	.\omap.h	211;"	d
OMAP_INT_1610_GPTIMER8	.\omap.h	212;"	d
OMAP_INT_1610_IH2_FIQ	.\omap.h	117;"	d
OMAP_INT_1610_IH2_IRQ	.\omap.h	116;"	d
OMAP_INT_1610_LCD_LINE	.\omap.h	122;"	d
OMAP_INT_1610_MEM_STICK	.\omap.h	203;"	d
OMAP_INT_1610_MMC2	.\omap.h	215;"	d
OMAP_INT_1610_McBSP2RX_OF	.\omap.h	204;"	d
OMAP_INT_1610_McBSP2_RX	.\omap.h	119;"	d
OMAP_INT_1610_McBSP2_TX	.\omap.h	118;"	d
OMAP_INT_1610_NAND	.\omap.h	230;"	d
OMAP_INT_1610_SPI	.\omap.h	219;"	d
OMAP_INT_1610_SSR_FIFO_0	.\omap.h	125;"	d
OMAP_INT_1610_STI	.\omap.h	205;"	d
OMAP_INT_1610_STI_WAKEUP	.\omap.h	206;"	d
OMAP_INT_1610_SoSSI	.\omap.h	199;"	d
OMAP_INT_1610_SoSSI_MATCH	.\omap.h	202;"	d
OMAP_INT_1610_USB_HHC_2	.\omap.h	197;"	d
OMAP_INT_1610_USB_OTG	.\omap.h	198;"	d
OMAP_INT_1610_WAKE_UP_REQ	.\omap.h	217;"	d
OMAP_INT_1WIRE	.\omap.h	165;"	d
OMAP_INT_243X_CARKIT	.\omap.h	337;"	d
OMAP_INT_243X_HS_USB_DMA	.\omap.h	336;"	d
OMAP_INT_243X_HS_USB_MC	.\omap.h	335;"	d
OMAP_INT_24XX_CAM_IRQ	.\omap.h	298;"	d
OMAP_INT_24XX_DSP_MMU	.\omap.h	302;"	d
OMAP_INT_24XX_DSP_UMA	.\omap.h	301;"	d
OMAP_INT_24XX_DSS_IRQ	.\omap.h	299;"	d
OMAP_INT_24XX_GPIO_BANK1	.\omap.h	303;"	d
OMAP_INT_24XX_GPIO_BANK2	.\omap.h	304;"	d
OMAP_INT_24XX_GPIO_BANK3	.\omap.h	305;"	d
OMAP_INT_24XX_GPIO_BANK4	.\omap.h	306;"	d
OMAP_INT_24XX_GPIO_BANK5	.\omap.h	307;"	d
OMAP_INT_24XX_GPTIMER1	.\omap.h	309;"	d
OMAP_INT_24XX_GPTIMER10	.\omap.h	318;"	d
OMAP_INT_24XX_GPTIMER11	.\omap.h	319;"	d
OMAP_INT_24XX_GPTIMER12	.\omap.h	320;"	d
OMAP_INT_24XX_GPTIMER2	.\omap.h	310;"	d
OMAP_INT_24XX_GPTIMER3	.\omap.h	311;"	d
OMAP_INT_24XX_GPTIMER4	.\omap.h	312;"	d
OMAP_INT_24XX_GPTIMER5	.\omap.h	313;"	d
OMAP_INT_24XX_GPTIMER6	.\omap.h	314;"	d
OMAP_INT_24XX_GPTIMER7	.\omap.h	315;"	d
OMAP_INT_24XX_GPTIMER8	.\omap.h	316;"	d
OMAP_INT_24XX_GPTIMER9	.\omap.h	317;"	d
OMAP_INT_24XX_MAIL_U0_MPU	.\omap.h	300;"	d
OMAP_INT_24XX_MAIL_U3_MPU	.\omap.h	308;"	d
OMAP_INT_24XX_MCBSP1_IRQ_RX	.\omap.h	322;"	d
OMAP_INT_24XX_MCBSP1_IRQ_TX	.\omap.h	321;"	d
OMAP_INT_24XX_MCBSP2_IRQ_RX	.\omap.h	324;"	d
OMAP_INT_24XX_MCBSP2_IRQ_TX	.\omap.h	323;"	d
OMAP_INT_24XX_MMC_IRQ	.\omap.h	334;"	d
OMAP_INT_24XX_SDMA_IRQ0	.\omap.h	294;"	d
OMAP_INT_24XX_SDMA_IRQ1	.\omap.h	295;"	d
OMAP_INT_24XX_SDMA_IRQ2	.\omap.h	296;"	d
OMAP_INT_24XX_SDMA_IRQ3	.\omap.h	297;"	d
OMAP_INT_24XX_SYS_NIRQ	.\omap.h	293;"	d
OMAP_INT_24XX_UART1_IRQ	.\omap.h	325;"	d
OMAP_INT_24XX_UART2_IRQ	.\omap.h	326;"	d
OMAP_INT_24XX_UART3_IRQ	.\omap.h	327;"	d
OMAP_INT_24XX_USB_IRQ_GEN	.\omap.h	328;"	d
OMAP_INT_24XX_USB_IRQ_HGEN	.\omap.h	331;"	d
OMAP_INT_24XX_USB_IRQ_HSOF	.\omap.h	332;"	d
OMAP_INT_24XX_USB_IRQ_ISO	.\omap.h	330;"	d
OMAP_INT_24XX_USB_IRQ_NISO	.\omap.h	329;"	d
OMAP_INT_24XX_USB_IRQ_OTG	.\omap.h	333;"	d
OMAP_INT_310_FAC	.\omap.h	185;"	d
OMAP_INT_310_HSAB_MMU	.\omap.h	111;"	d
OMAP_INT_310_HSB_MAILBOX1	.\omap.h	110;"	d
OMAP_INT_310_MCSI1_FE	.\omap.h	187;"	d
OMAP_INT_310_MCSI2_FE	.\omap.h	188;"	d
OMAP_INT_310_McBSP2RX_OF	.\omap.h	191;"	d
OMAP_INT_310_McBSP2_RX	.\omap.h	109;"	d
OMAP_INT_310_McBSP2_TX	.\omap.h	108;"	d
OMAP_INT_310_USB_HHC_2	.\omap.h	186;"	d
OMAP_INT_310_USB_W2FC_ISO	.\omap.h	189;"	d
OMAP_INT_310_USB_W2FC_NON_ISO	.\omap.h	190;"	d
OMAP_INT_730_CAMERA_IF	.\omap.h	264;"	d
OMAP_INT_730_CFCD	.\omap.h	237;"	d
OMAP_INT_730_CFIREQ	.\omap.h	238;"	d
OMAP_INT_730_DBB_RF_EN	.\omap.h	267;"	d
OMAP_INT_730_DMA_CH10	.\omap.h	282;"	d
OMAP_INT_730_DMA_CH11	.\omap.h	283;"	d
OMAP_INT_730_DMA_CH12	.\omap.h	284;"	d
OMAP_INT_730_DMA_CH13	.\omap.h	285;"	d
OMAP_INT_730_DMA_CH14	.\omap.h	286;"	d
OMAP_INT_730_DMA_CH15	.\omap.h	287;"	d
OMAP_INT_730_DMA_CH6	.\omap.h	278;"	d
OMAP_INT_730_DMA_CH7	.\omap.h	279;"	d
OMAP_INT_730_DMA_CH8	.\omap.h	280;"	d
OMAP_INT_730_DMA_CH9	.\omap.h	281;"	d
OMAP_INT_730_DUAL_MODE_TIMER	.\omap.h	266;"	d
OMAP_INT_730_EAC	.\omap.h	135;"	d
OMAP_INT_730_GPIO_BANK1	.\omap.h	136;"	d
OMAP_INT_730_GPIO_BANK2	.\omap.h	137;"	d
OMAP_INT_730_GPIO_BANK3	.\omap.h	138;"	d
OMAP_INT_730_GPIO_BANK4	.\omap.h	245;"	d
OMAP_INT_730_GPIO_BANK5	.\omap.h	145;"	d
OMAP_INT_730_GPIO_BANK6	.\omap.h	146;"	d
OMAP_INT_730_GSM_PROTECT	.\omap.h	143;"	d
OMAP_INT_730_HDQ_1WIRE	.\omap.h	256;"	d
OMAP_INT_730_HW_ERRORS	.\omap.h	235;"	d
OMAP_INT_730_I2C	.\omap.h	239;"	d
OMAP_INT_730_ICR	.\omap.h	134;"	d
OMAP_INT_730_IH2_FIQ	.\omap.h	130;"	d
OMAP_INT_730_IH2_IRQ	.\omap.h	131;"	d
OMAP_INT_730_LCD_LINE	.\omap.h	142;"	d
OMAP_INT_730_LLPC_LCD_CTRL_OFF	.\omap.h	273;"	d
OMAP_INT_730_LLPC_OE_FALLING	.\omap.h	274;"	d
OMAP_INT_730_LLPC_OE_RISING	.\omap.h	275;"	d
OMAP_INT_730_LLPC_VSYNC	.\omap.h	276;"	d
OMAP_INT_730_MCSI	.\omap.h	251;"	d
OMAP_INT_730_MMC_SDIO	.\omap.h	258;"	d
OMAP_INT_730_MPUIO	.\omap.h	272;"	d
OMAP_INT_730_MPUIO_KEYPAD	.\omap.h	268;"	d
OMAP_INT_730_MPU_EXT_NIRQ	.\omap.h	241;"	d
OMAP_INT_730_McBSP1RX	.\omap.h	247;"	d
OMAP_INT_730_McBSP1RX_OF	.\omap.h	248;"	d
OMAP_INT_730_McBSP1TX	.\omap.h	246;"	d
OMAP_INT_730_McBSP2RX	.\omap.h	140;"	d
OMAP_INT_730_McBSP2RX_OVF	.\omap.h	141;"	d
OMAP_INT_730_McBSP2TX	.\omap.h	139;"	d
OMAP_INT_730_NAND	.\omap.h	288;"	d
OMAP_INT_730_NFIQ_PWR_FAIL	.\omap.h	236;"	d
OMAP_INT_730_PCC	.\omap.h	240;"	d
OMAP_INT_730_RNG	.\omap.h	265;"	d
OMAP_INT_730_RNG_IDLE	.\omap.h	271;"	d
OMAP_INT_730_SHA1_MD5	.\omap.h	269;"	d
OMAP_INT_730_SMC_CD	.\omap.h	254;"	d
OMAP_INT_730_SMC_IREQ	.\omap.h	255;"	d
OMAP_INT_730_SPGIO_WR	.\omap.h	147;"	d
OMAP_INT_730_SPI_100K_1	.\omap.h	242;"	d
OMAP_INT_730_SPI_100K_2	.\omap.h	270;"	d
OMAP_INT_730_SYREN_SPI	.\omap.h	243;"	d
OMAP_INT_730_TIMER3	.\omap.h	144;"	d
OMAP_INT_730_TIMER32K	.\omap.h	257;"	d
OMAP_INT_730_UART_MODEM_1	.\omap.h	250;"	d
OMAP_INT_730_UART_MODEM_IRDA_2	.\omap.h	249;"	d
OMAP_INT_730_UPLD	.\omap.h	259;"	d
OMAP_INT_730_USB_GENI	.\omap.h	262;"	d
OMAP_INT_730_USB_HHC_1	.\omap.h	260;"	d
OMAP_INT_730_USB_HHC_2	.\omap.h	261;"	d
OMAP_INT_730_USB_ISO	.\omap.h	133;"	d
OMAP_INT_730_USB_NON_ISO	.\omap.h	132;"	d
OMAP_INT_730_USB_OTG	.\omap.h	263;"	d
OMAP_INT_730_VLYNQ	.\omap.h	244;"	d
OMAP_INT_730_WAKE_UP_REQ	.\omap.h	277;"	d
OMAP_INT_730_uWireRX	.\omap.h	253;"	d
OMAP_INT_730_uWireTX	.\omap.h	252;"	d
OMAP_INT_ABORT	.\omap.h	72;"	d
OMAP_INT_BRIDGE_PRIV	.\omap.h	73;"	d
OMAP_INT_BRIDGE_PUB	.\omap.h	86;"	d
OMAP_INT_CAMERA	.\omap.h	67;"	d
OMAP_INT_DMA_CH0_6	.\omap.h	77;"	d
OMAP_INT_DMA_CH1_7	.\omap.h	78;"	d
OMAP_INT_DMA_CH2_8	.\omap.h	79;"	d
OMAP_INT_DMA_CH3	.\omap.h	80;"	d
OMAP_INT_DMA_CH4	.\omap.h	81;"	d
OMAP_INT_DMA_CH5	.\omap.h	82;"	d
OMAP_INT_DMA_LCD	.\omap.h	83;"	d
OMAP_INT_DSP_MMU	.\omap.h	171;"	d
OMAP_INT_DSP_MMU_ABORT	.\omap.h	70;"	d
OMAP_INT_FIQ	.\omap.h	68;"	d
OMAP_INT_GAUGE_32K	.\omap.h	168;"	d
OMAP_INT_GPIO_BANK1	.\omap.h	74;"	d
OMAP_INT_HOST	.\omap.h	71;"	d
OMAP_INT_I2C	.\omap.h	155;"	d
OMAP_INT_KEYBOARD	.\omap.h	152;"	d
OMAP_INT_LCD_CTRL	.\omap.h	88;"	d
OMAP_INT_MPUIO	.\omap.h	156;"	d
OMAP_INT_McBSP1RX	.\omap.h	161;"	d
OMAP_INT_McBSP1TX	.\omap.h	160;"	d
OMAP_INT_McBSP3RX	.\omap.h	159;"	d
OMAP_INT_McBSP3TX	.\omap.h	158;"	d
OMAP_INT_OQN	.\omap.h	167;"	d
OMAP_INT_OS_TIMER	.\omap.h	166;"	d
OMAP_INT_RTC_ALARM	.\omap.h	170;"	d
OMAP_INT_RTC_TIMER	.\omap.h	169;"	d
OMAP_INT_RTDX	.\omap.h	69;"	d
OMAP_INT_TIMER1	.\omap.h	84;"	d
OMAP_INT_TIMER2	.\omap.h	87;"	d
OMAP_INT_TIMER3	.\omap.h	76;"	d
OMAP_INT_UART1	.\omap.h	162;"	d
OMAP_INT_UART2	.\omap.h	163;"	d
OMAP_INT_UART3	.\omap.h	75;"	d
OMAP_INT_USB_HHC_1	.\omap.h	157;"	d
OMAP_INT_USB_W2FC	.\omap.h	164;"	d
OMAP_INT_WD_TIMER	.\omap.h	85;"	d
OMAP_INT_uWireRX	.\omap.h	154;"	d
OMAP_INT_uWireTX	.\omap.h	153;"	d
OMAP_LOCALBUS_BASE	.\omap.h	31;"	d
OMAP_MPUI_BASE	.\omap.h	32;"	d
OMAP_MPUI_REG_MASK	.\omap.h	753;"	d
OMAP_RO_REG	.\omap.h	730;"	d
OMCR10	.\pxa2xx_timer.c	45;"	d	file:
OMCR11	.\pxa2xx_timer.c	46;"	d	file:
OMCR4	.\pxa2xx_timer.c	39;"	d	file:
OMCR5	.\pxa2xx_timer.c	40;"	d	file:
OMCR6	.\pxa2xx_timer.c	41;"	d	file:
OMCR7	.\pxa2xx_timer.c	42;"	d	file:
OMCR8	.\pxa2xx_timer.c	43;"	d	file:
OMCR9	.\pxa2xx_timer.c	44;"	d	file:
OOB_SHIFT	.\nand.c	87;"	d	file:
OOB_SIZE	.\nand.c	88;"	d	file:
OPENBIOS_PART_FREE	.\firmware_abi.h	120;"	d
OPENBIOS_PART_SYSTEM	.\firmware_abi.h	119;"	d
OPENPIC_BIG_ENDIAN	.\openpic.c	64;"	d	file:
OPENPIC_BIG_ENDIAN	.\openpic.c	85;"	d	file:
OPENPIC_LITTLE_ENDIAN	.\openpic.c	63;"	d	file:
OPENPIC_LITTLE_ENDIAN	.\openpic.c	84;"	d	file:
OPENPIC_OUTPUT_CINT	.\ppc_mac.h	/^    OPENPIC_OUTPUT_CINT,    \/* critical IRQ              *\/$/;"	e	enum:__anon75
OPENPIC_OUTPUT_DEBUG	.\ppc_mac.h	/^    OPENPIC_OUTPUT_DEBUG,   \/* Inconditional debug event *\/$/;"	e	enum:__anon75
OPENPIC_OUTPUT_INT	.\ppc_mac.h	/^    OPENPIC_OUTPUT_INT = 0, \/* IRQ                       *\/$/;"	e	enum:__anon75
OPENPIC_OUTPUT_MCK	.\ppc_mac.h	/^    OPENPIC_OUTPUT_MCK,     \/* Machine check event       *\/$/;"	e	enum:__anon75
OPENPIC_OUTPUT_NB	.\ppc_mac.h	/^    OPENPIC_OUTPUT_NB,$/;"	e	enum:__anon75
OPENPIC_OUTPUT_RESET	.\ppc_mac.h	/^    OPENPIC_OUTPUT_RESET,   \/* Core reset event          *\/$/;"	e	enum:__anon75
OPENPIC_SWAP	.\openpic.c	93;"	d	file:
OPLCloseTable	.\fmopl.c	/^static void OPLCloseTable( void )$/;"	f	file:
OPLCreate	.\fmopl.c	/^FM_OPL *OPLCreate(int type, int clock, int rate)$/;"	f
OPLDestroy	.\fmopl.c	/^void OPLDestroy(FM_OPL *OPL)$/;"	f
OPLOpenTable	.\fmopl.c	/^static int OPLOpenTable( void )$/;"	f	file:
OPLRead	.\fmopl.c	/^unsigned char OPLRead(FM_OPL *OPL,int a)$/;"	f
OPLResetChip	.\fmopl.c	/^void OPLResetChip(FM_OPL *OPL)$/;"	f
OPLSAMPLE	.\fmopl.h	/^typedef INT16 OPLSAMPLE;$/;"	t
OPLSAMPLE	.\fmopl.h	/^typedef unsigned char  OPLSAMPLE;$/;"	t
OPLSetIRQHandler	.\fmopl.c	/^void OPLSetIRQHandler(FM_OPL *OPL,OPL_IRQHANDLER IRQHandler,int param)$/;"	f
OPLSetKeyboardHandler	.\fmopl.c	/^void OPLSetKeyboardHandler(FM_OPL *OPL,OPL_PORTHANDLER_W KeyboardHandler_w,OPL_PORTHANDLER_R KeyboardHandler_r,int param)$/;"	f
OPLSetPortHandler	.\fmopl.c	/^void OPLSetPortHandler(FM_OPL *OPL,OPL_PORTHANDLER_W PortHandler_w,OPL_PORTHANDLER_R PortHandler_r,int param)$/;"	f
OPLSetTimerHandler	.\fmopl.c	/^void OPLSetTimerHandler(FM_OPL *OPL,OPL_TIMERHANDLER TimerHandler,int channelOffset)$/;"	f
OPLSetUpdateHandler	.\fmopl.c	/^void OPLSetUpdateHandler(FM_OPL *OPL,OPL_UPDATEHANDLER UpdateHandler,int param)$/;"	f
OPLTimerOver	.\fmopl.c	/^int OPLTimerOver(FM_OPL *OPL,int c)$/;"	f
OPLWrite	.\fmopl.c	/^int OPLWrite(FM_OPL *OPL,int a,int v)$/;"	f
OPLWriteReg	.\fmopl.c	/^static void OPLWriteReg(FM_OPL *OPL, int r, int v)$/;"	f	file:
OPL_ARRATE	.\fmopl.c	59;"	d	file:
OPL_CALC_CH	.\fmopl.c	/^INLINE void OPL_CALC_CH( OPL_CH *CH )$/;"	f
OPL_CALC_RH	.\fmopl.c	/^INLINE void OPL_CALC_RH( OPL_CH *CH )$/;"	f
OPL_CALC_SLOT	.\fmopl.c	/^INLINE UINT32 OPL_CALC_SLOT( OPL_SLOT *SLOT )$/;"	f
OPL_CH	.\fmopl.h	/^} OPL_CH;$/;"	t	typeref:struct:fm_opl_channel
OPL_DRRATE	.\fmopl.c	60;"	d	file:
OPL_IRQHANDLER	.\fmopl.h	/^typedef void (*OPL_IRQHANDLER)(int param,int irq);$/;"	t
OPL_KEYOFF	.\fmopl.c	/^INLINE void OPL_KEYOFF(OPL_SLOT *SLOT)$/;"	f
OPL_KEYON	.\fmopl.c	/^INLINE void OPL_KEYON(OPL_SLOT *SLOT)$/;"	f
OPL_LockTable	.\fmopl.c	/^static int OPL_LockTable(void)$/;"	f	file:
OPL_MAXOUT	.\fmopl.c	72;"	d	file:
OPL_MINOUT	.\fmopl.c	73;"	d	file:
OPL_OUTPUT_BIT	.\fmopl.h	11;"	d
OPL_OUTSB	.\fmopl.c	71;"	d	file:
OPL_PORTHANDLER_R	.\fmopl.h	/^typedef unsigned char (*OPL_PORTHANDLER_R)(int param);$/;"	t
OPL_PORTHANDLER_W	.\fmopl.h	/^typedef void (*OPL_PORTHANDLER_W)(int param,unsigned char data);$/;"	t
OPL_SLOT	.\fmopl.h	/^}OPL_SLOT;$/;"	t	typeref:struct:fm_opl_slot
OPL_STATUSMASK_SET	.\fmopl.c	/^INLINE void OPL_STATUSMASK_SET(FM_OPL *OPL,int flag)$/;"	f
OPL_STATUS_RESET	.\fmopl.c	/^INLINE void OPL_STATUS_RESET(FM_OPL *OPL,int flag)$/;"	f
OPL_STATUS_SET	.\fmopl.c	/^INLINE void OPL_STATUS_SET(FM_OPL *OPL,int flag)$/;"	f
OPL_TIMERHANDLER	.\fmopl.h	/^typedef void (*OPL_TIMERHANDLER)(int channel,double interval_Sec);$/;"	t
OPL_TYPE_ADPCM	.\fmopl.h	45;"	d
OPL_TYPE_IO	.\fmopl.h	47;"	d
OPL_TYPE_KEYBOARD	.\fmopl.h	46;"	d
OPL_TYPE_WAVESEL	.\fmopl.h	44;"	d
OPL_TYPE_Y8950	.\fmopl.h	153;"	d
OPL_TYPE_YM3526	.\fmopl.h	151;"	d
OPL_TYPE_YM3812	.\fmopl.h	152;"	d
OPL_UPDATEHANDLER	.\fmopl.h	/^typedef void (*OPL_UPDATEHANDLER)(int param,int min_interval_us);$/;"	t
OPL_UnLockTable	.\fmopl.c	/^static void OPL_UnLockTable(void)$/;"	f	file:
OPL_initalize	.\fmopl.c	/^static void OPL_initalize(FM_OPL *OPL)$/;"	f	file:
OPT_LEVIREQ	.\ide.c	/^    OPT_LEVIREQ		= 0x40,$/;"	e	enum:md_opt	file:
OPT_MODE	.\ide.c	/^    OPT_MODE		= 0x3f,$/;"	e	enum:md_opt	file:
OPT_MODE_IOMAP1	.\ide.c	/^    OPT_MODE_IOMAP1	= 2,$/;"	e	enum:md_opt	file:
OPT_MODE_IOMAP16	.\ide.c	/^    OPT_MODE_IOMAP16	= 1,$/;"	e	enum:md_opt	file:
OPT_MODE_IOMAP2	.\ide.c	/^    OPT_MODE_IOMAP2	= 3,$/;"	e	enum:md_opt	file:
OPT_MODE_MMAP	.\ide.c	/^    OPT_MODE_MMAP	= 0,$/;"	e	enum:md_opt	file:
OPT_SRESET	.\ide.c	/^    OPT_SRESET		= 0x80,$/;"	e	enum:md_opt	file:
OP_OUT	.\fmopl.c	453;"	d	file:
ORDER	.\pl110_template.h	29;"	d
ORDER	.\pl110_template.h	301;"	d
ORDER	.\pl110_template.h	31;"	d
ORDER	.\pl110_template.h	33;"	d
ORDER	.\pl110_template.h	38;"	d
ORDER	.\pl110_template.h	40;"	d
ORDER	.\pl110_template.h	42;"	d
OSCC	.\pxa2xx.c	172;"	d	file:
OSCR	.\pxa2xx_timer.c	27;"	d	file:
OSCR10	.\pxa2xx_timer.c	34;"	d	file:
OSCR11	.\pxa2xx_timer.c	35;"	d	file:
OSCR4	.\pxa2xx_timer.c	28;"	d	file:
OSCR5	.\pxa2xx_timer.c	29;"	d	file:
OSCR6	.\pxa2xx_timer.c	30;"	d	file:
OSCR7	.\pxa2xx_timer.c	31;"	d	file:
OSCR8	.\pxa2xx_timer.c	32;"	d	file:
OSCR9	.\pxa2xx_timer.c	33;"	d	file:
OSD_CPU_H	.\fmopl.h	15;"	d
OSMR0	.\pxa2xx_timer.c	15;"	d	file:
OSMR1	.\pxa2xx_timer.c	16;"	d	file:
OSMR10	.\pxa2xx_timer.c	25;"	d	file:
OSMR11	.\pxa2xx_timer.c	26;"	d	file:
OSMR2	.\pxa2xx_timer.c	17;"	d	file:
OSMR3	.\pxa2xx_timer.c	18;"	d	file:
OSMR4	.\pxa2xx_timer.c	19;"	d	file:
OSMR5	.\pxa2xx_timer.c	20;"	d	file:
OSMR6	.\pxa2xx_timer.c	21;"	d	file:
OSMR7	.\pxa2xx_timer.c	22;"	d	file:
OSMR8	.\pxa2xx_timer.c	23;"	d	file:
OSMR9	.\pxa2xx_timer.c	24;"	d	file:
OSNR	.\pxa2xx_timer.c	47;"	d	file:
OSSR	.\pxa2xx_timer.c	36;"	d	file:
OUT_OF_RANGE	.\sd.h	32;"	d
OUT_PORT_N	.\wm8750.c	15;"	d	file:
OVL1C1	.\pxa2xx_lcd.c	102;"	d	file:
OVL1C2	.\pxa2xx_lcd.c	103;"	d	file:
OVL2C1	.\pxa2xx_lcd.c	104;"	d	file:
OVL2C2	.\pxa2xx_lcd.c	105;"	d	file:
OVLC1_EN	.\pxa2xx_lcd.c	153;"	d	file:
OWER	.\pxa2xx_timer.c	37;"	d	file:
OpenBIOS_finish_partition	.\firmware_abi.h	/^OpenBIOS_finish_partition(struct OpenBIOS_nvpart_v1 *header, uint32_t size)$/;"	f
OpenBIOS_nvpart_v1	.\firmware_abi.h	/^struct OpenBIOS_nvpart_v1 {$/;"	s
OpenBIOS_set_var	.\firmware_abi.h	/^OpenBIOS_set_var(uint8_t *nvram, uint32_t addr, const unsigned char *str)$/;"	f
PAGE	.\nand.c	84;"	d	file:
PAGE_MASK	.\iommu.c	108;"	d	file:
PAGE_MASK	.\nand.c	86;"	d	file:
PAGE_SECTORS	.\nand.c	104;"	d	file:
PAGE_SECTORS	.\nand.c	658;"	d	file:
PAGE_SECTORS	.\nand.c	94;"	d	file:
PAGE_SECTORS	.\nand.c	99;"	d	file:
PAGE_SHIFT	.\iommu.c	106;"	d	file:
PAGE_SHIFT	.\nand.c	103;"	d	file:
PAGE_SHIFT	.\nand.c	657;"	d	file:
PAGE_SHIFT	.\nand.c	93;"	d	file:
PAGE_SHIFT	.\nand.c	98;"	d	file:
PAGE_SIZE	.\iommu.c	107;"	d	file:
PAGE_SIZE	.\nand.c	102;"	d	file:
PAGE_SIZE	.\nand.c	656;"	d	file:
PAGE_SIZE	.\nand.c	92;"	d	file:
PAGE_SIZE	.\nand.c	97;"	d	file:
PAGE_START	.\nand.c	85;"	d	file:
PALMTE_DC_GPIO	.\palm.c	79;"	d	file:
PALMTE_HDQ_GPIO	.\palm.c	75;"	d	file:
PALMTE_HEADPHONES_GPIO	.\palm.c	76;"	d	file:
PALMTE_MMC1_GPIO	.\palm.c	81;"	d	file:
PALMTE_MMC2_GPIO	.\palm.c	82;"	d	file:
PALMTE_MMC3_GPIO	.\palm.c	83;"	d	file:
PALMTE_MMC_POWER_GPIO	.\palm.c	74;"	d	file:
PALMTE_MMC_SWITCH_GPIO	.\palm.c	80;"	d	file:
PALMTE_MMC_WP_GPIO	.\palm.c	73;"	d	file:
PALMTE_PINTDAV_GPIO	.\palm.c	72;"	d	file:
PALMTE_SPEAKER_GPIO	.\palm.c	77;"	d	file:
PALMTE_TSC_GPIO	.\palm.c	71;"	d	file:
PALMTE_USBDETECT_GPIO	.\palm.c	69;"	d	file:
PALMTE_USB_OR_DC_GPIO	.\palm.c	70;"	d	file:
PARA78	.\rtl8139.c	/^    PARA78 = 0x78,$/;"	e	enum:RTL8139_registers	file:
PARA7c	.\rtl8139.c	/^    PARA7c = 0x7c,        \/* Magic transceiver parameter register. *\/$/;"	e	enum:RTL8139_registers	file:
PARA_CTR_AUTOLF	.\parallel.c	61;"	d	file:
PARA_CTR_DIR	.\parallel.c	57;"	d	file:
PARA_CTR_INIT	.\parallel.c	60;"	d	file:
PARA_CTR_INTEN	.\parallel.c	58;"	d	file:
PARA_CTR_SELECT	.\parallel.c	59;"	d	file:
PARA_CTR_SIGNAL	.\parallel.c	64;"	d	file:
PARA_CTR_STROBE	.\parallel.c	62;"	d	file:
PARA_REG_CTR	.\parallel.c	40;"	d	file:
PARA_REG_DATA	.\parallel.c	38;"	d	file:
PARA_REG_EPP_ADDR	.\parallel.c	41;"	d	file:
PARA_REG_EPP_DATA	.\parallel.c	42;"	d	file:
PARA_REG_STS	.\parallel.c	39;"	d	file:
PARA_STS_ACK	.\parallel.c	48;"	d	file:
PARA_STS_BUSY	.\parallel.c	47;"	d	file:
PARA_STS_ERROR	.\parallel.c	51;"	d	file:
PARA_STS_ONLINE	.\parallel.c	50;"	d	file:
PARA_STS_PAPER	.\parallel.c	49;"	d	file:
PARA_STS_TMOUT	.\parallel.c	52;"	d	file:
PAT	.\vga.c	112;"	d	file:
PAT	.\vga.c	115;"	d	file:
PAT	.\vga.c	117;"	d	file:
PAT	.\vga.c	76;"	d	file:
PAT	.\vga.c	78;"	d	file:
PA_FMT	.\pxa.h	216;"	d
PCFR	.\pxa2xx.c	75;"	d	file:
PCIBridge	.\pci.c	/^} PCIBridge;$/;"	t	typeref:struct:__anon49	file:
PCIBus	.\pci.c	/^struct PCIBus {$/;"	s	file:
PCIC0_PCISERR	.\sh7750.c	/^	PCIC0_PCISERR, PCIC1_PCIERR, PCIC1_PCIPWDWN, PCIC1_PCIPWON,$/;"	e	enum:__anon94	file:
PCIC1	.\sh7750.c	/^	DMAC, PCIC1, TMU2, RTC, SCI1, SCIF, REF,$/;"	e	enum:__anon94	file:
PCIC1_PCIDMA0	.\sh7750.c	/^	PCIC1_PCIDMA0, PCIC1_PCIDMA1, PCIC1_PCIDMA2, PCIC1_PCIDMA3,$/;"	e	enum:__anon94	file:
PCIC1_PCIDMA1	.\sh7750.c	/^	PCIC1_PCIDMA0, PCIC1_PCIDMA1, PCIC1_PCIDMA2, PCIC1_PCIDMA3,$/;"	e	enum:__anon94	file:
PCIC1_PCIDMA2	.\sh7750.c	/^	PCIC1_PCIDMA0, PCIC1_PCIDMA1, PCIC1_PCIDMA2, PCIC1_PCIDMA3,$/;"	e	enum:__anon94	file:
PCIC1_PCIDMA3	.\sh7750.c	/^	PCIC1_PCIDMA0, PCIC1_PCIDMA1, PCIC1_PCIDMA2, PCIC1_PCIDMA3,$/;"	e	enum:__anon94	file:
PCIC1_PCIERR	.\sh7750.c	/^	PCIC0_PCISERR, PCIC1_PCIERR, PCIC1_PCIPWDWN, PCIC1_PCIPWON,$/;"	e	enum:__anon94	file:
PCIC1_PCIPWDWN	.\sh7750.c	/^	PCIC0_PCISERR, PCIC1_PCIERR, PCIC1_PCIPWDWN, PCIC1_PCIPWON,$/;"	e	enum:__anon94	file:
PCIC1_PCIPWON	.\sh7750.c	/^	PCIC0_PCISERR, PCIC1_PCIERR, PCIC1_PCIPWDWN, PCIC1_PCIPWON,$/;"	e	enum:__anon94	file:
PCICirrusVGAState	.\cirrus_vga.c	/^typedef struct PCICirrusVGAState {$/;"	s	file:
PCICirrusVGAState	.\cirrus_vga.c	/^} PCICirrusVGAState;$/;"	t	typeref:struct:PCICirrusVGAState	file:
PCIConfigReadFunc	.\pci.h	/^typedef uint32_t PCIConfigReadFunc(PCIDevice *pci_dev,$/;"	t
PCIConfigWriteFunc	.\pci.h	/^typedef void PCIConfigWriteFunc(PCIDevice *pci_dev,$/;"	t
PCIDevice	.\pci.h	/^struct PCIDevice {$/;"	s
PCIEEPRO100State	.\eepro100.c	/^typedef struct PCIEEPRO100State {$/;"	s	file:
PCIEEPRO100State	.\eepro100.c	/^} PCIEEPRO100State;$/;"	t	typeref:struct:PCIEEPRO100State	file:
PCIES1370State	.\es1370.c	/^typedef struct PCIES1370State {$/;"	s	file:
PCIES1370State	.\es1370.c	/^} PCIES1370State;$/;"	t	typeref:struct:PCIES1370State	file:
PCIErr	.\rtl8139.c	/^    PCIErr = 0x8000,$/;"	e	enum:IntrStatusBits	file:
PCIHostState	.\pci_host.h	/^} PCIHostState;$/;"	t	typeref:struct:__anon50
PCIIDEState	.\ide.c	/^typedef struct PCIIDEState {$/;"	s	file:
PCIIDEState	.\ide.c	/^} PCIIDEState;$/;"	t	typeref:struct:PCIIDEState	file:
PCIIORegion	.\pci.h	/^typedef struct PCIIORegion {$/;"	s
PCIIORegion	.\pci.h	/^} PCIIORegion;$/;"	t	typeref:struct:PCIIORegion
PCIMapIORegionFunc	.\pci.h	/^typedef void PCIMapIORegionFunc(PCIDevice *pci_dev, int region_num,$/;"	t
PCINE2000State	.\ne2000.c	/^typedef struct PCINE2000State {$/;"	s	file:
PCINE2000State	.\ne2000.c	/^} PCINE2000State;$/;"	t	typeref:struct:PCINE2000State	file:
PCIRTL8139State	.\rtl8139.c	/^typedef struct PCIRTL8139State {$/;"	s	file:
PCIRTL8139State	.\rtl8139.c	/^} PCIRTL8139State;$/;"	t	typeref:struct:PCIRTL8139State	file:
PCIRevisionID	.\rtl8139.c	/^    PCIRevisionID = 0x5E,$/;"	e	enum:RTL8139_registers	file:
PCIVGAState	.\vga.c	/^typedef struct PCIVGAState {$/;"	s	file:
PCIVGAState	.\vga.c	/^} PCIVGAState;$/;"	t	typeref:struct:PCIVGAState	file:
PCI_ADDRESS_SPACE_IO	.\pci.h	19;"	d
PCI_ADDRESS_SPACE_MEM	.\pci.h	18;"	d
PCI_ADDRESS_SPACE_MEM_PREFETCH	.\pci.h	20;"	d
PCI_BASE_ADDRESS_0	.\eepro100.c	60;"	d	file:
PCI_BASE_ADDRESS_1	.\eepro100.c	61;"	d	file:
PCI_BASE_ADDRESS_2	.\eepro100.c	62;"	d	file:
PCI_BASE_ADDRESS_3	.\eepro100.c	63;"	d	file:
PCI_BASE_ADDRESS_4	.\eepro100.c	64;"	d	file:
PCI_BASE_ADDRESS_5	.\eepro100.c	65;"	d	file:
PCI_CLASS_BASE_DISPLAY	.\cirrus_vga.c	192;"	d	file:
PCI_CLASS_BASE_DISPLAY	.\vmware_vga.c	1155;"	d	file:
PCI_CLASS_CODE	.\eepro100.c	56;"	d	file:
PCI_CLASS_DEVICE	.\pci.h	39;"	d
PCI_CLASS_HEADERTYPE_00h	.\cirrus_vga.c	196;"	d	file:
PCI_CLASS_HEADERTYPE_00h	.\vmware_vga.c	1157;"	d	file:
PCI_CLASS_SUB_VGA	.\cirrus_vga.c	194;"	d	file:
PCI_CLASS_SUB_VGA	.\vmware_vga.c	1156;"	d	file:
PCI_COMMAND	.\eepro100.c	52;"	d	file:
PCI_COMMAND	.\pci.h	36;"	d
PCI_COMMAND_ADDRESSDATASTEPPING	.\cirrus_vga.c	188;"	d	file:
PCI_COMMAND_BACKTOBACKTRANS	.\cirrus_vga.c	190;"	d	file:
PCI_COMMAND_BUSMASTER	.\cirrus_vga.c	183;"	d	file:
PCI_COMMAND_IO	.\pci.h	37;"	d
PCI_COMMAND_IOACCESS	.\cirrus_vga.c	181;"	d	file:
PCI_COMMAND_MEMACCESS	.\cirrus_vga.c	182;"	d	file:
PCI_COMMAND_MEMORY	.\pci.h	38;"	d
PCI_COMMAND_MEMWRITEINVALID	.\cirrus_vga.c	185;"	d	file:
PCI_COMMAND_PALETTESNOOPING	.\cirrus_vga.c	186;"	d	file:
PCI_COMMAND_PARITYDETECTION	.\cirrus_vga.c	187;"	d	file:
PCI_COMMAND_SERR	.\cirrus_vga.c	189;"	d	file:
PCI_COMMAND_SPECIALCYCLE	.\cirrus_vga.c	184;"	d	file:
PCI_CONFIG_16	.\eepro100.c	69;"	d	file:
PCI_CONFIG_32	.\eepro100.c	71;"	d	file:
PCI_CONFIG_8	.\eepro100.c	67;"	d	file:
PCI_DEVICES_MAX	.\pci.h	32;"	d
PCI_DEVICE_CLGD5462	.\cirrus_vga.c	177;"	d	file:
PCI_DEVICE_CLGD5465	.\cirrus_vga.c	178;"	d	file:
PCI_DEVICE_ID	.\eepro100.c	51;"	d	file:
PCI_DEVICE_ID	.\pci.h	35;"	d
PCI_DEVICE_ID_VMWARE_IDE	.\vmware_vga.c	1154;"	d	file:
PCI_DEVICE_ID_VMWARE_NET	.\vmware_vga.c	1152;"	d	file:
PCI_DEVICE_ID_VMWARE_SCSI	.\vmware_vga.c	1153;"	d	file:
PCI_DEVICE_ID_VMWARE_SVGA	.\vmware_vga.c	1151;"	d	file:
PCI_DEVICE_ID_VMWARE_SVGA2	.\vmware_vga.c	1150;"	d	file:
PCI_FLASH_SIZE	.\eepro100.c	107;"	d	file:
PCI_FREQUENCY	.\rtl8139.c	54;"	d	file:
PCI_HEADER_TYPE	.\eepro100.c	58;"	d	file:
PCI_INTERRUPT_LINE	.\pci.h	40;"	d
PCI_INTERRUPT_PIN	.\pci.h	41;"	d
PCI_IO_SIZE	.\eepro100.c	106;"	d	file:
PCI_IRQ_WORDS	.\piix_pci.c	217;"	d	file:
PCI_MAPPING_ENTRY	.\gt64xxx.c	231;"	d	file:
PCI_MAP_IO	.\cirrus_vga.c	201;"	d	file:
PCI_MAP_IO_ADDR_MASK	.\cirrus_vga.c	203;"	d	file:
PCI_MAP_MEM	.\cirrus_vga.c	200;"	d	file:
PCI_MAP_MEMFLAGS_32BIT	.\cirrus_vga.c	204;"	d	file:
PCI_MAP_MEMFLAGS_32BIT_1M	.\cirrus_vga.c	205;"	d	file:
PCI_MAP_MEMFLAGS_64BIT	.\cirrus_vga.c	206;"	d	file:
PCI_MAP_MEMFLAGS_CACHEABLE	.\cirrus_vga.c	207;"	d	file:
PCI_MAP_MEM_ADDR_MASK	.\cirrus_vga.c	202;"	d	file:
PCI_MAX_LAT	.\pci.h	43;"	d
PCI_MEM_SIZE	.\eepro100.c	105;"	d	file:
PCI_MIN_GNT	.\pci.h	42;"	d
PCI_NUM_REGIONS	.\pci.h	30;"	d
PCI_REVISION_ID	.\eepro100.c	55;"	d	file:
PCI_ROMBIOS_ENABLED	.\cirrus_vga.c	211;"	d	file:
PCI_ROM_SLOT	.\pci.h	29;"	d
PCI_STATUS	.\eepro100.c	53;"	d	file:
PCI_SUBCLASS_CODE	.\eepro100.c	57;"	d	file:
PCI_VENDOR_CIRRUS	.\cirrus_vga.c	176;"	d	file:
PCI_VENDOR_ID	.\eepro100.c	50;"	d	file:
PCI_VENDOR_ID	.\pci.h	34;"	d
PCI_VENDOR_ID_VMWARE	.\vmware_vga.c	1149;"	d	file:
PCMD0	.\pxa2xx.c	87;"	d	file:
PCMD31	.\pxa2xx.c	88;"	d	file:
PCNET_IOPORT_SIZE	.\pcnet.c	52;"	d	file:
PCNET_PNPMMIO_SIZE	.\pcnet.c	53;"	d	file:
PCNET_RECV_STORE	.\pcnet.c	1159;"	d	file:
PCNET_RECV_STORE	.\pcnet.c	1187;"	d	file:
PCNetState	.\pcnet.c	/^typedef struct PCNetState_st PCNetState;$/;"	t	typeref:struct:PCNetState_st	file:
PCNetState_st	.\pcnet.c	/^struct PCNetState_st {$/;"	s	file:
PCSPK_BUF_LEN	.\pcspk.c	31;"	d	file:
PCSPK_MAX_FREQ	.\pcspk.c	33;"	d	file:
PCSPK_MIN_COUNT	.\pcspk.c	34;"	d	file:
PCSPK_SAMPLE_RATE	.\pcspk.c	32;"	d	file:
PCSR_DBG	.\mcf5208.c	22;"	d	file:
PCSR_DOZE	.\mcf5208.c	23;"	d	file:
PCSR_EN	.\mcf5208.c	17;"	d	file:
PCSR_OVW	.\mcf5208.c	21;"	d	file:
PCSR_PIE	.\mcf5208.c	20;"	d	file:
PCSR_PIF	.\mcf5208.c	19;"	d	file:
PCSR_PRE_MASK	.\mcf5208.c	25;"	d	file:
PCSR_PRE_SHIFT	.\mcf5208.c	24;"	d	file:
PCSR_RLD	.\mcf5208.c	18;"	d	file:
PCSTimeout	.\rtl8139.c	/^    PCSTimeout = 0x4000,$/;"	e	enum:IntrStatusBits	file:
PCSpkState	.\pcspk.c	/^} PCSpkState;$/;"	t	typeref:struct:__anon51	file:
PC_MAX_BOOT_DEVICES	.\pc.c	217;"	d	file:
PEDR	.\pxa2xx.c	74;"	d	file:
PEN_IRQ	.\mainstone.h	25;"	d
PERIODS_TO_LIMIT	.\slavio_timer.c	89;"	d	file:
PFER	.\pxa2xx.c	73;"	d	file:
PFLASH_BUG	.\pflash_cfi01.c	45;"	d	file:
PGSR0	.\pxa2xx.c	76;"	d	file:
PGSR1	.\pxa2xx.c	77;"	d	file:
PGSR2	.\pxa2xx.c	78;"	d	file:
PGSR3	.\pxa2xx.c	79;"	d	file:
PHASE_CMD	.\lsi53c895a.c	148;"	d	file:
PHASE_DI	.\lsi53c895a.c	147;"	d	file:
PHASE_DO	.\lsi53c895a.c	146;"	d	file:
PHASE_MASK	.\lsi53c895a.c	152;"	d	file:
PHASE_MI	.\lsi53c895a.c	151;"	d	file:
PHASE_MO	.\lsi53c895a.c	150;"	d	file:
PHASE_ST	.\lsi53c895a.c	149;"	d	file:
PHYSADDR	.\pcnet.c	156;"	d	file:
PHYS_TO_VIRT	.\mips_malta.c	49;"	d	file:
PHYS_TO_VIRT	.\mips_malta.c	51;"	d	file:
PHYS_TO_VIRT	.\mips_mipssim.c	42;"	d	file:
PHYS_TO_VIRT	.\mips_mipssim.c	44;"	d	file:
PHYS_TO_VIRT	.\mips_pica61.c	40;"	d	file:
PHYS_TO_VIRT	.\mips_pica61.c	42;"	d	file:
PHYS_TO_VIRT	.\mips_r4k.c	24;"	d	file:
PI	.\fmopl.c	46;"	d	file:
PIAR	.\pxa2xx.c	896;"	d	file:
PIIX4PMState	.\acpi.c	/^typedef struct PIIX4PMState {$/;"	s	file:
PIIX4PMState	.\acpi.c	/^} PIIX4PMState;$/;"	t	typeref:struct:PIIX4PMState	file:
PINS_CRDY	.\ide.c	/^    PINS_CRDY		= 0x20,$/;"	e	enum:md_pins	file:
PINS_MRDY	.\ide.c	/^    PINS_MRDY		= 0x02,$/;"	e	enum:md_pins	file:
PITChannelState	.\i8254.c	/^typedef struct PITChannelState {$/;"	s	file:
PITChannelState	.\i8254.c	/^} PITChannelState;$/;"	t	typeref:struct:PITChannelState	file:
PITState	.\i8254.c	/^struct PITState {$/;"	s	file:
PITState	.\pc.h	/^typedef struct PITState PITState;$/;"	t	typeref:struct:PITState
PIT_FREQ	.\pc.h	50;"	d
PIXEL_NAME	.\vga_template.h	39;"	d
PIXEL_NAME	.\vga_template.h	41;"	d
PIXEL_NAME	.\vga_template.h	524;"	d
PIXEL_TYPE	.\omap_lcd_template.h	172;"	d
PIXEL_TYPE	.\omap_lcd_template.h	32;"	d
PIXEL_TYPE	.\omap_lcd_template.h	35;"	d
PIXEL_TYPE	.\omap_lcd_template.h	38;"	d
PIXEL_TYPE	.\vga_template.h	27;"	d
PIXEL_TYPE	.\vga_template.h	30;"	d
PIXEL_TYPE	.\vga_template.h	33;"	d
PIXEL_TYPE	.\vga_template.h	523;"	d
PKSR	.\pxa2xx.c	86;"	d	file:
PKWR	.\pxa2xx.c	85;"	d	file:
PL011_ARM	.\primecell.h	/^    PL011_ARM,$/;"	e	enum:pl011_type
PL011_FLAG_RXFE	.\pl011.c	42;"	d	file:
PL011_FLAG_RXFF	.\pl011.c	40;"	d	file:
PL011_FLAG_TXFE	.\pl011.c	39;"	d	file:
PL011_FLAG_TXFF	.\pl011.c	41;"	d	file:
PL011_INT_RX	.\pl011.c	37;"	d	file:
PL011_INT_TX	.\pl011.c	36;"	d	file:
PL011_LUMINARY	.\primecell.h	/^    PL011_LUMINARY$/;"	e	enum:pl011_type
PL022_CR1_LBM	.\pl022.c	26;"	d	file:
PL022_CR1_MS	.\pl022.c	28;"	d	file:
PL022_CR1_SDO	.\pl022.c	29;"	d	file:
PL022_CR1_SSE	.\pl022.c	27;"	d	file:
PL022_INT_ROR	.\pl022.c	37;"	d	file:
PL022_INT_RT	.\pl022.c	38;"	d	file:
PL022_INT_RX	.\pl022.c	39;"	d	file:
PL022_INT_TX	.\pl022.c	40;"	d	file:
PL022_SR_BSY	.\pl022.c	35;"	d	file:
PL022_SR_RFF	.\pl022.c	34;"	d	file:
PL022_SR_RNE	.\pl022.c	33;"	d	file:
PL022_SR_TFE	.\pl022.c	31;"	d	file:
PL022_SR_TNF	.\pl022.c	32;"	d	file:
PL050_KMIC	.\pl050.c	30;"	d	file:
PL050_KMID	.\pl050.c	31;"	d	file:
PL050_RXBUSY	.\pl050.c	28;"	d	file:
PL050_RXFULL	.\pl050.c	27;"	d	file:
PL050_RXPARITY	.\pl050.c	29;"	d	file:
PL050_TXBUSY	.\pl050.c	26;"	d	file:
PL050_TXEMPTY	.\pl050.c	25;"	d	file:
PL080_CCONF_A	.\pl080.c	19;"	d	file:
PL080_CCONF_E	.\pl080.c	23;"	d	file:
PL080_CCONF_H	.\pl080.c	18;"	d	file:
PL080_CCONF_IE	.\pl080.c	22;"	d	file:
PL080_CCONF_ITC	.\pl080.c	21;"	d	file:
PL080_CCONF_L	.\pl080.c	20;"	d	file:
PL080_CCTRL_D	.\pl080.c	28;"	d	file:
PL080_CCTRL_DI	.\pl080.c	26;"	d	file:
PL080_CCTRL_I	.\pl080.c	25;"	d	file:
PL080_CCTRL_S	.\pl080.c	29;"	d	file:
PL080_CCTRL_SI	.\pl080.c	27;"	d	file:
PL080_CONF_E	.\pl080.c	14;"	d	file:
PL080_CONF_M1	.\pl080.c	15;"	d	file:
PL080_CONF_M2	.\pl080.c	16;"	d	file:
PL080_MAX_CHANNELS	.\pl080.c	13;"	d	file:
PL110_CR_BEBO	.\pl110.c	16;"	d	file:
PL110_CR_BEPO	.\pl110.c	17;"	d	file:
PL110_CR_BGR	.\pl110.c	15;"	d	file:
PL110_CR_EN	.\pl110.c	14;"	d	file:
PL110_CR_PWR	.\pl110.c	18;"	d	file:
PL181_CMD_ENABLE	.\pl181.c	57;"	d	file:
PL181_CMD_INDEX	.\pl181.c	52;"	d	file:
PL181_CMD_INTERRUPT	.\pl181.c	55;"	d	file:
PL181_CMD_LONGRESP	.\pl181.c	54;"	d	file:
PL181_CMD_PENDING	.\pl181.c	56;"	d	file:
PL181_CMD_RESPONSE	.\pl181.c	53;"	d	file:
PL181_DATA_DIRECTION	.\pl181.c	60;"	d	file:
PL181_DATA_DMAENABLE	.\pl181.c	62;"	d	file:
PL181_DATA_ENABLE	.\pl181.c	59;"	d	file:
PL181_DATA_MODE	.\pl181.c	61;"	d	file:
PL181_FIFO_LEN	.\pl181.c	23;"	d	file:
PL181_STATUS_CMDACTIVE	.\pl181.c	74;"	d	file:
PL181_STATUS_CMDCRCFAIL	.\pl181.c	64;"	d	file:
PL181_STATUS_CMDRESPEND	.\pl181.c	70;"	d	file:
PL181_STATUS_CMDSENT	.\pl181.c	71;"	d	file:
PL181_STATUS_CMDTIMEOUT	.\pl181.c	66;"	d	file:
PL181_STATUS_DATABLOCKEND	.\pl181.c	73;"	d	file:
PL181_STATUS_DATACRCFAIL	.\pl181.c	65;"	d	file:
PL181_STATUS_DATAEND	.\pl181.c	72;"	d	file:
PL181_STATUS_DATATIMEOUT	.\pl181.c	67;"	d	file:
PL181_STATUS_RXACTIVE	.\pl181.c	76;"	d	file:
PL181_STATUS_RXDATAAVLBL	.\pl181.c	84;"	d	file:
PL181_STATUS_RXFIFOEMPTY	.\pl181.c	82;"	d	file:
PL181_STATUS_RXFIFOFULL	.\pl181.c	80;"	d	file:
PL181_STATUS_RXFIFOHALFFULL	.\pl181.c	78;"	d	file:
PL181_STATUS_RXOVERRUN	.\pl181.c	69;"	d	file:
PL181_STATUS_RX_FIFO	.\pl181.c	91;"	d	file:
PL181_STATUS_TXACTIVE	.\pl181.c	75;"	d	file:
PL181_STATUS_TXDATAAVLBL	.\pl181.c	83;"	d	file:
PL181_STATUS_TXFIFOEMPTY	.\pl181.c	81;"	d	file:
PL181_STATUS_TXFIFOFULL	.\pl181.c	79;"	d	file:
PL181_STATUS_TXFIFOHALFEMPTY	.\pl181.c	77;"	d	file:
PL181_STATUS_TXUNDERRUN	.\pl181.c	68;"	d	file:
PL181_STATUS_TX_FIFO	.\pl181.c	86;"	d	file:
PL190_NUM_PRIO	.\pl190.c	18;"	d	file:
PLB0_ACR	.\ppc405_uc.c	/^    PLB0_ACR  = 0x087,$/;"	e	enum:__anon62	file:
PLB0_BEAR	.\ppc405_uc.c	/^    PLB0_BEAR = 0x086,$/;"	e	enum:__anon62	file:
PLB0_BESR	.\ppc405_uc.c	/^    PLB0_BESR = 0x084,$/;"	e	enum:__anon62	file:
PMCR	.\pxa2xx.c	68;"	d	file:
PMU_PACKET	.\cuda.c	63;"	d	file:
PM_FREQ	.\acpi.c	30;"	d	file:
PNM	.\sd.c	213;"	d	file:
POB0_BEAR	.\ppc405_uc.c	/^    POB0_BEAR  = 0x0A4,$/;"	e	enum:__anon63	file:
POB0_BESR0	.\ppc405_uc.c	/^    POB0_BESR0 = 0x0A0,$/;"	e	enum:__anon63	file:
POB0_BESR1	.\ppc405_uc.c	/^    POB0_BESR1 = 0x0A2,$/;"	e	enum:__anon63	file:
POLYNOMIAL	.\eepro100.c	278;"	d	file:
POLYNOMIAL	.\ne2000.c	176;"	d	file:
POLYNOMIAL	.\rtl8139.c	696;"	d	file:
PORT_CONNECTION	.\usb-hub.c	68;"	d	file:
PORT_C_CONNECTION	.\usb-hub.c	76;"	d	file:
PORT_C_ENABLE	.\usb-hub.c	77;"	d	file:
PORT_C_OVERCURRENT	.\usb-hub.c	79;"	d	file:
PORT_C_RESET	.\usb-hub.c	80;"	d	file:
PORT_C_SUSPEND	.\usb-hub.c	78;"	d	file:
PORT_DUMP	.\eepro100.c	1093;"	d	file:
PORT_ENABLE	.\usb-hub.c	69;"	d	file:
PORT_HIGHSPEED	.\usb-hub.c	75;"	d	file:
PORT_INDICATOR	.\usb-hub.c	82;"	d	file:
PORT_LOWSPEED	.\usb-hub.c	74;"	d	file:
PORT_OVERCURRENT	.\usb-hub.c	71;"	d	file:
PORT_POWER	.\usb-hub.c	73;"	d	file:
PORT_RESET	.\usb-hub.c	72;"	d	file:
PORT_SELECTION_MASK	.\eepro100.c	1094;"	d	file:
PORT_SELECTIVE_RESET	.\eepro100.c	1092;"	d	file:
PORT_SELFTEST	.\eepro100.c	1091;"	d	file:
PORT_SOFTWARE_RESET	.\eepro100.c	1090;"	d	file:
PORT_STAT_CONNECTION	.\usb-hub.c	51;"	d	file:
PORT_STAT_C_CONNECTION	.\usb-hub.c	62;"	d	file:
PORT_STAT_C_ENABLE	.\usb-hub.c	63;"	d	file:
PORT_STAT_C_OVERCURRENT	.\usb-hub.c	65;"	d	file:
PORT_STAT_C_RESET	.\usb-hub.c	66;"	d	file:
PORT_STAT_C_SUSPEND	.\usb-hub.c	64;"	d	file:
PORT_STAT_ENABLE	.\usb-hub.c	52;"	d	file:
PORT_STAT_HIGH_SPEED	.\usb-hub.c	58;"	d	file:
PORT_STAT_INDICATOR	.\usb-hub.c	60;"	d	file:
PORT_STAT_LOW_SPEED	.\usb-hub.c	57;"	d	file:
PORT_STAT_OVERCURRENT	.\usb-hub.c	54;"	d	file:
PORT_STAT_POWER	.\usb-hub.c	56;"	d	file:
PORT_STAT_RESET	.\usb-hub.c	55;"	d	file:
PORT_STAT_SUSPEND	.\usb-hub.c	53;"	d	file:
PORT_STAT_TEST	.\usb-hub.c	59;"	d	file:
PORT_SUSPEND	.\usb-hub.c	70;"	d	file:
PORT_TEST	.\usb-hub.c	81;"	d	file:
POWER_PACKET	.\cuda.c	61;"	d	file:
PPC405CR_CLK_NB	.\ppc405_uc.c	/^    PPC405CR_CLK_NB    = 7,$/;"	e	enum:__anon70	file:
PPC405CR_CPC0_CR0	.\ppc405_uc.c	/^    PPC405CR_CPC0_CR0    = 0x0B1,$/;"	e	enum:__anon69	file:
PPC405CR_CPC0_CR1	.\ppc405_uc.c	/^    PPC405CR_CPC0_CR1    = 0x0B2,$/;"	e	enum:__anon69	file:
PPC405CR_CPC0_ER	.\ppc405_uc.c	/^    PPC405CR_CPC0_ER     = 0x0B9,$/;"	e	enum:__anon69	file:
PPC405CR_CPC0_FR	.\ppc405_uc.c	/^    PPC405CR_CPC0_FR     = 0x0BA,$/;"	e	enum:__anon69	file:
PPC405CR_CPC0_JTAGID	.\ppc405_uc.c	/^    PPC405CR_CPC0_JTAGID = 0x0B5,$/;"	e	enum:__anon69	file:
PPC405CR_CPC0_PLLMR	.\ppc405_uc.c	/^    PPC405CR_CPC0_PLLMR  = 0x0B0,$/;"	e	enum:__anon69	file:
PPC405CR_CPC0_PSR	.\ppc405_uc.c	/^    PPC405CR_CPC0_PSR    = 0x0B4,$/;"	e	enum:__anon69	file:
PPC405CR_CPC0_SR	.\ppc405_uc.c	/^    PPC405CR_CPC0_SR     = 0x0BB,$/;"	e	enum:__anon69	file:
PPC405CR_CPU_CLK	.\ppc405_uc.c	/^    PPC405CR_CPU_CLK   = 0,$/;"	e	enum:__anon70	file:
PPC405CR_EXT_CLK	.\ppc405_uc.c	/^    PPC405CR_EXT_CLK   = 5,$/;"	e	enum:__anon70	file:
PPC405CR_OPB_CLK	.\ppc405_uc.c	/^    PPC405CR_OPB_CLK   = 4,$/;"	e	enum:__anon70	file:
PPC405CR_PLB_CLK	.\ppc405_uc.c	/^    PPC405CR_PLB_CLK   = 2,$/;"	e	enum:__anon70	file:
PPC405CR_SDRAM_CLK	.\ppc405_uc.c	/^    PPC405CR_SDRAM_CLK = 3,$/;"	e	enum:__anon70	file:
PPC405CR_TMR_CLK	.\ppc405_uc.c	/^    PPC405CR_TMR_CLK   = 1,$/;"	e	enum:__anon70	file:
PPC405CR_UART_CLK	.\ppc405_uc.c	/^    PPC405CR_UART_CLK  = 6,$/;"	e	enum:__anon70	file:
PPC405EP_CLK_NB	.\ppc405_uc.c	/^    PPC405EP_CLK_NB    = 8,$/;"	e	enum:__anon72	file:
PPC405EP_CPC0_BOOT	.\ppc405_uc.c	/^    PPC405EP_CPC0_BOOT   = 0x0F1,$/;"	e	enum:__anon71	file:
PPC405EP_CPC0_EPCTL	.\ppc405_uc.c	/^    PPC405EP_CPC0_EPCTL  = 0x0F3,$/;"	e	enum:__anon71	file:
PPC405EP_CPC0_JTAGID	.\ppc405_uc.c	/^    PPC405EP_CPC0_JTAGID = 0x0F7,$/;"	e	enum:__anon71	file:
PPC405EP_CPC0_PCI	.\ppc405_uc.c	/^    PPC405EP_CPC0_PCI    = 0x0F9,$/;"	e	enum:__anon71	file:
PPC405EP_CPC0_PLLMR0	.\ppc405_uc.c	/^    PPC405EP_CPC0_PLLMR0 = 0x0F0,$/;"	e	enum:__anon71	file:
PPC405EP_CPC0_PLLMR1	.\ppc405_uc.c	/^    PPC405EP_CPC0_PLLMR1 = 0x0F4,$/;"	e	enum:__anon71	file:
PPC405EP_CPC0_SRR	.\ppc405_uc.c	/^    PPC405EP_CPC0_SRR    = 0x0F6,$/;"	e	enum:__anon71	file:
PPC405EP_CPC0_UCR	.\ppc405_uc.c	/^    PPC405EP_CPC0_UCR    = 0x0F5,$/;"	e	enum:__anon71	file:
PPC405EP_CPU_CLK	.\ppc405_uc.c	/^    PPC405EP_CPU_CLK   = 0,$/;"	e	enum:__anon72	file:
PPC405EP_EBC_CLK	.\ppc405_uc.c	/^    PPC405EP_EBC_CLK   = 3,$/;"	e	enum:__anon72	file:
PPC405EP_MAL_CLK	.\ppc405_uc.c	/^    PPC405EP_MAL_CLK   = 4,$/;"	e	enum:__anon72	file:
PPC405EP_OPB_CLK	.\ppc405_uc.c	/^    PPC405EP_OPB_CLK   = 2,$/;"	e	enum:__anon72	file:
PPC405EP_PCI_CLK	.\ppc405_uc.c	/^    PPC405EP_PCI_CLK   = 5,$/;"	e	enum:__anon72	file:
PPC405EP_PLB_CLK	.\ppc405_uc.c	/^    PPC405EP_PLB_CLK   = 1,$/;"	e	enum:__anon72	file:
PPC405EP_UART0_CLK	.\ppc405_uc.c	/^    PPC405EP_UART0_CLK = 6,$/;"	e	enum:__anon72	file:
PPC405EP_UART1_CLK	.\ppc405_uc.c	/^    PPC405EP_UART1_CLK = 7,$/;"	e	enum:__anon72	file:
PPCUIC_OUTPUT_CINT	.\ppc4xx.h	/^    PPCUIC_OUTPUT_CINT = 1,$/;"	e	enum:__anon73
PPCUIC_OUTPUT_INT	.\ppc4xx.h	/^    PPCUIC_OUTPUT_INT = 0,$/;"	e	enum:__anon73
PPCUIC_OUTPUT_NB	.\ppc4xx.h	/^    PPCUIC_OUTPUT_NB,$/;"	e	enum:__anon73
PPC_405_H	.\ppc405.h	26;"	d
PPC_4XX_H	.\ppc4xx.h	26;"	d
PPC_IO_BASE	.\ppc_prep.c	87;"	d	file:
PPC_IO_DPRINTF	.\ppc_prep.c	55;"	d	file:
PPC_IO_DPRINTF	.\ppc_prep.c	64;"	d	file:
PPC_IO_DPRINTF	.\ppc_prep.c	71;"	d	file:
PPC_NVRAM_set_params	.\ppc.c	/^int PPC_NVRAM_set_params (nvram_t *nvram, uint16_t NVRAM_size,$/;"	f
PPC_PCIIO_config	.\prep_pci.c	/^static inline uint32_t PPC_PCIIO_config(target_phys_addr_t addr)$/;"	f	file:
PPC_PCIIO_read	.\prep_pci.c	/^static CPUReadMemoryFunc *PPC_PCIIO_read[] = {$/;"	v	file:
PPC_PCIIO_readb	.\prep_pci.c	/^static uint32_t PPC_PCIIO_readb (void *opaque, target_phys_addr_t addr)$/;"	f	file:
PPC_PCIIO_readl	.\prep_pci.c	/^static uint32_t PPC_PCIIO_readl (void *opaque, target_phys_addr_t addr)$/;"	f	file:
PPC_PCIIO_readw	.\prep_pci.c	/^static uint32_t PPC_PCIIO_readw (void *opaque, target_phys_addr_t addr)$/;"	f	file:
PPC_PCIIO_write	.\prep_pci.c	/^static CPUWriteMemoryFunc *PPC_PCIIO_write[] = {$/;"	v	file:
PPC_PCIIO_writeb	.\prep_pci.c	/^static void PPC_PCIIO_writeb (void *opaque, target_phys_addr_t addr, uint32_t val)$/;"	f	file:
PPC_PCIIO_writel	.\prep_pci.c	/^static void PPC_PCIIO_writel (void *opaque, target_phys_addr_t addr, uint32_t val)$/;"	f	file:
PPC_PCIIO_writew	.\prep_pci.c	/^static void PPC_PCIIO_writew (void *opaque, target_phys_addr_t addr, uint32_t val)$/;"	f	file:
PPC_debug_write	.\ppc.c	/^void PPC_debug_write (void *opaque, uint32_t addr, uint32_t val)$/;"	f
PPC_intack_read	.\ppc_prep.c	/^static CPUReadMemoryFunc *PPC_intack_read[] = {$/;"	v	file:
PPC_intack_readb	.\ppc_prep.c	/^static uint32_t PPC_intack_readb (void *opaque, target_phys_addr_t addr)$/;"	f	file:
PPC_intack_readl	.\ppc_prep.c	/^static uint32_t PPC_intack_readl (void *opaque, target_phys_addr_t addr)$/;"	f	file:
PPC_intack_readw	.\ppc_prep.c	/^static uint32_t PPC_intack_readw (void *opaque, target_phys_addr_t addr)$/;"	f	file:
PPC_intack_write	.\ppc_prep.c	/^static CPUWriteMemoryFunc *PPC_intack_write[] = {$/;"	v	file:
PPC_prep_io_read	.\ppc_prep.c	/^CPUReadMemoryFunc *PPC_prep_io_read[] = {$/;"	v
PPC_prep_io_readb	.\ppc_prep.c	/^static uint32_t PPC_prep_io_readb (void *opaque, target_phys_addr_t addr)$/;"	f	file:
PPC_prep_io_readl	.\ppc_prep.c	/^static uint32_t PPC_prep_io_readl (void *opaque, target_phys_addr_t addr)$/;"	f	file:
PPC_prep_io_readw	.\ppc_prep.c	/^static uint32_t PPC_prep_io_readw (void *opaque, target_phys_addr_t addr)$/;"	f	file:
PPC_prep_io_write	.\ppc_prep.c	/^CPUWriteMemoryFunc *PPC_prep_io_write[] = {$/;"	v
PPC_prep_io_writeb	.\ppc_prep.c	/^static void PPC_prep_io_writeb (void *opaque, target_phys_addr_t addr,$/;"	f	file:
PPC_prep_io_writel	.\ppc_prep.c	/^static void PPC_prep_io_writel (void *opaque, target_phys_addr_t addr,$/;"	f	file:
PPC_prep_io_writew	.\ppc_prep.c	/^static void PPC_prep_io_writew (void *opaque, target_phys_addr_t addr,$/;"	f	file:
PREPPCIState	.\prep_pci.c	/^typedef PCIHostState PREPPCIState;$/;"	t	file:
PREP_io_800_readb	.\ppc_prep.c	/^static uint32_t PREP_io_800_readb (void *opaque, uint32_t addr)$/;"	f	file:
PREP_io_800_writeb	.\ppc_prep.c	/^static void PREP_io_800_writeb (void *opaque, uint32_t addr, uint32_t val)$/;"	f	file:
PREP_io_read	.\ppc_prep.c	/^static uint32_t PREP_io_read (void *opaque, uint32_t addr)$/;"	f	file:
PREP_io_write	.\ppc_prep.c	/^static void PREP_io_write (void *opaque, uint32_t addr, uint32_t val)$/;"	f	file:
PRER	.\pxa2xx.c	72;"	d	file:
PRIMECELL_H	.\primecell.h	2;"	d
PRINT_PKTHDR	.\pcnet.c	551;"	d	file:
PRINT_RMD	.\pcnet.c	309;"	d	file:
PRINT_TMD	.\pcnet.c	281;"	d	file:
PROM_ADDR	.\sun4u.c	39;"	d	file:
PROM_FILENAME	.\sun4m.c	76;"	d	file:
PROM_FILENAME	.\sun4u.c	44;"	d	file:
PROM_SIZE_MAX	.\sun4m.c	74;"	d	file:
PROM_SIZE_MAX	.\sun4u.c	38;"	d	file:
PROM_VADDR	.\sun4m.c	75;"	d	file:
PROM_VADDR	.\sun4u.c	40;"	d	file:
PRSR	.\pxa2xx_lcd.c	109;"	d	file:
PRTBUF_PRT_BUF	.\pxa2xx_mmci.c	97;"	d	file:
PRV	.\sd.c	214;"	d	file:
PS2KbdState	.\ps2.c	/^} PS2KbdState;$/;"	t	typeref:struct:__anon79	file:
PS2MouseState	.\ps2.c	/^} PS2MouseState;$/;"	t	typeref:struct:__anon80	file:
PS2Queue	.\ps2.c	/^} PS2Queue;$/;"	t	typeref:struct:__anon77	file:
PS2State	.\ps2.c	/^} PS2State;$/;"	t	typeref:struct:__anon78	file:
PS2_QUEUE_SIZE	.\ps2.c	71;"	d	file:
PSLR	.\pxa2xx.c	81;"	d	file:
PSPR	.\pxa2xx.c	70;"	d	file:
PSSR	.\pxa2xx.c	69;"	d	file:
PTSR	.\pxa2xx.c	82;"	d	file:
PUCR	.\pxa2xx.c	84;"	d	file:
PUTPIXEL	.\cirrus_vga_rop2.h	26;"	d
PUTPIXEL	.\cirrus_vga_rop2.h	281;"	d
PUTPIXEL	.\cirrus_vga_rop2.h	28;"	d
PUTPIXEL	.\cirrus_vga_rop2.h	30;"	d
PUTPIXEL	.\cirrus_vga_rop2.h	34;"	d
PUT_PIXEL2	.\vga_template.h	188;"	d
PUT_PIXEL2	.\vga_template.h	190;"	d
PUT_PIXEL2	.\vga_template.h	192;"	d
PUT_PIXEL2	.\vga_template.h	520;"	d
PVCR	.\pxa2xx.c	83;"	d	file:
PWER	.\pxa2xx.c	71;"	d	file:
PWRBTN_EN	.\acpi.c	55;"	d	file:
PWRDN	.\rtl8139.c	/^    PWRDN = (1 << 0),    \/* only on 8139, 8139A *\/$/;"	e	enum:Config1Bits	file:
PXA255_DMA_NUM_CHANNELS	.\pxa2xx_dma.c	49;"	d	file:
PXA25X_FREQ	.\pxa2xx_timer.c	49;"	d	file:
PXA25X_PIC_HWUART	.\pxa.h	18;"	d
PXA25X_PIC_NSSP	.\pxa.h	25;"	d
PXA26X_PIC_ASSP	.\pxa.h	24;"	d
PXA27X_DMA_NUM_CHANNELS	.\pxa2xx_dma.c	50;"	d	file:
PXA27X_FREQ	.\pxa2xx_timer.c	50;"	d	file:
PXA27X_PIC_OST_4_11	.\pxa.h	19;"	d
PXA27X_PIC_SSP2	.\pxa.h	26;"	d
PXA2XX_DMA_NUM_REQUESTS	.\pxa2xx_dma.c	52;"	d	file:
PXA2XX_GPIO_BANKS	.\pxa2xx_gpio.c	13;"	d	file:
PXA2XX_INTERNAL_BASE	.\pxa.h	62;"	d
PXA2XX_INTERNAL_SIZE	.\pxa.h	63;"	d
PXA2XX_PIC_BTUART	.\pxa.h	31;"	d
PXA2XX_PIC_DMA	.\pxa.h	35;"	d
PXA2XX_PIC_FFUART	.\pxa.h	32;"	d
PXA2XX_PIC_GPIO_0	.\pxa.h	20;"	d
PXA2XX_PIC_GPIO_1	.\pxa.h	21;"	d
PXA2XX_PIC_GPIO_X	.\pxa.h	22;"	d
PXA2XX_PIC_I2C	.\pxa.h	28;"	d
PXA2XX_PIC_I2S	.\pxa.h	23;"	d
PXA2XX_PIC_ICP	.\pxa.h	29;"	d
PXA2XX_PIC_KEYPAD	.\pxa.h	16;"	d
PXA2XX_PIC_LCD	.\pxa.h	27;"	d
PXA2XX_PIC_MMC	.\pxa.h	33;"	d
PXA2XX_PIC_OST_0	.\pxa.h	36;"	d
PXA2XX_PIC_PWRI2C	.\pxa.h	17;"	d
PXA2XX_PIC_RTC1HZ	.\pxa.h	37;"	d
PXA2XX_PIC_RTCALARM	.\pxa.h	38;"	d
PXA2XX_PIC_SRCS	.\pxa2xx_pic.c	31;"	d	file:
PXA2XX_PIC_SSP	.\pxa.h	34;"	d
PXA2XX_PIC_SSP3	.\pxa.h	13;"	d
PXA2XX_PIC_STUART	.\pxa.h	30;"	d
PXA2XX_PIC_USBH1	.\pxa.h	15;"	d
PXA2XX_PIC_USBH2	.\pxa.h	14;"	d
PXA2XX_REG	.\pxa2xx_gpio.c	53;"	d	file:
PXA2XX_RX_RQ_BTUART	.\pxa.h	43;"	d
PXA2XX_RX_RQ_FFUART	.\pxa.h	45;"	d
PXA2XX_RX_RQ_I2S	.\pxa.h	41;"	d
PXA2XX_RX_RQ_ICP	.\pxa.h	51;"	d
PXA2XX_RX_RQ_MMCI	.\pxa.h	55;"	d
PXA2XX_RX_RQ_SSP1	.\pxa.h	47;"	d
PXA2XX_RX_RQ_SSP2	.\pxa.h	49;"	d
PXA2XX_RX_RQ_SSP3	.\pxa.h	58;"	d
PXA2XX_RX_RQ_STUART	.\pxa.h	53;"	d
PXA2XX_SDRAM_BASE	.\pxa.h	61;"	d
PXA2XX_TX_RQ_BTUART	.\pxa.h	44;"	d
PXA2XX_TX_RQ_FFUART	.\pxa.h	46;"	d
PXA2XX_TX_RQ_I2S	.\pxa.h	42;"	d
PXA2XX_TX_RQ_ICP	.\pxa.h	52;"	d
PXA2XX_TX_RQ_MMCI	.\pxa.h	56;"	d
PXA2XX_TX_RQ_SSP1	.\pxa.h	48;"	d
PXA2XX_TX_RQ_SSP2	.\pxa.h	50;"	d
PXA2XX_TX_RQ_SSP3	.\pxa.h	59;"	d
PXA2XX_TX_RQ_STUART	.\pxa.h	54;"	d
PXA2XX_USB_RQ	.\pxa.h	57;"	d
PXAKBD_MAXCOL	.\pxa2xx_keypad.c	80;"	d	file:
PXAKBD_MAXROW	.\pxa2xx_keypad.c	79;"	d	file:
PXAMMCI_RESP	.\pxa2xx_mmci.c	171;"	d	file:
PXASSPDef	.\pxa2xx.c	/^typedef struct PXASSPDef {$/;"	s	file:
PXASSPDef	.\pxa2xx.c	/^} PXASSPDef;$/;"	t	typeref:struct:PXASSPDef	file:
PXA_H	.\pxa.h	10;"	d
PXA_LCDDMA_CHANS	.\pxa2xx_lcd.c	111;"	d	file:
P_CH	.\fmopl.h	/^	OPL_CH *P_CH;		\/* pointer of CH                     *\/$/;"	m	struct:fm_opl_f
ParallelState	.\parallel.c	/^struct ParallelState {$/;"	s	file:
ParallelState	.\pc.h	/^typedef struct ParallelState ParallelState;$/;"	t	typeref:struct:ParallelState
PicState	.\i8259.c	/^typedef struct PicState {$/;"	s	file:
PicState	.\i8259.c	/^} PicState;$/;"	t	typeref:struct:PicState	file:
PicState2	.\i8259.c	/^struct PicState2 {$/;"	s	file:
PicState2	.\pc.h	/^typedef struct PicState2 PicState2;$/;"	t	typeref:struct:PicState2
QEMUMachine	.\boards.h	/^typedef struct QEMUMachine {$/;"	s
QEMUMachine	.\boards.h	/^} QEMUMachine;$/;"	t	typeref:struct:QEMUMachine
QEMUMachineInitFunc	.\boards.h	/^typedef void QEMUMachineInitFunc(int ram_size, int vga_ram_size,$/;"	t
QEMUResetHandler	.\hw.h	/^typedef void QEMUResetHandler(void *opaque);$/;"	t
QEMU_DEVICES_H	.\devices.h	2;"	d
QEMU_HW_H	.\hw.h	3;"	d
QEMU_I2C_H	.\i2c.h	2;"	d
QEMU_IRQ_H	.\irq.h	2;"	d
QEMU_PCI_H	.\pci.h	2;"	d
QEMU_SH_H	.\sh.h	2;"	d
QUEUE_KEY	.\spitz.c	301;"	d	file:
RAM0_base	.\firmware_abi.h	/^    uint64_t RAM0_base;$/;"	m	struct:ohwcfg_v3_t
RAM0_size	.\firmware_abi.h	/^    uint64_t RAM0_size;$/;"	m	struct:ohwcfg_v3_t
RAM1_base	.\firmware_abi.h	/^    uint64_t RAM1_base;$/;"	m	struct:ohwcfg_v3_t
RAM1_size	.\firmware_abi.h	/^    uint64_t RAM1_size;$/;"	m	struct:ohwcfg_v3_t
RAM2_base	.\firmware_abi.h	/^    uint64_t RAM2_base;$/;"	m	struct:ohwcfg_v3_t
RAM2_size	.\firmware_abi.h	/^    uint64_t RAM2_size;$/;"	m	struct:ohwcfg_v3_t
RAM3_base	.\firmware_abi.h	/^    uint64_t RAM3_base;$/;"	m	struct:ohwcfg_v3_t
RAM3_size	.\firmware_abi.h	/^    uint64_t RAM3_size;$/;"	m	struct:ohwcfg_v3_t
RATE_0	.\fmopl.c	/^static INT32 RATE_0[16]=$/;"	v	file:
RCNR	.\pxa2xx.c	882;"	d	file:
RCR_RXEN	.\smc91c111.c	50;"	d	file:
RCR_SOFT_RST	.\smc91c111.c	48;"	d	file:
RCR_STRIP_CRC	.\smc91c111.c	49;"	d	file:
RCSR	.\pxa2xx.c	80;"	d	file:
RDAR1	.\pxa2xx.c	888;"	d	file:
RDAR2	.\pxa2xx.c	890;"	d	file:
RDCR	.\pxa2xx.c	886;"	d	file:
RDY	.\tc58128.c	14;"	d	file:
RDY1	.\tc58128.c	12;"	d	file:
RDY2	.\tc58128.c	13;"	d	file:
RE	.\tc58128.c	8;"	d	file:
READ1	.\tc58128.c	/^typedef enum { WAIT, READ1, READ2, READ3 } state_t;$/;"	e	enum:__anon119	file:
READ2	.\tc58128.c	/^typedef enum { WAIT, READ1, READ2, READ3 } state_t;$/;"	e	enum:__anon119	file:
READ3	.\tc58128.c	/^typedef enum { WAIT, READ1, READ2, READ3 } state_t;$/;"	e	enum:__anon119	file:
READY_FOR_DATA	.\sd.h	50;"	d
READY_STAT	.\ide.c	49;"	d	file:
REDRAW_BACKGROUND	.\jazz_led.c	/^    REDRAW_NONE = 0, REDRAW_SEGMENTS = 1, REDRAW_BACKGROUND = 2,$/;"	e	enum:__anon23	file:
REDRAW_FIFO_LEN	.\vmware_vga.c	89;"	d	file:
REDRAW_NONE	.\jazz_led.c	/^    REDRAW_NONE = 0, REDRAW_SEGMENTS = 1, REDRAW_BACKGROUND = 2,$/;"	e	enum:__anon23	file:
REDRAW_SEGMENTS	.\jazz_led.c	/^    REDRAW_NONE = 0, REDRAW_SEGMENTS = 1, REDRAW_BACKGROUND = 2,$/;"	e	enum:__anon23	file:
REF	.\sh7750.c	/^	DMAC, PCIC1, TMU2, RTC, SCI1, SCIF, REF,$/;"	e	enum:__anon94	file:
REF_RCMI	.\sh7750.c	/^	REF_RCMI, REF_ROVI,$/;"	e	enum:__anon94	file:
REF_ROVI	.\sh7750.c	/^	REF_RCMI, REF_ROVI,$/;"	e	enum:__anon94	file:
REGNAME	.\sh7750_regnames.c	5;"	d	file:
REG_A_UIP	.\mc146818rtc.c	50;"	d	file:
REG_B_AIE	.\mc146818rtc.c	54;"	d	file:
REG_B_PIE	.\mc146818rtc.c	53;"	d	file:
REG_B_SET	.\mc146818rtc.c	52;"	d	file:
REG_B_UIE	.\mc146818rtc.c	55;"	d	file:
REG_EQUIPMENT_BYTE	.\pc.c	123;"	d	file:
REG_FMT	.\pxa.h	217;"	d
REG_FMT	.\spitz.c	26;"	d	file:
REG_FMT	.\spitz.c	28;"	d	file:
REG_FMT	.\spitz.c	30;"	d	file:
REG_IBM_CENTURY_BYTE	.\mc146818rtc.c	390;"	d	file:
REG_IBM_PS2_CENTURY_BYTE	.\mc146818rtc.c	391;"	d	file:
REL	.\ide.c	66;"	d	file:
REMAP_SPLIT_COM	.\ssd0323.c	37;"	d	file:
REMAP_SWAP_COLUMN	.\ssd0323.c	33;"	d	file:
REMAP_SWAP_COM	.\ssd0323.c	36;"	d	file:
REMAP_SWAP_NYBBLE	.\ssd0323.c	34;"	d	file:
REMAP_VERTICAL	.\ssd0323.c	35;"	d	file:
RGB	.\pl110_template.h	27;"	d
RGB	.\pl110_template.h	36;"	d
RMDLOAD	.\pcnet.c	472;"	d	file:
RMDL_BCNT_MASK	.\pcnet.c	235;"	d	file:
RMDL_BCNT_SH	.\pcnet.c	236;"	d	file:
RMDL_ONES_MASK	.\pcnet.c	237;"	d	file:
RMDL_ONES_SH	.\pcnet.c	238;"	d	file:
RMDM_MCNT_MASK	.\pcnet.c	265;"	d	file:
RMDM_MCNT_SH	.\pcnet.c	266;"	d	file:
RMDM_RCC_MASK	.\pcnet.c	271;"	d	file:
RMDM_RCC_SH	.\pcnet.c	272;"	d	file:
RMDM_RPC_MASK	.\pcnet.c	269;"	d	file:
RMDM_RPC_SH	.\pcnet.c	270;"	d	file:
RMDM_ZEROS_MASK	.\pcnet.c	267;"	d	file:
RMDM_ZEROS_SH	.\pcnet.c	268;"	d	file:
RMDSTORE	.\pcnet.c	474;"	d	file:
RMDS_BAM_MASK	.\pcnet.c	240;"	d	file:
RMDS_BAM_SH	.\pcnet.c	241;"	d	file:
RMDS_BPE_MASK	.\pcnet.c	246;"	d	file:
RMDS_BPE_SH	.\pcnet.c	247;"	d	file:
RMDS_BUFF_MASK	.\pcnet.c	252;"	d	file:
RMDS_BUFF_SH	.\pcnet.c	253;"	d	file:
RMDS_CRC_MASK	.\pcnet.c	254;"	d	file:
RMDS_CRC_SH	.\pcnet.c	255;"	d	file:
RMDS_ENP_MASK	.\pcnet.c	248;"	d	file:
RMDS_ENP_SH	.\pcnet.c	249;"	d	file:
RMDS_ERR_MASK	.\pcnet.c	260;"	d	file:
RMDS_ERR_SH	.\pcnet.c	261;"	d	file:
RMDS_FRAM_MASK	.\pcnet.c	258;"	d	file:
RMDS_FRAM_SH	.\pcnet.c	259;"	d	file:
RMDS_LFAM_MASK	.\pcnet.c	242;"	d	file:
RMDS_LFAM_SH	.\pcnet.c	243;"	d	file:
RMDS_OFLO_MASK	.\pcnet.c	256;"	d	file:
RMDS_OFLO_SH	.\pcnet.c	257;"	d	file:
RMDS_OWN_MASK	.\pcnet.c	262;"	d	file:
RMDS_OWN_SH	.\pcnet.c	263;"	d	file:
RMDS_PAM_MASK	.\pcnet.c	244;"	d	file:
RMDS_PAM_SH	.\pcnet.c	245;"	d	file:
RMDS_STP_MASK	.\pcnet.c	250;"	d	file:
RMDS_STP_SH	.\pcnet.c	251;"	d	file:
ROM_base	.\firmware_abi.h	/^    uint64_t ROM_base;$/;"	m	struct:ohwcfg_v3_t
ROM_size	.\firmware_abi.h	/^    uint64_t ROM_size;$/;"	m	struct:ohwcfg_v3_t
ROP2	.\cirrus_vga.c	456;"	d	file:
ROP_NAME	.\cirrus_vga.c	311;"	d	file:
ROP_NAME	.\cirrus_vga.c	315;"	d	file:
ROP_NAME	.\cirrus_vga.c	319;"	d	file:
ROP_NAME	.\cirrus_vga.c	323;"	d	file:
ROP_NAME	.\cirrus_vga.c	327;"	d	file:
ROP_NAME	.\cirrus_vga.c	331;"	d	file:
ROP_NAME	.\cirrus_vga.c	335;"	d	file:
ROP_NAME	.\cirrus_vga.c	339;"	d	file:
ROP_NAME	.\cirrus_vga.c	343;"	d	file:
ROP_NAME	.\cirrus_vga.c	347;"	d	file:
ROP_NAME	.\cirrus_vga.c	351;"	d	file:
ROP_NAME	.\cirrus_vga.c	355;"	d	file:
ROP_NAME	.\cirrus_vga.c	359;"	d	file:
ROP_NAME	.\cirrus_vga.c	363;"	d	file:
ROP_NAME	.\cirrus_vga.c	367;"	d	file:
ROP_NAME	.\cirrus_vga_rop.h	179;"	d
ROP_NOP2	.\cirrus_vga.c	463;"	d	file:
ROP_OP	.\cirrus_vga.c	312;"	d	file:
ROP_OP	.\cirrus_vga.c	316;"	d	file:
ROP_OP	.\cirrus_vga.c	320;"	d	file:
ROP_OP	.\cirrus_vga.c	324;"	d	file:
ROP_OP	.\cirrus_vga.c	328;"	d	file:
ROP_OP	.\cirrus_vga.c	332;"	d	file:
ROP_OP	.\cirrus_vga.c	336;"	d	file:
ROP_OP	.\cirrus_vga.c	340;"	d	file:
ROP_OP	.\cirrus_vga.c	344;"	d	file:
ROP_OP	.\cirrus_vga.c	348;"	d	file:
ROP_OP	.\cirrus_vga.c	352;"	d	file:
ROP_OP	.\cirrus_vga.c	356;"	d	file:
ROP_OP	.\cirrus_vga.c	360;"	d	file:
ROP_OP	.\cirrus_vga.c	364;"	d	file:
ROP_OP	.\cirrus_vga.c	368;"	d	file:
ROP_OP	.\cirrus_vga_rop.h	180;"	d
RR	.\fmopl.h	/^	INT32 *RR;		\/* release rate    :&DR_TABLE[RR<<2]   *\/$/;"	m	struct:fm_opl_slot
RS_ALGNERR	.\smc91c111.c	72;"	d	file:
RS_BADCRC	.\smc91c111.c	74;"	d	file:
RS_BRODCAST	.\smc91c111.c	73;"	d	file:
RS_MULTICAST	.\smc91c111.c	78;"	d	file:
RS_ODDFRAME	.\smc91c111.c	75;"	d	file:
RS_TOOLONG	.\smc91c111.c	76;"	d	file:
RS_TOOSHORT	.\smc91c111.c	77;"	d	file:
RTAR	.\pxa2xx.c	883;"	d	file:
RTC	.\sh7750.c	/^	DMAC, PCIC1, TMU2, RTC, SCI1, SCIF, REF,$/;"	e	enum:__anon94	file:
RTCPICR	.\pxa2xx.c	895;"	d	file:
RTCState	.\mc146818rtc.c	/^struct RTCState {$/;"	s	file:
RTCState	.\pc.h	/^typedef struct RTCState RTCState;$/;"	t	typeref:struct:RTCState
RTC_ALARM_DONT_CARE	.\mc146818rtc.c	38;"	d	file:
RTC_ATI	.\sh7750.c	/^	RTC_ATI, RTC_PRI, RTC_CUI,$/;"	e	enum:__anon94	file:
RTC_CR	.\pl031.c	29;"	d	file:
RTC_CUI	.\sh7750.c	/^	RTC_ATI, RTC_PRI, RTC_CUI,$/;"	e	enum:__anon94	file:
RTC_DAY_OF_MONTH	.\mc146818rtc.c	41;"	d	file:
RTC_DAY_OF_WEEK	.\mc146818rtc.c	40;"	d	file:
RTC_DR	.\pl031.c	26;"	d	file:
RTC_EN	.\acpi.c	54;"	d	file:
RTC_HOURS	.\mc146818rtc.c	36;"	d	file:
RTC_HOURS_ALARM	.\mc146818rtc.c	37;"	d	file:
RTC_ICR	.\pl031.c	33;"	d	file:
RTC_IMSC	.\pl031.c	30;"	d	file:
RTC_LR	.\pl031.c	28;"	d	file:
RTC_MINUTES	.\mc146818rtc.c	34;"	d	file:
RTC_MINUTES_ALARM	.\mc146818rtc.c	35;"	d	file:
RTC_MIS	.\pl031.c	32;"	d	file:
RTC_MONTH	.\mc146818rtc.c	42;"	d	file:
RTC_MR	.\pl031.c	27;"	d	file:
RTC_OFFSET	.\cuda.c	98;"	d	file:
RTC_PRI	.\sh7750.c	/^	RTC_ATI, RTC_PRI, RTC_CUI,$/;"	e	enum:__anon94	file:
RTC_REG_A	.\mc146818rtc.c	45;"	d	file:
RTC_REG_B	.\mc146818rtc.c	46;"	d	file:
RTC_REG_C	.\mc146818rtc.c	47;"	d	file:
RTC_REG_D	.\mc146818rtc.c	48;"	d	file:
RTC_RIS	.\pl031.c	31;"	d	file:
RTC_SECONDS	.\mc146818rtc.c	32;"	d	file:
RTC_SECONDS_ALARM	.\mc146818rtc.c	33;"	d	file:
RTC_YEAR	.\mc146818rtc.c	43;"	d	file:
RTL8139State	.\rtl8139.c	/^typedef struct RTL8139State {$/;"	s	file:
RTL8139State	.\rtl8139.c	/^} RTL8139State;$/;"	t	typeref:struct:RTL8139State	file:
RTL8139TallyCounters	.\rtl8139.c	/^typedef struct RTL8139TallyCounters$/;"	s	file:
RTL8139TallyCounters	.\rtl8139.c	/^} RTL8139TallyCounters;$/;"	t	typeref:struct:RTL8139TallyCounters	file:
RTL8139TallyCounters_clear	.\rtl8139.c	/^void RTL8139TallyCounters_clear(RTL8139TallyCounters* counters)$/;"	f
RTL8139TallyCounters_load	.\rtl8139.c	/^static void RTL8139TallyCounters_load(QEMUFile* f, RTL8139TallyCounters *tally_counters)$/;"	f	file:
RTL8139TallyCounters_physical_memory_write	.\rtl8139.c	/^static void RTL8139TallyCounters_physical_memory_write(target_phys_addr_t tc_addr, RTL8139TallyCounters* tally_counters)$/;"	f	file:
RTL8139TallyCounters_save	.\rtl8139.c	/^static void RTL8139TallyCounters_save(QEMUFile* f, RTL8139TallyCounters *tally_counters)$/;"	f	file:
RTL8139_CALCULATE_RXCRC	.\rtl8139.c	60;"	d	file:
RTL8139_PCI_REVID	.\rtl8139.c	352;"	d	file:
RTL8139_PCI_REVID_8139	.\rtl8139.c	349;"	d	file:
RTL8139_PCI_REVID_8139CPLUS	.\rtl8139.c	350;"	d	file:
RTL8139_registers	.\rtl8139.c	/^enum RTL8139_registers {$/;"	g	file:
RTSR	.\pxa2xx.c	884;"	d	file:
RTTR	.\pxa2xx.c	885;"	d	file:
RU_NOP	.\eepro100.c	122;"	d	file:
RWORD	.\pl181.c	150;"	d	file:
RWORD	.\pl181.c	166;"	d	file:
RW_ACK_INTR	.\etraxfs_timer.c	40;"	d	file:
RW_DOUT	.\etraxfs_ser.c	30;"	d	file:
RW_INTR_MASK	.\etraxfs_timer.c	39;"	d	file:
RW_STATE_LSB	.\i8254.c	31;"	d	file:
RW_STATE_MSB	.\i8254.c	32;"	d	file:
RW_STATE_WORD0	.\i8254.c	33;"	d	file:
RW_STATE_WORD1	.\i8254.c	34;"	d	file:
RW_STAT_DIN	.\etraxfs_ser.c	31;"	d	file:
RW_TMR0_CTRL	.\etraxfs_timer.c	34;"	d	file:
RW_TMR0_DIV	.\etraxfs_timer.c	32;"	d	file:
RW_TMR1_CTRL	.\etraxfs_timer.c	37;"	d	file:
RW_TMR1_DIV	.\etraxfs_timer.c	35;"	d	file:
RW_TR_DMA_EN	.\etraxfs_ser.c	29;"	d	file:
RXCTRL_RXEN	.\slavio_serial.c	130;"	d	file:
RX_ABORT	.\eepro100.c	125;"	d	file:
RX_ADDR_LOAD	.\eepro100.c	126;"	d	file:
RX_RESUME	.\eepro100.c	124;"	d	file:
RX_RESUMENR	.\eepro100.c	127;"	d	file:
RX_START	.\eepro100.c	123;"	d	file:
RYAR1	.\pxa2xx.c	889;"	d	file:
RYAR2	.\pxa2xx.c	891;"	d	file:
RYCR	.\pxa2xx.c	887;"	d	file:
R_BC	.\slavio_serial.c	205;"	d	file:
R_BRGHI	.\slavio_serial.c	211;"	d	file:
R_BRGLO	.\slavio_serial.c	210;"	d	file:
R_EXTINT	.\slavio_serial.c	213;"	d	file:
R_INTR	.\etraxfs_timer.c	41;"	d	file:
R_INTR	.\slavio_serial.c	195;"	d	file:
R_IPEN	.\slavio_serial.c	202;"	d	file:
R_IVEC	.\slavio_serial.c	185;"	d	file:
R_MASKED_INTR	.\etraxfs_timer.c	42;"	d	file:
R_MISC	.\slavio_serial.c	208;"	d	file:
R_MISC1	.\slavio_serial.c	209;"	d	file:
R_MISC1I	.\slavio_serial.c	212;"	d	file:
R_ONLY	.\wm8750.c	199;"	d	file:
R_RXBUF	.\slavio_serial.c	206;"	d	file:
R_RXCTRL	.\slavio_serial.c	207;"	d	file:
R_SPEC	.\slavio_serial.c	182;"	d	file:
R_STATUS	.\slavio_serial.c	173;"	d	file:
R_STAT_DIN	.\etraxfs_ser.c	32;"	d	file:
R_TIME	.\etraxfs_timer.c	31;"	d	file:
R_TMR0_DATA	.\etraxfs_timer.c	33;"	d	file:
R_TMR1_DATA	.\etraxfs_timer.c	36;"	d	file:
R_TXCTRL1	.\slavio_serial.c	203;"	d	file:
R_TXCTRL2	.\slavio_serial.c	204;"	d	file:
RxAckBits	.\rtl8139.c	/^    RxAckBits = RxFIFOOver | RxOverflow | RxOK,$/;"	e	enum:IntrStatusBits	file:
RxBadAlign	.\rtl8139.c	/^    RxBadAlign = 0x0002,$/;"	e	enum:RxStatusBits	file:
RxBadSymbol	.\rtl8139.c	/^    RxBadSymbol = 0x0020,$/;"	e	enum:RxStatusBits	file:
RxBroadcast	.\rtl8139.c	/^    RxBroadcast = 0x2000,$/;"	e	enum:RxStatusBits	file:
RxBuf	.\rtl8139.c	/^    RxBuf = 0x30,$/;"	e	enum:RTL8139_registers	file:
RxBuf	.\rtl8139.c	/^    uint32_t RxBuf;       \/* Receive buffer *\/$/;"	m	struct:RTL8139State	file:
RxBufAddr	.\rtl8139.c	/^    RxBufAddr = 0x3A,$/;"	e	enum:RTL8139_registers	file:
RxBufAddr	.\rtl8139.c	/^    uint32_t RxBufAddr;$/;"	m	struct:RTL8139State	file:
RxBufEmpty	.\rtl8139.c	/^    RxBufEmpty = 0x01,$/;"	e	enum:ChipCmdBits	file:
RxBufPtr	.\rtl8139.c	/^    RxBufPtr = 0x38,$/;"	e	enum:RTL8139_registers	file:
RxBufPtr	.\rtl8139.c	/^    uint32_t RxBufPtr;$/;"	m	struct:RTL8139State	file:
RxBufferSize	.\rtl8139.c	/^    uint32_t RxBufferSize;\/* internal variable, receive ring buffer size in C mode *\/$/;"	m	struct:RTL8139State	file:
RxCRCErr	.\rtl8139.c	/^    RxCRCErr = 0x0004,$/;"	e	enum:RxStatusBits	file:
RxCfgDMAShift	.\rtl8139.c	/^    RxCfgDMAShift = 8,$/;"	e	enum:RxConfigBits	file:
RxCfgDMAUnlimited	.\rtl8139.c	/^    RxCfgDMAUnlimited = (7 << RxCfgDMAShift),$/;"	e	enum:RxConfigBits	file:
RxCfgFIFONone	.\rtl8139.c	/^    RxCfgFIFONone = (7 << RxCfgFIFOShift),$/;"	e	enum:RxConfigBits	file:
RxCfgFIFOShift	.\rtl8139.c	/^    RxCfgFIFOShift = 13,$/;"	e	enum:RxConfigBits	file:
RxCfgRcv16K	.\rtl8139.c	/^    RxCfgRcv16K = (1 << 11),$/;"	e	enum:RxConfigBits	file:
RxCfgRcv32K	.\rtl8139.c	/^    RxCfgRcv32K = (1 << 12),$/;"	e	enum:RxConfigBits	file:
RxCfgRcv64K	.\rtl8139.c	/^    RxCfgRcv64K = (1 << 11) | (1 << 12),$/;"	e	enum:RxConfigBits	file:
RxCfgRcv8K	.\rtl8139.c	/^    RxCfgRcv8K = 0,$/;"	e	enum:RxConfigBits	file:
RxConfig	.\rtl8139.c	/^    RxConfig = 0x44,$/;"	e	enum:RTL8139_registers	file:
RxConfig	.\rtl8139.c	/^    uint32_t RxConfig;$/;"	m	struct:RTL8139State	file:
RxConfigBits	.\rtl8139.c	/^enum RxConfigBits {$/;"	g	file:
RxERR	.\rtl8139.c	/^    uint32_t   RxERR;$/;"	m	struct:RTL8139TallyCounters	file:
RxErr	.\rtl8139.c	/^    RxErr = 0x02,$/;"	e	enum:IntrStatusBits	file:
RxFIFOOver	.\rtl8139.c	/^    RxFIFOOver = 0x40,$/;"	e	enum:IntrStatusBits	file:
RxMaxSize	.\rtl8139.c	/^    RxMaxSize    = 0xDA, \/* Max size of an Rx packet (8169 only) *\/$/;"	e	enum:RTL8139_registers	file:
RxMissed	.\rtl8139.c	/^    RxMissed = 0x4C,    \/* 24 bits valid, write clears. *\/$/;"	e	enum:RTL8139_registers	file:
RxMissed	.\rtl8139.c	/^    uint32_t RxMissed;$/;"	m	struct:RTL8139State	file:
RxMulticast	.\rtl8139.c	/^    RxMulticast = 0x8000,$/;"	e	enum:RxStatusBits	file:
RxNoWrap	.\rtl8139.c	/^    RxNoWrap = (1 << 7),$/;"	e	enum:RxConfigBits	file:
RxOK	.\rtl8139.c	/^    RxOK = 0x01,$/;"	e	enum:IntrStatusBits	file:
RxOk	.\rtl8139.c	/^    uint64_t   RxOk;$/;"	m	struct:RTL8139TallyCounters	file:
RxOkBrd	.\rtl8139.c	/^    uint64_t   RxOkBrd;$/;"	m	struct:RTL8139TallyCounters	file:
RxOkMul	.\rtl8139.c	/^    uint32_t   RxOkMul;$/;"	m	struct:RTL8139TallyCounters	file:
RxOkPhy	.\rtl8139.c	/^    uint64_t   RxOkPhy;$/;"	m	struct:RTL8139TallyCounters	file:
RxOverflow	.\rtl8139.c	/^    RxOverflow = 0x10,$/;"	e	enum:IntrStatusBits	file:
RxPhysical	.\rtl8139.c	/^    RxPhysical = 0x4000,$/;"	e	enum:RxStatusBits	file:
RxRingAddrHI	.\rtl8139.c	/^    RxRingAddrHI    = 0xE8, \/* 64-bit start addr of Rx ring *\/$/;"	e	enum:RTL8139_registers	file:
RxRingAddrHI	.\rtl8139.c	/^    uint32_t   RxRingAddrHI;$/;"	m	struct:RTL8139State	file:
RxRingAddrLO	.\rtl8139.c	/^    RxRingAddrLO    = 0xE4, \/* 64-bit start addr of Rx ring *\/$/;"	e	enum:RTL8139_registers	file:
RxRingAddrLO	.\rtl8139.c	/^    uint32_t   RxRingAddrLO;$/;"	m	struct:RTL8139State	file:
RxRunt	.\rtl8139.c	/^    RxRunt = 0x0010,$/;"	e	enum:RxStatusBits	file:
RxStatusBits	.\rtl8139.c	/^enum RxStatusBits {$/;"	g	file:
RxStatusOK	.\rtl8139.c	/^    RxStatusOK = 0x0001,$/;"	e	enum:RxStatusBits	file:
RxTooLong	.\rtl8139.c	/^    RxTooLong = 0x0008,$/;"	e	enum:RxStatusBits	file:
RxUnderrun	.\rtl8139.c	/^    RxUnderrun = 0x20,$/;"	e	enum:IntrStatusBits	file:
S0_CD_IRQ	.\mainstone.h	28;"	d
S0_IRQ	.\mainstone.h	30;"	d
S0_STSCHG_IRQ	.\mainstone.h	29;"	d
S1_CD_IRQ	.\mainstone.h	31;"	d
S1_IRQ	.\mainstone.h	33;"	d
S1_STSCHG_IRQ	.\mainstone.h	32;"	d
SA1110	.\pxa2xx.c	485;"	d	file:
SACR0	.\pxa2xx.c	1568;"	d	file:
SACR1	.\pxa2xx.c	1569;"	d	file:
SACR_DPRL	.\pxa2xx.c	1537;"	d	file:
SACR_DREC	.\pxa2xx.c	1536;"	d	file:
SACR_RFTH	.\pxa2xx.c	1535;"	d	file:
SACR_TFTH	.\pxa2xx.c	1534;"	d	file:
SADIV	.\pxa2xx.c	1573;"	d	file:
SADR	.\pxa2xx.c	1574;"	d	file:
SAICR	.\pxa2xx.c	1572;"	d	file:
SAIMR	.\pxa2xx.c	1571;"	d	file:
SASR0	.\pxa2xx.c	1570;"	d	file:
SB16State	.\sb16.c	/^typedef struct SB16State {$/;"	s	file:
SB16State	.\sb16.c	/^} SB16State;$/;"	t	typeref:struct:SB16State	file:
SB16_init	.\sb16.c	/^int SB16_init (AudioState *audio, qemu_irq *pic)$/;"	f
SBIState	.\sbi.c	/^typedef struct SBIState {$/;"	s	file:
SBIState	.\sbi.c	/^} SBIState;$/;"	t	typeref:struct:SBIState	file:
SBI_MASK	.\sbi.c	49;"	d	file:
SBI_NREGS	.\sbi.c	39;"	d	file:
SBI_SIZE	.\sbi.c	48;"	d	file:
SB_audio_callback	.\sb16.c	/^static void SB_audio_callback (void *opaque, int free)$/;"	f	file:
SB_load	.\sb16.c	/^static int SB_load (QEMUFile *f, void *opaque, int version_id)$/;"	f	file:
SB_read_DMA	.\sb16.c	/^static int SB_read_DMA (void *opaque, int nchan, int dma_pos, int dma_len)$/;"	f	file:
SB_save	.\sb16.c	/^static void SB_save (QEMUFile *f, void *opaque)$/;"	f	file:
SC	.\fmopl.c	175;"	d	file:
SC	.\fmopl.c	180;"	d	file:
SCBAck	.\eepro100.c	/^    SCBAck = 1,$/;"	e	enum:speedo_offsets	file:
SCBCmd	.\eepro100.c	/^    SCBCmd = 2,                 \/* Rx\/Command Unit command and status. *\/$/;"	e	enum:speedo_offsets	file:
SCBCtrlMDI	.\eepro100.c	/^    SCBCtrlMDI = 16,            \/* MDI interface control. *\/$/;"	e	enum:speedo_offsets	file:
SCBEarlyRx	.\eepro100.c	/^    SCBEarlyRx = 20,            \/* Early receive byte count. *\/$/;"	e	enum:speedo_offsets	file:
SCBFlow	.\eepro100.c	/^    SCBFlow = 24,$/;"	e	enum:speedo_offsets	file:
SCBIntmask	.\eepro100.c	/^    SCBIntmask = 3,$/;"	e	enum:speedo_offsets	file:
SCBPointer	.\eepro100.c	/^    SCBPointer = 4,             \/* General purpose pointer. *\/$/;"	e	enum:speedo_offsets	file:
SCBPort	.\eepro100.c	/^    SCBPort = 8,                \/* Misc. commands and operands.  *\/$/;"	e	enum:speedo_offsets	file:
SCBStatus	.\eepro100.c	/^    SCBStatus = 0,$/;"	e	enum:speedo_offsets	file:
SCBeeprom	.\eepro100.c	/^    SCBflash = 12, SCBeeprom = 14,      \/* EEPROM and flash memory control. *\/$/;"	e	enum:speedo_offsets	file:
SCBflash	.\eepro100.c	/^    SCBflash = 12, SCBeeprom = 14,      \/* EEPROM and flash memory control. *\/$/;"	e	enum:speedo_offsets	file:
SCI1	.\sh7750.c	/^	DMAC, PCIC1, TMU2, RTC, SCI1, SCIF, REF,$/;"	e	enum:__anon94	file:
SCI1_ERI	.\sh7750.c	/^	SCI1_ERI, SCI1_RXI, SCI1_TXI, SCI1_TEI,$/;"	e	enum:__anon94	file:
SCI1_RXI	.\sh7750.c	/^	SCI1_ERI, SCI1_RXI, SCI1_TXI, SCI1_TEI,$/;"	e	enum:__anon94	file:
SCI1_TEI	.\sh7750.c	/^	SCI1_ERI, SCI1_RXI, SCI1_TXI, SCI1_TEI,$/;"	e	enum:__anon94	file:
SCI1_TXI	.\sh7750.c	/^	SCI1_ERI, SCI1_RXI, SCI1_TXI, SCI1_TEI,$/;"	e	enum:__anon94	file:
SCIF	.\sh7750.c	/^	DMAC, PCIC1, TMU2, RTC, SCI1, SCIF, REF,$/;"	e	enum:__anon94	file:
SCIF_BRI	.\sh7750.c	/^	SCIF_ERI, SCIF_RXI, SCIF_BRI, SCIF_TXI,$/;"	e	enum:__anon94	file:
SCIF_ERI	.\sh7750.c	/^	SCIF_ERI, SCIF_RXI, SCIF_BRI, SCIF_TXI,$/;"	e	enum:__anon94	file:
SCIF_RXI	.\sh7750.c	/^	SCIF_ERI, SCIF_RXI, SCIF_BRI, SCIF_TXI,$/;"	e	enum:__anon94	file:
SCIF_TXI	.\sh7750.c	/^	SCIF_ERI, SCIF_RXI, SCIF_BRI, SCIF_TXI,$/;"	e	enum:__anon94	file:
SCI_EN	.\acpi.c	59;"	d	file:
SCOOP_CCR	.\spitz.c	548;"	d	file:
SCOOP_CDR	.\spitz.c	545;"	d	file:
SCOOP_CPR	.\spitz.c	547;"	d	file:
SCOOP_CSR	.\spitz.c	546;"	d	file:
SCOOP_GPCR	.\spitz.c	552;"	d	file:
SCOOP_GPRR	.\spitz.c	554;"	d	file:
SCOOP_GPWR	.\spitz.c	553;"	d	file:
SCOOP_IMR	.\spitz.c	550;"	d	file:
SCOOP_IRR_IRM	.\spitz.c	549;"	d	file:
SCOOP_ISR	.\spitz.c	551;"	d	file:
SCOOP_MCR	.\spitz.c	544;"	d	file:
SCSIDevice	.\scsi-disk.h	/^struct SCSIDevice$/;"	s
SCSIDevice	.\scsi-disk.h	/^typedef struct SCSIDevice SCSIDevice;$/;"	t	typeref:struct:SCSIDevice
SCSIDeviceState	.\scsi-disk.c	/^struct SCSIDeviceState$/;"	s	file:
SCSIDeviceState	.\scsi-disk.h	/^typedef struct SCSIDeviceState SCSIDeviceState;$/;"	t	typeref:struct:SCSIDeviceState
SCSIDeviceState	.\scsi-generic.c	/^struct SCSIDeviceState$/;"	s	file:
SCSIRequest	.\scsi-disk.c	/^typedef struct SCSIRequest {$/;"	s	file:
SCSIRequest	.\scsi-disk.c	/^} SCSIRequest;$/;"	t	typeref:struct:SCSIRequest	file:
SCSIRequest	.\scsi-generic.c	/^typedef struct SCSIRequest {$/;"	s	file:
SCSIRequest	.\scsi-generic.c	/^} SCSIRequest;$/;"	t	typeref:struct:SCSIRequest	file:
SCSI_CMD_BUF_SIZE	.\scsi-generic.c	51;"	d	file:
SCSI_DISK_H	.\scsi-disk.h	2;"	d
SCSI_DMA_BUF_SIZE	.\scsi-disk.c	37;"	d	file:
SCSI_REASON_DATA	.\scsi-disk.h	/^    SCSI_REASON_DATA  \/* Transfer complete, more data required.  *\/$/;"	e	enum:scsi_reason
SCSI_REASON_DONE	.\scsi-disk.h	/^    SCSI_REASON_DONE, \/* Command complete.  *\/$/;"	e	enum:scsi_reason
SCSI_SENSE_BUF_SIZE	.\scsi-generic.c	52;"	d	file:
SCTRL_P1FMT	.\es1370.c	149;"	d	file:
SCTRL_P1INTEN	.\es1370.c	136;"	d	file:
SCTRL_P1LOOPSEL	.\es1370.c	131;"	d	file:
SCTRL_P1PAUSE	.\es1370.c	133;"	d	file:
SCTRL_P1SCTRLD	.\es1370.c	137;"	d	file:
SCTRL_P1SEB	.\es1370.c	147;"	d	file:
SCTRL_P1SMB	.\es1370.c	148;"	d	file:
SCTRL_P2DACSEN	.\es1370.c	138;"	d	file:
SCTRL_P2ENDINC	.\es1370.c	125;"	d	file:
SCTRL_P2FMT	.\es1370.c	145;"	d	file:
SCTRL_P2INTEN	.\es1370.c	135;"	d	file:
SCTRL_P2LOOPSEL	.\es1370.c	130;"	d	file:
SCTRL_P2PAUSE	.\es1370.c	132;"	d	file:
SCTRL_P2SEB	.\es1370.c	143;"	d	file:
SCTRL_P2SMB	.\es1370.c	144;"	d	file:
SCTRL_P2STINC	.\es1370.c	127;"	d	file:
SCTRL_R1FMT	.\es1370.c	141;"	d	file:
SCTRL_R1INTEN	.\es1370.c	134;"	d	file:
SCTRL_R1LOOPSEL	.\es1370.c	129;"	d	file:
SCTRL_R1SEB	.\es1370.c	139;"	d	file:
SCTRL_R1SMB	.\es1370.c	140;"	d	file:
SCTRL_SH_P1FMT	.\es1370.c	150;"	d	file:
SCTRL_SH_P2ENDINC	.\es1370.c	126;"	d	file:
SCTRL_SH_P2FMT	.\es1370.c	146;"	d	file:
SCTRL_SH_P2STINC	.\es1370.c	128;"	d	file:
SCTRL_SH_R1FMT	.\es1370.c	142;"	d	file:
SDRAM0_CFGADDR	.\ppc405_uc.c	/^    SDRAM0_CFGADDR = 0x010,$/;"	e	enum:__anon64	file:
SDRAM0_CFGDATA	.\ppc405_uc.c	/^    SDRAM0_CFGDATA = 0x011,$/;"	e	enum:__anon64	file:
SDRAM_BASE	.\r2d.c	30;"	d	file:
SDRAM_SIZE	.\r2d.c	31;"	d	file:
SDState	.\sd.c	/^struct SDState {$/;"	s	file:
SDState	.\sd.h	/^typedef struct SDState SDState;$/;"	t	typeref:struct:SDState
SD_ERROR	.\sd.h	44;"	d
SECTOR	.\nand.c	89;"	d	file:
SECTOR_OFFSET	.\nand.c	90;"	d	file:
SECTOR_SHIFT	.\sd.c	240;"	d	file:
SECTOR_SIZE	.\sd.c	244;"	d	file:
SEEK_STAT	.\ide.c	46;"	d	file:
SENSE_HARDWARE_ERROR	.\scsi-disk.c	34;"	d	file:
SENSE_ILLEGAL_REQUEST	.\ide.c	307;"	d	file:
SENSE_ILLEGAL_REQUEST	.\scsi-disk.c	35;"	d	file:
SENSE_NONE	.\ide.c	305;"	d	file:
SENSE_NOT_READY	.\ide.c	306;"	d	file:
SENSE_NOT_READY	.\scsi-disk.c	33;"	d	file:
SENSE_NO_SENSE	.\scsi-disk.c	32;"	d	file:
SENSE_UNIT_ATTENTION	.\ide.c	308;"	d	file:
SEQ_0	.\esp.c	137;"	d	file:
SEQ_CD	.\esp.c	138;"	d	file:
SERIAL_CTRL	.\slavio_serial.c	113;"	d	file:
SERIAL_DATA	.\slavio_serial.c	114;"	d	file:
SERIAL_MAXADDR	.\slavio_serial.c	111;"	d	file:
SERIAL_REGS	.\slavio_serial.c	92;"	d	file:
SERIAL_SIZE	.\slavio_serial.c	112;"	d	file:
SERIOQueue	.\slavio_serial.c	/^} SERIOQueue;$/;"	t	typeref:struct:__anon101	file:
SERIO_QUEUE_SIZE	.\slavio_serial.c	85;"	d	file:
SER_DPRINTF	.\slavio_serial.c	57;"	d	file:
SER_DPRINTF	.\slavio_serial.c	60;"	d	file:
SETUP_STATE_ACK	.\usb.c	40;"	d	file:
SETUP_STATE_DATA	.\usb.c	39;"	d	file:
SETUP_STATE_IDLE	.\usb.c	38;"	d	file:
SET_CANIDLE	.\omap.c	3200;"	d	file:
SET_CD_SPEED	.\scsi-generic.c	48;"	d	file:
SET_FIELD	.\pcnet.c	274;"	d	file:
SET_HIGH	.\smc91c111.c	245;"	d	file:
SET_IDLE	.\usb-hid.c	34;"	d	file:
SET_LOW	.\smc91c111.c	244;"	d	file:
SET_MASKED	.\rtl8139.c	70;"	d	file:
SET_ONOFF	.\omap.c	3226;"	d	file:
SET_PROTOCOL	.\usb-hid.c	35;"	d	file:
SET_REPORT	.\usb-hid.c	33;"	d	file:
SE_INT_FOV	.\stellaris_enet.c	30;"	d	file:
SE_INT_MD	.\stellaris_enet.c	32;"	d	file:
SE_INT_PHY	.\stellaris_enet.c	33;"	d	file:
SE_INT_RX	.\stellaris_enet.c	27;"	d	file:
SE_INT_RXER	.\stellaris_enet.c	31;"	d	file:
SE_INT_TXEMP	.\stellaris_enet.c	29;"	d	file:
SE_INT_TXER	.\stellaris_enet.c	28;"	d	file:
SE_RCTL_AMUL	.\stellaris_enet.c	36;"	d	file:
SE_RCTL_BADCRC	.\stellaris_enet.c	38;"	d	file:
SE_RCTL_PRMS	.\stellaris_enet.c	37;"	d	file:
SE_RCTL_RSTFIFO	.\stellaris_enet.c	39;"	d	file:
SE_RCTL_RXEN	.\stellaris_enet.c	35;"	d	file:
SE_TCTL_CRC	.\stellaris_enet.c	43;"	d	file:
SE_TCTL_DUPLEX	.\stellaris_enet.c	44;"	d	file:
SE_TCTL_PADEN	.\stellaris_enet.c	42;"	d	file:
SE_TCTL_TXEN	.\stellaris_enet.c	41;"	d	file:
SG_ERR_DRIVER_SENSE	.\scsi-generic.c	55;"	d	file:
SG_ERR_DRIVER_TIMEOUT	.\scsi-generic.c	54;"	d	file:
SH7750State	.\sh7750.c	/^typedef struct SH7750State {$/;"	s	file:
SH7750State	.\sh7750.c	/^} SH7750State;$/;"	t	typeref:struct:SH7750State	file:
SH7750_A7_BASE	.\sh7750_regs.h	28;"	d
SH7750_A7_REG32	.\sh7750_regs.h	31;"	d
SH7750_BAMRA	.\sh7750_regs.h	1248;"	d
SH7750_BAMRB	.\sh7750_regs.h	1251;"	d
SH7750_BARA	.\sh7750_regs.h	1247;"	d
SH7750_BARB	.\sh7750_regs.h	1250;"	d
SH7750_BASRB	.\sh7750_regs.h	1253;"	d
SH7750_BBRA	.\sh7750_regs.h	1249;"	d
SH7750_BBRB	.\sh7750_regs.h	1252;"	d
SH7750_BCR1	.\sh7750_regs.h	532;"	d
SH7750_BCR1_A0BST	.\sh7750_regs.h	579;"	d
SH7750_BCR1_A0BST_ROM16	.\sh7750_regs.h	585;"	d
SH7750_BCR1_A0BST_ROM32	.\sh7750_regs.h	587;"	d
SH7750_BCR1_A0BST_ROM4	.\sh7750_regs.h	581;"	d
SH7750_BCR1_A0BST_ROM8	.\sh7750_regs.h	583;"	d
SH7750_BCR1_A0BST_SRAM	.\sh7750_regs.h	580;"	d
SH7750_BCR1_A0MPX	.\sh7750_regs.h	536;"	d
SH7750_BCR1_A1MBC	.\sh7750_regs.h	545;"	d
SH7750_BCR1_A4MBC	.\sh7750_regs.h	550;"	d
SH7750_BCR1_A56PCM	.\sh7750_regs.h	624;"	d
SH7750_BCR1_A5BST	.\sh7750_regs.h	590;"	d
SH7750_BCR1_A5BST_ROM16	.\sh7750_regs.h	596;"	d
SH7750_BCR1_A5BST_ROM32	.\sh7750_regs.h	598;"	d
SH7750_BCR1_A5BST_ROM4	.\sh7750_regs.h	592;"	d
SH7750_BCR1_A5BST_ROM8	.\sh7750_regs.h	594;"	d
SH7750_BCR1_A5BST_SRAM	.\sh7750_regs.h	591;"	d
SH7750_BCR1_A6BST	.\sh7750_regs.h	601;"	d
SH7750_BCR1_A6BST_ROM16	.\sh7750_regs.h	607;"	d
SH7750_BCR1_A6BST_ROM32	.\sh7750_regs.h	609;"	d
SH7750_BCR1_A6BST_ROM4	.\sh7750_regs.h	603;"	d
SH7750_BCR1_A6BST_ROM8	.\sh7750_regs.h	605;"	d
SH7750_BCR1_A6BST_SRAM	.\sh7750_regs.h	602;"	d
SH7750_BCR1_A7	.\sh7750_regs.h	533;"	d
SH7750_BCR1_BREQEN	.\sh7750_regs.h	555;"	d
SH7750_BCR1_DRAMTP	.\sh7750_regs.h	612;"	d
SH7750_BCR1_DRAMTP_2DRAM_3DRAM	.\sh7750_regs.h	621;"	d
SH7750_BCR1_DRAMTP_2SDRAM_3SDRAM	.\sh7750_regs.h	617;"	d
SH7750_BCR1_DRAMTP_2SRAM_3DRAM	.\sh7750_regs.h	619;"	d
SH7750_BCR1_DRAMTP_2SRAM_3SDRAM	.\sh7750_regs.h	615;"	d
SH7750_BCR1_DRAMTP_2SRAM_3SRAM	.\sh7750_regs.h	613;"	d
SH7750_BCR1_ENDIAN	.\sh7750_regs.h	534;"	d
SH7750_BCR1_HIZCNT	.\sh7750_regs.h	572;"	d
SH7750_BCR1_HIZMEM	.\sh7750_regs.h	566;"	d
SH7750_BCR1_IPUP	.\sh7750_regs.h	537;"	d
SH7750_BCR1_MASTER	.\sh7750_regs.h	535;"	d
SH7750_BCR1_MEMMPX	.\sh7750_regs.h	563;"	d
SH7750_BCR1_OPUP	.\sh7750_regs.h	541;"	d
SH7750_BCR1_PSHR	.\sh7750_regs.h	560;"	d
SH7750_BCR1_REGOFS	.\sh7750_regs.h	531;"	d
SH7750_BCR2	.\sh7750_regs.h	630;"	d
SH7750_BCR2_A0SZ	.\sh7750_regs.h	633;"	d
SH7750_BCR2_A0SZ_S	.\sh7750_regs.h	634;"	d
SH7750_BCR2_A1SZ	.\sh7750_regs.h	645;"	d
SH7750_BCR2_A1SZ_S	.\sh7750_regs.h	646;"	d
SH7750_BCR2_A2SZ	.\sh7750_regs.h	643;"	d
SH7750_BCR2_A2SZ_S	.\sh7750_regs.h	644;"	d
SH7750_BCR2_A3SZ	.\sh7750_regs.h	641;"	d
SH7750_BCR2_A3SZ_S	.\sh7750_regs.h	642;"	d
SH7750_BCR2_A4SZ	.\sh7750_regs.h	639;"	d
SH7750_BCR2_A4SZ_S	.\sh7750_regs.h	640;"	d
SH7750_BCR2_A5SZ	.\sh7750_regs.h	637;"	d
SH7750_BCR2_A5SZ_S	.\sh7750_regs.h	638;"	d
SH7750_BCR2_A6SZ	.\sh7750_regs.h	635;"	d
SH7750_BCR2_A6SZ_S	.\sh7750_regs.h	636;"	d
SH7750_BCR2_A7	.\sh7750_regs.h	631;"	d
SH7750_BCR2_PORTEN	.\sh7750_regs.h	651;"	d
SH7750_BCR2_REGOFS	.\sh7750_regs.h	629;"	d
SH7750_BCR2_SZ_16	.\sh7750_regs.h	649;"	d
SH7750_BCR2_SZ_32	.\sh7750_regs.h	650;"	d
SH7750_BCR2_SZ_64	.\sh7750_regs.h	647;"	d
SH7750_BCR2_SZ_8	.\sh7750_regs.h	648;"	d
SH7750_BCR3_A7	.\sh7750_regs.h	1263;"	d
SH7750_BCR4_A7	.\sh7750_regs.h	1264;"	d
SH7750_BDMRB	.\sh7750_regs.h	1255;"	d
SH7750_BDRB	.\sh7750_regs.h	1254;"	d
SH7750_BRCR	.\sh7750_regs.h	1256;"	d
SH7750_BRCR_UDBE	.\sh7750_regs.h	1258;"	d
SH7750_CCR	.\sh7750_regs.h	129;"	d
SH7750_CCR_A7	.\sh7750_regs.h	130;"	d
SH7750_CCR_CB	.\sh7750_regs.h	141;"	d
SH7750_CCR_ICE	.\sh7750_regs.h	135;"	d
SH7750_CCR_ICI	.\sh7750_regs.h	133;"	d
SH7750_CCR_IIX	.\sh7750_regs.h	132;"	d
SH7750_CCR_OCE	.\sh7750_regs.h	143;"	d
SH7750_CCR_OCI	.\sh7750_regs.h	140;"	d
SH7750_CCR_OIX	.\sh7750_regs.h	136;"	d
SH7750_CCR_ORA	.\sh7750_regs.h	137;"	d
SH7750_CCR_REGOFS	.\sh7750_regs.h	128;"	d
SH7750_CCR_WT	.\sh7750_regs.h	142;"	d
SH7750_CHCR	.\sh7750_regs.h	1027;"	d
SH7750_CHCR0	.\sh7750_regs.h	1029;"	d
SH7750_CHCR0_A7	.\sh7750_regs.h	1033;"	d
SH7750_CHCR1	.\sh7750_regs.h	1030;"	d
SH7750_CHCR1_A7	.\sh7750_regs.h	1034;"	d
SH7750_CHCR2	.\sh7750_regs.h	1031;"	d
SH7750_CHCR2_A7	.\sh7750_regs.h	1035;"	d
SH7750_CHCR3	.\sh7750_regs.h	1032;"	d
SH7750_CHCR3_A7	.\sh7750_regs.h	1036;"	d
SH7750_CHCR_A7	.\sh7750_regs.h	1028;"	d
SH7750_CHCR_AL	.\sh7750_regs.h	1079;"	d
SH7750_CHCR_AL_ACTH	.\sh7750_regs.h	1080;"	d
SH7750_CHCR_AL_ACTL	.\sh7750_regs.h	1081;"	d
SH7750_CHCR_AM	.\sh7750_regs.h	1075;"	d
SH7750_CHCR_AM_RD	.\sh7750_regs.h	1076;"	d
SH7750_CHCR_AM_WR	.\sh7750_regs.h	1077;"	d
SH7750_CHCR_DE	.\sh7750_regs.h	1151;"	d
SH7750_CHCR_DM	.\sh7750_regs.h	1083;"	d
SH7750_CHCR_DM_DEC	.\sh7750_regs.h	1086;"	d
SH7750_CHCR_DM_FIX	.\sh7750_regs.h	1084;"	d
SH7750_CHCR_DM_INC	.\sh7750_regs.h	1085;"	d
SH7750_CHCR_DS	.\sh7750_regs.h	1067;"	d
SH7750_CHCR_DSA	.\sh7750_regs.h	1052;"	d
SH7750_CHCR_DSA_AMEM16	.\sh7750_regs.h	1060;"	d
SH7750_CHCR_DSA_AMEM8	.\sh7750_regs.h	1059;"	d
SH7750_CHCR_DSA_CMEM16	.\sh7750_regs.h	1058;"	d
SH7750_CHCR_DSA_CMEM8	.\sh7750_regs.h	1057;"	d
SH7750_CHCR_DSA_DYNBSZ	.\sh7750_regs.h	1054;"	d
SH7750_CHCR_DSA_IO16	.\sh7750_regs.h	1056;"	d
SH7750_CHCR_DSA_IO8	.\sh7750_regs.h	1055;"	d
SH7750_CHCR_DSA_PCMCIA	.\sh7750_regs.h	1053;"	d
SH7750_CHCR_DS_FALL	.\sh7750_regs.h	1069;"	d
SH7750_CHCR_DS_LOWLVL	.\sh7750_regs.h	1068;"	d
SH7750_CHCR_DTC	.\sh7750_regs.h	1062;"	d
SH7750_CHCR_IE	.\sh7750_regs.h	1149;"	d
SH7750_CHCR_REGOFS	.\sh7750_regs.h	1026;"	d
SH7750_CHCR_RL	.\sh7750_regs.h	1071;"	d
SH7750_CHCR_RL_ACTH	.\sh7750_regs.h	1072;"	d
SH7750_CHCR_RL_ACTL	.\sh7750_regs.h	1073;"	d
SH7750_CHCR_RS	.\sh7750_regs.h	1093;"	d
SH7750_CHCR_RS_AR_EA_TO_EA	.\sh7750_regs.h	1104;"	d
SH7750_CHCR_RS_AR_EA_TO_OCP	.\sh7750_regs.h	1107;"	d
SH7750_CHCR_RS_AR_OCP_TO_EA	.\sh7750_regs.h	1110;"	d
SH7750_CHCR_RS_ER_DA_EA_TO_EA	.\sh7750_regs.h	1094;"	d
SH7750_CHCR_RS_ER_SA_EA_TO_ED	.\sh7750_regs.h	1097;"	d
SH7750_CHCR_RS_ER_SA_ED_TO_EA	.\sh7750_regs.h	1100;"	d
SH7750_CHCR_RS_SCIFRX_SC_TO_EA	.\sh7750_regs.h	1122;"	d
SH7750_CHCR_RS_SCIFTX_EA_TO_SC	.\sh7750_regs.h	1119;"	d
SH7750_CHCR_RS_SCIRX_SC_TO_EA	.\sh7750_regs.h	1116;"	d
SH7750_CHCR_RS_SCITX_EA_TO_SC	.\sh7750_regs.h	1113;"	d
SH7750_CHCR_RS_TMU2_EA_TO_EA	.\sh7750_regs.h	1125;"	d
SH7750_CHCR_RS_TMU2_EA_TO_OCP	.\sh7750_regs.h	1129;"	d
SH7750_CHCR_RS_TMU2_OCP_TO_EA	.\sh7750_regs.h	1133;"	d
SH7750_CHCR_SM	.\sh7750_regs.h	1088;"	d
SH7750_CHCR_SM_DEC	.\sh7750_regs.h	1091;"	d
SH7750_CHCR_SM_FIX	.\sh7750_regs.h	1089;"	d
SH7750_CHCR_SM_INC	.\sh7750_regs.h	1090;"	d
SH7750_CHCR_SSA	.\sh7750_regs.h	1038;"	d
SH7750_CHCR_SSA_AMEM16	.\sh7750_regs.h	1046;"	d
SH7750_CHCR_SSA_AMEM8	.\sh7750_regs.h	1045;"	d
SH7750_CHCR_SSA_CMEM16	.\sh7750_regs.h	1044;"	d
SH7750_CHCR_SSA_CMEM8	.\sh7750_regs.h	1043;"	d
SH7750_CHCR_SSA_DYNBSZ	.\sh7750_regs.h	1040;"	d
SH7750_CHCR_SSA_IO16	.\sh7750_regs.h	1042;"	d
SH7750_CHCR_SSA_IO8	.\sh7750_regs.h	1041;"	d
SH7750_CHCR_SSA_PCMCIA	.\sh7750_regs.h	1039;"	d
SH7750_CHCR_STC	.\sh7750_regs.h	1048;"	d
SH7750_CHCR_TE	.\sh7750_regs.h	1150;"	d
SH7750_CHCR_TM	.\sh7750_regs.h	1138;"	d
SH7750_CHCR_TM_BURST	.\sh7750_regs.h	1140;"	d
SH7750_CHCR_TM_CSTEAL	.\sh7750_regs.h	1139;"	d
SH7750_CHCR_TS	.\sh7750_regs.h	1142;"	d
SH7750_CHCR_TS_BLOCK	.\sh7750_regs.h	1147;"	d
SH7750_CHCR_TS_BYTE	.\sh7750_regs.h	1144;"	d
SH7750_CHCR_TS_LONG	.\sh7750_regs.h	1146;"	d
SH7750_CHCR_TS_QUAD	.\sh7750_regs.h	1143;"	d
SH7750_CHCR_TS_WORD	.\sh7750_regs.h	1145;"	d
SH7750_DAR	.\sh7750_regs.h	1001;"	d
SH7750_DAR0	.\sh7750_regs.h	1003;"	d
SH7750_DAR0_A7	.\sh7750_regs.h	1007;"	d
SH7750_DAR1	.\sh7750_regs.h	1004;"	d
SH7750_DAR1_A7	.\sh7750_regs.h	1008;"	d
SH7750_DAR2	.\sh7750_regs.h	1005;"	d
SH7750_DAR2_A7	.\sh7750_regs.h	1009;"	d
SH7750_DAR3	.\sh7750_regs.h	1006;"	d
SH7750_DAR3_A7	.\sh7750_regs.h	1010;"	d
SH7750_DAR_A7	.\sh7750_regs.h	1002;"	d
SH7750_DAR_REGOFS	.\sh7750_regs.h	1000;"	d
SH7750_DMAOR	.\sh7750_regs.h	1155;"	d
SH7750_DMAOR_A7	.\sh7750_regs.h	1156;"	d
SH7750_DMAOR_AE	.\sh7750_regs.h	1167;"	d
SH7750_DMAOR_COD	.\sh7750_regs.h	1166;"	d
SH7750_DMAOR_DDT	.\sh7750_regs.h	1158;"	d
SH7750_DMAOR_DME	.\sh7750_regs.h	1169;"	d
SH7750_DMAOR_NMIF	.\sh7750_regs.h	1168;"	d
SH7750_DMAOR_PR	.\sh7750_regs.h	1160;"	d
SH7750_DMAOR_PR_0123	.\sh7750_regs.h	1161;"	d
SH7750_DMAOR_PR_0231	.\sh7750_regs.h	1162;"	d
SH7750_DMAOR_PR_2013	.\sh7750_regs.h	1163;"	d
SH7750_DMAOR_PR_RR	.\sh7750_regs.h	1164;"	d
SH7750_DMAOR_REGOFS	.\sh7750_regs.h	1154;"	d
SH7750_DMATCR	.\sh7750_regs.h	1014;"	d
SH7750_DMATCR0_A7	.\sh7750_regs.h	1020;"	d
SH7750_DMATCR0_P4	.\sh7750_regs.h	1016;"	d
SH7750_DMATCR1_A7	.\sh7750_regs.h	1021;"	d
SH7750_DMATCR1_P4	.\sh7750_regs.h	1017;"	d
SH7750_DMATCR2_A7	.\sh7750_regs.h	1022;"	d
SH7750_DMATCR2_P4	.\sh7750_regs.h	1018;"	d
SH7750_DMATCR3_A7	.\sh7750_regs.h	1023;"	d
SH7750_DMATCR3_P4	.\sh7750_regs.h	1019;"	d
SH7750_DMATCR_A7	.\sh7750_regs.h	1015;"	d
SH7750_DMATCR_REGOFS	.\sh7750_regs.h	1013;"	d
SH7750_EVT_DATA_READ_ERR	.\sh7750_regs.h	206;"	d
SH7750_EVT_DATA_WRITE_ERR	.\sh7750_regs.h	207;"	d
SH7750_EVT_DMAC_DMAE	.\sh7750_regs.h	271;"	d
SH7750_EVT_DMAC_DMTE0	.\sh7750_regs.h	267;"	d
SH7750_EVT_DMAC_DMTE1	.\sh7750_regs.h	268;"	d
SH7750_EVT_DMAC_DMTE2	.\sh7750_regs.h	269;"	d
SH7750_EVT_DMAC_DMTE3	.\sh7750_regs.h	270;"	d
SH7750_EVT_DTLB_WRITE_MISS	.\sh7750_regs.h	208;"	d
SH7750_EVT_DTLB_WRITE_PROTV	.\sh7750_regs.h	209;"	d
SH7750_EVT_FPU_DISABLE	.\sh7750_regs.h	204;"	d
SH7750_EVT_FPU_EXCEPTION	.\sh7750_regs.h	211;"	d
SH7750_EVT_GPIO	.\sh7750_regs.h	264;"	d
SH7750_EVT_HUDI	.\sh7750_regs.h	261;"	d
SH7750_EVT_IADDR_ERR	.\sh7750_regs.h	195;"	d
SH7750_EVT_ILLEGAL_INSTR	.\sh7750_regs.h	200;"	d
SH7750_EVT_INITIAL_PGWRITE	.\sh7750_regs.h	212;"	d
SH7750_EVT_IRQ0	.\sh7750_regs.h	217;"	d
SH7750_EVT_IRQ1	.\sh7750_regs.h	218;"	d
SH7750_EVT_IRQ2	.\sh7750_regs.h	219;"	d
SH7750_EVT_IRQ3	.\sh7750_regs.h	220;"	d
SH7750_EVT_IRQ4	.\sh7750_regs.h	221;"	d
SH7750_EVT_IRQ5	.\sh7750_regs.h	222;"	d
SH7750_EVT_IRQ6	.\sh7750_regs.h	223;"	d
SH7750_EVT_IRQ7	.\sh7750_regs.h	224;"	d
SH7750_EVT_IRQ8	.\sh7750_regs.h	225;"	d
SH7750_EVT_IRQ9	.\sh7750_regs.h	226;"	d
SH7750_EVT_IRQA	.\sh7750_regs.h	227;"	d
SH7750_EVT_IRQB	.\sh7750_regs.h	228;"	d
SH7750_EVT_IRQC	.\sh7750_regs.h	229;"	d
SH7750_EVT_IRQD	.\sh7750_regs.h	230;"	d
SH7750_EVT_IRQE	.\sh7750_regs.h	231;"	d
SH7750_EVT_MANUAL_RST	.\sh7750_regs.h	190;"	d
SH7750_EVT_NMI	.\sh7750_regs.h	216;"	d
SH7750_EVT_POWER_ON_RST	.\sh7750_regs.h	189;"	d
SH7750_EVT_REF_RCMI	.\sh7750_regs.h	256;"	d
SH7750_EVT_REF_ROVI	.\sh7750_regs.h	257;"	d
SH7750_EVT_RTC_ATI	.\sh7750_regs.h	240;"	d
SH7750_EVT_RTC_CUI	.\sh7750_regs.h	242;"	d
SH7750_EVT_RTC_PRI	.\sh7750_regs.h	241;"	d
SH7750_EVT_SCIF_BRI	.\sh7750_regs.h	278;"	d
SH7750_EVT_SCIF_ERI	.\sh7750_regs.h	275;"	d
SH7750_EVT_SCIF_RXI	.\sh7750_regs.h	276;"	d
SH7750_EVT_SCIF_TXI	.\sh7750_regs.h	279;"	d
SH7750_EVT_SCI_ERI	.\sh7750_regs.h	245;"	d
SH7750_EVT_SCI_RXI	.\sh7750_regs.h	246;"	d
SH7750_EVT_SCI_TEI	.\sh7750_regs.h	248;"	d
SH7750_EVT_SCI_TXI	.\sh7750_regs.h	247;"	d
SH7750_EVT_SLOT_FPU_DISABLE	.\sh7750_regs.h	205;"	d
SH7750_EVT_SLOT_ILLEGAL_INSTR	.\sh7750_regs.h	202;"	d
SH7750_EVT_TICPI2	.\sh7750_regs.h	237;"	d
SH7750_EVT_TLB_MULT_HIT	.\sh7750_regs.h	191;"	d
SH7750_EVT_TLB_READ_MISS	.\sh7750_regs.h	196;"	d
SH7750_EVT_TLB_READ_PROTV	.\sh7750_regs.h	198;"	d
SH7750_EVT_TO_NUM	.\sh7750_regs.h	186;"	d
SH7750_EVT_TRAPA	.\sh7750_regs.h	213;"	d
SH7750_EVT_TUNI0	.\sh7750_regs.h	234;"	d
SH7750_EVT_TUNI1	.\sh7750_regs.h	235;"	d
SH7750_EVT_TUNI2	.\sh7750_regs.h	236;"	d
SH7750_EVT_USER_BREAK	.\sh7750_regs.h	194;"	d
SH7750_EVT_WDT_ITI	.\sh7750_regs.h	251;"	d
SH7750_EXPEVT	.\sh7750_regs.h	170;"	d
SH7750_EXPEVT_A7	.\sh7750_regs.h	171;"	d
SH7750_EXPEVT_EX	.\sh7750_regs.h	173;"	d
SH7750_EXPEVT_EX_S	.\sh7750_regs.h	174;"	d
SH7750_EXPEVT_REGOFS	.\sh7750_regs.h	169;"	d
SH7750_FRQCR	.\sh7750_regs.h	331;"	d
SH7750_FRQCR_A7	.\sh7750_regs.h	332;"	d
SH7750_FRQCR_BFC	.\sh7750_regs.h	348;"	d
SH7750_FRQCR_BFCDIV1	.\sh7750_regs.h	349;"	d
SH7750_FRQCR_BFCDIV2	.\sh7750_regs.h	350;"	d
SH7750_FRQCR_BFCDIV3	.\sh7750_regs.h	351;"	d
SH7750_FRQCR_BFCDIV4	.\sh7750_regs.h	352;"	d
SH7750_FRQCR_BFCDIV6	.\sh7750_regs.h	353;"	d
SH7750_FRQCR_BFCDIV8	.\sh7750_regs.h	354;"	d
SH7750_FRQCR_CKOEN	.\sh7750_regs.h	334;"	d
SH7750_FRQCR_IFC	.\sh7750_regs.h	340;"	d
SH7750_FRQCR_IFCDIV1	.\sh7750_regs.h	341;"	d
SH7750_FRQCR_IFCDIV2	.\sh7750_regs.h	342;"	d
SH7750_FRQCR_IFCDIV3	.\sh7750_regs.h	343;"	d
SH7750_FRQCR_IFCDIV4	.\sh7750_regs.h	344;"	d
SH7750_FRQCR_IFCDIV6	.\sh7750_regs.h	345;"	d
SH7750_FRQCR_IFCDIV8	.\sh7750_regs.h	346;"	d
SH7750_FRQCR_PFC	.\sh7750_regs.h	356;"	d
SH7750_FRQCR_PFCDIV2	.\sh7750_regs.h	358;"	d
SH7750_FRQCR_PFCDIV3	.\sh7750_regs.h	359;"	d
SH7750_FRQCR_PFCDIV4	.\sh7750_regs.h	360;"	d
SH7750_FRQCR_PFCDIV6	.\sh7750_regs.h	361;"	d
SH7750_FRQCR_PFCDIV8	.\sh7750_regs.h	362;"	d
SH7750_FRQCR_PLL1EN	.\sh7750_regs.h	337;"	d
SH7750_FRQCR_PLL2EN	.\sh7750_regs.h	338;"	d
SH7750_FRQCR_REGOFS	.\sh7750_regs.h	330;"	d
SH7750_GPIOIC	.\sh7750_regs.h	1210;"	d
SH7750_GPIOIC_A7	.\sh7750_regs.h	1211;"	d
SH7750_GPIOIC_PTIREN	.\sh7750_regs.h	1213;"	d
SH7750_GPIOIC_REGOFS	.\sh7750_regs.h	1209;"	d
SH7750_ICR	.\sh7750_regs.h	1220;"	d
SH7750_ICR_A7	.\sh7750_regs.h	1221;"	d
SH7750_ICR_IRLM	.\sh7750_regs.h	1238;"	d
SH7750_ICR_IRLM_ENC	.\sh7750_regs.h	1239;"	d
SH7750_ICR_IRLM_RAW	.\sh7750_regs.h	1241;"	d
SH7750_ICR_MAI	.\sh7750_regs.h	1224;"	d
SH7750_ICR_NMIB	.\sh7750_regs.h	1226;"	d
SH7750_ICR_NMIB_BLK	.\sh7750_regs.h	1227;"	d
SH7750_ICR_NMIB_NBLK	.\sh7750_regs.h	1229;"	d
SH7750_ICR_NMIE	.\sh7750_regs.h	1232;"	d
SH7750_ICR_NMIE_FALL	.\sh7750_regs.h	1233;"	d
SH7750_ICR_NMIE_RISE	.\sh7750_regs.h	1235;"	d
SH7750_ICR_NMIL	.\sh7750_regs.h	1223;"	d
SH7750_ICR_REGOFS	.\sh7750_regs.h	1219;"	d
SH7750_INTEVT	.\sh7750_regs.h	178;"	d
SH7750_INTEVT_A7	.\sh7750_regs.h	179;"	d
SH7750_INTEVT_EX	.\sh7750_regs.h	180;"	d
SH7750_INTEVT_EX_S	.\sh7750_regs.h	181;"	d
SH7750_INTEVT_REGOFS	.\sh7750_regs.h	177;"	d
SH7750_MCR	.\sh7750_regs.h	771;"	d
SH7750_MCR_A7	.\sh7750_regs.h	772;"	d
SH7750_MCR_AMX	.\sh7750_regs.h	852;"	d
SH7750_MCR_AMX_DRAM_10BIT_COL	.\sh7750_regs.h	856;"	d
SH7750_MCR_AMX_DRAM_11BIT_COL	.\sh7750_regs.h	857;"	d
SH7750_MCR_AMX_DRAM_12BIT_COL	.\sh7750_regs.h	858;"	d
SH7750_MCR_AMX_DRAM_8BIT_COL	.\sh7750_regs.h	854;"	d
SH7750_MCR_AMX_DRAM_9BIT_COL	.\sh7750_regs.h	855;"	d
SH7750_MCR_AMX_S	.\sh7750_regs.h	853;"	d
SH7750_MCR_BE	.\sh7750_regs.h	846;"	d
SH7750_MCR_MRSET	.\sh7750_regs.h	775;"	d
SH7750_MCR_PALL	.\sh7750_regs.h	776;"	d
SH7750_MCR_RASD	.\sh7750_regs.h	774;"	d
SH7750_MCR_RCD	.\sh7750_regs.h	806;"	d
SH7750_MCR_RCD_DRAM_2	.\sh7750_regs.h	809;"	d
SH7750_MCR_RCD_DRAM_3	.\sh7750_regs.h	810;"	d
SH7750_MCR_RCD_DRAM_4	.\sh7750_regs.h	811;"	d
SH7750_MCR_RCD_DRAM_5	.\sh7750_regs.h	812;"	d
SH7750_MCR_RCD_SDRAM_2	.\sh7750_regs.h	813;"	d
SH7750_MCR_RCD_SDRAM_3	.\sh7750_regs.h	814;"	d
SH7750_MCR_RCD_SDRAM_4	.\sh7750_regs.h	815;"	d
SH7750_MCR_REGOFS	.\sh7750_regs.h	770;"	d
SH7750_MCR_RFSH	.\sh7750_regs.h	861;"	d
SH7750_MCR_RMODE	.\sh7750_regs.h	862;"	d
SH7750_MCR_RMODE_EDO	.\sh7750_regs.h	865;"	d
SH7750_MCR_RMODE_NORMAL	.\sh7750_regs.h	863;"	d
SH7750_MCR_RMODE_SELF	.\sh7750_regs.h	864;"	d
SH7750_MCR_SZ	.\sh7750_regs.h	847;"	d
SH7750_MCR_SZ_16	.\sh7750_regs.h	849;"	d
SH7750_MCR_SZ_32	.\sh7750_regs.h	850;"	d
SH7750_MCR_SZ_64	.\sh7750_regs.h	848;"	d
SH7750_MCR_TCAS	.\sh7750_regs.h	788;"	d
SH7750_MCR_TCAS_1	.\sh7750_regs.h	789;"	d
SH7750_MCR_TCAS_2	.\sh7750_regs.h	790;"	d
SH7750_MCR_TPC	.\sh7750_regs.h	792;"	d
SH7750_MCR_TPC_S	.\sh7750_regs.h	796;"	d
SH7750_MCR_TPC_SDRAM_1	.\sh7750_regs.h	797;"	d
SH7750_MCR_TPC_SDRAM_2	.\sh7750_regs.h	798;"	d
SH7750_MCR_TPC_SDRAM_3	.\sh7750_regs.h	799;"	d
SH7750_MCR_TPC_SDRAM_4	.\sh7750_regs.h	800;"	d
SH7750_MCR_TPC_SDRAM_5	.\sh7750_regs.h	801;"	d
SH7750_MCR_TPC_SDRAM_6	.\sh7750_regs.h	802;"	d
SH7750_MCR_TPC_SDRAM_7	.\sh7750_regs.h	803;"	d
SH7750_MCR_TPC_SDRAM_8	.\sh7750_regs.h	804;"	d
SH7750_MCR_TRAS	.\sh7750_regs.h	824;"	d
SH7750_MCR_TRAS_DRAM_2	.\sh7750_regs.h	828;"	d
SH7750_MCR_TRAS_DRAM_3	.\sh7750_regs.h	829;"	d
SH7750_MCR_TRAS_DRAM_4	.\sh7750_regs.h	830;"	d
SH7750_MCR_TRAS_DRAM_5	.\sh7750_regs.h	831;"	d
SH7750_MCR_TRAS_DRAM_6	.\sh7750_regs.h	832;"	d
SH7750_MCR_TRAS_DRAM_7	.\sh7750_regs.h	833;"	d
SH7750_MCR_TRAS_DRAM_8	.\sh7750_regs.h	834;"	d
SH7750_MCR_TRAS_DRAM_9	.\sh7750_regs.h	835;"	d
SH7750_MCR_TRAS_SDRAM_TRC_10	.\sh7750_regs.h	843;"	d
SH7750_MCR_TRAS_SDRAM_TRC_11	.\sh7750_regs.h	844;"	d
SH7750_MCR_TRAS_SDRAM_TRC_4	.\sh7750_regs.h	837;"	d
SH7750_MCR_TRAS_SDRAM_TRC_5	.\sh7750_regs.h	838;"	d
SH7750_MCR_TRAS_SDRAM_TRC_6	.\sh7750_regs.h	839;"	d
SH7750_MCR_TRAS_SDRAM_TRC_7	.\sh7750_regs.h	840;"	d
SH7750_MCR_TRAS_SDRAM_TRC_8	.\sh7750_regs.h	841;"	d
SH7750_MCR_TRAS_SDRAM_TRC_9	.\sh7750_regs.h	842;"	d
SH7750_MCR_TRC	.\sh7750_regs.h	777;"	d
SH7750_MCR_TRC_0	.\sh7750_regs.h	779;"	d
SH7750_MCR_TRC_12	.\sh7750_regs.h	783;"	d
SH7750_MCR_TRC_15	.\sh7750_regs.h	784;"	d
SH7750_MCR_TRC_18	.\sh7750_regs.h	785;"	d
SH7750_MCR_TRC_21	.\sh7750_regs.h	786;"	d
SH7750_MCR_TRC_3	.\sh7750_regs.h	780;"	d
SH7750_MCR_TRC_6	.\sh7750_regs.h	781;"	d
SH7750_MCR_TRC_9	.\sh7750_regs.h	782;"	d
SH7750_MCR_TRWL	.\sh7750_regs.h	817;"	d
SH7750_MCR_TRWL_1	.\sh7750_regs.h	818;"	d
SH7750_MCR_TRWL_2	.\sh7750_regs.h	819;"	d
SH7750_MCR_TRWL_3	.\sh7750_regs.h	820;"	d
SH7750_MCR_TRWL_4	.\sh7750_regs.h	821;"	d
SH7750_MCR_TRWL_5	.\sh7750_regs.h	822;"	d
SH7750_MMUCR	.\sh7750_regs.h	105;"	d
SH7750_MMUCR_A7	.\sh7750_regs.h	106;"	d
SH7750_MMUCR_AT	.\sh7750_regs.h	107;"	d
SH7750_MMUCR_LRUI	.\sh7750_regs.h	115;"	d
SH7750_MMUCR_LRUI_S	.\sh7750_regs.h	116;"	d
SH7750_MMUCR_REGOFS	.\sh7750_regs.h	104;"	d
SH7750_MMUCR_SQMD	.\sh7750_regs.h	110;"	d
SH7750_MMUCR_SV	.\sh7750_regs.h	109;"	d
SH7750_MMUCR_TI	.\sh7750_regs.h	108;"	d
SH7750_MMUCR_URB	.\sh7750_regs.h	113;"	d
SH7750_MMUCR_URB_S	.\sh7750_regs.h	114;"	d
SH7750_MMUCR_URC	.\sh7750_regs.h	111;"	d
SH7750_MMUCR_URC_S	.\sh7750_regs.h	112;"	d
SH7750_P4_BASE	.\sh7750_regs.h	26;"	d
SH7750_P4_REG32	.\sh7750_regs.h	30;"	d
SH7750_PCR	.\sh7750_regs.h	878;"	d
SH7750_PCR_A5PCW	.\sh7750_regs.h	881;"	d
SH7750_PCR_A5PCW_0	.\sh7750_regs.h	885;"	d
SH7750_PCR_A5PCW_15	.\sh7750_regs.h	886;"	d
SH7750_PCR_A5PCW_30	.\sh7750_regs.h	887;"	d
SH7750_PCR_A5PCW_50	.\sh7750_regs.h	888;"	d
SH7750_PCR_A5TED	.\sh7750_regs.h	899;"	d
SH7750_PCR_A5TED_S	.\sh7750_regs.h	903;"	d
SH7750_PCR_A5TEH	.\sh7750_regs.h	916;"	d
SH7750_PCR_A5TEH_S	.\sh7750_regs.h	920;"	d
SH7750_PCR_A6PCW	.\sh7750_regs.h	890;"	d
SH7750_PCR_A6PCW_0	.\sh7750_regs.h	894;"	d
SH7750_PCR_A6PCW_15	.\sh7750_regs.h	895;"	d
SH7750_PCR_A6PCW_30	.\sh7750_regs.h	896;"	d
SH7750_PCR_A6PCW_50	.\sh7750_regs.h	897;"	d
SH7750_PCR_A6TED	.\sh7750_regs.h	904;"	d
SH7750_PCR_A6TED_S	.\sh7750_regs.h	905;"	d
SH7750_PCR_A6TEH	.\sh7750_regs.h	922;"	d
SH7750_PCR_A6TEH_S	.\sh7750_regs.h	923;"	d
SH7750_PCR_A7	.\sh7750_regs.h	879;"	d
SH7750_PCR_REGOFS	.\sh7750_regs.h	877;"	d
SH7750_PCR_TED_0WS	.\sh7750_regs.h	907;"	d
SH7750_PCR_TED_12WS	.\sh7750_regs.h	913;"	d
SH7750_PCR_TED_15WS	.\sh7750_regs.h	914;"	d
SH7750_PCR_TED_1WS	.\sh7750_regs.h	908;"	d
SH7750_PCR_TED_2WS	.\sh7750_regs.h	909;"	d
SH7750_PCR_TED_3WS	.\sh7750_regs.h	910;"	d
SH7750_PCR_TED_6WS	.\sh7750_regs.h	911;"	d
SH7750_PCR_TED_9WS	.\sh7750_regs.h	912;"	d
SH7750_PCR_TEH_0WS	.\sh7750_regs.h	925;"	d
SH7750_PCR_TEH_12WS	.\sh7750_regs.h	931;"	d
SH7750_PCR_TEH_15WS	.\sh7750_regs.h	932;"	d
SH7750_PCR_TEH_1WS	.\sh7750_regs.h	926;"	d
SH7750_PCR_TEH_2WS	.\sh7750_regs.h	927;"	d
SH7750_PCR_TEH_3WS	.\sh7750_regs.h	928;"	d
SH7750_PCR_TEH_6WS	.\sh7750_regs.h	929;"	d
SH7750_PCR_TEH_9WS	.\sh7750_regs.h	930;"	d
SH7750_PCTRA	.\sh7750_regs.h	1176;"	d
SH7750_PCTRA_A7	.\sh7750_regs.h	1177;"	d
SH7750_PCTRA_PBINP	.\sh7750_regs.h	1181;"	d
SH7750_PCTRA_PBNPUP	.\sh7750_regs.h	1180;"	d
SH7750_PCTRA_PBOUT	.\sh7750_regs.h	1182;"	d
SH7750_PCTRA_PBPUP	.\sh7750_regs.h	1179;"	d
SH7750_PCTRA_REGOFS	.\sh7750_regs.h	1175;"	d
SH7750_PCTRB	.\sh7750_regs.h	1193;"	d
SH7750_PCTRB_A7	.\sh7750_regs.h	1194;"	d
SH7750_PCTRB_PBINP	.\sh7750_regs.h	1198;"	d
SH7750_PCTRB_PBNPUP	.\sh7750_regs.h	1197;"	d
SH7750_PCTRB_PBOUT	.\sh7750_regs.h	1199;"	d
SH7750_PCTRB_PBPUP	.\sh7750_regs.h	1196;"	d
SH7750_PCTRB_REGOFS	.\sh7750_regs.h	1192;"	d
SH7750_PDTRA	.\sh7750_regs.h	1186;"	d
SH7750_PDTRA_A7	.\sh7750_regs.h	1187;"	d
SH7750_PDTRA_BIT	.\sh7750_regs.h	1189;"	d
SH7750_PDTRA_REGOFS	.\sh7750_regs.h	1185;"	d
SH7750_PDTRB	.\sh7750_regs.h	1203;"	d
SH7750_PDTRB_A7	.\sh7750_regs.h	1204;"	d
SH7750_PDTRB_BIT	.\sh7750_regs.h	1206;"	d
SH7750_PDTRB_REGOFS	.\sh7750_regs.h	1202;"	d
SH7750_PRECHARGE0_A7	.\sh7750_regs.h	1265;"	d
SH7750_PRECHARGE1_A7	.\sh7750_regs.h	1266;"	d
SH7750_PTEA	.\sh7750_regs.h	77;"	d
SH7750_PTEA_A7	.\sh7750_regs.h	78;"	d
SH7750_PTEA_REGOFS	.\sh7750_regs.h	76;"	d
SH7750_PTEA_SA	.\sh7750_regs.h	82;"	d
SH7750_PTEA_SA_AMEM16	.\sh7750_regs.h	90;"	d
SH7750_PTEA_SA_AMEM8	.\sh7750_regs.h	89;"	d
SH7750_PTEA_SA_CMEM16	.\sh7750_regs.h	88;"	d
SH7750_PTEA_SA_CMEM8	.\sh7750_regs.h	87;"	d
SH7750_PTEA_SA_IO16	.\sh7750_regs.h	86;"	d
SH7750_PTEA_SA_IO8	.\sh7750_regs.h	85;"	d
SH7750_PTEA_SA_IOVAR	.\sh7750_regs.h	84;"	d
SH7750_PTEA_SA_UNDEF	.\sh7750_regs.h	83;"	d
SH7750_PTEA_TC	.\sh7750_regs.h	79;"	d
SH7750_PTEH	.\sh7750_regs.h	39;"	d
SH7750_PTEH_A7	.\sh7750_regs.h	40;"	d
SH7750_PTEH_ASID	.\sh7750_regs.h	43;"	d
SH7750_PTEH_ASID_S	.\sh7750_regs.h	44;"	d
SH7750_PTEH_REGOFS	.\sh7750_regs.h	38;"	d
SH7750_PTEH_VPN	.\sh7750_regs.h	41;"	d
SH7750_PTEH_VPN_S	.\sh7750_regs.h	42;"	d
SH7750_PTEL	.\sh7750_regs.h	48;"	d
SH7750_PTEL_A7	.\sh7750_regs.h	49;"	d
SH7750_PTEL_C	.\sh7750_regs.h	64;"	d
SH7750_PTEL_D	.\sh7750_regs.h	66;"	d
SH7750_PTEL_PPN	.\sh7750_regs.h	50;"	d
SH7750_PTEL_PPN_S	.\sh7750_regs.h	51;"	d
SH7750_PTEL_PR	.\sh7750_regs.h	59;"	d
SH7750_PTEL_PR_ROPO	.\sh7750_regs.h	60;"	d
SH7750_PTEL_PR_ROPU	.\sh7750_regs.h	62;"	d
SH7750_PTEL_PR_RWPO	.\sh7750_regs.h	61;"	d
SH7750_PTEL_PR_RWPU	.\sh7750_regs.h	63;"	d
SH7750_PTEL_REGOFS	.\sh7750_regs.h	47;"	d
SH7750_PTEL_SH	.\sh7750_regs.h	68;"	d
SH7750_PTEL_SZ0	.\sh7750_regs.h	54;"	d
SH7750_PTEL_SZ1	.\sh7750_regs.h	53;"	d
SH7750_PTEL_SZ_1KB	.\sh7750_regs.h	55;"	d
SH7750_PTEL_SZ_1MB	.\sh7750_regs.h	58;"	d
SH7750_PTEL_SZ_4KB	.\sh7750_regs.h	56;"	d
SH7750_PTEL_SZ_64KB	.\sh7750_regs.h	57;"	d
SH7750_PTEL_V	.\sh7750_regs.h	52;"	d
SH7750_PTEL_WT	.\sh7750_regs.h	70;"	d
SH7750_QACR0	.\sh7750_regs.h	147;"	d
SH7750_QACR0_A7	.\sh7750_regs.h	148;"	d
SH7750_QACR0_REGOFS	.\sh7750_regs.h	146;"	d
SH7750_QACR1	.\sh7750_regs.h	152;"	d
SH7750_QACR1_A7	.\sh7750_regs.h	153;"	d
SH7750_QACR1_REGOFS	.\sh7750_regs.h	151;"	d
SH7750_R64CNT	.\sh7750_regs.h	407;"	d
SH7750_R64CNT_A7	.\sh7750_regs.h	408;"	d
SH7750_R64CNT_REGOFS	.\sh7750_regs.h	406;"	d
SH7750_RCR1	.\sh7750_regs.h	499;"	d
SH7750_RCR1_A7	.\sh7750_regs.h	500;"	d
SH7750_RCR1_AF	.\sh7750_regs.h	504;"	d
SH7750_RCR1_AIE	.\sh7750_regs.h	503;"	d
SH7750_RCR1_CF	.\sh7750_regs.h	501;"	d
SH7750_RCR1_CIE	.\sh7750_regs.h	502;"	d
SH7750_RCR1_REGOFS	.\sh7750_regs.h	498;"	d
SH7750_RCR2	.\sh7750_regs.h	508;"	d
SH7750_RCR2_A7	.\sh7750_regs.h	509;"	d
SH7750_RCR2_ADJ	.\sh7750_regs.h	521;"	d
SH7750_RCR2_PEF	.\sh7750_regs.h	510;"	d
SH7750_RCR2_PES	.\sh7750_regs.h	511;"	d
SH7750_RCR2_PES_DIS	.\sh7750_regs.h	512;"	d
SH7750_RCR2_PES_DIV16	.\sh7750_regs.h	515;"	d
SH7750_RCR2_PES_DIV2	.\sh7750_regs.h	517;"	d
SH7750_RCR2_PES_DIV256	.\sh7750_regs.h	513;"	d
SH7750_RCR2_PES_DIV4	.\sh7750_regs.h	516;"	d
SH7750_RCR2_PES_DIV64	.\sh7750_regs.h	514;"	d
SH7750_RCR2_PES_x1	.\sh7750_regs.h	518;"	d
SH7750_RCR2_PES_x2	.\sh7750_regs.h	519;"	d
SH7750_RCR2_REGOFS	.\sh7750_regs.h	507;"	d
SH7750_RCR2_RESET	.\sh7750_regs.h	522;"	d
SH7750_RCR2_RTCEN	.\sh7750_regs.h	520;"	d
SH7750_RCR2_START	.\sh7750_regs.h	523;"	d
SH7750_RDAYAR	.\sh7750_regs.h	487;"	d
SH7750_RDAYAR_A7	.\sh7750_regs.h	488;"	d
SH7750_RDAYAR_ENB	.\sh7750_regs.h	489;"	d
SH7750_RDAYAR_REGOFS	.\sh7750_regs.h	486;"	d
SH7750_RDAYCNT	.\sh7750_regs.h	440;"	d
SH7750_RDAYCNT_A7	.\sh7750_regs.h	441;"	d
SH7750_RDAYCNT_REGOFS	.\sh7750_regs.h	439;"	d
SH7750_RFCR	.\sh7750_regs.h	977;"	d
SH7750_RFCR_A7	.\sh7750_regs.h	978;"	d
SH7750_RFCR_KEY	.\sh7750_regs.h	980;"	d
SH7750_RFCR_REGOFS	.\sh7750_regs.h	976;"	d
SH7750_RHRAR	.\sh7750_regs.h	467;"	d
SH7750_RHRAR_A7	.\sh7750_regs.h	468;"	d
SH7750_RHRAR_ENB	.\sh7750_regs.h	469;"	d
SH7750_RHRAR_REGOFS	.\sh7750_regs.h	466;"	d
SH7750_RHRCNT	.\sh7750_regs.h	422;"	d
SH7750_RHRCNT_A7	.\sh7750_regs.h	423;"	d
SH7750_RHRCNT_REGOFS	.\sh7750_regs.h	421;"	d
SH7750_RMINAR	.\sh7750_regs.h	461;"	d
SH7750_RMINAR_A7	.\sh7750_regs.h	462;"	d
SH7750_RMINAR_ENB	.\sh7750_regs.h	463;"	d
SH7750_RMINAR_REGOFS	.\sh7750_regs.h	460;"	d
SH7750_RMINCNT	.\sh7750_regs.h	417;"	d
SH7750_RMINCNT_A7	.\sh7750_regs.h	418;"	d
SH7750_RMINCNT_REGOFS	.\sh7750_regs.h	416;"	d
SH7750_RMONAR	.\sh7750_regs.h	493;"	d
SH7750_RMONAR_A7	.\sh7750_regs.h	494;"	d
SH7750_RMONAR_ENB	.\sh7750_regs.h	495;"	d
SH7750_RMONAR_REGOFS	.\sh7750_regs.h	492;"	d
SH7750_RMONCNT	.\sh7750_regs.h	445;"	d
SH7750_RMONCNT_A7	.\sh7750_regs.h	446;"	d
SH7750_RMONCNT_REGOFS	.\sh7750_regs.h	444;"	d
SH7750_RSECAR	.\sh7750_regs.h	455;"	d
SH7750_RSECAR_A7	.\sh7750_regs.h	456;"	d
SH7750_RSECAR_ENB	.\sh7750_regs.h	457;"	d
SH7750_RSECAR_REGOFS	.\sh7750_regs.h	454;"	d
SH7750_RSECCNT	.\sh7750_regs.h	412;"	d
SH7750_RSECCNT_A7	.\sh7750_regs.h	413;"	d
SH7750_RSECCNT_REGOFS	.\sh7750_regs.h	411;"	d
SH7750_RTCNT	.\sh7750_regs.h	963;"	d
SH7750_RTCNT_A7	.\sh7750_regs.h	964;"	d
SH7750_RTCNT_KEY	.\sh7750_regs.h	966;"	d
SH7750_RTCNT_REGOFS	.\sh7750_regs.h	962;"	d
SH7750_RTCOR	.\sh7750_regs.h	970;"	d
SH7750_RTCOR_A7	.\sh7750_regs.h	971;"	d
SH7750_RTCOR_KEY	.\sh7750_regs.h	973;"	d
SH7750_RTCOR_REGOFS	.\sh7750_regs.h	969;"	d
SH7750_RTCSR	.\sh7750_regs.h	936;"	d
SH7750_RTCSR_A7	.\sh7750_regs.h	937;"	d
SH7750_RTCSR_CKS	.\sh7750_regs.h	944;"	d
SH7750_RTCSR_CKS_CKIO_DIV1024	.\sh7750_regs.h	950;"	d
SH7750_RTCSR_CKS_CKIO_DIV16	.\sh7750_regs.h	947;"	d
SH7750_RTCSR_CKS_CKIO_DIV2048	.\sh7750_regs.h	951;"	d
SH7750_RTCSR_CKS_CKIO_DIV256	.\sh7750_regs.h	949;"	d
SH7750_RTCSR_CKS_CKIO_DIV4	.\sh7750_regs.h	946;"	d
SH7750_RTCSR_CKS_CKIO_DIV4096	.\sh7750_regs.h	952;"	d
SH7750_RTCSR_CKS_CKIO_DIV64	.\sh7750_regs.h	948;"	d
SH7750_RTCSR_CKS_DIS	.\sh7750_regs.h	945;"	d
SH7750_RTCSR_CMF	.\sh7750_regs.h	940;"	d
SH7750_RTCSR_CMIE	.\sh7750_regs.h	943;"	d
SH7750_RTCSR_KEY	.\sh7750_regs.h	939;"	d
SH7750_RTCSR_LMTS	.\sh7750_regs.h	957;"	d
SH7750_RTCSR_LMTS_1024	.\sh7750_regs.h	958;"	d
SH7750_RTCSR_LMTS_512	.\sh7750_regs.h	959;"	d
SH7750_RTCSR_OVF	.\sh7750_regs.h	954;"	d
SH7750_RTCSR_OVIE	.\sh7750_regs.h	955;"	d
SH7750_RTCSR_REGOFS	.\sh7750_regs.h	935;"	d
SH7750_RWKAR	.\sh7750_regs.h	473;"	d
SH7750_RWKAR_A7	.\sh7750_regs.h	474;"	d
SH7750_RWKAR_ENB	.\sh7750_regs.h	475;"	d
SH7750_RWKAR_FRI	.\sh7750_regs.h	482;"	d
SH7750_RWKAR_MON	.\sh7750_regs.h	478;"	d
SH7750_RWKAR_REGOFS	.\sh7750_regs.h	472;"	d
SH7750_RWKAR_SAT	.\sh7750_regs.h	483;"	d
SH7750_RWKAR_SUN	.\sh7750_regs.h	477;"	d
SH7750_RWKAR_THU	.\sh7750_regs.h	481;"	d
SH7750_RWKAR_TUE	.\sh7750_regs.h	479;"	d
SH7750_RWKAR_WED	.\sh7750_regs.h	480;"	d
SH7750_RWKCNT	.\sh7750_regs.h	427;"	d
SH7750_RWKCNT_A7	.\sh7750_regs.h	428;"	d
SH7750_RWKCNT_FRI	.\sh7750_regs.h	435;"	d
SH7750_RWKCNT_MON	.\sh7750_regs.h	431;"	d
SH7750_RWKCNT_REGOFS	.\sh7750_regs.h	426;"	d
SH7750_RWKCNT_SAT	.\sh7750_regs.h	436;"	d
SH7750_RWKCNT_SUN	.\sh7750_regs.h	430;"	d
SH7750_RWKCNT_THU	.\sh7750_regs.h	434;"	d
SH7750_RWKCNT_TUE	.\sh7750_regs.h	432;"	d
SH7750_RWKCNT_WED	.\sh7750_regs.h	433;"	d
SH7750_RYRCNT	.\sh7750_regs.h	450;"	d
SH7750_RYRCNT_A7	.\sh7750_regs.h	451;"	d
SH7750_RYRCNT_REGOFS	.\sh7750_regs.h	449;"	d
SH7750_SAR	.\sh7750_regs.h	988;"	d
SH7750_SAR0	.\sh7750_regs.h	990;"	d
SH7750_SAR0_A7	.\sh7750_regs.h	994;"	d
SH7750_SAR1	.\sh7750_regs.h	991;"	d
SH7750_SAR1_A7	.\sh7750_regs.h	995;"	d
SH7750_SAR2	.\sh7750_regs.h	992;"	d
SH7750_SAR2_A7	.\sh7750_regs.h	996;"	d
SH7750_SAR3	.\sh7750_regs.h	993;"	d
SH7750_SAR3_A7	.\sh7750_regs.h	997;"	d
SH7750_SAR_A7	.\sh7750_regs.h	989;"	d
SH7750_SAR_REGOFS	.\sh7750_regs.h	987;"	d
SH7750_SDRAM_MODE_A2_32BIT	.\sh7750_regs.h	870;"	d
SH7750_SDRAM_MODE_A2_64BIT	.\sh7750_regs.h	872;"	d
SH7750_SDRAM_MODE_A2_BASE	.\sh7750_regs.h	868;"	d
SH7750_SDRAM_MODE_A3_32BIT	.\sh7750_regs.h	871;"	d
SH7750_SDRAM_MODE_A3_64BIT	.\sh7750_regs.h	873;"	d
SH7750_SDRAM_MODE_A3_BASE	.\sh7750_regs.h	869;"	d
SH7750_STBCR	.\sh7750_regs.h	285;"	d
SH7750_STBCR2	.\sh7750_regs.h	312;"	d
SH7750_STBCR2_A7	.\sh7750_regs.h	313;"	d
SH7750_STBCR2_DSLP	.\sh7750_regs.h	315;"	d
SH7750_STBCR2_MSTP5	.\sh7750_regs.h	323;"	d
SH7750_STBCR2_MSTP6	.\sh7750_regs.h	320;"	d
SH7750_STBCR2_REGOFS	.\sh7750_regs.h	311;"	d
SH7750_STBCR2_SQ_STP	.\sh7750_regs.h	322;"	d
SH7750_STBCR2_UBC_STP	.\sh7750_regs.h	325;"	d
SH7750_STBCR_A7	.\sh7750_regs.h	286;"	d
SH7750_STBCR_DMAC_STP	.\sh7750_regs.h	298;"	d
SH7750_STBCR_MSPT0	.\sh7750_regs.h	305;"	d
SH7750_STBCR_MSTP1	.\sh7750_regs.h	303;"	d
SH7750_STBCR_MSTP2	.\sh7750_regs.h	301;"	d
SH7750_STBCR_MSTP3	.\sh7750_regs.h	299;"	d
SH7750_STBCR_MSTP4	.\sh7750_regs.h	297;"	d
SH7750_STBCR_PHZ	.\sh7750_regs.h	291;"	d
SH7750_STBCR_PPU	.\sh7750_regs.h	296;"	d
SH7750_STBCR_REGOFS	.\sh7750_regs.h	284;"	d
SH7750_STBCR_RTC_STP	.\sh7750_regs.h	304;"	d
SH7750_STBCR_SCIF_STP	.\sh7750_regs.h	300;"	d
SH7750_STBCR_SCI_STP	.\sh7750_regs.h	306;"	d
SH7750_STBCR_STBY	.\sh7750_regs.h	288;"	d
SH7750_STBCR_STBY	.\sh7750_regs.h	308;"	d
SH7750_STBCR_TMU_STP	.\sh7750_regs.h	302;"	d
SH7750_TEA	.\sh7750_regs.h	100;"	d
SH7750_TEA_A7	.\sh7750_regs.h	101;"	d
SH7750_TEA_REGOFS	.\sh7750_regs.h	99;"	d
SH7750_TRA	.\sh7750_regs.h	162;"	d
SH7750_TRA_A7	.\sh7750_regs.h	163;"	d
SH7750_TRA_IMM	.\sh7750_regs.h	165;"	d
SH7750_TRA_IMM_S	.\sh7750_regs.h	166;"	d
SH7750_TRA_REGOFS	.\sh7750_regs.h	161;"	d
SH7750_TTB	.\sh7750_regs.h	95;"	d
SH7750_TTB_A7	.\sh7750_regs.h	96;"	d
SH7750_TTB_REGOFS	.\sh7750_regs.h	94;"	d
SH7750_WCR1	.\sh7750_regs.h	657;"	d
SH7750_WCR1_A0IW	.\sh7750_regs.h	674;"	d
SH7750_WCR1_A0IW_S	.\sh7750_regs.h	675;"	d
SH7750_WCR1_A1IW	.\sh7750_regs.h	672;"	d
SH7750_WCR1_A1IW_S	.\sh7750_regs.h	673;"	d
SH7750_WCR1_A2IW	.\sh7750_regs.h	670;"	d
SH7750_WCR1_A2IW_S	.\sh7750_regs.h	671;"	d
SH7750_WCR1_A3IW	.\sh7750_regs.h	668;"	d
SH7750_WCR1_A3IW_S	.\sh7750_regs.h	669;"	d
SH7750_WCR1_A4IW	.\sh7750_regs.h	666;"	d
SH7750_WCR1_A4IW_S	.\sh7750_regs.h	667;"	d
SH7750_WCR1_A5IW	.\sh7750_regs.h	664;"	d
SH7750_WCR1_A5IW_S	.\sh7750_regs.h	665;"	d
SH7750_WCR1_A6IW	.\sh7750_regs.h	662;"	d
SH7750_WCR1_A6IW_S	.\sh7750_regs.h	663;"	d
SH7750_WCR1_A7	.\sh7750_regs.h	658;"	d
SH7750_WCR1_DMAIW	.\sh7750_regs.h	659;"	d
SH7750_WCR1_DMAIW_S	.\sh7750_regs.h	661;"	d
SH7750_WCR1_REGOFS	.\sh7750_regs.h	656;"	d
SH7750_WCR2	.\sh7750_regs.h	679;"	d
SH7750_WCR2_A0B	.\sh7750_regs.h	700;"	d
SH7750_WCR2_A0B_S	.\sh7750_regs.h	701;"	d
SH7750_WCR2_A0W	.\sh7750_regs.h	698;"	d
SH7750_WCR2_A0W_S	.\sh7750_regs.h	699;"	d
SH7750_WCR2_A1W	.\sh7750_regs.h	696;"	d
SH7750_WCR2_A1W_S	.\sh7750_regs.h	697;"	d
SH7750_WCR2_A2W	.\sh7750_regs.h	694;"	d
SH7750_WCR2_A2W_S	.\sh7750_regs.h	695;"	d
SH7750_WCR2_A3W	.\sh7750_regs.h	692;"	d
SH7750_WCR2_A3W_S	.\sh7750_regs.h	693;"	d
SH7750_WCR2_A4W	.\sh7750_regs.h	690;"	d
SH7750_WCR2_A4W_S	.\sh7750_regs.h	691;"	d
SH7750_WCR2_A5B	.\sh7750_regs.h	688;"	d
SH7750_WCR2_A5B_S	.\sh7750_regs.h	689;"	d
SH7750_WCR2_A5W	.\sh7750_regs.h	686;"	d
SH7750_WCR2_A5W_S	.\sh7750_regs.h	687;"	d
SH7750_WCR2_A6B	.\sh7750_regs.h	684;"	d
SH7750_WCR2_A6B_S	.\sh7750_regs.h	685;"	d
SH7750_WCR2_A6W	.\sh7750_regs.h	682;"	d
SH7750_WCR2_A6W_S	.\sh7750_regs.h	683;"	d
SH7750_WCR2_A7	.\sh7750_regs.h	680;"	d
SH7750_WCR2_BPWS0	.\sh7750_regs.h	712;"	d
SH7750_WCR2_BPWS1	.\sh7750_regs.h	713;"	d
SH7750_WCR2_BPWS2	.\sh7750_regs.h	714;"	d
SH7750_WCR2_BPWS3	.\sh7750_regs.h	715;"	d
SH7750_WCR2_BPWS4	.\sh7750_regs.h	716;"	d
SH7750_WCR2_BPWS5	.\sh7750_regs.h	717;"	d
SH7750_WCR2_BPWS6	.\sh7750_regs.h	718;"	d
SH7750_WCR2_BPWS7	.\sh7750_regs.h	719;"	d
SH7750_WCR2_DRAM_CAS_ASW1	.\sh7750_regs.h	722;"	d
SH7750_WCR2_DRAM_CAS_ASW10	.\sh7750_regs.h	727;"	d
SH7750_WCR2_DRAM_CAS_ASW13	.\sh7750_regs.h	728;"	d
SH7750_WCR2_DRAM_CAS_ASW16	.\sh7750_regs.h	729;"	d
SH7750_WCR2_DRAM_CAS_ASW2	.\sh7750_regs.h	723;"	d
SH7750_WCR2_DRAM_CAS_ASW3	.\sh7750_regs.h	724;"	d
SH7750_WCR2_DRAM_CAS_ASW4	.\sh7750_regs.h	725;"	d
SH7750_WCR2_DRAM_CAS_ASW7	.\sh7750_regs.h	726;"	d
SH7750_WCR2_REGOFS	.\sh7750_regs.h	678;"	d
SH7750_WCR2_SDRAM_CAS_LAT1	.\sh7750_regs.h	732;"	d
SH7750_WCR2_SDRAM_CAS_LAT2	.\sh7750_regs.h	733;"	d
SH7750_WCR2_SDRAM_CAS_LAT3	.\sh7750_regs.h	734;"	d
SH7750_WCR2_SDRAM_CAS_LAT4	.\sh7750_regs.h	735;"	d
SH7750_WCR2_SDRAM_CAS_LAT5	.\sh7750_regs.h	736;"	d
SH7750_WCR2_WS0	.\sh7750_regs.h	703;"	d
SH7750_WCR2_WS1	.\sh7750_regs.h	704;"	d
SH7750_WCR2_WS12	.\sh7750_regs.h	709;"	d
SH7750_WCR2_WS15	.\sh7750_regs.h	710;"	d
SH7750_WCR2_WS2	.\sh7750_regs.h	705;"	d
SH7750_WCR2_WS3	.\sh7750_regs.h	706;"	d
SH7750_WCR2_WS6	.\sh7750_regs.h	707;"	d
SH7750_WCR2_WS9	.\sh7750_regs.h	708;"	d
SH7750_WCR3	.\sh7750_regs.h	740;"	d
SH7750_WCR3_A0H	.\sh7750_regs.h	762;"	d
SH7750_WCR3_A0H_S	.\sh7750_regs.h	763;"	d
SH7750_WCR3_A0S	.\sh7750_regs.h	761;"	d
SH7750_WCR3_A1H	.\sh7750_regs.h	759;"	d
SH7750_WCR3_A1H_S	.\sh7750_regs.h	760;"	d
SH7750_WCR3_A1S	.\sh7750_regs.h	758;"	d
SH7750_WCR3_A2H	.\sh7750_regs.h	756;"	d
SH7750_WCR3_A2H_S	.\sh7750_regs.h	757;"	d
SH7750_WCR3_A2S	.\sh7750_regs.h	755;"	d
SH7750_WCR3_A3H	.\sh7750_regs.h	753;"	d
SH7750_WCR3_A3H_S	.\sh7750_regs.h	754;"	d
SH7750_WCR3_A3S	.\sh7750_regs.h	752;"	d
SH7750_WCR3_A4H	.\sh7750_regs.h	750;"	d
SH7750_WCR3_A4H_S	.\sh7750_regs.h	751;"	d
SH7750_WCR3_A4S	.\sh7750_regs.h	749;"	d
SH7750_WCR3_A5H	.\sh7750_regs.h	747;"	d
SH7750_WCR3_A5H_S	.\sh7750_regs.h	748;"	d
SH7750_WCR3_A5S	.\sh7750_regs.h	746;"	d
SH7750_WCR3_A6H	.\sh7750_regs.h	744;"	d
SH7750_WCR3_A6H_S	.\sh7750_regs.h	745;"	d
SH7750_WCR3_A6S	.\sh7750_regs.h	743;"	d
SH7750_WCR3_A7	.\sh7750_regs.h	741;"	d
SH7750_WCR3_DHWS_0	.\sh7750_regs.h	765;"	d
SH7750_WCR3_DHWS_1	.\sh7750_regs.h	766;"	d
SH7750_WCR3_DHWS_2	.\sh7750_regs.h	767;"	d
SH7750_WCR3_DHWS_3	.\sh7750_regs.h	768;"	d
SH7750_WCR3_REGOFS	.\sh7750_regs.h	739;"	d
SH7750_WTCNT	.\sh7750_regs.h	370;"	d
SH7750_WTCNT_A7	.\sh7750_regs.h	371;"	d
SH7750_WTCNT_KEY	.\sh7750_regs.h	372;"	d
SH7750_WTCNT_REGOFS	.\sh7750_regs.h	369;"	d
SH7750_WTCSR	.\sh7750_regs.h	378;"	d
SH7750_WTCSR_A7	.\sh7750_regs.h	379;"	d
SH7750_WTCSR_CKS	.\sh7750_regs.h	392;"	d
SH7750_WTCSR_CKS_DIV1024	.\sh7750_regs.h	398;"	d
SH7750_WTCSR_CKS_DIV128	.\sh7750_regs.h	395;"	d
SH7750_WTCSR_CKS_DIV2048	.\sh7750_regs.h	399;"	d
SH7750_WTCSR_CKS_DIV256	.\sh7750_regs.h	396;"	d
SH7750_WTCSR_CKS_DIV32	.\sh7750_regs.h	393;"	d
SH7750_WTCSR_CKS_DIV4096	.\sh7750_regs.h	400;"	d
SH7750_WTCSR_CKS_DIV512	.\sh7750_regs.h	397;"	d
SH7750_WTCSR_CKS_DIV64	.\sh7750_regs.h	394;"	d
SH7750_WTCSR_IOVF	.\sh7750_regs.h	391;"	d
SH7750_WTCSR_KEY	.\sh7750_regs.h	380;"	d
SH7750_WTCSR_MODE	.\sh7750_regs.h	384;"	d
SH7750_WTCSR_MODE_IT	.\sh7750_regs.h	386;"	d
SH7750_WTCSR_MODE_WT	.\sh7750_regs.h	385;"	d
SH7750_WTCSR_REGOFS	.\sh7750_regs.h	377;"	d
SH7750_WTCSR_RSTS	.\sh7750_regs.h	387;"	d
SH7750_WTCSR_RST_MAN	.\sh7750_regs.h	388;"	d
SH7750_WTCSR_RST_PWR	.\sh7750_regs.h	389;"	d
SH7750_WTCSR_TME	.\sh7750_regs.h	383;"	d
SH7750_WTCSR_WOVF	.\sh7750_regs.h	390;"	d
SHIFT	.\adlib.c	49;"	d	file:
SHIFT	.\adlib.c	52;"	d	file:
SHIFT	.\spitz.c	297;"	d	file:
SHIFT	.\spitz.c	453;"	d	file:
SH_CPU_SH7750	.\sh7750.c	524;"	d	file:
SH_CPU_SH7750R	.\sh7750.c	526;"	d	file:
SH_CPU_SH7750S	.\sh7750.c	525;"	d	file:
SH_CPU_SH7750_ALL	.\sh7750.c	529;"	d	file:
SH_CPU_SH7751	.\sh7750.c	527;"	d	file:
SH_CPU_SH7751R	.\sh7750.c	528;"	d	file:
SH_CPU_SH7751_ALL	.\sh7750.c	530;"	d	file:
SH_SERIAL_FEAT_SCIF	.\sh.h	36;"	d
SH_SERIAL_FLAG_BRK	.\sh_serial.c	37;"	d	file:
SH_SERIAL_FLAG_DR	.\sh_serial.c	38;"	d	file:
SH_SERIAL_FLAG_RDF	.\sh_serial.c	36;"	d	file:
SH_SERIAL_FLAG_TDE	.\sh_serial.c	35;"	d	file:
SH_SERIAL_FLAG_TEND	.\sh_serial.c	34;"	d	file:
SILENT_ES1370	.\es1370.c	27;"	d	file:
SIN_ENT	.\fmopl.c	79;"	d	file:
SIN_TABLE	.\fmopl.c	/^static INT32 **SIN_TABLE;$/;"	v	file:
SKIP_PIXEL	.\pxa2xx_template.h	12;"	d
SKIP_PIXEL	.\pxa2xx_template.h	427;"	d
SL	.\fmopl.h	/^	INT32 SL;		\/* sustin level    :SL_TALBE[SL]       *\/$/;"	m	struct:fm_opl_slot
SLAVIO_INTCTLState	.\slavio_intctl.c	/^typedef struct SLAVIO_INTCTLState {$/;"	s	file:
SLAVIO_INTCTLState	.\slavio_intctl.c	/^} SLAVIO_INTCTLState;$/;"	t	typeref:struct:SLAVIO_INTCTLState	file:
SLAVIO_TIMERState	.\slavio_timer.c	/^typedef struct SLAVIO_TIMERState {$/;"	s	file:
SLAVIO_TIMERState	.\slavio_timer.c	/^} SLAVIO_TIMERState;$/;"	t	typeref:struct:SLAVIO_TIMERState	file:
SLEEP	.\rtl8139.c	/^    SLEEP = (1 << 1),    \/* only on 8139, 8139A *\/$/;"	e	enum:Config1Bits	file:
SLOT	.\fmopl.h	/^	OPL_SLOT SLOT[2];$/;"	m	struct:fm_opl_channel
SLOT1	.\fmopl.c	108;"	d	file:
SLOT2	.\fmopl.c	109;"	d	file:
SLOT7_1	.\fmopl.c	/^OPL_SLOT *SLOT7_1,*SLOT7_2,*SLOT8_1,*SLOT8_2;$/;"	v
SLOT7_2	.\fmopl.c	/^OPL_SLOT *SLOT7_1,*SLOT7_2,*SLOT8_1,*SLOT8_2;$/;"	v
SLOT8_1	.\fmopl.c	/^OPL_SLOT *SLOT7_1,*SLOT7_2,*SLOT8_1,*SLOT8_2;$/;"	v
SLOT8_2	.\fmopl.c	/^OPL_SLOT *SLOT7_1,*SLOT7_2,*SLOT8_1,*SLOT8_2;$/;"	v
SL_PXA_PARAM_BASE	.\spitz.c	1178;"	d	file:
SL_TABLE	.\fmopl.c	/^static const INT32 SL_TABLE[16]={$/;"	v	file:
SMBBLKDAT	.\acpi.c	72;"	d	file:
SMBHSTADD	.\acpi.c	69;"	d	file:
SMBHSTCMD	.\acpi.c	68;"	d	file:
SMBHSTCNT	.\acpi.c	67;"	d	file:
SMBHSTDAT0	.\acpi.c	70;"	d	file:
SMBHSTDAT1	.\acpi.c	71;"	d	file:
SMBHSTSTS	.\acpi.c	66;"	d	file:
SMBUS_CONFUSED	.\smbus.c	/^    SMBUS_CONFUSED = -1$/;"	e	enum:__anon102	file:
SMBUS_DONE	.\smbus.c	/^    SMBUS_DONE,$/;"	e	enum:__anon102	file:
SMBUS_IDLE	.\smbus.c	/^    SMBUS_IDLE,$/;"	e	enum:__anon102	file:
SMBUS_READ_DATA	.\smbus.c	/^    SMBUS_READ_DATA,$/;"	e	enum:__anon102	file:
SMBUS_RECV_BYTE	.\smbus.c	/^    SMBUS_RECV_BYTE,$/;"	e	enum:__anon102	file:
SMBUS_WRITE_DATA	.\smbus.c	/^    SMBUS_WRITE_DATA,$/;"	e	enum:__anon102	file:
SMBusDevice	.\smbus.h	/^struct SMBusDevice {$/;"	s
SMBusEEPROMDevice	.\smbus_eeprom.c	/^typedef struct SMBusEEPROMDevice {$/;"	s	file:
SMBusEEPROMDevice	.\smbus_eeprom.c	/^} SMBusEEPROMDevice;$/;"	t	typeref:struct:SMBusEEPROMDevice	file:
SPARC32_DMA_H	.\sparc32_dma.h	2;"	d
SPARC_MACHINE_ID	.\firmware_abi.h	195;"	d
SPARC_SMP_CTX	.\firmware_abi.h	189;"	d
SPARC_SMP_CTXTBL	.\firmware_abi.h	190;"	d
SPARC_SMP_ENTRY	.\firmware_abi.h	191;"	d
SPARC_SMP_VALID	.\firmware_abi.h	192;"	d
SPEC_ALLSENT	.\slavio_serial.c	183;"	d	file:
SPEC_BITS8	.\slavio_serial.c	184;"	d	file:
SPITZ_BATTERY_TEMP	.\spitz.c	876;"	d	file:
SPITZ_BATTERY_VOLT	.\spitz.c	877;"	d	file:
SPITZ_CHARGEON_ACIN	.\spitz.c	878;"	d	file:
SPITZ_GPIO_ADS7846_CS	.\spitz.c	827;"	d	file:
SPITZ_GPIO_AK_INT	.\spitz.c	218;"	d	file:
SPITZ_GPIO_BAT_COVER	.\spitz.c	1074;"	d	file:
SPITZ_GPIO_CF1_CD	.\spitz.c	1076;"	d	file:
SPITZ_GPIO_CF1_IRQ	.\spitz.c	1075;"	d	file:
SPITZ_GPIO_CF2_CD	.\spitz.c	1078;"	d	file:
SPITZ_GPIO_CF2_IRQ	.\spitz.c	1077;"	d	file:
SPITZ_GPIO_HSYNC	.\spitz.c	1070;"	d	file:
SPITZ_GPIO_LCDCON_CS	.\spitz.c	826;"	d	file:
SPITZ_GPIO_MAX1111_CS	.\spitz.c	828;"	d	file:
SPITZ_GPIO_ON_KEY	.\spitz.c	220;"	d	file:
SPITZ_GPIO_ON_RESET	.\spitz.c	1073;"	d	file:
SPITZ_GPIO_SD_DETECT	.\spitz.c	1071;"	d	file:
SPITZ_GPIO_SD_WP	.\spitz.c	1072;"	d	file:
SPITZ_GPIO_SWA	.\spitz.c	221;"	d	file:
SPITZ_GPIO_SWB	.\spitz.c	222;"	d	file:
SPITZ_GPIO_SYNC	.\spitz.c	219;"	d	file:
SPITZ_GPIO_TP_INT	.\spitz.c	829;"	d	file:
SPITZ_GPIO_WM	.\spitz.c	962;"	d	file:
SPITZ_KEY_SENSE_NUM	.\spitz.c	196;"	d	file:
SPITZ_KEY_STROBE_NUM	.\spitz.c	195;"	d	file:
SPITZ_SCP2_AKIN_PULLUP	.\spitz.c	1047;"	d	file:
SPITZ_SCP2_BACKLIGHT_CONT	.\spitz.c	1048;"	d	file:
SPITZ_SCP2_BACKLIGHT_ON	.\spitz.c	1049;"	d	file:
SPITZ_SCP2_IR_ON	.\spitz.c	1046;"	d	file:
SPITZ_SCP2_MIC_BIAS	.\spitz.c	1050;"	d	file:
SPITZ_SCP_ADC_TEMP_ON	.\spitz.c	1045;"	d	file:
SPITZ_SCP_CF_POWER	.\spitz.c	1042;"	d	file:
SPITZ_SCP_CHRG_ON	.\spitz.c	1039;"	d	file:
SPITZ_SCP_JK_A	.\spitz.c	1044;"	d	file:
SPITZ_SCP_JK_B	.\spitz.c	1038;"	d	file:
SPITZ_SCP_LED_GREEN	.\spitz.c	1037;"	d	file:
SPITZ_SCP_LED_ORANGE	.\spitz.c	1043;"	d	file:
SPITZ_SCP_MUTE_L	.\spitz.c	1040;"	d	file:
SPITZ_SCP_MUTE_R	.\spitz.c	1041;"	d	file:
SPITZ_WM_ADDRH	.\spitz.c	960;"	d	file:
SPITZ_WM_ADDRL	.\spitz.c	959;"	d	file:
SPI_SPI_MODE	.\pxa2xx_mmci.c	78;"	d	file:
SRV_STAT	.\ide.c	47;"	d	file:
SR_CTRL	.\cuda.c	41;"	d	file:
SR_EXT	.\cuda.c	42;"	d	file:
SR_INT	.\cuda.c	48;"	d	file:
SR_OUT	.\cuda.c	43;"	d	file:
SSACD	.\pxa2xx.c	589;"	d	file:
SSCR0	.\pxa2xx.c	579;"	d	file:
SSCR0_DSS	.\pxa2xx.c	600;"	d	file:
SSCR0_MOD	.\pxa2xx.c	599;"	d	file:
SSCR0_PSP	.\pxa2xx.c	595;"	d	file:
SSCR0_RIM	.\pxa2xx.c	597;"	d	file:
SSCR0_SPI	.\pxa2xx.c	592;"	d	file:
SSCR0_SSE	.\pxa2xx.c	596;"	d	file:
SSCR0_SSP	.\pxa2xx.c	593;"	d	file:
SSCR0_TIM	.\pxa2xx.c	598;"	d	file:
SSCR0_UWIRE	.\pxa2xx.c	594;"	d	file:
SSCR1	.\pxa2xx.c	580;"	d	file:
SSCR1_EBCEI	.\pxa2xx.c	612;"	d	file:
SSCR1_EFWR	.\pxa2xx.c	607;"	d	file:
SSCR1_LBM	.\pxa2xx.c	603;"	d	file:
SSCR1_MWDS	.\pxa2xx.c	604;"	d	file:
SSCR1_PINTE	.\pxa2xx.c	608;"	d	file:
SSCR1_RFT	.\pxa2xx.c	606;"	d	file:
SSCR1_RIE	.\pxa2xx.c	601;"	d	file:
SSCR1_RSRE	.\pxa2xx.c	610;"	d	file:
SSCR1_TFT	.\pxa2xx.c	605;"	d	file:
SSCR1_TIE	.\pxa2xx.c	602;"	d	file:
SSCR1_TINTE	.\pxa2xx.c	609;"	d	file:
SSCR1_TSRE	.\pxa2xx.c	611;"	d	file:
SSD0303_CMD	.\ssd0303.c	/^    SSD0303_CMD$/;"	e	enum:ssd0303_mode	file:
SSD0303_CMD_NONE	.\ssd0303.c	/^    SSD0303_CMD_NONE,$/;"	e	enum:ssd0303_cmd	file:
SSD0303_CMD_SKIP1	.\ssd0303.c	/^    SSD0303_CMD_SKIP1$/;"	e	enum:ssd0303_cmd	file:
SSD0303_DATA	.\ssd0303.c	/^    SSD0303_DATA,$/;"	e	enum:ssd0303_mode	file:
SSD0303_IDLE	.\ssd0303.c	/^    SSD0303_IDLE,$/;"	e	enum:ssd0303_mode	file:
SSD0323_CMD	.\ssd0323.c	/^    SSD0323_CMD,$/;"	e	enum:ssd0323_mode	file:
SSD0323_DATA	.\ssd0323.c	/^    SSD0323_DATA$/;"	e	enum:ssd0323_mode	file:
SSDR	.\pxa2xx.c	583;"	d	file:
SSITR	.\pxa2xx.c	582;"	d	file:
SSITR_INT	.\pxa2xx.c	613;"	d	file:
SSI_SDR_ADDRESS_ERROR	.\ssi-sd.c	59;"	d	file:
SSI_SDR_CC_ERROR	.\ssi-sd.c	49;"	d	file:
SSI_SDR_COM_CRC_ERROR	.\ssi-sd.c	57;"	d	file:
SSI_SDR_ECC_FAILED	.\ssi-sd.c	50;"	d	file:
SSI_SDR_ERASE_PARAM	.\ssi-sd.c	52;"	d	file:
SSI_SDR_ERASE_RESET	.\ssi-sd.c	55;"	d	file:
SSI_SDR_ERASE_SEQ_ERROR	.\ssi-sd.c	58;"	d	file:
SSI_SDR_ERROR	.\ssi-sd.c	48;"	d	file:
SSI_SDR_IDLE	.\ssi-sd.c	54;"	d	file:
SSI_SDR_ILLEGAL_COMMAND	.\ssi-sd.c	56;"	d	file:
SSI_SDR_LOCKED	.\ssi-sd.c	46;"	d	file:
SSI_SDR_OUT_OF_RANGE	.\ssi-sd.c	53;"	d	file:
SSI_SDR_PARAMETER_ERROR	.\ssi-sd.c	60;"	d	file:
SSI_SDR_WP_ERASE	.\ssi-sd.c	47;"	d	file:
SSI_SDR_WP_VIOLATION	.\ssi-sd.c	51;"	d	file:
SSI_SD_CMD	.\ssi-sd.c	/^    SSI_SD_CMD,$/;"	e	enum:__anon107	file:
SSI_SD_CMDARG	.\ssi-sd.c	/^    SSI_SD_CMDARG,$/;"	e	enum:__anon107	file:
SSI_SD_DATA_READ	.\ssi-sd.c	/^    SSI_SD_DATA_READ,$/;"	e	enum:__anon107	file:
SSI_SD_DATA_START	.\ssi-sd.c	/^    SSI_SD_DATA_START,$/;"	e	enum:__anon107	file:
SSI_SD_RESPONSE	.\ssi-sd.c	/^    SSI_SD_RESPONSE,$/;"	e	enum:__anon107	file:
SSPSP	.\pxa2xx.c	585;"	d	file:
SSRSA	.\pxa2xx.c	587;"	d	file:
SSSR	.\pxa2xx.c	581;"	d	file:
SSSR_BCE	.\pxa2xx.c	623;"	d	file:
SSSR_EOC	.\pxa2xx.c	621;"	d	file:
SSSR_PINT	.\pxa2xx.c	619;"	d	file:
SSSR_RFS	.\pxa2xx.c	617;"	d	file:
SSSR_RNE	.\pxa2xx.c	615;"	d	file:
SSSR_ROR	.\pxa2xx.c	618;"	d	file:
SSSR_RW	.\pxa2xx.c	624;"	d	file:
SSSR_TFS	.\pxa2xx.c	616;"	d	file:
SSSR_TINT	.\pxa2xx.c	620;"	d	file:
SSSR_TNF	.\pxa2xx.c	614;"	d	file:
SSSR_TUR	.\pxa2xx.c	622;"	d	file:
SSTO	.\pxa2xx.c	584;"	d	file:
SSTSA	.\pxa2xx.c	586;"	d	file:
SSTSS	.\pxa2xx.c	588;"	d	file:
ST01_DISP_ENABLE	.\vga_int.h	28;"	d
ST01_V_RETRACE	.\vga_int.h	27;"	d
STATE_HARDFILE	.\ppc_prep.c	/^    STATE_HARDFILE = 0x01,$/;"	e	enum:__anon76	file:
STATUS_BRK	.\slavio_serial.c	181;"	d	file:
STATUS_CTS	.\slavio_serial.c	179;"	d	file:
STATUS_DCD	.\slavio_serial.c	177;"	d	file:
STATUS_RXAV	.\slavio_serial.c	174;"	d	file:
STATUS_SYNC	.\slavio_serial.c	178;"	d	file:
STATUS_TXEMPTY	.\slavio_serial.c	176;"	d	file:
STATUS_TXUNDRN	.\slavio_serial.c	180;"	d	file:
STATUS_ZERO	.\slavio_serial.c	175;"	d	file:
STAT_ADC	.\es1370.c	112;"	d	file:
STAT_CBUSY	.\es1370.c	104;"	d	file:
STAT_CD	.\esp.c	121;"	d	file:
STAT_CHANGED	.\ide.c	/^    STAT_CHANGED	= 0x80,$/;"	e	enum:md_cstat	file:
STAT_CLK_EN	.\pxa2xx_mmci.c	74;"	d	file:
STAT_CSTAT	.\es1370.c	103;"	d	file:
STAT_CWRIP	.\es1370.c	105;"	d	file:
STAT_DAC1	.\es1370.c	110;"	d	file:
STAT_DAC2	.\es1370.c	111;"	d	file:
STAT_DATA_DONE	.\pxa2xx_mmci.c	75;"	d	file:
STAT_DI	.\esp.c	120;"	d	file:
STAT_DO	.\esp.c	119;"	d	file:
STAT_END_CMDRES	.\pxa2xx_mmci.c	77;"	d	file:
STAT_GE	.\esp.c	129;"	d	file:
STAT_IN	.\esp.c	130;"	d	file:
STAT_INT	.\ide.c	/^    STAT_INT		= 0x02,$/;"	e	enum:md_cstat	file:
STAT_INTR	.\es1370.c	102;"	d	file:
STAT_IOIS8	.\ide.c	/^    STAT_IOIS8		= 0x20,$/;"	e	enum:md_cstat	file:
STAT_MCCB	.\es1370.c	108;"	d	file:
STAT_MI	.\esp.c	123;"	d	file:
STAT_MO	.\esp.c	124;"	d	file:
STAT_PE	.\esp.c	128;"	d	file:
STAT_PIO_MASK	.\esp.c	125;"	d	file:
STAT_PRG_DONE	.\pxa2xx_mmci.c	76;"	d	file:
STAT_PWRDWN	.\ide.c	/^    STAT_PWRDWN		= 0x04,$/;"	e	enum:md_cstat	file:
STAT_SH_VC	.\es1370.c	107;"	d	file:
STAT_SIGCHG	.\ide.c	/^    STAT_SIGCHG		= 0x40,$/;"	e	enum:md_cstat	file:
STAT_ST	.\esp.c	122;"	d	file:
STAT_TC	.\esp.c	127;"	d	file:
STAT_TOUT_RES	.\pxa2xx_mmci.c	73;"	d	file:
STAT_UART	.\es1370.c	109;"	d	file:
STAT_VC	.\es1370.c	106;"	d	file:
STAT_XE	.\ide.c	/^    STAT_XE		= 0x10,$/;"	e	enum:md_cstat	file:
STELLARIS_ADC_EM_COMP	.\stellaris.c	761;"	d	file:
STELLARIS_ADC_EM_CONTROLLER	.\stellaris.c	760;"	d	file:
STELLARIS_ADC_EM_EXTERNAL	.\stellaris.c	762;"	d	file:
STELLARIS_ADC_EM_PWM0	.\stellaris.c	764;"	d	file:
STELLARIS_ADC_EM_PWM1	.\stellaris.c	765;"	d	file:
STELLARIS_ADC_EM_PWM2	.\stellaris.c	766;"	d	file:
STELLARIS_ADC_EM_TIMER	.\stellaris.c	763;"	d	file:
STELLARIS_ADC_FIFO_EMPTY	.\stellaris.c	768;"	d	file:
STELLARIS_ADC_FIFO_FULL	.\stellaris.c	769;"	d	file:
STELLARIS_I2C_MCS_ADRACK	.\stellaris.c	591;"	d	file:
STELLARIS_I2C_MCS_ARBLST	.\stellaris.c	593;"	d	file:
STELLARIS_I2C_MCS_BUSBSY	.\stellaris.c	595;"	d	file:
STELLARIS_I2C_MCS_BUSY	.\stellaris.c	589;"	d	file:
STELLARIS_I2C_MCS_DATACK	.\stellaris.c	592;"	d	file:
STELLARIS_I2C_MCS_ERROR	.\stellaris.c	590;"	d	file:
STELLARIS_I2C_MCS_IDLE	.\stellaris.c	594;"	d	file:
STRPCL_STOP_CLK	.\pxa2xx_mmci.c	71;"	d	file:
STRPCL_STRT_CLK	.\pxa2xx_mmci.c	72;"	d	file:
SUN4M_H	.\sun4m.h	2;"	d
SUS_EN	.\acpi.c	61;"	d	file:
SVGA_BIOS_PORT	.\vmware_vga.c	110;"	d	file:
SVGA_BITMAP_SIZE	.\vmware_vga.c	445;"	d	file:
SVGA_CAP_3D	.\vmware_vga.c	188;"	d	file:
SVGA_CAP_8BIT_EMULATION	.\vmware_vga.c	182;"	d	file:
SVGA_CAP_ALPHA_BLEND	.\vmware_vga.c	187;"	d	file:
SVGA_CAP_ALPHA_CURSOR	.\vmware_vga.c	183;"	d	file:
SVGA_CAP_CURSOR	.\vmware_vga.c	179;"	d	file:
SVGA_CAP_CURSOR_BYPASS	.\vmware_vga.c	180;"	d	file:
SVGA_CAP_CURSOR_BYPASS_2	.\vmware_vga.c	181;"	d	file:
SVGA_CAP_EXTENDED_FIFO	.\vmware_vga.c	189;"	d	file:
SVGA_CAP_GLYPH	.\vmware_vga.c	184;"	d	file:
SVGA_CAP_GLYPH_CLIPPING	.\vmware_vga.c	185;"	d	file:
SVGA_CAP_LEGACY_OFFSCREEN	.\vmware_vga.c	177;"	d	file:
SVGA_CAP_MULTIMON	.\vmware_vga.c	190;"	d	file:
SVGA_CAP_NONE	.\vmware_vga.c	173;"	d	file:
SVGA_CAP_OFFSCREEN_1	.\vmware_vga.c	186;"	d	file:
SVGA_CAP_PITCHLOCK	.\vmware_vga.c	191;"	d	file:
SVGA_CAP_RASTER_OP	.\vmware_vga.c	178;"	d	file:
SVGA_CAP_RECT_COPY	.\vmware_vga.c	175;"	d	file:
SVGA_CAP_RECT_FILL	.\vmware_vga.c	174;"	d	file:
SVGA_CAP_RECT_PAT_FILL	.\vmware_vga.c	176;"	d	file:
SVGA_CMD_DEFINE_ALPHA_CURSOR	.\vmware_vga.c	/^    SVGA_CMD_DEFINE_ALPHA_CURSOR = 22,$/;"	e	enum:__anon132	file:
SVGA_CMD_DEFINE_BITMAP	.\vmware_vga.c	/^    SVGA_CMD_DEFINE_BITMAP = 4,$/;"	e	enum:__anon132	file:
SVGA_CMD_DEFINE_BITMAP_SCANLINE	.\vmware_vga.c	/^    SVGA_CMD_DEFINE_BITMAP_SCANLINE = 5,$/;"	e	enum:__anon132	file:
SVGA_CMD_DEFINE_CURSOR	.\vmware_vga.c	/^    SVGA_CMD_DEFINE_CURSOR = 19,$/;"	e	enum:__anon132	file:
SVGA_CMD_DEFINE_PIXMAP	.\vmware_vga.c	/^    SVGA_CMD_DEFINE_PIXMAP = 6,$/;"	e	enum:__anon132	file:
SVGA_CMD_DEFINE_PIXMAP_SCANLINE	.\vmware_vga.c	/^    SVGA_CMD_DEFINE_PIXMAP_SCANLINE = 7,$/;"	e	enum:__anon132	file:
SVGA_CMD_DISPLAY_CURSOR	.\vmware_vga.c	/^    SVGA_CMD_DISPLAY_CURSOR = 20,$/;"	e	enum:__anon132	file:
SVGA_CMD_DRAW_GLYPH	.\vmware_vga.c	/^    SVGA_CMD_DRAW_GLYPH = 23,$/;"	e	enum:__anon132	file:
SVGA_CMD_DRAW_GLYPH_CLIPPED	.\vmware_vga.c	/^    SVGA_CMD_DRAW_GLYPH_CLIPPED = 24,$/;"	e	enum:__anon132	file:
SVGA_CMD_FENCE	.\vmware_vga.c	/^    SVGA_CMD_FENCE = 30,$/;"	e	enum:__anon132	file:
SVGA_CMD_FREE_OBJECT	.\vmware_vga.c	/^    SVGA_CMD_FREE_OBJECT = 12,$/;"	e	enum:__anon132	file:
SVGA_CMD_FRONT_ROP_FILL	.\vmware_vga.c	/^    SVGA_CMD_FRONT_ROP_FILL = 29,$/;"	e	enum:__anon132	file:
SVGA_CMD_INVALID_CMD	.\vmware_vga.c	/^    SVGA_CMD_INVALID_CMD = 0,$/;"	e	enum:__anon132	file:
SVGA_CMD_MOVE_CURSOR	.\vmware_vga.c	/^    SVGA_CMD_MOVE_CURSOR = 21,$/;"	e	enum:__anon132	file:
SVGA_CMD_RECT_BITMAP_COPY	.\vmware_vga.c	/^    SVGA_CMD_RECT_BITMAP_COPY = 10,$/;"	e	enum:__anon132	file:
SVGA_CMD_RECT_BITMAP_FILL	.\vmware_vga.c	/^    SVGA_CMD_RECT_BITMAP_FILL = 8,$/;"	e	enum:__anon132	file:
SVGA_CMD_RECT_COPY	.\vmware_vga.c	/^    SVGA_CMD_RECT_COPY = 3,$/;"	e	enum:__anon132	file:
SVGA_CMD_RECT_FILL	.\vmware_vga.c	/^    SVGA_CMD_RECT_FILL = 2,$/;"	e	enum:__anon132	file:
SVGA_CMD_RECT_PIXMAP_COPY	.\vmware_vga.c	/^    SVGA_CMD_RECT_PIXMAP_COPY = 11,$/;"	e	enum:__anon132	file:
SVGA_CMD_RECT_PIXMAP_FILL	.\vmware_vga.c	/^    SVGA_CMD_RECT_PIXMAP_FILL = 9,$/;"	e	enum:__anon132	file:
SVGA_CMD_RECT_ROP_BITMAP_COPY	.\vmware_vga.c	/^    SVGA_CMD_RECT_ROP_BITMAP_COPY = 17,$/;"	e	enum:__anon132	file:
SVGA_CMD_RECT_ROP_BITMAP_FILL	.\vmware_vga.c	/^    SVGA_CMD_RECT_ROP_BITMAP_FILL = 15,$/;"	e	enum:__anon132	file:
SVGA_CMD_RECT_ROP_COPY	.\vmware_vga.c	/^    SVGA_CMD_RECT_ROP_COPY = 14,$/;"	e	enum:__anon132	file:
SVGA_CMD_RECT_ROP_FILL	.\vmware_vga.c	/^    SVGA_CMD_RECT_ROP_FILL = 13,$/;"	e	enum:__anon132	file:
SVGA_CMD_RECT_ROP_PIXMAP_COPY	.\vmware_vga.c	/^    SVGA_CMD_RECT_ROP_PIXMAP_COPY = 18,$/;"	e	enum:__anon132	file:
SVGA_CMD_RECT_ROP_PIXMAP_FILL	.\vmware_vga.c	/^    SVGA_CMD_RECT_ROP_PIXMAP_FILL = 16,$/;"	e	enum:__anon132	file:
SVGA_CMD_SURFACE_ALPHA_BLEND	.\vmware_vga.c	/^    SVGA_CMD_SURFACE_ALPHA_BLEND = 28,$/;"	e	enum:__anon132	file:
SVGA_CMD_SURFACE_COPY	.\vmware_vga.c	/^    SVGA_CMD_SURFACE_COPY = 27,$/;"	e	enum:__anon132	file:
SVGA_CMD_SURFACE_FILL	.\vmware_vga.c	/^    SVGA_CMD_SURFACE_FILL = 26,$/;"	e	enum:__anon132	file:
SVGA_CMD_UPDATE	.\vmware_vga.c	/^    SVGA_CMD_UPDATE = 1,$/;"	e	enum:__anon132	file:
SVGA_CMD_UPDATE_VERBOSE	.\vmware_vga.c	/^    SVGA_CMD_UPDATE_VERBOSE = 25,$/;"	e	enum:__anon132	file:
SVGA_CURSOR_ON_HIDE	.\vmware_vga.c	/^    SVGA_CURSOR_ON_HIDE = 0,$/;"	e	enum:__anon133	file:
SVGA_CURSOR_ON_REMOVE_FROM_FB	.\vmware_vga.c	/^    SVGA_CURSOR_ON_REMOVE_FROM_FB = 2,$/;"	e	enum:__anon133	file:
SVGA_CURSOR_ON_RESTORE_TO_FB	.\vmware_vga.c	/^    SVGA_CURSOR_ON_RESTORE_TO_FB = 3,$/;"	e	enum:__anon133	file:
SVGA_CURSOR_ON_SHOW	.\vmware_vga.c	/^    SVGA_CURSOR_ON_SHOW = 1,$/;"	e	enum:__anon133	file:
SVGA_FIFO_3D_HWVERSION	.\vmware_vga.c	/^    SVGA_FIFO_3D_HWVERSION,$/;"	e	enum:__anon131	file:
SVGA_FIFO_CAPABILITIES	.\vmware_vga.c	/^    SVGA_FIFO_CAPABILITIES = 4,$/;"	e	enum:__anon131	file:
SVGA_FIFO_CAP_ACCELFRONT	.\vmware_vga.c	217;"	d	file:
SVGA_FIFO_CAP_FENCE	.\vmware_vga.c	216;"	d	file:
SVGA_FIFO_CAP_NONE	.\vmware_vga.c	215;"	d	file:
SVGA_FIFO_CAP_PITCHLOCK	.\vmware_vga.c	218;"	d	file:
SVGA_FIFO_FENCE	.\vmware_vga.c	/^    SVGA_FIFO_FENCE,$/;"	e	enum:__anon131	file:
SVGA_FIFO_FLAGS	.\vmware_vga.c	/^    SVGA_FIFO_FLAGS,$/;"	e	enum:__anon131	file:
SVGA_FIFO_FLAG_ACCELFRONT	.\vmware_vga.c	221;"	d	file:
SVGA_FIFO_FLAG_NONE	.\vmware_vga.c	220;"	d	file:
SVGA_FIFO_MAX	.\vmware_vga.c	/^    SVGA_FIFO_MAX,	\/* The distance from MIN to MAX must be at least 10K *\/$/;"	e	enum:__anon131	file:
SVGA_FIFO_MIN	.\vmware_vga.c	/^    SVGA_FIFO_MIN = 0,$/;"	e	enum:__anon131	file:
SVGA_FIFO_NEXT_CMD	.\vmware_vga.c	/^    SVGA_FIFO_NEXT_CMD,$/;"	e	enum:__anon131	file:
SVGA_FIFO_PITCHLOCK	.\vmware_vga.c	/^    SVGA_FIFO_PITCHLOCK,$/;"	e	enum:__anon131	file:
SVGA_FIFO_SIZE	.\vmware_vga.c	118;"	d	file:
SVGA_FIFO_SIZE	.\vmware_vga.c	125;"	d	file:
SVGA_FIFO_STOP	.\vmware_vga.c	/^    SVGA_FIFO_STOP,$/;"	e	enum:__anon131	file:
SVGA_ID	.\vmware_vga.c	115;"	d	file:
SVGA_ID	.\vmware_vga.c	122;"	d	file:
SVGA_ID_0	.\vmware_vga.c	103;"	d	file:
SVGA_ID_1	.\vmware_vga.c	104;"	d	file:
SVGA_ID_2	.\vmware_vga.c	105;"	d	file:
SVGA_INDEX_PORT	.\vmware_vga.c	108;"	d	file:
SVGA_IO_BASE	.\vmware_vga.c	116;"	d	file:
SVGA_IO_BASE	.\vmware_vga.c	123;"	d	file:
SVGA_IO_MUL	.\vmware_vga.c	117;"	d	file:
SVGA_IO_MUL	.\vmware_vga.c	124;"	d	file:
SVGA_LEGACY_BASE_PORT	.\vmware_vga.c	107;"	d	file:
SVGA_MAGIC	.\vmware_vga.c	101;"	d	file:
SVGA_MAKE_ID	.\vmware_vga.c	102;"	d	file:
SVGA_MAX_HEIGHT	.\vmware_vga.c	226;"	d	file:
SVGA_MAX_WIDTH	.\vmware_vga.c	225;"	d	file:
SVGA_MEM_BASE	.\vmware_vga.c	119;"	d	file:
SVGA_MEM_BASE	.\vmware_vga.c	126;"	d	file:
SVGA_PALETTE_BASE	.\vmware_vga.c	/^    SVGA_PALETTE_BASE = 1024,		\/* Base of SVGA color map *\/$/;"	e	enum:__anon130	file:
SVGA_PALETTE_END	.\vmware_vga.c	/^    SVGA_PALETTE_END  = SVGA_PALETTE_BASE + 767,$/;"	e	enum:__anon130	file:
SVGA_PCI_DEVICE_ID	.\vmware_vga.c	120;"	d	file:
SVGA_PCI_DEVICE_ID	.\vmware_vga.c	127;"	d	file:
SVGA_PIXMAP_SIZE	.\vmware_vga.c	446;"	d	file:
SVGA_REG_BITS_PER_PIXEL	.\vmware_vga.c	/^    SVGA_REG_BITS_PER_PIXEL = 7,	\/* Current bpp in the guest *\/$/;"	e	enum:__anon130	file:
SVGA_REG_BLUE_MASK	.\vmware_vga.c	/^    SVGA_REG_BLUE_MASK = 11,$/;"	e	enum:__anon130	file:
SVGA_REG_BUSY	.\vmware_vga.c	/^    SVGA_REG_BUSY = 22,			\/* Read to check if sync is done *\/$/;"	e	enum:__anon130	file:
SVGA_REG_BYTES_PER_LINE	.\vmware_vga.c	/^    SVGA_REG_BYTES_PER_LINE = 12,$/;"	e	enum:__anon130	file:
SVGA_REG_CAPABILITIES	.\vmware_vga.c	/^    SVGA_REG_CAPABILITIES = 17,$/;"	e	enum:__anon130	file:
SVGA_REG_CONFIG_DONE	.\vmware_vga.c	/^    SVGA_REG_CONFIG_DONE = 20,		\/* Set when memory area configured *\/$/;"	e	enum:__anon130	file:
SVGA_REG_CURSOR_ID	.\vmware_vga.c	/^    SVGA_REG_CURSOR_ID = 24,		\/* ID of cursor *\/$/;"	e	enum:__anon130	file:
SVGA_REG_CURSOR_ON	.\vmware_vga.c	/^    SVGA_REG_CURSOR_ON = 27,		\/* Turn cursor on\/off *\/$/;"	e	enum:__anon130	file:
SVGA_REG_CURSOR_X	.\vmware_vga.c	/^    SVGA_REG_CURSOR_X = 25,		\/* Set cursor X position *\/$/;"	e	enum:__anon130	file:
SVGA_REG_CURSOR_Y	.\vmware_vga.c	/^    SVGA_REG_CURSOR_Y = 26,		\/* Set cursor Y position *\/$/;"	e	enum:__anon130	file:
SVGA_REG_DEPTH	.\vmware_vga.c	/^    SVGA_REG_DEPTH = 6,$/;"	e	enum:__anon130	file:
SVGA_REG_ENABLE	.\vmware_vga.c	/^    SVGA_REG_ENABLE = 1,$/;"	e	enum:__anon130	file:
SVGA_REG_FB_OFFSET	.\vmware_vga.c	/^    SVGA_REG_FB_OFFSET = 14,$/;"	e	enum:__anon130	file:
SVGA_REG_FB_SIZE	.\vmware_vga.c	/^    SVGA_REG_FB_SIZE = 16,$/;"	e	enum:__anon130	file:
SVGA_REG_FB_START	.\vmware_vga.c	/^    SVGA_REG_FB_START = 13,$/;"	e	enum:__anon130	file:
SVGA_REG_GREEN_MASK	.\vmware_vga.c	/^    SVGA_REG_GREEN_MASK = 10,$/;"	e	enum:__anon130	file:
SVGA_REG_GUEST_ID	.\vmware_vga.c	/^    SVGA_REG_GUEST_ID = 23,		\/* Set guest OS identifier *\/$/;"	e	enum:__anon130	file:
SVGA_REG_HEIGHT	.\vmware_vga.c	/^    SVGA_REG_HEIGHT = 3,$/;"	e	enum:__anon130	file:
SVGA_REG_HOST_BITS_PER_PIXEL	.\vmware_vga.c	/^    SVGA_REG_HOST_BITS_PER_PIXEL = 28,	\/* Current bpp in the host *\/$/;"	e	enum:__anon130	file:
SVGA_REG_ID	.\vmware_vga.c	/^    SVGA_REG_ID = 0,$/;"	e	enum:__anon130	file:
SVGA_REG_MAX_HEIGHT	.\vmware_vga.c	/^    SVGA_REG_MAX_HEIGHT = 5,$/;"	e	enum:__anon130	file:
SVGA_REG_MAX_WIDTH	.\vmware_vga.c	/^    SVGA_REG_MAX_WIDTH = 4,$/;"	e	enum:__anon130	file:
SVGA_REG_MEM_REGS	.\vmware_vga.c	/^    SVGA_REG_MEM_REGS = 30,		\/* Number of FIFO registers *\/$/;"	e	enum:__anon130	file:
SVGA_REG_MEM_SIZE	.\vmware_vga.c	/^    SVGA_REG_MEM_SIZE = 19,$/;"	e	enum:__anon130	file:
SVGA_REG_MEM_START	.\vmware_vga.c	/^    SVGA_REG_MEM_START = 18,		\/* Memory for command FIFO *\/$/;"	e	enum:__anon130	file:
SVGA_REG_NUM_DISPLAYS	.\vmware_vga.c	/^    SVGA_REG_NUM_DISPLAYS = 31,		\/* Number of guest displays *\/$/;"	e	enum:__anon130	file:
SVGA_REG_PITCHLOCK	.\vmware_vga.c	/^    SVGA_REG_PITCHLOCK = 32,		\/* Fixed pitch for all modes *\/$/;"	e	enum:__anon130	file:
SVGA_REG_PSEUDOCOLOR	.\vmware_vga.c	/^    SVGA_REG_PSEUDOCOLOR = 8,$/;"	e	enum:__anon130	file:
SVGA_REG_RED_MASK	.\vmware_vga.c	/^    SVGA_REG_RED_MASK = 9,$/;"	e	enum:__anon130	file:
SVGA_REG_SCRATCH_SIZE	.\vmware_vga.c	/^    SVGA_REG_SCRATCH_SIZE = 29,		\/* Number of scratch registers *\/$/;"	e	enum:__anon130	file:
SVGA_REG_SYNC	.\vmware_vga.c	/^    SVGA_REG_SYNC = 21,			\/* Write to force synchronization *\/$/;"	e	enum:__anon130	file:
SVGA_REG_VRAM_SIZE	.\vmware_vga.c	/^    SVGA_REG_VRAM_SIZE = 15,$/;"	e	enum:__anon130	file:
SVGA_REG_WIDTH	.\vmware_vga.c	/^    SVGA_REG_WIDTH = 2,$/;"	e	enum:__anon130	file:
SVGA_SCRATCH_BASE	.\vmware_vga.c	/^    SVGA_SCRATCH_BASE = SVGA_PALETTE_BASE + 768,$/;"	e	enum:__anon130	file:
SVGA_SCRATCH_SIZE	.\vmware_vga.c	224;"	d	file:
SVGA_VALUE_PORT	.\vmware_vga.c	109;"	d	file:
SVGA_VERSION_2	.\vmware_vga.c	112;"	d	file:
SWAP_PIXELS	.\pl110_template.h	107;"	d
SWAP_PIXELS	.\pl110_template.h	298;"	d
SWAP_WORDS	.\pl110_template.h	104;"	d
SWAP_WORDS	.\pl110_template.h	110;"	d
SWAP_WORDS	.\pl110_template.h	300;"	d
SWAP_WORDS	.\pl110_template.h	99;"	d
SWAP_WORDS	.\pxa2xx_template.h	27;"	d
SWAP_WORDS	.\pxa2xx_template.h	430;"	d
SWAR1	.\pxa2xx.c	893;"	d	file:
SWAR2	.\pxa2xx.c	894;"	d	file:
SWCR	.\pxa2xx.c	892;"	d	file:
SXCNFG	.\pxa2xx.c	469;"	d	file:
SYNC	.\omap.c	493;"	d	file:
SYSCTRL_MAXADDR	.\slavio_misc.c	57;"	d	file:
SYSCTRL_SIZE	.\slavio_misc.c	58;"	d	file:
SYSTICK_CLKSOURCE	.\armv7m_nvic.c	50;"	d	file:
SYSTICK_COUNTFLAG	.\armv7m_nvic.c	51;"	d	file:
SYSTICK_ENABLE	.\armv7m_nvic.c	48;"	d	file:
SYSTICK_SCALE	.\armv7m_nvic.c	46;"	d	file:
SYSTICK_TICKINT	.\armv7m_nvic.c	49;"	d	file:
SYS_FREQ	.\mcf5208.c	15;"	d	file:
SYS_RESET	.\slavio_misc.c	77;"	d	file:
SYS_RESETSTAT	.\slavio_misc.c	78;"	d	file:
SYS_TIMER_OFFSET	.\slavio_timer.c	73;"	d	file:
SYS_TIMER_SIZE	.\slavio_timer.c	70;"	d	file:
S_CH	.\fmopl.c	/^static OPL_CH *S_CH;$/;"	v	file:
SaveStateHandler	.\hw.h	/^typedef void SaveStateHandler(QEMUFile *f, void *opaque);$/;"	t
SerialState	.\serial.c	/^struct SerialState {$/;"	s	file:
SerialState	.\slavio_serial.c	/^struct SerialState {$/;"	s	file:
SetHubFeature	.\usb-hub.c	48;"	d	file:
SetIRQFunc	.\irq.h	/^typedef void SetIRQFunc(void *opaque, int irq_num, int level);$/;"	t
SetPortFeature	.\usb-hub.c	49;"	d	file:
Sun4c_INTCTLState	.\sun4c_intctl.c	/^typedef struct Sun4c_INTCTLState {$/;"	s	file:
Sun4c_INTCTLState	.\sun4c_intctl.c	/^} Sun4c_INTCTLState;$/;"	t	typeref:struct:Sun4c_INTCTLState	file:
Sun_init_header	.\firmware_abi.h	/^Sun_init_header(struct Sun_nvram *header, const uint8_t *macaddr, int machine_id)$/;"	f
Sun_nvram	.\firmware_abi.h	/^struct Sun_nvram {$/;"	s
T	.\fmopl.h	/^	int T[2];			\/* timer counter                     *\/$/;"	m	struct:fm_opl_f
T1MODE	.\cuda.c	53;"	d	file:
T1MODE_CONT	.\cuda.c	54;"	d	file:
T1_INT	.\cuda.c	49;"	d	file:
T2_INT	.\cuda.c	50;"	d	file:
TACK	.\cuda.c	37;"	d	file:
TAG_MASK	.\ide.c	67;"	d	file:
TCHI_FAS100A	.\esp.c	144;"	d	file:
TCMI_VERBOSE	.\omap.h	734;"	d
TCP_FLAGS_ONLY	.\rtl8139.c	1854;"	d	file:
TCP_FLAG_FIN	.\rtl8139.c	1859;"	d	file:
TCP_FLAG_PUSH	.\rtl8139.c	1860;"	d	file:
TCP_HEADER_CLEAR_FLAGS	.\rtl8139.c	1857;"	d	file:
TCP_HEADER_DATA_OFFSET	.\rtl8139.c	1853;"	d	file:
TCP_HEADER_FLAGS	.\rtl8139.c	1855;"	d	file:
TCR	.\pxa2xx_lcd.c	100;"	d	file:
TCR_EPH_LOOP	.\smc91c111.c	52;"	d	file:
TCR_FORCOL	.\smc91c111.c	55;"	d	file:
TCR_LOOP	.\smc91c111.c	56;"	d	file:
TCR_NOCRC	.\smc91c111.c	53;"	d	file:
TCR_PAD_EN	.\smc91c111.c	54;"	d	file:
TCR_TXEN	.\smc91c111.c	57;"	d	file:
TCTR	.\rtl8139.c	/^    uint32_t   TCTR;$/;"	m	struct:RTL8139State	file:
TCTR_base	.\rtl8139.c	/^    int64_t    TCTR_base;$/;"	m	struct:RTL8139State	file:
TCXState	.\tcx.c	/^typedef struct TCXState {$/;"	s	file:
TCXState	.\tcx.c	/^} TCXState;$/;"	t	typeref:struct:TCXState	file:
TCX_DAC_NREGS	.\tcx.c	31;"	d	file:
TCX_TEC_NREGS	.\tcx.c	34;"	d	file:
TCX_THC_NREGS_24	.\tcx.c	33;"	d	file:
TCX_THC_NREGS_8	.\tcx.c	32;"	d	file:
TD_CTRL_ACTIVE	.\usb-uhci.c	50;"	d	file:
TD_CTRL_BABBLE	.\usb-uhci.c	52;"	d	file:
TD_CTRL_ERROR_SHIFT	.\usb-uhci.c	47;"	d	file:
TD_CTRL_IOC	.\usb-uhci.c	49;"	d	file:
TD_CTRL_IOS	.\usb-uhci.c	48;"	d	file:
TD_CTRL_NAK	.\usb-uhci.c	53;"	d	file:
TD_CTRL_SPD	.\usb-uhci.c	46;"	d	file:
TD_CTRL_STALL	.\usb-uhci.c	51;"	d	file:
TD_CTRL_TIMEOUT	.\usb-uhci.c	54;"	d	file:
TEMP1_VAL	.\tsc210x.c	141;"	d	file:
TEMP2_VAL	.\tsc210x.c	142;"	d	file:
TER_CAP	.\mcf5206.c	31;"	d	file:
TER_REF	.\mcf5206.c	32;"	d	file:
TIMEOUT_INTR	.\omap.c	487;"	d	file:
TIMER_COUNTER	.\slavio_timer.c	77;"	d	file:
TIMER_COUNTER_NORST	.\slavio_timer.c	78;"	d	file:
TIMER_COUNT_MASK32	.\slavio_timer.c	82;"	d	file:
TIMER_CTRL_32BIT	.\arm_timer.c	17;"	d	file:
TIMER_CTRL_DIV1	.\arm_timer.c	18;"	d	file:
TIMER_CTRL_DIV16	.\arm_timer.c	19;"	d	file:
TIMER_CTRL_DIV256	.\arm_timer.c	20;"	d	file:
TIMER_CTRL_ENABLE	.\arm_timer.c	23;"	d	file:
TIMER_CTRL_IE	.\arm_timer.c	21;"	d	file:
TIMER_CTRL_ONESHOT	.\arm_timer.c	16;"	d	file:
TIMER_CTRL_PERIODIC	.\arm_timer.c	22;"	d	file:
TIMER_FEAT_CAPT	.\sh_timer.c	25;"	d	file:
TIMER_FEAT_EXTCLK	.\sh_timer.c	26;"	d	file:
TIMER_LIMIT	.\slavio_timer.c	76;"	d	file:
TIMER_LIMIT_MASK32	.\slavio_timer.c	83;"	d	file:
TIMER_MAXADDR	.\slavio_timer.c	69;"	d	file:
TIMER_MAX_COUNT32	.\slavio_timer.c	85;"	d	file:
TIMER_MAX_COUNT64	.\slavio_timer.c	84;"	d	file:
TIMER_MODE	.\slavio_timer.c	80;"	d	file:
TIMER_PACKET	.\cuda.c	60;"	d	file:
TIMER_PERIOD	.\slavio_timer.c	87;"	d	file:
TIMER_REACHED	.\slavio_timer.c	86;"	d	file:
TIMER_STATUS	.\slavio_timer.c	79;"	d	file:
TIMER_TCR_CKEG	.\sh_timer.c	18;"	d	file:
TIMER_TCR_ICPE	.\sh_timer.c	20;"	d	file:
TIMER_TCR_ICPF	.\sh_timer.c	22;"	d	file:
TIMER_TCR_RESERVED	.\sh_timer.c	23;"	d	file:
TIMER_TCR_TPSC	.\sh_timer.c	17;"	d	file:
TIMER_TCR_UNF	.\sh_timer.c	21;"	d	file:
TIMER_TCR_UNIE	.\sh_timer.c	19;"	d	file:
TIP	.\cuda.c	38;"	d	file:
TI_BUFSZ	.\esp.c	52;"	d	file:
TL	.\fmopl.h	/^	INT32 TL;		\/* total level     :TL << 8            *\/$/;"	m	struct:fm_opl_slot
TLL	.\fmopl.h	/^	INT32 TLL;		\/* adjusted now TL                     *\/$/;"	m	struct:fm_opl_slot
TL_BITS	.\fmopl.c	68;"	d	file:
TL_MAX	.\fmopl.c	182;"	d	file:
TL_TABLE	.\fmopl.c	/^static INT32 *TL_TABLE;$/;"	v	file:
TMDLOAD	.\pcnet.c	468;"	d	file:
TMDL_BCNT_MASK	.\pcnet.c	186;"	d	file:
TMDL_BCNT_SH	.\pcnet.c	187;"	d	file:
TMDL_ONES_MASK	.\pcnet.c	188;"	d	file:
TMDL_ONES_SH	.\pcnet.c	189;"	d	file:
TMDM_BUFF_MASK	.\pcnet.c	224;"	d	file:
TMDM_BUFF_SH	.\pcnet.c	225;"	d	file:
TMDM_EXDEF_MASK	.\pcnet.c	220;"	d	file:
TMDM_EXDEF_SH	.\pcnet.c	221;"	d	file:
TMDM_LCAR_MASK	.\pcnet.c	216;"	d	file:
TMDM_LCAR_SH	.\pcnet.c	217;"	d	file:
TMDM_LCOL_MASK	.\pcnet.c	218;"	d	file:
TMDM_LCOL_SH	.\pcnet.c	219;"	d	file:
TMDM_RTRY_MASK	.\pcnet.c	214;"	d	file:
TMDM_RTRY_SH	.\pcnet.c	215;"	d	file:
TMDM_TDR_MASK	.\pcnet.c	212;"	d	file:
TMDM_TDR_SH	.\pcnet.c	213;"	d	file:
TMDM_TRC_MASK	.\pcnet.c	210;"	d	file:
TMDM_TRC_SH	.\pcnet.c	211;"	d	file:
TMDM_UFLO_MASK	.\pcnet.c	222;"	d	file:
TMDM_UFLO_SH	.\pcnet.c	223;"	d	file:
TMDSTORE	.\pcnet.c	470;"	d	file:
TMDS_BPE_MASK	.\pcnet.c	191;"	d	file:
TMDS_BPE_SH	.\pcnet.c	192;"	d	file:
TMDS_DEF_MASK	.\pcnet.c	197;"	d	file:
TMDS_DEF_SH	.\pcnet.c	198;"	d	file:
TMDS_ENP_MASK	.\pcnet.c	193;"	d	file:
TMDS_ENP_SH	.\pcnet.c	194;"	d	file:
TMDS_ERR_MASK	.\pcnet.c	205;"	d	file:
TMDS_ERR_SH	.\pcnet.c	206;"	d	file:
TMDS_LTINT_MASK	.\pcnet.c	201;"	d	file:
TMDS_LTINT_SH	.\pcnet.c	202;"	d	file:
TMDS_NOFCS_MASK	.\pcnet.c	203;"	d	file:
TMDS_NOFCS_SH	.\pcnet.c	204;"	d	file:
TMDS_ONE_MASK	.\pcnet.c	199;"	d	file:
TMDS_ONE_SH	.\pcnet.c	200;"	d	file:
TMDS_OWN_MASK	.\pcnet.c	207;"	d	file:
TMDS_OWN_SH	.\pcnet.c	208;"	d	file:
TMDS_STP_MASK	.\pcnet.c	195;"	d	file:
TMDS_STP_SH	.\pcnet.c	196;"	d	file:
TMROF_EN	.\acpi.c	57;"	d	file:
TMR_CE	.\mcf5206.c	29;"	d	file:
TMR_CLK	.\mcf5206.c	25;"	d	file:
TMR_FRR	.\mcf5206.c	26;"	d	file:
TMR_OM	.\mcf5206.c	28;"	d	file:
TMR_ORI	.\mcf5206.c	27;"	d	file:
TMR_RST	.\mcf5206.c	24;"	d	file:
TMU0	.\sh7750.c	/^	TMU3, TMU4, TMU0, TMU1, TMU2_TUNI, TMU2_TICPI,$/;"	e	enum:__anon94	file:
TMU012_FEAT_3CHAN	.\sh.h	28;"	d
TMU012_FEAT_EXTCLK	.\sh.h	29;"	d
TMU012_FEAT_TOCR	.\sh.h	27;"	d
TMU1	.\sh7750.c	/^	TMU3, TMU4, TMU0, TMU1, TMU2_TUNI, TMU2_TICPI,$/;"	e	enum:__anon94	file:
TMU2	.\sh7750.c	/^	DMAC, PCIC1, TMU2, RTC, SCI1, SCIF, REF,$/;"	e	enum:__anon94	file:
TMU2_TICPI	.\sh7750.c	/^	TMU3, TMU4, TMU0, TMU1, TMU2_TUNI, TMU2_TICPI,$/;"	e	enum:__anon94	file:
TMU2_TUNI	.\sh7750.c	/^	TMU3, TMU4, TMU0, TMU1, TMU2_TUNI, TMU2_TICPI,$/;"	e	enum:__anon94	file:
TMU3	.\sh7750.c	/^	TMU3, TMU4, TMU0, TMU1, TMU2_TUNI, TMU2_TICPI,$/;"	e	enum:__anon94	file:
TMU4	.\sh7750.c	/^	TMU3, TMU4, TMU0, TMU1, TMU2_TUNI, TMU2_TICPI,$/;"	e	enum:__anon94	file:
TRACE	.\eepro100.c	88;"	d	file:
TRANSP_NOP	.\cirrus_vga.c	413;"	d	file:
TRANSP_ROP	.\cirrus_vga.c	409;"	d	file:
TREQ	.\cuda.c	36;"	d	file:
TRGBR	.\pxa2xx_lcd.c	99;"	d	file:
TRK0_ERR	.\ide.c	54;"	d	file:
TSAD_OWN0	.\rtl8139.c	/^ TSAD_OWN0 = 1<<00, \/\/ OWN bit of Descriptor 0$/;"	e	enum:TSAD_bits	file:
TSAD_OWN1	.\rtl8139.c	/^ TSAD_OWN1 = 1<<01, \/\/ OWN bit of Descriptor 1$/;"	e	enum:TSAD_bits	file:
TSAD_OWN2	.\rtl8139.c	/^ TSAD_OWN2 = 1<<02, \/\/ OWN bit of Descriptor 2$/;"	e	enum:TSAD_bits	file:
TSAD_OWN3	.\rtl8139.c	/^ TSAD_OWN3 = 1<<03, \/\/ OWN bit of Descriptor 3$/;"	e	enum:TSAD_bits	file:
TSAD_TABT0	.\rtl8139.c	/^ TSAD_TABT0 = 1<<04, \/\/ TABT bit of Descriptor 0$/;"	e	enum:TSAD_bits	file:
TSAD_TABT1	.\rtl8139.c	/^ TSAD_TABT1 = 1<<05, \/\/ TABT bit of Descriptor 1$/;"	e	enum:TSAD_bits	file:
TSAD_TABT2	.\rtl8139.c	/^ TSAD_TABT2 = 1<<06, \/\/ TABT bit of Descriptor 2$/;"	e	enum:TSAD_bits	file:
TSAD_TABT3	.\rtl8139.c	/^ TSAD_TABT3 = 1<<07, \/\/ TABT bit of Descriptor 3$/;"	e	enum:TSAD_bits	file:
TSAD_TOK0	.\rtl8139.c	/^ TSAD_TOK0 = 1<<12, \/\/ TOK bit of Descriptor 0$/;"	e	enum:TSAD_bits	file:
TSAD_TOK1	.\rtl8139.c	/^ TSAD_TOK1 = 1<<13, \/\/ TOK bit of Descriptor 1$/;"	e	enum:TSAD_bits	file:
TSAD_TOK2	.\rtl8139.c	/^ TSAD_TOK2 = 1<<14, \/\/ TOK bit of Descriptor 2$/;"	e	enum:TSAD_bits	file:
TSAD_TOK3	.\rtl8139.c	/^ TSAD_TOK3 = 1<<15, \/\/ TOK bit of Descriptor 3$/;"	e	enum:TSAD_bits	file:
TSAD_TUN0	.\rtl8139.c	/^ TSAD_TUN0 = 1<<8, \/\/ TUN bit of Descriptor 0$/;"	e	enum:TSAD_bits	file:
TSAD_TUN1	.\rtl8139.c	/^ TSAD_TUN1 = 1<<9, \/\/ TUN bit of Descriptor 1$/;"	e	enum:TSAD_bits	file:
TSAD_TUN2	.\rtl8139.c	/^ TSAD_TUN2 = 1<<10, \/\/ TUN bit of Descriptor 2$/;"	e	enum:TSAD_bits	file:
TSAD_TUN3	.\rtl8139.c	/^ TSAD_TUN3 = 1<<11, \/\/ TUN bit of Descriptor 3$/;"	e	enum:TSAD_bits	file:
TSAD_bits	.\rtl8139.c	/^enum TSAD_bits {$/;"	g	file:
TSC_AUDIO_REGISTERS_PAGE	.\tsc210x.c	30;"	d	file:
TSC_CONTROL_REGISTERS_PAGE	.\tsc210x.c	29;"	d	file:
TSC_CUT_RESOLUTION	.\tsc210x.c	34;"	d	file:
TSC_DATA_REGISTERS_PAGE	.\tsc210x.c	28;"	d	file:
TSC_MODE_AUX	.\tsc210x.c	93;"	d	file:
TSC_MODE_AUX_SCAN	.\tsc210x.c	94;"	d	file:
TSC_MODE_BAT1	.\tsc210x.c	91;"	d	file:
TSC_MODE_BAT2	.\tsc210x.c	92;"	d	file:
TSC_MODE_NO_SCAN	.\tsc210x.c	85;"	d	file:
TSC_MODE_PORT_SCAN	.\tsc210x.c	96;"	d	file:
TSC_MODE_TEMP1	.\tsc210x.c	95;"	d	file:
TSC_MODE_TEMP2	.\tsc210x.c	97;"	d	file:
TSC_MODE_X	.\tsc210x.c	88;"	d	file:
TSC_MODE_XX_DRV	.\tsc210x.c	98;"	d	file:
TSC_MODE_XYZ_SCAN	.\tsc210x.c	87;"	d	file:
TSC_MODE_XY_SCAN	.\tsc210x.c	86;"	d	file:
TSC_MODE_Y	.\tsc210x.c	89;"	d	file:
TSC_MODE_YX_DRV	.\tsc210x.c	100;"	d	file:
TSC_MODE_YY_DRV	.\tsc210x.c	99;"	d	file:
TSC_MODE_Z	.\tsc210x.c	90;"	d	file:
TSC_POWEROFF_DELAY	.\tsc210x.c	144;"	d	file:
TSC_SOFTSTEP_DELAY	.\tsc210x.c	145;"	d	file:
TSC_VERBOSE	.\tsc210x.c	32;"	d	file:
TXCTRL1_1HSTOP	.\slavio_serial.c	135;"	d	file:
TXCTRL1_1STOP	.\slavio_serial.c	134;"	d	file:
TXCTRL1_2STOP	.\slavio_serial.c	136;"	d	file:
TXCTRL1_CLK16X	.\slavio_serial.c	139;"	d	file:
TXCTRL1_CLK1X	.\slavio_serial.c	138;"	d	file:
TXCTRL1_CLK32X	.\slavio_serial.c	140;"	d	file:
TXCTRL1_CLK64X	.\slavio_serial.c	141;"	d	file:
TXCTRL1_CLKMSK	.\slavio_serial.c	142;"	d	file:
TXCTRL1_PAREN	.\slavio_serial.c	132;"	d	file:
TXCTRL1_PAREV	.\slavio_serial.c	133;"	d	file:
TXCTRL1_STPMSK	.\slavio_serial.c	137;"	d	file:
TXCTRL2_5BITS	.\slavio_serial.c	146;"	d	file:
TXCTRL2_6BITS	.\slavio_serial.c	148;"	d	file:
TXCTRL2_7BITS	.\slavio_serial.c	147;"	d	file:
TXCTRL2_8BITS	.\slavio_serial.c	149;"	d	file:
TXCTRL2_BITMSK	.\slavio_serial.c	145;"	d	file:
TXCTRL2_TXEN	.\slavio_serial.c	144;"	d	file:
Timer	.\rtl8139.c	/^    Timer = 0x48,        \/* A general-purpose counter. *\/$/;"	e	enum:RTL8139_registers	file:
TimerBase	.\fmopl.h	/^	double TimerBase;	\/* Timer base time (==sampling time) *\/$/;"	m	struct:fm_opl_f
TimerHandler	.\fmopl.h	/^	OPL_TIMERHANDLER  TimerHandler;		\/* TIMER handler   *\/$/;"	m	struct:fm_opl_f
TimerInt	.\rtl8139.c	/^    uint32_t   TimerInt;$/;"	m	struct:RTL8139State	file:
TimerParam	.\fmopl.h	/^	int TimerParam;						\/* TIMER parameter *\/$/;"	m	struct:fm_opl_f
Tx1Col	.\rtl8139.c	/^    uint32_t   Tx1Col;$/;"	m	struct:RTL8139TallyCounters	file:
TxAborted	.\rtl8139.c	/^    TxAborted = 0x40000000,$/;"	e	enum:TxStatusBits	file:
TxAbt	.\rtl8139.c	/^    uint16_t   TxAbt;$/;"	m	struct:RTL8139TallyCounters	file:
TxAddr	.\rtl8139.c	/^    uint32_t TxAddr[4];   \/* TxAddr0 *\/$/;"	m	struct:RTL8139State	file:
TxAddr0	.\rtl8139.c	/^    TxAddr0 = 0x20,  \/* Tx descriptors (also four 32bit). *\/$/;"	e	enum:RTL8139_registers	file:
TxCRC	.\rtl8139.c	/^    TxCRC = (1 << 16),    \/* DISABLE appending CRC to end of Tx packets *\/$/;"	e	enum:tx_config_bits	file:
TxCarrierLost	.\rtl8139.c	/^    TxCarrierLost = 0x80000000,$/;"	e	enum:TxStatusBits	file:
TxClearAbt	.\rtl8139.c	/^    TxClearAbt = (1 << 0),    \/* Clear abort (WO) *\/$/;"	e	enum:tx_config_bits	file:
TxConfig	.\rtl8139.c	/^    TxConfig = 0x40,$/;"	e	enum:RTL8139_registers	file:
TxConfig	.\rtl8139.c	/^    uint32_t TxConfig;$/;"	m	struct:RTL8139State	file:
TxDMAShift	.\rtl8139.c	/^    TxDMAShift = 8,        \/* DMA burst value (0-7) is shifted this many bits *\/$/;"	e	enum:tx_config_bits	file:
TxERR	.\rtl8139.c	/^    uint64_t   TxERR;$/;"	m	struct:RTL8139TallyCounters	file:
TxErr	.\rtl8139.c	/^    TxErr = 0x08,$/;"	e	enum:IntrStatusBits	file:
TxHostOwns	.\rtl8139.c	/^    TxHostOwns = 0x2000,$/;"	e	enum:TxStatusBits	file:
TxIFG84	.\rtl8139.c	/^        TxIFG84 = (0 << TxIFGShift),    \/* 8.4us \/ 840ns (10 \/ 100Mbps) *\/$/;"	e	enum:tx_config_bits	file:
TxIFG88	.\rtl8139.c	/^        TxIFG88 = (1 << TxIFGShift),    \/* 8.8us \/ 880ns (10 \/ 100Mbps) *\/$/;"	e	enum:tx_config_bits	file:
TxIFG92	.\rtl8139.c	/^        TxIFG92 = (2 << TxIFGShift),    \/* 9.2us \/ 920ns (10 \/ 100Mbps) *\/$/;"	e	enum:tx_config_bits	file:
TxIFG96	.\rtl8139.c	/^        TxIFG96 = (3 << TxIFGShift),    \/* 9.6us \/ 960ns (10 \/ 100Mbps) *\/$/;"	e	enum:tx_config_bits	file:
TxIFGShift	.\rtl8139.c	/^        TxIFGShift = 24,$/;"	e	enum:tx_config_bits	file:
TxLoopBack	.\rtl8139.c	/^    TxLoopBack = (1 << 18) | (1 << 17), \/* enable loopback test mode *\/$/;"	e	enum:tx_config_bits	file:
TxMCol	.\rtl8139.c	/^    uint32_t   TxMCol;$/;"	m	struct:RTL8139TallyCounters	file:
TxOK	.\rtl8139.c	/^    TxOK = 0x04,$/;"	e	enum:IntrStatusBits	file:
TxOk	.\rtl8139.c	/^    uint64_t   TxOk;$/;"	m	struct:RTL8139TallyCounters	file:
TxOutOfWindow	.\rtl8139.c	/^    TxOutOfWindow = 0x20000000,$/;"	e	enum:TxStatusBits	file:
TxPoll	.\rtl8139.c	/^    TxPoll        = 0xD9,    \/* Tell chip to check Tx descriptors for work *\/$/;"	e	enum:RTL8139_registers	file:
TxRetryShift	.\rtl8139.c	/^    TxRetryShift = 4,    \/* TXRR value (0-15) is shifted this many bits *\/$/;"	e	enum:tx_config_bits	file:
TxStatOK	.\rtl8139.c	/^    TxStatOK = 0x8000,$/;"	e	enum:TxStatusBits	file:
TxStatus	.\rtl8139.c	/^    uint32_t TxStatus[4]; \/* TxStatus0 in C mode*\/ \/* also DTCCR[0] and DTCCR[1] in C+ mode *\/$/;"	m	struct:RTL8139State	file:
TxStatus0	.\rtl8139.c	/^    TxStatus0 = 0x10,\/* Transmit status (Four 32bit registers). C mode only *\/$/;"	e	enum:RTL8139_registers	file:
TxStatusBits	.\rtl8139.c	/^enum TxStatusBits {$/;"	g	file:
TxSummary	.\rtl8139.c	/^    TxSummary = 0x60, \/* TSAD register. Transmit Status of All Descriptors*\/$/;"	e	enum:RTL8139_registers	file:
TxThresh	.\rtl8139.c	/^    TxThresh    = 0xEC, \/* Early Tx threshold *\/$/;"	e	enum:RTL8139_registers	file:
TxThresh	.\rtl8139.c	/^    uint8_t  TxThresh;$/;"	m	struct:RTL8139State	file:
TxUnderrun	.\rtl8139.c	/^    TxUnderrun = 0x4000,$/;"	e	enum:TxStatusBits	file:
TxUndrn	.\rtl8139.c	/^    uint16_t   TxUndrn;$/;"	m	struct:RTL8139TallyCounters	file:
TxVersionMask	.\rtl8139.c	/^    TxVersionMask = 0x7C800000, \/* mask out version bits 30-26, 23 *\/$/;"	e	enum:tx_config_bits	file:
UART_IER_MSI	.\serial.c	33;"	d	file:
UART_IER_RDI	.\serial.c	36;"	d	file:
UART_IER_RLSI	.\serial.c	34;"	d	file:
UART_IER_THRI	.\serial.c	35;"	d	file:
UART_IIR_ID	.\serial.c	39;"	d	file:
UART_IIR_MSI	.\serial.c	41;"	d	file:
UART_IIR_NO_INT	.\serial.c	38;"	d	file:
UART_IIR_RDI	.\serial.c	43;"	d	file:
UART_IIR_RLSI	.\serial.c	44;"	d	file:
UART_IIR_THRI	.\serial.c	42;"	d	file:
UART_LCR_DLAB	.\serial.c	31;"	d	file:
UART_LSR_BI	.\serial.c	70;"	d	file:
UART_LSR_DR	.\serial.c	74;"	d	file:
UART_LSR_FE	.\serial.c	71;"	d	file:
UART_LSR_OE	.\serial.c	73;"	d	file:
UART_LSR_PE	.\serial.c	72;"	d	file:
UART_LSR_TEMT	.\serial.c	68;"	d	file:
UART_LSR_THRE	.\serial.c	69;"	d	file:
UART_MCR_DTR	.\serial.c	53;"	d	file:
UART_MCR_LOOP	.\serial.c	49;"	d	file:
UART_MCR_OUT1	.\serial.c	51;"	d	file:
UART_MCR_OUT2	.\serial.c	50;"	d	file:
UART_MCR_RTS	.\serial.c	52;"	d	file:
UART_MSR_ANY_DELTA	.\serial.c	66;"	d	file:
UART_MSR_CTS	.\serial.c	61;"	d	file:
UART_MSR_DCD	.\serial.c	58;"	d	file:
UART_MSR_DCTS	.\serial.c	65;"	d	file:
UART_MSR_DDCD	.\serial.c	62;"	d	file:
UART_MSR_DDSR	.\serial.c	64;"	d	file:
UART_MSR_DSR	.\serial.c	60;"	d	file:
UART_MSR_RI	.\serial.c	59;"	d	file:
UART_MSR_TERI	.\serial.c	63;"	d	file:
UCTRL_CNTRL	.\es1370.c	122;"	d	file:
UCTRL_CNTRL_SWR	.\es1370.c	123;"	d	file:
UCTRL_ENA_TXINT	.\es1370.c	121;"	d	file:
UCTRL_RXINTEN	.\es1370.c	119;"	d	file:
UCTRL_TXINTEN	.\es1370.c	120;"	d	file:
UDIDETCR0	.\ide.c	396;"	d	file:
UDIDETCR1	.\ide.c	397;"	d	file:
UHCIPort	.\usb-uhci.c	/^typedef struct UHCIPort {$/;"	s	file:
UHCIPort	.\usb-uhci.c	/^} UHCIPort;$/;"	t	typeref:struct:UHCIPort	file:
UHCIState	.\usb-uhci.c	/^typedef struct UHCIState {$/;"	s	file:
UHCIState	.\usb-uhci.c	/^} UHCIState;$/;"	t	typeref:struct:UHCIState	file:
UHCI_CMD_EGSM	.\usb-uhci.c	34;"	d	file:
UHCI_CMD_FGR	.\usb-uhci.c	33;"	d	file:
UHCI_CMD_GRESET	.\usb-uhci.c	35;"	d	file:
UHCI_CMD_HCRESET	.\usb-uhci.c	36;"	d	file:
UHCI_CMD_RS	.\usb-uhci.c	37;"	d	file:
UHCI_PORT_CCS	.\usb-uhci.c	61;"	d	file:
UHCI_PORT_CSC	.\usb-uhci.c	60;"	d	file:
UHCI_PORT_EN	.\usb-uhci.c	59;"	d	file:
UHCI_PORT_ENC	.\usb-uhci.c	58;"	d	file:
UHCI_PORT_LSDA	.\usb-uhci.c	57;"	d	file:
UHCI_PORT_RESET	.\usb-uhci.c	56;"	d	file:
UHCI_QH	.\usb-uhci.c	/^typedef struct UHCI_QH {$/;"	s	file:
UHCI_QH	.\usb-uhci.c	/^} UHCI_QH;$/;"	t	typeref:struct:UHCI_QH	file:
UHCI_STS_HCHALTED	.\usb-uhci.c	39;"	d	file:
UHCI_STS_HCPERR	.\usb-uhci.c	40;"	d	file:
UHCI_STS_HSERR	.\usb-uhci.c	41;"	d	file:
UHCI_STS_RD	.\usb-uhci.c	42;"	d	file:
UHCI_STS_USBERR	.\usb-uhci.c	43;"	d	file:
UHCI_STS_USBINT	.\usb-uhci.c	44;"	d	file:
UHCI_TD	.\usb-uhci.c	/^typedef struct UHCI_TD {$/;"	s	file:
UHCI_TD	.\usb-uhci.c	/^} UHCI_TD;$/;"	t	typeref:struct:UHCI_TD	file:
UIC_MAX_IRQ	.\ppc4xx_devs.c	276;"	d	file:
UINT16	.\fmopl.h	/^typedef unsigned short	UINT16;  \/* unsigned 16bit *\/$/;"	t
UINT32	.\fmopl.h	/^typedef unsigned int	UINT32;  \/* unsigned 32bit *\/$/;"	t
UINT8	.\fmopl.h	/^typedef unsigned char	UINT8;   \/* unsigned  8bit *\/$/;"	t
UNINState	.\unin_pci.c	/^typedef PCIHostState UNINState;$/;"	t	file:
UNUSED	.\sh7750.c	/^	UNUSED = 0,$/;"	e	enum:__anon94	file:
USBC_IRQ	.\mainstone.h	22;"	d
USBCallback	.\usb.h	/^typedef void USBCallback(USBPacket * packet, void *opaque);$/;"	t
USBDevice	.\usb.h	/^struct USBDevice {$/;"	s
USBDevice	.\usb.h	/^typedef struct USBDevice USBDevice;$/;"	t	typeref:struct:USBDevice
USBHIDState	.\usb-hid.c	/^typedef struct USBHIDState {$/;"	s	file:
USBHIDState	.\usb-hid.c	/^} USBHIDState;$/;"	t	typeref:struct:USBHIDState	file:
USBHubPort	.\usb-hub.c	/^typedef struct USBHubPort {$/;"	s	file:
USBHubPort	.\usb-hub.c	/^} USBHubPort;$/;"	t	typeref:struct:USBHubPort	file:
USBHubState	.\usb-hub.c	/^typedef struct USBHubState {$/;"	s	file:
USBHubState	.\usb-hub.c	/^} USBHubState;$/;"	t	typeref:struct:USBHubState	file:
USBKeyboardState	.\usb-hid.c	/^typedef struct USBKeyboardState {$/;"	s	file:
USBKeyboardState	.\usb-hid.c	/^} USBKeyboardState;$/;"	t	typeref:struct:USBKeyboardState	file:
USBMSDMode	.\usb-msd.c	/^enum USBMSDMode {$/;"	g	file:
USBMouseState	.\usb-hid.c	/^typedef struct USBMouseState {$/;"	s	file:
USBMouseState	.\usb-hid.c	/^} USBMouseState;$/;"	t	typeref:struct:USBMouseState	file:
USBPacket	.\usb.h	/^struct USBPacket {$/;"	s
USBPacket	.\usb.h	/^typedef struct USBPacket USBPacket;$/;"	t	typeref:struct:USBPacket
USBPort	.\usb.h	/^struct USBPort {$/;"	s
USBPort	.\usb.h	/^typedef struct USBPort USBPort;$/;"	t	typeref:struct:USBPort
USBWacomState	.\usb-wacom.c	/^typedef struct USBWacomState {$/;"	s	file:
USBWacomState	.\usb-wacom.c	/^} USBWacomState;$/;"	t	typeref:struct:USBWacomState	file:
USB_CLASS_APP_SPEC	.\usb.h	62;"	d
USB_CLASS_AUDIO	.\usb.h	51;"	d
USB_CLASS_CDC_DATA	.\usb.h	59;"	d
USB_CLASS_COMM	.\usb.h	52;"	d
USB_CLASS_CONTENT_SEC	.\usb.h	61;"	d
USB_CLASS_CSCID	.\usb.h	60;"	d
USB_CLASS_HID	.\usb.h	53;"	d
USB_CLASS_HUB	.\usb.h	58;"	d
USB_CLASS_MASS_STORAGE	.\usb.h	57;"	d
USB_CLASS_PHYSICAL	.\usb.h	54;"	d
USB_CLASS_PRINTER	.\usb.h	56;"	d
USB_CLASS_STILL_IMAGE	.\usb.h	55;"	d
USB_CLASS_VENDOR_SPEC	.\usb.h	63;"	d
USB_DEVICE_REMOTE_WAKEUP	.\usb.h	103;"	d
USB_DEVICE_SELF_POWERED	.\usb.h	102;"	d
USB_DIR_IN	.\usb.h	66;"	d
USB_DIR_OUT	.\usb.h	65;"	d
USB_DT_CONFIG	.\usb.h	106;"	d
USB_DT_DEVICE	.\usb.h	105;"	d
USB_DT_ENDPOINT	.\usb.h	109;"	d
USB_DT_HID	.\usb-hid.c	38;"	d	file:
USB_DT_INTERFACE	.\usb.h	108;"	d
USB_DT_PHY	.\usb-hid.c	40;"	d	file:
USB_DT_REPORT	.\usb-hid.c	39;"	d	file:
USB_DT_STRING	.\usb.h	107;"	d
USB_HID_USAGE_ERROR_ROLLOVER	.\usb-hid.c	343;"	d	file:
USB_HID_USAGE_ERROR_UNDEFINED	.\usb-hid.c	345;"	d	file:
USB_HID_USAGE_POSTFAIL	.\usb-hid.c	344;"	d	file:
USB_HZ	.\usb-ohci.c	211;"	d	file:
USB_KEYBOARD	.\usb-hid.c	44;"	d	file:
USB_MOUSE	.\usb-hid.c	42;"	d	file:
USB_MSDM_CBW	.\usb-msd.c	/^    USB_MSDM_CBW, \/* Command Block.  *\/$/;"	e	enum:USBMSDMode	file:
USB_MSDM_CSW	.\usb-msd.c	/^    USB_MSDM_CSW \/* Command Status.  *\/$/;"	e	enum:USBMSDMode	file:
USB_MSDM_DATAIN	.\usb-msd.c	/^    USB_MSDM_DATAIN, \/* Transfer data from device.  *\/$/;"	e	enum:USBMSDMode	file:
USB_MSDM_DATAOUT	.\usb-msd.c	/^    USB_MSDM_DATAOUT, \/* Tranfer data to device.  *\/$/;"	e	enum:USBMSDMode	file:
USB_MSG_ATTACH	.\usb.h	29;"	d
USB_MSG_DETACH	.\usb.h	30;"	d
USB_MSG_RESET	.\usb.h	31;"	d
USB_RECIP_DEVICE	.\usb.h	75;"	d
USB_RECIP_ENDPOINT	.\usb.h	77;"	d
USB_RECIP_INTERFACE	.\usb.h	76;"	d
USB_RECIP_MASK	.\usb.h	74;"	d
USB_RECIP_OTHER	.\usb.h	78;"	d
USB_REQ_CLEAR_FEATURE	.\usb.h	91;"	d
USB_REQ_GET_CONFIGURATION	.\usb.h	96;"	d
USB_REQ_GET_DESCRIPTOR	.\usb.h	94;"	d
USB_REQ_GET_INTERFACE	.\usb.h	98;"	d
USB_REQ_GET_STATUS	.\usb.h	90;"	d
USB_REQ_SET_ADDRESS	.\usb.h	93;"	d
USB_REQ_SET_CONFIGURATION	.\usb.h	97;"	d
USB_REQ_SET_DESCRIPTOR	.\usb.h	95;"	d
USB_REQ_SET_FEATURE	.\usb.h	92;"	d
USB_REQ_SET_INTERFACE	.\usb.h	99;"	d
USB_REQ_SYNCH_FRAME	.\usb.h	100;"	d
USB_RET_ASYNC	.\usb.h	37;"	d
USB_RET_BABBLE	.\usb.h	36;"	d
USB_RET_NAK	.\usb.h	34;"	d
USB_RET_NODEV	.\usb.h	33;"	d
USB_RET_STALL	.\usb.h	35;"	d
USB_SPEED_FULL	.\usb.h	40;"	d
USB_SPEED_HIGH	.\usb.h	41;"	d
USB_SPEED_LOW	.\usb.h	39;"	d
USB_STATE_ATTACHED	.\usb.h	44;"	d
USB_STATE_DEFAULT	.\usb.h	46;"	d
USB_STATE_NOTATTACHED	.\usb.h	43;"	d
USB_STATE_SUSPENDED	.\usb.h	49;"	d
USB_TABLET	.\usb-hid.c	43;"	d	file:
USB_TOKEN_IN	.\usb.h	25;"	d
USB_TOKEN_OUT	.\usb.h	26;"	d
USB_TOKEN_SETUP	.\usb.h	24;"	d
USB_TYPE_CLASS	.\usb.h	70;"	d
USB_TYPE_MASK	.\usb.h	68;"	d
USB_TYPE_RESERVED	.\usb.h	72;"	d
USB_TYPE_STANDARD	.\usb.h	69;"	d
USB_TYPE_VENDOR	.\usb.h	71;"	d
USE_DMA_CDROM	.\ide.c	39;"	d	file:
USE_FLASH_BIOS	.\ppc405_boards.c	43;"	d	file:
USE_MPCxxx	.\openpic.c	48;"	d	file:
USIM_IRQ	.\mainstone.h	21;"	d
USTAT_RXINT	.\es1370.c	114;"	d	file:
USTAT_RXRDY	.\es1370.c	117;"	d	file:
USTAT_TXINT	.\es1370.c	115;"	d	file:
USTAT_TXRDY	.\es1370.c	116;"	d	file:
USUB	.\usb-ohci.c	561;"	d	file:
UpdateHandler	.\fmopl.h	/^	OPL_UPDATEHANDLER UpdateHandler;	\/* stream update handler   *\/$/;"	m	struct:fm_opl_f
UpdateParam	.\fmopl.h	/^	int UpdateParam;					\/* stream update parameter *\/$/;"	m	struct:fm_opl_f
VBE_DISPI_8BIT_DAC	.\vga_int.h	58;"	d
VBE_DISPI_DISABLED	.\vga_int.h	55;"	d
VBE_DISPI_ENABLED	.\vga_int.h	56;"	d
VBE_DISPI_GETCAPS	.\vga_int.h	57;"	d
VBE_DISPI_ID0	.\vga_int.h	49;"	d
VBE_DISPI_ID1	.\vga_int.h	50;"	d
VBE_DISPI_ID2	.\vga_int.h	51;"	d
VBE_DISPI_ID3	.\vga_int.h	52;"	d
VBE_DISPI_ID4	.\vga_int.h	53;"	d
VBE_DISPI_INDEX_BANK	.\vga_int.h	42;"	d
VBE_DISPI_INDEX_BPP	.\vga_int.h	40;"	d
VBE_DISPI_INDEX_ENABLE	.\vga_int.h	41;"	d
VBE_DISPI_INDEX_ID	.\vga_int.h	37;"	d
VBE_DISPI_INDEX_NB	.\vga_int.h	47;"	d
VBE_DISPI_INDEX_VIRT_HEIGHT	.\vga_int.h	44;"	d
VBE_DISPI_INDEX_VIRT_WIDTH	.\vga_int.h	43;"	d
VBE_DISPI_INDEX_XRES	.\vga_int.h	38;"	d
VBE_DISPI_INDEX_X_OFFSET	.\vga_int.h	45;"	d
VBE_DISPI_INDEX_YRES	.\vga_int.h	39;"	d
VBE_DISPI_INDEX_Y_OFFSET	.\vga_int.h	46;"	d
VBE_DISPI_LFB_ENABLED	.\vga_int.h	59;"	d
VBE_DISPI_LFB_PHYSICAL_ADDRESS	.\vga_int.h	62;"	d
VBE_DISPI_MAX_BPP	.\vga_int.h	35;"	d
VBE_DISPI_MAX_XRES	.\vga_int.h	33;"	d
VBE_DISPI_MAX_YRES	.\vga_int.h	34;"	d
VBE_DISPI_NOCLEARMEM	.\vga_int.h	60;"	d
VECTOR_BITS	.\openpic.c	58;"	d	file:
VECTOR_BITS	.\openpic.c	74;"	d	file:
VENI	.\openpic.c	77;"	d	file:
VERBOSE	.\vmware_vga.c	28;"	d	file:
VGABIOS_CIRRUS_FILENAME	.\pc.c	40;"	d	file:
VGABIOS_FILENAME	.\pc.c	39;"	d	file:
VGABIOS_FILENAME	.\ppc_mac.h	32;"	d
VGAState	.\vga_int.h	/^typedef struct VGAState {$/;"	s
VGAState	.\vga_int.h	/^} VGAState;$/;"	t	typeref:struct:VGAState
VGA_BASE	.\sun4u.c	43;"	d	file:
VGA_DRAW_LINE15	.\vga.c	/^    VGA_DRAW_LINE15,$/;"	e	enum:__anon126	file:
VGA_DRAW_LINE16	.\vga.c	/^    VGA_DRAW_LINE16,$/;"	e	enum:__anon126	file:
VGA_DRAW_LINE2	.\vga.c	/^    VGA_DRAW_LINE2,$/;"	e	enum:__anon126	file:
VGA_DRAW_LINE24	.\vga.c	/^    VGA_DRAW_LINE24,$/;"	e	enum:__anon126	file:
VGA_DRAW_LINE2D2	.\vga.c	/^    VGA_DRAW_LINE2D2,$/;"	e	enum:__anon126	file:
VGA_DRAW_LINE32	.\vga.c	/^    VGA_DRAW_LINE32,$/;"	e	enum:__anon126	file:
VGA_DRAW_LINE4	.\vga.c	/^    VGA_DRAW_LINE4,$/;"	e	enum:__anon126	file:
VGA_DRAW_LINE4D2	.\vga.c	/^    VGA_DRAW_LINE4D2,$/;"	e	enum:__anon126	file:
VGA_DRAW_LINE8	.\vga.c	/^    VGA_DRAW_LINE8,$/;"	e	enum:__anon126	file:
VGA_DRAW_LINE8D2	.\vga.c	/^    VGA_DRAW_LINE8D2,$/;"	e	enum:__anon126	file:
VGA_DRAW_LINE_NB	.\vga.c	/^    VGA_DRAW_LINE_NB,$/;"	e	enum:__anon126	file:
VGA_MAX_HEIGHT	.\vga_int.h	80;"	d
VGA_RAM_SIZE	.\pc.h	110;"	d
VGA_RAM_SIZE	.\pc.h	112;"	d
VGA_STATE_COMMON	.\vga_int.h	82;"	d
VGA_STATE_COMMON_BOCHS_VBE	.\vga_int.h	66;"	d
VGA_STATE_COMMON_BOCHS_VBE	.\vga_int.h	75;"	d
VIB_ENT	.\fmopl.c	98;"	d	file:
VIB_RATE	.\fmopl.c	103;"	d	file:
VIB_SHIFT	.\fmopl.c	99;"	d	file:
VIB_TABLE	.\fmopl.c	/^static INT32 *VIB_TABLE;$/;"	v	file:
VID	.\openpic.c	61;"	d	file:
VID	.\openpic.c	76;"	d	file:
VIRT_TO_PHYS_ADDEND	.\mips_malta.c	55;"	d	file:
VIRT_TO_PHYS_ADDEND	.\mips_mipssim.c	47;"	d	file:
VIRT_TO_PHYS_ADDEND	.\mips_pica61.c	45;"	d	file:
VIRT_TO_PHYS_ADDEND	.\mips_r4k.c	26;"	d	file:
VMMOUSE_COMMAND	.\vmmouse.c	36;"	d	file:
VMMOUSE_DATA	.\vmmouse.c	34;"	d	file:
VMMOUSE_DISABLE	.\vmmouse.c	39;"	d	file:
VMMOUSE_GETVERSION	.\vmmouse.c	33;"	d	file:
VMMOUSE_QUEUE_SIZE	.\vmmouse.c	43;"	d	file:
VMMOUSE_READ_ID	.\vmmouse.c	38;"	d	file:
VMMOUSE_REQUEST_ABSOLUTE	.\vmmouse.c	41;"	d	file:
VMMOUSE_REQUEST_RELATIVE	.\vmmouse.c	40;"	d	file:
VMMOUSE_STATUS	.\vmmouse.c	35;"	d	file:
VMMOUSE_VERSION	.\vmmouse.c	45;"	d	file:
VMMouseState	.\vmmouse.c	/^} VMMouseState;$/;"	t	typeref:struct:_VMMouseState	file:
VMPORT_CMD_GETRAMSIZE	.\vmport.c	30;"	d	file:
VMPORT_CMD_GETVERSION	.\vmport.c	29;"	d	file:
VMPORT_ENTRIES	.\vmport.c	32;"	d	file:
VMPORT_MAGIC	.\vmport.c	33;"	d	file:
VMPortState	.\vmport.c	/^} VMPortState;$/;"	t	typeref:struct:_VMPortState	file:
VM_USB_HUB_SIZE	.\usb.h	225;"	d
WACOM_GET_REPORT	.\usb-wacom.c	33;"	d	file:
WACOM_MODE_HID	.\usb-wacom.c	/^        WACOM_MODE_HID = 1,$/;"	e	enum:USBWacomState::__anon125	file:
WACOM_MODE_WACOM	.\usb-wacom.c	/^        WACOM_MODE_WACOM = 2,$/;"	e	enum:USBWacomState::__anon125	file:
WACOM_SET_REPORT	.\usb-wacom.c	34;"	d	file:
WAIT	.\tc58128.c	/^typedef enum { WAIT, READ1, READ2, READ3 } state_t;$/;"	e	enum:__anon119	file:
WDT	.\sh7750.c	/^	WDT,$/;"	e	enum:__anon94	file:
WE	.\tc58128.c	9;"	d	file:
WHITE_NOISE_db	.\fmopl.c	499;"	d	file:
WIN_ACKMEDIACHANGE	.\ide.c	168;"	d	file:
WIN_CHECKPOWERMODE1	.\ide.c	178;"	d	file:
WIN_CHECKPOWERMODE2	.\ide.c	146;"	d	file:
WIN_DEVICE_RESET	.\ide.c	82;"	d	file:
WIN_DIAGNOSE	.\ide.c	139;"	d	file:
WIN_DOORLOCK	.\ide.c	171;"	d	file:
WIN_DOORUNLOCK	.\ide.c	172;"	d	file:
WIN_DOWNLOAD_MICROCODE	.\ide.c	141;"	d	file:
WIN_FLUSH_CACHE	.\ide.c	180;"	d	file:
WIN_FLUSH_CACHE_EXT	.\ide.c	184;"	d	file:
WIN_FORMAT	.\ide.c	129;"	d	file:
WIN_GETMEDIASTATUS	.\ide.c	167;"	d	file:
WIN_IDENTIFY	.\ide.c	185;"	d	file:
WIN_IDENTIFY_DMA	.\ide.c	187;"	d	file:
WIN_IDLEIMMEDIATE	.\ide.c	174;"	d	file:
WIN_INIT	.\ide.c	133;"	d	file:
WIN_MEDIAEJECT	.\ide.c	186;"	d	file:
WIN_MULTREAD	.\ide.c	157;"	d	file:
WIN_MULTREAD_EXT	.\ide.c	102;"	d	file:
WIN_MULTWRITE	.\ide.c	158;"	d	file:
WIN_MULTWRITE_EXT	.\ide.c	115;"	d	file:
WIN_NOP	.\ide.c	73;"	d	file:
WIN_PACKETCMD	.\ide.c	151;"	d	file:
WIN_PIDENTIFY	.\ide.c	152;"	d	file:
WIN_POSTBOOT	.\ide.c	169;"	d	file:
WIN_PREBOOT	.\ide.c	170;"	d	file:
WIN_QUEUED_SERVICE	.\ide.c	153;"	d	file:
WIN_READ	.\ide.c	91;"	d	file:
WIN_READDMA	.\ide.c	161;"	d	file:
WIN_READDMA_EXT	.\ide.c	96;"	d	file:
WIN_READDMA_ONCE	.\ide.c	162;"	d	file:
WIN_READDMA_QUEUED	.\ide.c	160;"	d	file:
WIN_READDMA_QUEUED_EXT	.\ide.c	97;"	d	file:
WIN_READ_BUFFER	.\ide.c	177;"	d	file:
WIN_READ_EXT	.\ide.c	95;"	d	file:
WIN_READ_LONG	.\ide.c	93;"	d	file:
WIN_READ_LONG_ONCE	.\ide.c	94;"	d	file:
WIN_READ_NATIVE_MAX	.\ide.c	198;"	d	file:
WIN_READ_NATIVE_MAX_EXT	.\ide.c	98;"	d	file:
WIN_READ_ONCE	.\ide.c	92;"	d	file:
WIN_RECAL	.\ide.c	86;"	d	file:
WIN_RESTORE	.\ide.c	87;"	d	file:
WIN_SECURITY_DISABLE	.\ide.c	197;"	d	file:
WIN_SECURITY_ERASE_PREPARE	.\ide.c	193;"	d	file:
WIN_SECURITY_ERASE_UNIT	.\ide.c	194;"	d	file:
WIN_SECURITY_FREEZE_LOCK	.\ide.c	195;"	d	file:
WIN_SECURITY_SET_PASS	.\ide.c	191;"	d	file:
WIN_SECURITY_UNLOCK	.\ide.c	192;"	d	file:
WIN_SEEK	.\ide.c	137;"	d	file:
WIN_SETFEATURES	.\ide.c	188;"	d	file:
WIN_SETIDLE1	.\ide.c	176;"	d	file:
WIN_SETIDLE2	.\ide.c	145;"	d	file:
WIN_SETMULT	.\ide.c	159;"	d	file:
WIN_SET_MAX	.\ide.c	199;"	d	file:
WIN_SET_MAX_EXT	.\ide.c	113;"	d	file:
WIN_SLEEPNOW1	.\ide.c	179;"	d	file:
WIN_SLEEPNOW2	.\ide.c	147;"	d	file:
WIN_SMART	.\ide.c	154;"	d	file:
WIN_SPECIFY	.\ide.c	140;"	d	file:
WIN_SRST	.\ide.c	81;"	d	file:
WIN_STANDBY	.\ide.c	175;"	d	file:
WIN_STANDBY2	.\ide.c	144;"	d	file:
WIN_STANDBYNOW1	.\ide.c	173;"	d	file:
WIN_STANDBYNOW2	.\ide.c	142;"	d	file:
WIN_VERIFY	.\ide.c	123;"	d	file:
WIN_VERIFY_EXT	.\ide.c	125;"	d	file:
WIN_VERIFY_ONCE	.\ide.c	124;"	d	file:
WIN_WRITE	.\ide.c	106;"	d	file:
WIN_WRITEDMA	.\ide.c	163;"	d	file:
WIN_WRITEDMA_EXT	.\ide.c	111;"	d	file:
WIN_WRITEDMA_ONCE	.\ide.c	164;"	d	file:
WIN_WRITEDMA_QUEUED	.\ide.c	165;"	d	file:
WIN_WRITEDMA_QUEUED_EXT	.\ide.c	112;"	d	file:
WIN_WRITE_BUFFER	.\ide.c	181;"	d	file:
WIN_WRITE_EXT	.\ide.c	110;"	d	file:
WIN_WRITE_LONG	.\ide.c	108;"	d	file:
WIN_WRITE_LONG_ONCE	.\ide.c	109;"	d	file:
WIN_WRITE_ONCE	.\ide.c	107;"	d	file:
WIN_WRITE_SAME	.\ide.c	182;"	d	file:
WIN_WRITE_VERIFY	.\ide.c	119;"	d	file:
WM8750_3D	.\wm8750.c	286;"	d	file:
WM8750_ADCDAC	.\wm8750.c	278;"	d	file:
WM8750_ADCIN	.\wm8750.c	298;"	d	file:
WM8750_ADCTL1	.\wm8750.c	293;"	d	file:
WM8750_ADCTL2	.\wm8750.c	294;"	d	file:
WM8750_ADCTL3	.\wm8750.c	297;"	d	file:
WM8750_ALC1	.\wm8750.c	287;"	d	file:
WM8750_ALC2	.\wm8750.c	288;"	d	file:
WM8750_ALC3	.\wm8750.c	289;"	d	file:
WM8750_BASS	.\wm8750.c	283;"	d	file:
WM8750_IFACE	.\wm8750.c	279;"	d	file:
WM8750_LADC	.\wm8750.c	291;"	d	file:
WM8750_LADCIN	.\wm8750.c	299;"	d	file:
WM8750_LDAC	.\wm8750.c	281;"	d	file:
WM8750_LINVOL	.\wm8750.c	274;"	d	file:
WM8750_LOUT1V	.\wm8750.c	276;"	d	file:
WM8750_LOUT2V	.\wm8750.c	307;"	d	file:
WM8750_LOUTM1	.\wm8750.c	301;"	d	file:
WM8750_LOUTM2	.\wm8750.c	302;"	d	file:
WM8750_MOUTM1	.\wm8750.c	305;"	d	file:
WM8750_MOUTM2	.\wm8750.c	306;"	d	file:
WM8750_MOUTV	.\wm8750.c	309;"	d	file:
WM8750_NGATE	.\wm8750.c	290;"	d	file:
WM8750_PWR1	.\wm8750.c	295;"	d	file:
WM8750_PWR2	.\wm8750.c	296;"	d	file:
WM8750_RADC	.\wm8750.c	292;"	d	file:
WM8750_RADCIN	.\wm8750.c	300;"	d	file:
WM8750_RDAC	.\wm8750.c	282;"	d	file:
WM8750_RESET	.\wm8750.c	285;"	d	file:
WM8750_RINVOL	.\wm8750.c	275;"	d	file:
WM8750_ROUT1V	.\wm8750.c	277;"	d	file:
WM8750_ROUT2V	.\wm8750.c	308;"	d	file:
WM8750_ROUTM1	.\wm8750.c	303;"	d	file:
WM8750_ROUTM2	.\wm8750.c	304;"	d	file:
WM8750_SRATE	.\wm8750.c	280;"	d	file:
WM8750_TREBLE	.\wm8750.c	284;"	d	file:
WPGROUP_SHIFT	.\sd.c	241;"	d	file:
WPGROUP_SIZE	.\sd.c	245;"	d	file:
WP_ERASE_SKIP	.\sd.h	46;"	d
WP_VIOLATION	.\sd.h	37;"	d
WRERR_STAT	.\ide.c	48;"	d	file:
W_BRGHI	.\slavio_serial.c	163;"	d	file:
W_BRGLO	.\slavio_serial.c	162;"	d	file:
W_CLOCK	.\slavio_serial.c	160;"	d	file:
W_CMD	.\slavio_serial.c	116;"	d	file:
W_EXTINT	.\slavio_serial.c	166;"	d	file:
W_INTR	.\slavio_serial.c	122;"	d	file:
W_IVEC	.\slavio_serial.c	128;"	d	file:
W_MINTR	.\slavio_serial.c	153;"	d	file:
W_MISC1	.\slavio_serial.c	159;"	d	file:
W_MISC2	.\slavio_serial.c	164;"	d	file:
W_RXCTRL	.\slavio_serial.c	129;"	d	file:
W_SYNC1	.\slavio_serial.c	150;"	d	file:
W_SYNC2	.\slavio_serial.c	151;"	d	file:
W_TXBUF	.\slavio_serial.c	152;"	d	file:
W_TXCTRL1	.\slavio_serial.c	131;"	d	file:
W_TXCTRL2	.\slavio_serial.c	143;"	d	file:
X	.\eepro100.c	203;"	d	file:
X	.\eepro100.c	205;"	d	file:
X_AXIS_DMAX	.\ads7846.c	35;"	d	file:
X_AXIS_MIN	.\ads7846.c	36;"	d	file:
X_TRANSFORM	.\tsc210x.c	128;"	d	file:
Y8950UpdateOne	.\fmopl.c	/^void Y8950UpdateOne(FM_OPL *OPL, INT16 *buffer, int length)$/;"	f
YM3812UpdateOne	.\fmopl.c	/^void YM3812UpdateOne(FM_OPL *OPL, INT16 *buffer, int length)$/;"	f
Y_AXIS_DMAX	.\ads7846.c	37;"	d	file:
Y_AXIS_MIN	.\ads7846.c	38;"	d	file:
Y_TRANSFORM	.\tsc210x.c	130;"	d	file:
Z1_TRANSFORM	.\tsc210x.c	132;"	d	file:
Z2_TRANSFORM	.\tsc210x.c	134;"	d	file:
_16	.\cirrus_vga_rop.h	/^glue(glue(cirrus_bitblt_rop_bkwd_transp_, ROP_NAME),_16)(CirrusVGAState *s,$/;"	f
_16	.\cirrus_vga_rop.h	/^glue(glue(cirrus_bitblt_rop_fwd_transp_, ROP_NAME),_16)(CirrusVGAState *s,$/;"	f
_8	.\cirrus_vga_rop.h	/^glue(glue(cirrus_bitblt_rop_bkwd_transp_, ROP_NAME),_8)(CirrusVGAState *s,$/;"	f
_8	.\cirrus_vga_rop.h	/^glue(glue(cirrus_bitblt_rop_fwd_transp_, ROP_NAME),_8)(CirrusVGAState *s,$/;"	f
_INTC_ARRAY	.\sh_intc.h	32;"	d
_PPC_intack_read	.\ppc_prep.c	/^static always_inline uint32_t _PPC_intack_read (target_phys_addr_t addr)$/;"	f	file:
_PPC_intack_write	.\ppc_prep.c	/^static void _PPC_intack_write (void *opaque,$/;"	f	file:
_SH7750_REGNAMES_H	.\sh7750_regnames.h	2;"	d
_VMMouseState	.\vmmouse.c	/^typedef struct _VMMouseState$/;"	s	file:
_VMPortState	.\vmport.c	/^typedef struct _VMPortState$/;"	s	file:
__FMOPL_H_	.\fmopl.h	2;"	d
__MAINSTONE_H__	.\mainstone.h	11;"	d
__PPC_MAC_H__	.\ppc_mac.h	26;"	d
__SH7750_REGS_H__	.\sh7750_regs.h	20;"	d
__SH_INTC_H__	.\sh_intc.h	2;"	d
__cpu_ppc_store_decr	.\ppc.c	/^static void __cpu_ppc_store_decr (CPUState *env, uint64_t *nextp,$/;"	f	file:
__hw_sd_h	.\sd.h	30;"	d
_cpu_ppc_load_decr	.\ppc.c	/^static always_inline uint32_t _cpu_ppc_load_decr (CPUState *env,$/;"	f	file:
_cpu_ppc_load_tbu	.\ppc.c	/^static always_inline uint32_t _cpu_ppc_load_tbu (CPUState *env)$/;"	f	file:
_cpu_ppc_store_decr	.\ppc.c	/^static always_inline void _cpu_ppc_store_decr (CPUState *env, uint32_t decr,$/;"	f	file:
_cpu_ppc_store_hdecr	.\ppc.c	/^static always_inline void _cpu_ppc_store_hdecr (CPUState *env, uint32_t hdecr,$/;"	f	file:
_cpu_ppc_store_tbu	.\ppc.c	/^static always_inline void _cpu_ppc_store_tbu (CPUState *env, uint32_t value)$/;"	f	file:
_eeprom24c0x_t	.\mips_malta.c	/^struct _eeprom24c0x_t {$/;"	s	file:
_eeprom_t	.\eeprom93xx.c	/^struct _eeprom_t {$/;"	s	file:
_fd_sector	.\fdc.c	/^static int _fd_sector (uint8_t head, uint8_t track,$/;"	f	file:
_loaderparams	.\mips_malta.c	/^static struct _loaderparams {$/;"	s	file:
_loaderparams	.\mips_mipssim.c	/^static struct _loaderparams {$/;"	s	file:
_loaderparams	.\mips_r4k.c	/^static struct _loaderparams {$/;"	s	file:
_res	.\pcnet.c	/^    uint16_t _res;$/;"	m	struct:pcnet_initblk32	file:
a	.\cuda.c	/^    uint8_t a;      \/* A-side data *\/$/;"	m	struct:CUDAState	file:
a	.\es1370.c	177;"	d	file:
a	.\es1370.c	195;"	d	file:
a	.\es1370.c	210;"	d	file:
a	.\es1370.c	230;"	d	file:
abort	.\omap.c	/^    qemu_irq abort;$/;"	m	struct:omap_tipb_bridge_s	file:
absolute	.\vmmouse.c	/^    uint8_t absolute;$/;"	m	struct:_VMMouseState	file:
ac_width	.\pxa2xx_mmci.c	/^    int ac_width;$/;"	m	struct:pxa2xx_mmci_s	file:
ack	.\mips_malta.c	/^  uint8_t ack;$/;"	m	struct:_eeprom24c0x_t	file:
acpi_dbg_writel	.\acpi.c	/^static void acpi_dbg_writel(void *opaque, uint32_t addr, uint32_t val)$/;"	f	file:
acr	.\cuda.c	/^    uint8_t acr;    \/* Auxiliary control register *\/$/;"	m	struct:CUDAState	file:
acr	.\ppc405_uc.c	/^    uint32_t acr;$/;"	m	struct:ppc4xx_plb_t	file:
active	.\adlib.c	/^    int active;$/;"	m	struct:__anon2	file:
active	.\arm_gic.c	/^    unsigned active:NCPU;$/;"	m	struct:gic_irq_state	file:
active	.\omap.c	/^    int active;$/;"	m	struct:omap_dma_channel_s	file:
active	.\pxa2xx_mmci.c	/^    int active;$/;"	m	struct:pxa2xx_mmci_s	file:
active_commands	.\lsi53c895a.c	/^    int active_commands;$/;"	m	struct:__anon25	file:
active_set	.\omap.c	/^    } active_set;$/;"	m	struct:omap_dma_channel_s	typeref:struct:omap_dma_channel_s::omap_dma_reg_set_s	file:
active_vector	.\mcf_intc.c	/^    int active_vector;$/;"	m	struct:__anon32	file:
actss	.\stellaris.c	/^    uint32_t actss;$/;"	m	struct:__anon112	file:
adadj	.\spitz.c	/^    int32_t adadj;$/;"	m	struct:sl_param_info	file:
adadj_keyword	.\spitz.c	/^    uint32_t adadj_keyword;$/;"	m	struct:sl_param_info	file:
adb_bus	.\cuda.c	/^ADBBusState adb_bus;$/;"	v
adb_kbd_init	.\adb.c	/^void adb_kbd_init(ADBBusState *bus)$/;"	f
adb_kbd_poll	.\adb.c	/^static int adb_kbd_poll(ADBDevice *d, uint8_t *obuf)$/;"	f	file:
adb_kbd_put_keycode	.\adb.c	/^static void adb_kbd_put_keycode(void *opaque, int keycode)$/;"	f	file:
adb_kbd_request	.\adb.c	/^static int adb_kbd_request(ADBDevice *d, uint8_t *obuf,$/;"	f	file:
adb_kbd_reset	.\adb.c	/^static int adb_kbd_reset(ADBDevice *d)$/;"	f	file:
adb_mouse_event	.\adb.c	/^static void adb_mouse_event(void *opaque,$/;"	f	file:
adb_mouse_init	.\adb.c	/^void adb_mouse_init(ADBBusState *bus)$/;"	f
adb_mouse_poll	.\adb.c	/^static int adb_mouse_poll(ADBDevice *d, uint8_t *obuf)$/;"	f	file:
adb_mouse_request	.\adb.c	/^static int adb_mouse_request(ADBDevice *d, uint8_t *obuf,$/;"	f	file:
adb_mouse_reset	.\adb.c	/^static int adb_mouse_reset(ADBDevice *d)$/;"	f	file:
adb_poll	.\adb.c	/^int adb_poll(ADBBusState *s, uint8_t *obuf)$/;"	f
adb_poll_timer	.\cuda.c	/^    QEMUTimer *adb_poll_timer;$/;"	m	struct:CUDAState	file:
adb_register_device	.\adb.c	/^ADBDevice *adb_register_device(ADBBusState *s, int devaddr,$/;"	f
adb_request	.\adb.c	/^int adb_request(ADBBusState *s, uint8_t *obuf, const uint8_t *buf, int len)$/;"	f
adc	.\wm8750.c	/^    int adc;$/;"	m	struct:wm_rate_s	file:
adc_hz	.\wm8750.c	/^    int adc_hz;$/;"	m	struct:wm_rate_s	file:
adc_voice	.\es1370.c	/^    SWVoiceIn *adc_voice;$/;"	m	struct:ES1370State	file:
adc_voice	.\tsc210x.c	/^    SWVoiceIn *adc_voice[1];$/;"	m	struct:tsc210x_state_s	file:
adc_voice	.\wm8750.c	/^    SWVoiceIn *adc_voice[IN_PORT_N];$/;"	m	struct:wm8750_s	file:
addr	.\ide.c	/^    uint32_t addr;$/;"	m	struct:BMDMAState	file:
addr	.\iommu.c	/^    target_phys_addr_t addr;$/;"	m	struct:IOMMUState	file:
addr	.\m48t59.c	/^    uint16_t addr;$/;"	m	struct:m48t59_t	file:
addr	.\nand.c	/^    uint32_t cmd, addr;$/;"	m	struct:nand_flash_s	file:
addr	.\omap.c	/^    target_phys_addr_t addr[2];$/;"	m	struct:omap_dma_channel_s	file:
addr	.\omap_i2c.c	/^    uint16_t addr[2];$/;"	m	struct:omap_i2c_s	file:
addr	.\pci.h	/^    uint32_t addr; \/* current PCI mapping address. -1 means not mapped *\/$/;"	m	struct:PCIIORegion
addr	.\ppc405_uc.c	/^    uint32_t addr;$/;"	m	struct:ppc4xx_ebc_t	file:
addr	.\ppc405_uc.c	/^    uint32_t addr;$/;"	m	struct:ppc4xx_sdram_t	file:
addr	.\tcx.c	/^    target_phys_addr_t addr;$/;"	m	struct:TCXState	file:
addr	.\usb.h	/^    uint8_t addr;$/;"	m	struct:USBDevice
addr_shift	.\nand.c	/^    int page_shift, oob_shift, erase_shift, addr_shift;$/;"	m	struct:nand_flash_s	file:
addr_valid	.\omap.h	/^        int (*addr_valid)(struct omap_mpu_state_s *s,$/;"	m	struct:omap_mpu_state_s::omap_dma_port_if_s
addrbits	.\eeprom93xx.c	/^    uint8_t  addrbits;$/;"	m	struct:_eeprom_t	file:
address	.\eeprom93xx.c	/^    uint8_t  address;$/;"	m	struct:_eeprom_t	file:
address	.\fmopl.h	/^	UINT8 address;		\/* address register                  *\/$/;"	m	struct:fm_opl_f
address	.\i2c.h	/^    int address;$/;"	m	struct:i2c_slave
address	.\mips_malta.c	/^  uint8_t address;$/;"	m	struct:_eeprom24c0x_t	file:
address	.\rtl8139.c	/^    uint8_t  address;$/;"	m	struct:EEprom9346	file:
address	.\tc58128.c	/^    uint32_t address;$/;"	m	struct:__anon120	file:
address_cycle	.\tc58128.c	/^    uint8_t address_cycle;$/;"	m	struct:__anon120	file:
addrlen	.\nand.c	/^    int addrlen;$/;"	m	struct:nand_flash_s	file:
adlib_callback	.\adlib.c	/^static void adlib_callback (void *opaque, int free)$/;"	f	file:
adlib_kill_timers	.\adlib.c	/^static void adlib_kill_timers (AdlibState *s)$/;"	f	file:
adlib_stop_opl_timer	.\adlib.c	/^static void adlib_stop_opl_timer (AdlibState *s, size_t n)$/;"	f	file:
ads7846	.\spitz.c	/^static struct ads7846_state_s *ads7846;$/;"	v	typeref:struct:ads7846_state_s	file:
ads7846_iid	.\ads7846.c	/^static int ads7846_iid = 0;$/;"	v	file:
ads7846_init	.\ads7846.c	/^struct ads7846_state_s *ads7846_init(qemu_irq penirq)$/;"	f
ads7846_int_update	.\ads7846.c	/^static void ads7846_int_update(struct ads7846_state_s *s)$/;"	f	file:
ads7846_load	.\ads7846.c	/^static int ads7846_load(QEMUFile *f, void *opaque, int version_id)$/;"	f	file:
ads7846_read	.\ads7846.c	/^uint32_t ads7846_read(void *opaque)$/;"	f
ads7846_save	.\ads7846.c	/^static void ads7846_save(QEMUFile *f, void *opaque)$/;"	f	file:
ads7846_state_s	.\ads7846.c	/^struct ads7846_state_s {$/;"	s	file:
ads7846_ts_event	.\ads7846.c	/^static void ads7846_ts_event(void *opaque,$/;"	f	file:
ads7846_write	.\ads7846.c	/^void ads7846_write(void *opaque, uint32_t value)$/;"	f
ads_en	.\spitz.c	/^static int lcd_en, ads_en, max_en;$/;"	v	file:
ae_level	.\omap_mmc.c	/^    int ae_level;$/;"	m	struct:omap_mmc_s	file:
af_level	.\omap_mmc.c	/^    int af_level;$/;"	m	struct:omap_mmc_s	file:
afsel	.\pl061.c	/^    uint8_t afsel;$/;"	m	struct:__anon56	file:
aiocb	.\ide.c	/^    BlockDriverAIOCB *aiocb;$/;"	m	struct:BMDMAState	file:
aiocb	.\scsi-disk.c	/^    BlockDriverAIOCB *aiocb;$/;"	m	struct:SCSIRequest	file:
aiocb	.\scsi-generic.c	/^    BlockDriverAIOCB *aiocb;$/;"	m	struct:SCSIRequest	file:
akita	.\spitz.c	/^enum spitz_model_e { spitz, akita, borzoi, terrier };$/;"	e	enum:spitz_model_e	file:
akita_init	.\spitz.c	/^static void akita_init(int ram_size, int vga_ram_size,$/;"	f	file:
akitapda_machine	.\spitz.c	/^QEMUMachine akitapda_machine = {$/;"	v
alarm	.\m48t59.c	/^    time_t   alarm;$/;"	m	struct:m48t59_t	file:
alarm	.\omap.c	/^    qemu_irq alarm;$/;"	m	struct:omap_rtc_s	file:
alarm_cb	.\m48t59.c	/^static void alarm_cb (void *opaque)$/;"	f	file:
alarm_ti	.\omap.c	/^    time_t alarm_ti;$/;"	m	struct:omap_rtc_s	file:
alarm_tm	.\omap.c	/^    struct tm alarm_tm;$/;"	m	struct:omap_rtc_s	typeref:struct:omap_rtc_s::tm	file:
alc	.\wm8750.c	/^    uint8_t diff[2], pol, ds, monomix[2], alc, mute;$/;"	m	struct:wm8750_s	file:
ale	.\nand.c	/^    int cle, ale, ce, wp, gnd;$/;"	m	struct:nand_flash_s	file:
alias	.\omap1_clk.c	/^    const char *alias;$/;"	m	struct:clk	file:
align	.\pxa2xx_dma.c	/^    uint32_t align;$/;"	m	struct:pxa2xx_dma_state_s	file:
align	.\sb16.c	/^    int align;$/;"	m	struct:SB16State	file:
alloc	.\omap.c	/^    uint16_t alloc;$/;"	m	struct:omap_tipb_bridge_s	file:
allocated	.\smc91c111.c	/^    int allocated;$/;"	m	struct:__anon103	file:
alrm_timer	.\m48t59.c	/^    struct QEMUTimer *alrm_timer;$/;"	m	struct:m48t59_t	typeref:struct:m48t59_t::QEMUTimer	file:
alt_irq_func	.\i8259.c	/^    SetIRQFunc *alt_irq_func;$/;"	m	struct:PicState2	file:
alt_irq_opaque	.\i8259.c	/^    void *alt_irq_opaque;$/;"	m	struct:PicState2	file:
ams	.\fmopl.c	/^static INT32 ams;$/;"	v	file:
ams	.\fmopl.h	/^	UINT8 ams;		\/* ams flag                            *\/$/;"	m	struct:fm_opl_slot
amsCnt	.\fmopl.h	/^	INT32 amsCnt;$/;"	m	struct:fm_opl_f
amsIncr	.\fmopl.c	/^static INT32 amsIncr;$/;"	v	file:
amsIncr	.\fmopl.h	/^	INT32 amsIncr;$/;"	m	struct:fm_opl_f
ams_table	.\fmopl.c	/^INT32  *ams_table;$/;"	v
ams_table	.\fmopl.h	/^	INT32 *ams_table;$/;"	m	struct:fm_opl_f
an5206_init	.\an5206.c	/^static void an5206_init(int ram_size, int vga_ram_size,$/;"	f	file:
an5206_machine	.\an5206.c	/^QEMUMachine an5206_machine = {$/;"	v
anh	.\cuda.c	/^    uint8_t anh;    \/* A-side data, no handshake *\/$/;"	m	struct:CUDAState	file:
apb_config_read	.\apb_pci.c	/^static CPUReadMemoryFunc *apb_config_read[] = {$/;"	v	file:
apb_config_readl	.\apb_pci.c	/^static uint32_t apb_config_readl (void *opaque,$/;"	f	file:
apb_config_write	.\apb_pci.c	/^static CPUWriteMemoryFunc *apb_config_write[] = {$/;"	v	file:
apb_config_writel	.\apb_pci.c	/^static void apb_config_writel (void *opaque, target_phys_addr_t addr,$/;"	f	file:
api_ck	.\omap1_clk.c	/^static struct clk api_ck = {$/;"	v	typeref:struct:clk	file:
apic_accept_pic_intr	.\apic.c	/^int apic_accept_pic_intr(CPUState *env)$/;"	f
apic_bus_deliver	.\apic.c	/^static void apic_bus_deliver(const uint32_t *deliver_bitmask,$/;"	f	file:
apic_deliver	.\apic.c	/^static void apic_deliver(APICState *s, uint8_t dest, uint8_t dest_mode,$/;"	f	file:
apic_eoi	.\apic.c	/^static void apic_eoi(APICState *s)$/;"	f	file:
apic_get_arb_pri	.\apic.c	/^static int apic_get_arb_pri(APICState *s)$/;"	f	file:
apic_get_current_count	.\apic.c	/^static uint32_t apic_get_current_count(APICState *s)$/;"	f	file:
apic_get_delivery_bitmask	.\apic.c	/^static void apic_get_delivery_bitmask(uint32_t *deliver_bitmask,$/;"	f	file:
apic_get_interrupt	.\apic.c	/^int apic_get_interrupt(CPUState *env)$/;"	f
apic_get_ppr	.\apic.c	/^static int apic_get_ppr(APICState *s)$/;"	f	file:
apic_init	.\apic.c	/^int apic_init(CPUState *env)$/;"	f
apic_init_ipi	.\apic.c	/^static void apic_init_ipi(APICState *s)$/;"	f	file:
apic_io_memory	.\apic.c	/^static int apic_io_memory;$/;"	v	file:
apic_load	.\apic.c	/^static int apic_load(QEMUFile *f, void *opaque, int version_id)$/;"	f	file:
apic_mem_read	.\apic.c	/^static CPUReadMemoryFunc *apic_mem_read[3] = {$/;"	v	file:
apic_mem_readb	.\apic.c	/^static uint32_t apic_mem_readb(void *opaque, target_phys_addr_t addr)$/;"	f	file:
apic_mem_readl	.\apic.c	/^static uint32_t apic_mem_readl(void *opaque, target_phys_addr_t addr)$/;"	f	file:
apic_mem_readw	.\apic.c	/^static uint32_t apic_mem_readw(void *opaque, target_phys_addr_t addr)$/;"	f	file:
apic_mem_write	.\apic.c	/^static CPUWriteMemoryFunc *apic_mem_write[3] = {$/;"	v	file:
apic_mem_writeb	.\apic.c	/^static void apic_mem_writeb(void *opaque, target_phys_addr_t addr, uint32_t val)$/;"	f	file:
apic_mem_writel	.\apic.c	/^static void apic_mem_writel(void *opaque, target_phys_addr_t addr, uint32_t val)$/;"	f	file:
apic_mem_writew	.\apic.c	/^static void apic_mem_writew(void *opaque, target_phys_addr_t addr, uint32_t val)$/;"	f	file:
apic_reset	.\apic.c	/^static void apic_reset(void *opaque)$/;"	f	file:
apic_save	.\apic.c	/^static void apic_save(QEMUFile *f, void *opaque)$/;"	f	file:
apic_set_irq	.\apic.c	/^static void apic_set_irq(APICState *s, int vector_num, int trigger_mode)$/;"	f	file:
apic_startup	.\apic.c	/^static void apic_startup(APICState *s, int vector_num)$/;"	f	file:
apic_timer	.\apic.c	/^static void apic_timer(void *opaque)$/;"	f	file:
apic_timer_update	.\apic.c	/^static void apic_timer_update(APICState *s, int64_t current_time)$/;"	f	file:
apic_update_irq	.\apic.c	/^static void apic_update_irq(APICState *s)$/;"	f	file:
apicbase	.\apic.c	/^    uint32_t apicbase;$/;"	m	struct:APICState	file:
apll	.\omap1_clk.c	/^static struct clk apll = {$/;"	v	typeref:struct:clk	file:
apmc	.\acpi.c	/^    uint8_t apmc;$/;"	m	struct:PIIX4PMState	file:
apms	.\acpi.c	/^    uint8_t apms;$/;"	m	struct:PIIX4PMState	file:
ar	.\omap.c	/^    int ar;$/;"	m	struct:omap_mpu_timer_s	file:
arb_id	.\apic.c	/^    uint8_t arb_id;$/;"	m	struct:APICState	file:
arch	.\firmware_abi.h	/^    uint8_t  arch[0x10];$/;"	m	struct:ohwcfg_v3_t
arg	.\omap_mmc.c	/^    uint32_t arg;$/;"	m	struct:omap_mmc_s	file:
arg	.\pxa2xx_mmci.c	/^    uint32_t arg;$/;"	m	struct:pxa2xx_mmci_s	file:
arg	.\sd.h	/^    uint32_t arg;$/;"	m	struct:sd_request_s
arglen	.\ssi-sd.c	/^    int arglen;$/;"	m	struct:__anon108	file:
arm_ck	.\omap1_clk.c	/^static struct clk arm_ck = {$/;"	v	typeref:struct:clk	file:
arm_ckctl	.\omap.h	/^        uint16_t arm_ckctl;$/;"	m	struct:omap_mpu_state_s::__anon40
arm_ckout1	.\omap.h	/^        uint16_t arm_ckout1;$/;"	m	struct:omap_mpu_state_s::__anon40
arm_ewupct	.\omap.h	/^        uint16_t arm_ewupct;$/;"	m	struct:omap_mpu_state_s::__anon40
arm_gpio_ck	.\omap1_clk.c	/^static struct clk arm_gpio_ck = {$/;"	v	typeref:struct:clk	file:
arm_idlect1	.\omap.h	/^        uint16_t arm_idlect1;$/;"	m	struct:omap_mpu_state_s::__anon40
arm_idlect2	.\omap.h	/^        uint16_t arm_idlect2;$/;"	m	struct:omap_mpu_state_s::__anon40
arm_load_kernel	.\arm_boot.c	/^void arm_load_kernel(CPUState *env, int ram_size, const char *kernel_filename,$/;"	f
arm_pic_cpu_handler	.\arm_pic.c	/^static void arm_pic_cpu_handler(void *opaque, int irq, int level)$/;"	f	file:
arm_pic_init_cpu	.\arm_pic.c	/^qemu_irq *arm_pic_init_cpu(CPUState *env)$/;"	f
arm_rstct1	.\omap.h	/^        uint16_t arm_rstct1;$/;"	m	struct:omap_mpu_state_s::__anon40
arm_rstct2	.\omap.h	/^        uint16_t arm_rstct2;$/;"	m	struct:omap_mpu_state_s::__anon40
arm_sysctl_init	.\arm_sysctl.c	/^void arm_sysctl_init(uint32_t base, uint32_t sys_id)$/;"	f
arm_sysctl_read	.\arm_sysctl.c	/^static uint32_t arm_sysctl_read(void *opaque, target_phys_addr_t offset)$/;"	f	file:
arm_sysctl_readfn	.\arm_sysctl.c	/^static CPUReadMemoryFunc *arm_sysctl_readfn[] = {$/;"	v	file:
arm_sysctl_state	.\arm_sysctl.c	/^} arm_sysctl_state;$/;"	t	typeref:struct:__anon5	file:
arm_sysctl_write	.\arm_sysctl.c	/^static void arm_sysctl_write(void *opaque, target_phys_addr_t offset,$/;"	f	file:
arm_sysctl_writefn	.\arm_sysctl.c	/^static CPUWriteMemoryFunc *arm_sysctl_writefn[] = {$/;"	v	file:
arm_timer_init	.\arm_timer.c	/^static void *arm_timer_init(uint32_t freq, qemu_irq irq)$/;"	f	file:
arm_timer_read	.\arm_timer.c	/^static uint32_t arm_timer_read(void *opaque, target_phys_addr_t offset)$/;"	f	file:
arm_timer_recalibrate	.\arm_timer.c	/^static void arm_timer_recalibrate(arm_timer_state *s, int reload)$/;"	f	file:
arm_timer_state	.\arm_timer.c	/^} arm_timer_state;$/;"	t	typeref:struct:__anon6	file:
arm_timer_tick	.\arm_timer.c	/^static void arm_timer_tick(void *opaque)$/;"	f	file:
arm_timer_update	.\arm_timer.c	/^static void arm_timer_update(arm_timer_state *s)$/;"	f	file:
arm_timer_write	.\arm_timer.c	/^static void arm_timer_write(void *opaque, target_phys_addr_t offset,$/;"	f	file:
arminth_ck15xx	.\omap1_clk.c	/^static struct clk arminth_ck15xx = {$/;"	v	typeref:struct:clk	file:
arminth_ck16xx	.\omap1_clk.c	/^static struct clk arminth_ck16xx = {$/;"	v	typeref:struct:clk	file:
armper_ck	.\omap1_clk.c	/^static struct clk armper_ck = {$/;"	v	typeref:struct:clk	file:
armtim_ck	.\omap1_clk.c	/^static struct clk armtim_ck = {$/;"	v	typeref:struct:clk	file:
armv7m_bitband_init	.\armv7m.c	/^static void armv7m_bitband_init(void)$/;"	f	file:
armv7m_init	.\armv7m.c	/^qemu_irq *armv7m_init(int flash_size, int sram_size,$/;"	f
armv7m_nvic_acknowledge_irq	.\armv7m_nvic.c	/^int armv7m_nvic_acknowledge_irq(void *opaque)$/;"	f
armv7m_nvic_complete_irq	.\armv7m_nvic.c	/^void armv7m_nvic_complete_irq(void *opaque, int irq)$/;"	f
armv7m_nvic_init	.\armv7m_nvic.c	/^qemu_irq *armv7m_nvic_init(CPUState *env)$/;"	f
armv7m_nvic_set_pending	.\armv7m_nvic.c	/^void armv7m_nvic_set_pending(void *opaque, int irq)$/;"	f
armwdt_ck	.\omap1_clk.c	/^static struct clk armwdt_ck = {$/;"	v	typeref:struct:clk	file:
armxor_ck	.\omap1_clk.c	/^static struct clk armxor_ck = {$/;"	v	typeref:struct:clk	file:
asc	.\ide.c	/^    uint8_t asc;$/;"	m	struct:IDEState	file:
asserted	.\sh_intc.h	/^    int asserted; \/* emulates the interrupt signal line from device to intc *\/$/;"	m	struct:intc_source
async_buf	.\esp.c	/^    uint8_t *async_buf;$/;"	m	struct:ESPState	file:
async_complete	.\usb-ohci.c	/^    int async_complete;$/;"	m	struct:__anon123	file:
async_frame_addr	.\usb-uhci.c	/^    uint32_t async_frame_addr;$/;"	m	struct:UHCIState	file:
async_len	.\esp.c	/^    uint32_t async_len;$/;"	m	struct:ESPState	file:
async_qh	.\usb-uhci.c	/^    uint32_t async_qh;$/;"	m	struct:UHCIState	file:
async_td	.\usb-ohci.c	/^    uint32_t async_td;$/;"	m	struct:__anon123	file:
atapi_dma	.\ide.c	/^    int atapi_dma; \/* true if dma is requested for the packet cmd *\/$/;"	m	struct:IDEState	file:
atb_offset	.\ppc.c	/^    int64_t  atb_offset;   \/* Compensation                    *\/$/;"	m	struct:ppc_tb_t	file:
ats	.\adlib.c	/^    QEMUAudioTimeStamp ats;$/;"	m	struct:__anon2	file:
attach	.\pcmcia.h	/^    int (*attach)(void *state);$/;"	m	struct:pcmcia_card_s
attach	.\usb.h	/^    usb_attachfn attach;$/;"	m	struct:USBPort
attached	.\pcmcia.h	/^    int attached;$/;"	m	struct:pcmcia_socket_s
attr_base	.\ide.c	/^    uint32_t attr_base;$/;"	m	struct:md_s	file:
attr_base	.\pxa2xx_pcmcia.c	/^    target_phys_addr_t attr_base;$/;"	m	struct:pxa2xx_pcmcia_s	file:
attr_read	.\pcmcia.h	/^    uint8_t (*attr_read)(void *state, uint32_t address);$/;"	m	struct:pcmcia_card_s
attr_write	.\pcmcia.h	/^    void (*attr_write)(void *state, uint32_t address, uint8_t value);$/;"	m	struct:pcmcia_card_s
audio	.\tsc210x.c	/^    AudioState *audio;$/;"	m	struct:tsc210x_state_s	file:
audio_ctrl1	.\tsc210x.c	/^    uint16_t audio_ctrl1;$/;"	m	struct:tsc210x_state_s	file:
audio_ctrl2	.\tsc210x.c	/^    uint16_t audio_ctrl2;$/;"	m	struct:tsc210x_state_s	file:
audio_ctrl3	.\tsc210x.c	/^    uint16_t audio_ctrl3;$/;"	m	struct:tsc210x_state_s	file:
audio_free	.\sb16.c	/^    int audio_free;$/;"	m	struct:SB16State	file:
audio_init	.\mips_malta.c	/^static void audio_init (PCIBus *pci_bus)$/;"	f	file:
audio_init	.\pc.c	/^static void audio_init (PCIBus *pci_bus, qemu_irq *pic)$/;"	f	file:
auto_comp	.\omap.c	/^    int auto_comp;$/;"	m	struct:omap_rtc_s	file:
auto_eoi	.\i8259.c	/^    uint8_t auto_eoi;$/;"	m	struct:PicState	file:
auto_init	.\omap.c	/^    int auto_init;$/;"	m	struct:omap_dma_channel_s	file:
auto_init	.\omap.h	/^    unsigned char auto_init;$/;"	m	struct:omap_dma_lcd_channel_s
autopoll	.\cuda.c	/^    uint8_t autopoll;$/;"	m	struct:CUDAState	file:
aux1	.\slavio_misc.c	/^    uint8_t aux1, aux2;$/;"	m	struct:MiscState	file:
aux2	.\slavio_misc.c	/^    uint8_t aux1, aux2;$/;"	m	struct:MiscState	file:
aux_timer	.\sb16.c	/^static void aux_timer (void *opaque)$/;"	f	file:
aux_ts	.\sb16.c	/^    QEMUTimer *aux_ts;$/;"	m	struct:SB16State	file:
b	.\cuda.c	/^    uint8_t b;      \/* B-side data *\/$/;"	m	struct:CUDAState	file:
b	.\es1370.c	211;"	d	file:
b	.\es1370.c	229;"	d	file:
b	.\tcx.c	/^    uint8_t r[256], g[256], b[256];$/;"	m	struct:TCXState	file:
bChipCmdState	.\rtl8139.c	/^    uint8_t  bChipCmdState;$/;"	m	struct:RTL8139State	file:
bank	.\pxa2xx_gpio.c	/^    int bank;$/;"	m	struct:__anon82	file:
bank	.\smc91c111.c	/^    int bank;$/;"	m	struct:__anon103	file:
banks	.\omap.c	/^    struct omap_intr_handler_bank_s banks[];$/;"	m	struct:omap_intr_handler_s	typeref:struct:omap_intr_handler_s::omap_intr_handler_bank_s	file:
bap	.\ppc405_uc.c	/^    uint32_t bap[8];$/;"	m	struct:ppc4xx_ebc_t	file:
bareetraxfs_init	.\etraxfs.c	/^void bareetraxfs_init (int ram_size, int vga_ram_size,$/;"	f	file:
bareetraxfs_machine	.\etraxfs.c	/^QEMUMachine bareetraxfs_machine = {$/;"	v
base	.\arm_gic.c	/^    uint32_t base;$/;"	m	struct:gic_state	file:
base	.\arm_sysctl.c	/^    uint32_t base;$/;"	m	struct:__anon5	file:
base	.\arm_timer.c	/^    uint32_t base;$/;"	m	struct:__anon7	file:
base	.\arm_timer.c	/^    uint32_t base;$/;"	m	struct:__anon8	file:
base	.\dma.c	/^    uint16_t base[2];$/;"	m	struct:dma_regs	file:
base	.\integratorcp.c	/^    uint32_t base;$/;"	m	struct:__anon22	file:
base	.\integratorcp.c	/^  uint32_t base;$/;"	m	struct:icp_pic_state	file:
base	.\jazz_led.c	/^    target_phys_addr_t base;$/;"	m	struct:LedState	file:
base	.\mc146818rtc.c	/^    target_phys_addr_t base;$/;"	m	struct:RTCState	file:
base	.\omap.c	/^    target_phys_addr_t base;$/;"	m	struct:omap_dma_s	file:
base	.\omap.c	/^    target_phys_addr_t base;$/;"	m	struct:omap_gpio_s	file:
base	.\omap.c	/^    target_phys_addr_t base;$/;"	m	struct:omap_intr_handler_s	file:
base	.\omap.c	/^    target_phys_addr_t base;$/;"	m	struct:omap_lpg_s	file:
base	.\omap.c	/^    target_phys_addr_t base;$/;"	m	struct:omap_mcbsp_s	file:
base	.\omap.c	/^    target_phys_addr_t base;$/;"	m	struct:omap_mpu_timer_s	file:
base	.\omap.c	/^    target_phys_addr_t base;$/;"	m	struct:omap_mpuio_s	file:
base	.\omap.c	/^    target_phys_addr_t base;$/;"	m	struct:omap_rtc_s	file:
base	.\omap.c	/^    target_phys_addr_t base;$/;"	m	struct:omap_tipb_bridge_s	file:
base	.\omap.c	/^    target_phys_addr_t base;$/;"	m	struct:omap_uwire_s	file:
base	.\omap.h	/^        target_phys_addr_t base;$/;"	m	struct:omap_mpu_state_s::dpll_ctl_s
base	.\omap_i2c.c	/^    target_phys_addr_t base;$/;"	m	struct:omap_i2c_s	file:
base	.\omap_lcdc.c	/^    target_phys_addr_t base;$/;"	m	struct:omap_lcd_panel_s	file:
base	.\omap_mmc.c	/^    target_phys_addr_t base;$/;"	m	struct:omap_mmc_s	file:
base	.\parallel.c	/^    target_phys_addr_t base;$/;"	m	struct:ParallelState	file:
base	.\pckbd.c	/^    target_phys_addr_t base;$/;"	m	struct:KBDState	file:
base	.\pflash_cfi01.c	/^    target_ulong base;$/;"	m	struct:pflash_t	file:
base	.\pflash_cfi02.c	/^    target_phys_addr_t base;$/;"	m	struct:pflash_t	file:
base	.\pl011.c	/^    uint32_t base;$/;"	m	struct:__anon52	file:
base	.\pl022.c	/^    uint32_t base;$/;"	m	struct:__anon53	file:
base	.\pl031.c	/^    uint32_t base;$/;"	m	struct:__anon54	file:
base	.\pl050.c	/^    uint32_t base;$/;"	m	struct:__anon55	file:
base	.\pl061.c	/^    uint32_t base;$/;"	m	struct:__anon56	file:
base	.\pl080.c	/^    uint32_t base;$/;"	m	struct:__anon58	file:
base	.\pl110.c	/^    uint32_t base;$/;"	m	struct:__anon59	file:
base	.\pl181.c	/^    uint32_t base;$/;"	m	struct:__anon60	file:
base	.\pl190.c	/^    uint32_t base;$/;"	m	struct:__anon61	file:
base	.\ppc405_boards.c	/^    uint32_t base;$/;"	m	struct:ref405ep_fpga_t	file:
base	.\ppc405_boards.c	/^    uint32_t base;$/;"	m	struct:taihu_cpld_t	file:
base	.\ppc405_uc.c	/^    target_phys_addr_t base;$/;"	m	struct:ppc405_gpio_t	file:
base	.\ppc405_uc.c	/^    target_phys_addr_t base;$/;"	m	struct:ppc4xx_gpt_t	file:
base	.\ppc405_uc.c	/^    target_phys_addr_t base;$/;"	m	struct:ppc4xx_i2c_t	file:
base	.\ppc405_uc.c	/^    target_phys_addr_t base;$/;"	m	struct:ppc4xx_opba_t	file:
base	.\ppc4xx_devs.c	/^    target_phys_addr_t base;$/;"	m	struct:ppc4xx_mmio_t	file:
base	.\pxa.h	/^    target_phys_addr_t base;$/;"	m	struct:pxa2xx_i2s_s
base	.\pxa2xx.c	/^    target_phys_addr_t base;$/;"	m	struct:pxa2xx_fir_s	file:
base	.\pxa2xx.c	/^    target_phys_addr_t base;$/;"	m	struct:pxa2xx_i2c_s	file:
base	.\pxa2xx.c	/^    target_phys_addr_t base;$/;"	m	struct:pxa2xx_ssp_s	file:
base	.\pxa2xx_dma.c	/^    target_phys_addr_t base;$/;"	m	struct:pxa2xx_dma_state_s	file:
base	.\pxa2xx_gpio.c	/^    target_phys_addr_t base;$/;"	m	struct:pxa2xx_gpio_info_s	file:
base	.\pxa2xx_keypad.c	/^    target_phys_addr_t base;$/;"	m	struct:pxa2xx_keypad_s	file:
base	.\pxa2xx_lcd.c	/^    target_phys_addr_t base;$/;"	m	struct:pxa2xx_lcdc_s	file:
base	.\pxa2xx_mmci.c	/^    target_phys_addr_t base;$/;"	m	struct:pxa2xx_mmci_s	file:
base	.\pxa2xx_pic.c	/^    target_phys_addr_t base;$/;"	m	struct:pxa2xx_pic_state_s	file:
base	.\pxa2xx_timer.c	/^    target_phys_addr_t base;$/;"	m	struct:__anon86	file:
base	.\serial.c	/^    target_phys_addr_t base;$/;"	m	struct:SerialState	file:
base	.\sh_serial.c	/^    target_phys_addr_t base;$/;"	m	struct:__anon96	file:
base	.\sh_timer.c	/^    target_phys_addr_t base;$/;"	m	struct:__anon98	file:
base	.\smc91c111.c	/^    uint32_t base;$/;"	m	struct:__anon103	file:
base	.\stellaris.c	/^    uint32_t base;$/;"	m	struct:__anon110	file:
base	.\stellaris.c	/^    uint32_t base;$/;"	m	struct:__anon111	file:
base	.\stellaris.c	/^    uint32_t base;$/;"	m	struct:__anon112	file:
base	.\stellaris.c	/^    uint32_t base;$/;"	m	struct:gptm_state	file:
base	.\stellaris_enet.c	/^    uint32_t base;$/;"	m	struct:__anon115	file:
base	.\versatilepb.c	/^  uint32_t base;$/;"	m	struct:vpb_sic_state	file:
bcd	.\i8254.c	/^    uint8_t bcd; \/* not supported *\/$/;"	m	struct:PITChannelState	file:
bclk_1510	.\omap1_clk.c	/^static struct clk bclk_1510 = {$/;"	v	typeref:struct:clk	file:
bclk_16xx	.\omap1_clk.c	/^static struct clk bclk_16xx = {$/;"	v	typeref:struct:clk	file:
bclk_310	.\omap1_clk.c	/^static struct clk bclk_310 = {$/;"	v	typeref:struct:clk	file:
bcr	.\pcnet.c	/^    uint16_t bcr[32];$/;"	m	struct:PCNetState_st	file:
bcr	.\ppc405_uc.c	/^    uint32_t bcr[4];$/;"	m	struct:ppc4xx_sdram_t	file:
bcr	.\ppc405_uc.c	/^    uint32_t bcr[8];$/;"	m	struct:ppc4xx_ebc_t	file:
bdrv	.\nand.c	/^    BlockDriverState *bdrv;$/;"	m	struct:nand_flash_s	file:
bdrv	.\scsi-disk.c	/^    BlockDriverState *bdrv;$/;"	m	struct:SCSIDeviceState	file:
bdrv	.\scsi-generic.c	/^    BlockDriverState *bdrv;$/;"	m	struct:SCSIDeviceState	file:
bdrv	.\sd.c	/^    BlockDriverState *bdrv;$/;"	m	struct:SDState	file:
be	.\usb-ohci.c	/^    uint32_t be;$/;"	m	struct:ohci_iso_td	file:
be	.\usb-ohci.c	/^    uint32_t be;$/;"	m	struct:ohci_td	file:
bear	.\ppc405_uc.c	/^    uint32_t bear;$/;"	m	struct:ppc4xx_ebc_t	file:
bear	.\ppc405_uc.c	/^    uint32_t bear;$/;"	m	struct:ppc4xx_plb_t	file:
bear	.\ppc405_uc.c	/^    uint32_t bear;$/;"	m	struct:ppc4xx_pob_t	file:
bear	.\ppc405_uc.c	/^    uint32_t bear;$/;"	m	struct:ppc4xx_sdram_t	file:
besr	.\ppc405_uc.c	/^    uint32_t besr;$/;"	m	struct:ppc4xx_plb_t	file:
besr	.\ppc405_uc.c	/^    uint32_t besr[2];$/;"	m	struct:ppc4xx_pob_t	file:
besr0	.\ppc405_uc.c	/^    uint32_t besr0;$/;"	m	struct:ppc4xx_ebc_t	file:
besr0	.\ppc405_uc.c	/^    uint32_t besr0;$/;"	m	struct:ppc4xx_sdram_t	file:
besr1	.\ppc405_uc.c	/^    uint32_t besr1;$/;"	m	struct:ppc4xx_ebc_t	file:
besr1	.\ppc405_uc.c	/^    uint32_t besr1;$/;"	m	struct:ppc4xx_sdram_t	file:
bg1	.\mcf_uart.c	/^    uint8_t bg1;$/;"	m	struct:__anon33	file:
bg2	.\mcf_uart.c	/^    uint8_t bg2;$/;"	m	struct:__anon33	file:
bh	.\etraxfs_timer.c	/^	QEMUBH *bh;$/;"	m	struct:fs_timer_t	file:
bh	.\ptimer.c	/^    QEMUBH *bh;$/;"	m	struct:ptimer_state	file:
bi_baudrate	.\ppc405.h	/^    uint32_t bi_baudrate;$/;"	m	struct:ppc4xx_bd_info_t
bi_bootflags	.\ppc405.h	/^    uint32_t bi_bootflags;$/;"	m	struct:ppc4xx_bd_info_t
bi_busfreq	.\ppc405.h	/^    uint32_t bi_busfreq; \/* 0x30 *\/$/;"	m	struct:ppc4xx_bd_info_t
bi_enetaddr	.\ppc405.h	/^    uint8_t  bi_enetaddr[6];$/;"	m	struct:ppc4xx_bd_info_t
bi_ethspeed	.\ppc405.h	/^    uint16_t bi_ethspeed;$/;"	m	struct:ppc4xx_bd_info_t
bi_flashoffset	.\ppc405.h	/^    uint32_t bi_flashoffset; \/* 0x10 *\/$/;"	m	struct:ppc4xx_bd_info_t
bi_flashsize	.\ppc405.h	/^    uint32_t bi_flashsize;$/;"	m	struct:ppc4xx_bd_info_t
bi_flashstart	.\ppc405.h	/^    uint32_t bi_flashstart;$/;"	m	struct:ppc4xx_bd_info_t
bi_iic_fast	.\ppc405.h	/^    uint32_t bi_iic_fast[2];$/;"	m	struct:ppc4xx_bd_info_t
bi_intfreq	.\ppc405.h	/^    uint32_t bi_intfreq;$/;"	m	struct:ppc4xx_bd_info_t
bi_ipaddr	.\ppc405.h	/^    uint32_t bi_ipaddr; \/* 0x20 *\/$/;"	m	struct:ppc4xx_bd_info_t
bi_memsize	.\ppc405.h	/^    uint32_t bi_memsize;$/;"	m	struct:ppc4xx_bd_info_t
bi_memstart	.\ppc405.h	/^    uint32_t bi_memstart;$/;"	m	struct:ppc4xx_bd_info_t
bi_opbfreq	.\ppc405.h	/^    uint32_t bi_opbfreq;$/;"	m	struct:ppc4xx_bd_info_t
bi_pci_busfreq	.\ppc405.h	/^    uint32_t bi_pci_busfreq;$/;"	m	struct:ppc4xx_bd_info_t
bi_pci_enetaddr	.\ppc405.h	/^    uint8_t  bi_pci_enetaddr[6];$/;"	m	struct:ppc4xx_bd_info_t
bi_pci_enetaddr2	.\ppc405.h	/^    uint32_t bi_pci_enetaddr2[6];$/;"	m	struct:ppc4xx_bd_info_t
bi_plb_busfreq	.\ppc405.h	/^    uint32_t bi_plb_busfreq;$/;"	m	struct:ppc4xx_bd_info_t
bi_procfreq	.\ppc405.h	/^    uint32_t bi_procfreq;$/;"	m	struct:ppc4xx_bd_info_t
bi_r_version	.\ppc405.h	/^    uint8_t  bi_r_version[32];$/;"	m	struct:ppc4xx_bd_info_t
bi_s_version	.\ppc405.h	/^    uint8_t  bi_s_version[4];$/;"	m	struct:ppc4xx_bd_info_t
bi_sramsize	.\ppc405.h	/^    uint32_t bi_sramsize;$/;"	m	struct:ppc4xx_bd_info_t
bi_sramstart	.\ppc405.h	/^    uint32_t bi_sramstart;$/;"	m	struct:ppc4xx_bd_info_t
bitband_addr	.\armv7m.c	/^static inline uint32_t bitband_addr(uint32_t addr)$/;"	f	file:
bitband_readb	.\armv7m.c	/^static uint32_t bitband_readb(void *opaque, target_phys_addr_t offset)$/;"	f	file:
bitband_readfn	.\armv7m.c	/^static CPUReadMemoryFunc *bitband_readfn[] = {$/;"	v	file:
bitband_readl	.\armv7m.c	/^static uint32_t bitband_readl(void *opaque, target_phys_addr_t offset)$/;"	f	file:
bitband_readw	.\armv7m.c	/^static uint32_t bitband_readw(void *opaque, target_phys_addr_t offset)$/;"	f	file:
bitband_writeb	.\armv7m.c	/^static void bitband_writeb(void *opaque, target_phys_addr_t offset,$/;"	f	file:
bitband_writefn	.\armv7m.c	/^static CPUWriteMemoryFunc *bitband_writefn[] = {$/;"	v	file:
bitband_writel	.\armv7m.c	/^static void bitband_writel(void *opaque, target_phys_addr_t offset,$/;"	f	file:
bitband_writew	.\armv7m.c	/^static void bitband_writew(void *opaque, target_phys_addr_t offset,$/;"	f	file:
bitmask	.\pl022.c	/^    uint32_t bitmask;$/;"	m	struct:__anon53	file:
bl_intensity	.\spitz.c	/^static int bl_intensity, bl_power;$/;"	v	file:
bl_power	.\spitz.c	/^static int bl_intensity, bl_power;$/;"	v	file:
blen	.\omap_mmc.c	/^    uint16_t blen;$/;"	m	struct:omap_mmc_s	file:
blen_counter	.\omap_mmc.c	/^    uint16_t blen_counter;$/;"	m	struct:omap_mmc_s	file:
blk_erase	.\nand.c	/^    void (*blk_erase)(struct nand_flash_s *s);$/;"	m	struct:nand_flash_s	file:
blk_len	.\sd.c	/^    int blk_len;$/;"	m	struct:SDState	file:
blk_load	.\nand.c	/^    void (*blk_load)(struct nand_flash_s *s, uint32_t addr, int offset);$/;"	m	struct:nand_flash_s	file:
blk_write	.\nand.c	/^    void (*blk_write)(struct nand_flash_s *s);$/;"	m	struct:nand_flash_s	file:
blk_written	.\sd.c	/^    int blk_written;$/;"	m	struct:SDState	file:
blklen	.\pxa2xx_mmci.c	/^    int blklen;$/;"	m	struct:pxa2xx_mmci_s	file:
block_fnum	.\fmopl.h	/^	UINT32  block_fnum;	\/* block+fnum      :                   *\/$/;"	m	struct:fm_opl_channel
block_size	.\sb16.c	/^    int block_size;$/;"	m	struct:SB16State	file:
blocksize	.\scsi-generic.c	/^    int blocksize;$/;"	m	struct:SCSIDeviceState	file:
bmdma	.\ide.c	/^    BMDMAState bmdma[2];$/;"	m	struct:PCIIDEState	file:
bmdma	.\ide.c	/^    struct BMDMAState *bmdma;$/;"	m	struct:IDEState	typeref:struct:IDEState::BMDMAState	file:
bmdma_addr_readl	.\ide.c	/^static uint32_t bmdma_addr_readl(void *opaque, uint32_t addr)$/;"	f	file:
bmdma_addr_writel	.\ide.c	/^static void bmdma_addr_writel(void *opaque, uint32_t addr, uint32_t val)$/;"	f	file:
bmdma_cmd_writeb	.\ide.c	/^static void bmdma_cmd_writeb(void *opaque, uint32_t addr, uint32_t val)$/;"	f	file:
bmdma_map	.\ide.c	/^static void bmdma_map(PCIDevice *pci_dev, int region_num,$/;"	f	file:
bmdma_readb	.\ide.c	/^static uint32_t bmdma_readb(void *opaque, uint32_t addr)$/;"	f	file:
bmdma_writeb	.\ide.c	/^static void bmdma_writeb(void *opaque, uint32_t addr, uint32_t val)$/;"	f	file:
board	.\stellaris.c	/^    stellaris_board_info *board;$/;"	m	struct:__anon110	file:
bochs_bios_init	.\pc.c	/^static void bochs_bios_init(void)$/;"	f	file:
bochs_bios_write	.\pc.c	/^static void bochs_bios_write(void *opaque, uint32_t addr, uint32_t val)$/;"	f	file:
bool	.\eepro100.c	/^typedef unsigned char bool;$/;"	t	file:
boot	.\ppc405_uc.c	/^    uint32_t boot;$/;"	m	struct:ppc405ep_cpc_t	file:
boot_cpu	.\firmware_abi.h	/^    uint8_t  boot_cpu;$/;"	m	struct:ohwcfg_v3_t
boot_device2nibble	.\pc.c	/^static int boot_device2nibble(char boot_device)$/;"	f	file:
boot_devices	.\firmware_abi.h	/^    uint8_t  boot_devices[0x10];$/;"	m	struct:ohwcfg_v3_t
boot_ind	.\ide.c	/^	uint8_t boot_ind;		\/* 0x80 - active *\/$/;"	m	struct:partition	file:
bootloader	.\arm_boot.c	/^static uint32_t bootloader[] = {$/;"	v	file:
bootsel	.\fdc.c	/^    uint8_t bootsel;$/;"	m	struct:fdctrl_t	file:
borzoi	.\spitz.c	/^enum spitz_model_e { spitz, akita, borzoi, terrier };$/;"	e	enum:spitz_model_e	file:
borzoi_init	.\spitz.c	/^static void borzoi_init(int ram_size, int vga_ram_size,$/;"	f	file:
borzoipda_machine	.\spitz.c	/^QEMUMachine borzoipda_machine = {$/;"	v
boundary	.\eepro100.c	/^    uint8_t boundary;$/;"	m	struct:__anon16	file:
boundary	.\ne2000.c	/^    uint8_t boundary;$/;"	m	struct:NE2000State	file:
bp	.\usb-ohci.c	/^    uint32_t bp;$/;"	m	struct:ohci_iso_td	file:
bpp	.\pl110.c	/^    enum pl110_bppmode bpp;$/;"	m	struct:__anon59	typeref:enum:__anon59::pl110_bppmode	file:
bpp	.\pxa2xx_lcd.c	/^    } bpp;$/;"	m	struct:pxa2xx_lcdc_s	typeref:enum:pxa2xx_lcdc_s::__anon84	file:
bpp	.\vmware_vga.c	/^    int bpp;$/;"	m	struct:vmsvga_cursor_definition_s	file:
bps	.\fdc.c	/^    uint16_t bps;             \/* Bytes per sector       *\/$/;"	m	struct:fdrive_t	file:
branch	.\pxa2xx_lcd.c	/^        target_phys_addr_t branch;$/;"	m	struct:pxa2xx_lcdc_s::__anon85	file:
brk	.\mips_malta.c	/^    uint32_t brk;$/;"	m	struct:__anon34	file:
brr	.\sh_serial.c	/^    uint8_t brr;$/;"	m	struct:__anon96	file:
brust_f1	.\omap.h	/^    unsigned char brust_f1;$/;"	m	struct:omap_dma_lcd_channel_s
brust_f2	.\omap.h	/^    unsigned char brust_f2;$/;"	m	struct:omap_dma_lcd_channel_s
bs	.\fdc.c	/^    BlockDriverState *bs;$/;"	m	struct:fdrive_t	file:
bs	.\ide.c	/^    BlockDriverState *bs;$/;"	m	struct:IDEState	file:
bs	.\omap.c	/^    int bs;$/;"	m	struct:omap_dma_channel_s	file:
bs	.\omap.h	/^    unsigned char bs;$/;"	m	struct:omap_dma_lcd_channel_s
bs	.\pflash_cfi01.c	/^    BlockDriverState *bs;$/;"	m	struct:pflash_t	file:
bs	.\pflash_cfi02.c	/^    BlockDriverState *bs;$/;"	m	struct:pflash_t	file:
bs	.\usb-msd.c	/^    BlockDriverState *bs;$/;"	m	struct:__anon122	file:
bscntr	.\pxa2xx_lcd.c	/^    uint8_t bscntr;$/;"	m	struct:pxa2xx_lcdc_s	file:
buf	.\scsi-generic.c	/^    uint8_t *buf;$/;"	m	struct:SCSIRequest	file:
buf	.\sd.c	/^    uint8_t *buf;$/;"	m	struct:SDState	file:
buf_len	.\scsi-disk.c	/^    int buf_len;$/;"	m	struct:SCSIRequest	file:
buf_length	.\pcnet.c	/^    int16_t buf_length;$/;"	m	struct:pcnet_RMD	file:
buffer	.\m48t59.c	/^    uint8_t *buffer;$/;"	m	struct:m48t59_t	file:
buffer	.\omap.c	/^    uint16_t buffer;$/;"	m	struct:omap_tipb_bridge_s	file:
buffer	.\pcnet.c	/^    uint8_t buffer[4096];$/;"	m	struct:PCNetState_st	file:
buffer	.\usb-uhci.c	/^    uint32_t buffer;$/;"	m	struct:UHCI_TD	file:
buflen	.\scsi-generic.c	/^    int buflen;$/;"	m	struct:SCSIRequest	file:
bufpos	.\adlib.c	/^    int bufpos;$/;"	m	struct:__anon2	file:
bulk_cur	.\usb-ohci.c	/^    uint32_t bulk_head, bulk_cur;$/;"	m	struct:__anon123	file:
bulk_head	.\usb-ohci.c	/^    uint32_t bulk_head, bulk_cur;$/;"	m	struct:__anon123	file:
burst	.\omap.c	/^    int burst[2];$/;"	m	struct:omap_dma_channel_s	file:
bus	.\omap_i2c.c	/^    i2c_bus *bus;$/;"	m	struct:omap_i2c_s	file:
bus	.\pci.c	/^    PCIBus *bus;$/;"	m	struct:__anon49	file:
bus	.\pci.h	/^    PCIBus *bus;$/;"	m	struct:PCIDevice
bus	.\pci_host.h	/^    PCIBus *bus;$/;"	m	struct:__anon50
bus	.\ppc_mac.h	/^    struct ADBBusState *bus;$/;"	m	struct:ADBDevice	typeref:struct:ADBDevice::ADBBusState
bus	.\pxa2xx.c	/^    i2c_bus *bus;$/;"	m	struct:pxa2xx_i2c_s	file:
bus	.\stellaris.c	/^    i2c_bus *bus;$/;"	m	struct:__anon111	file:
bus_num	.\pci.c	/^    int bus_num;$/;"	m	struct:PCIBus	file:
busy	.\mipsnet.c	/^    uint32_t busy;$/;"	m	struct:MIPSnetState	file:
busy	.\tsc210x.c	/^    int busy;$/;"	m	struct:tsc210x_state_s	file:
buttons	.\omap.c	/^    uint8_t buttons[5];$/;"	m	struct:omap_mpuio_s	file:
buttons	.\stellaris_input.c	/^    gamepad_button *buttons;$/;"	m	struct:__anon118	file:
buttons_state	.\adb.c	/^    int buttons_state, last_buttons_state;$/;"	m	struct:MouseState	file:
buttons_state	.\usb-hid.c	/^    int dx, dy, dz, buttons_state;$/;"	m	struct:USBMouseState	file:
buttons_state	.\usb-wacom.c	/^    int dx, dy, dz, buttons_state;$/;"	m	struct:USBWacomState	file:
bypass	.\pflash_cfi01.c	/^    int bypass;$/;"	m	struct:pflash_t	file:
bypass	.\pflash_cfi02.c	/^    int bypass;$/;"	m	struct:pflash_t	file:
bypp	.\vmware_vga.c	/^    int bypp;$/;"	m	struct:vmsvga_state_s	file:
bytes_per_second	.\sb16.c	/^    int bytes_per_second;$/;"	m	struct:SB16State	file:
bytesleft	.\pxa2xx_mmci.c	/^    int bytesleft;$/;"	m	struct:pxa2xx_mmci_s	file:
c6_to_8	.\vga_int.h	/^static inline int c6_to_8(int v)$/;"	f
calc_freq	.\es1370.c	/^    void (*calc_freq) (ES1370State *s, uint32_t ctl,$/;"	m	struct:chan_bits	file:
call_pal	.\alpha_palcode.c	/^void call_pal (CPUState *env)$/;"	f
call_pal	.\alpha_palcode.c	/^void call_pal (CPUState *env, int palcode)$/;"	f
cam_exclk	.\omap1_clk.c	/^static struct clk cam_exclk = {$/;"	v	typeref:struct:clk	file:
cam_lclk	.\omap1_clk.c	/^static struct clk cam_lclk = {$/;"	v	typeref:struct:clk	file:
cam_mclk	.\omap1_clk.c	/^static struct clk cam_mclk = {$/;"	v	typeref:struct:clk	file:
can_write	.\sb16.c	/^    int can_write;$/;"	m	struct:SB16State	file:
cancel_cb	.\usb.h	/^    USBCallback *cancel_cb;$/;"	m	struct:USBPacket
cancel_io	.\scsi-disk.h	/^    void (*cancel_io)(SCSIDevice *s, uint32_t tag);$/;"	m	struct:SCSIDevice
cancel_opaque	.\usb.h	/^    void *cancel_opaque;$/;"	m	struct:USBPacket
capacity	.\ds1225y.c	/^    uint32_t capacity;$/;"	m	struct:ds1225y_t	file:
caps_lock_mode	.\slavio_serial.c	/^    int e0_mode, led_mode, caps_lock_mode, num_lock_mode;$/;"	m	struct:ChannelState	file:
card	.\adlib.c	/^    QEMUSoundCard card;$/;"	m	struct:__anon2	file:
card	.\es1370.c	/^    QEMUSoundCard card;$/;"	m	struct:ES1370State	file:
card	.\ide.c	/^    struct pcmcia_card_s card;$/;"	m	struct:md_s	typeref:struct:md_s::pcmcia_card_s	file:
card	.\omap_mmc.c	/^    SDState *card;$/;"	m	struct:omap_mmc_s	file:
card	.\pcspk.c	/^    QEMUSoundCard card;$/;"	m	struct:__anon51	file:
card	.\pl181.c	/^    SDState *card;$/;"	m	struct:__anon60	file:
card	.\pxa2xx_mmci.c	/^    SDState *card;$/;"	m	struct:pxa2xx_mmci_s	file:
card	.\pxa2xx_pcmcia.c	/^    struct pcmcia_card_s *card;$/;"	m	struct:pxa2xx_pcmcia_s	typeref:struct:pxa2xx_pcmcia_s::pcmcia_card_s	file:
card	.\sb16.c	/^    QEMUSoundCard card;$/;"	m	struct:SB16State	file:
card	.\tsc210x.c	/^    QEMUSoundCard card;$/;"	m	struct:tsc210x_state_s	file:
card	.\vmware_vga.c	/^    PCIDevice card;$/;"	m	struct:pci_vmsvga_state_s	file:
card	.\wm8750.c	/^    QEMUSoundCard card;$/;"	m	struct:wm8750_s	file:
card_status	.\sd.c	/^    uint32_t card_status;$/;"	m	struct:SDState	file:
card_string	.\pcmcia.h	/^    const char *card_string;$/;"	m	struct:pcmcia_socket_s
carry	.\lsi53c895a.c	/^    int carry; \/* ??? Should this be an a visible register somewhere?  *\/$/;"	m	struct:__anon25	file:
cb	.\ppc.h	/^    clk_setup_cb cb;$/;"	m	struct:clk_setup_t
cbp	.\usb-ohci.c	/^    uint32_t cbp;$/;"	m	struct:ohci_td	file:
cbswap_32	.\vga.c	68;"	d	file:
ccntl0	.\lsi53c895a.c	/^    uint8_t ccntl0;$/;"	m	struct:__anon25	file:
ccntl1	.\lsi53c895a.c	/^    uint8_t ccntl1;$/;"	m	struct:__anon25	file:
ccr	.\pxa2xx_lcd.c	/^    uint32_t ccr;$/;"	m	struct:pxa2xx_lcdc_s	file:
ccr	.\sh7750.c	/^    uint32_t ccr;$/;"	m	struct:SH7750State	file:
ccr	.\spitz.c	/^    uint16_t ccr;$/;"	m	struct:scoop_info_s	file:
cd_data_to_raw	.\ide.c	/^static void cd_data_to_raw(uint8_t *buf, int lba)$/;"	f	file:
cd_irq	.\pxa2xx_pcmcia.c	/^    qemu_irq cd_irq;$/;"	m	struct:pxa2xx_pcmcia_s	file:
cd_read_sector	.\ide.c	/^static int cd_read_sector(BlockDriverState *bs, int lba, uint8_t *buf,$/;"	f	file:
cd_sector_size	.\ide.c	/^    int cd_sector_size;$/;"	m	struct:IDEState	file:
cdr	.\spitz.c	/^    uint16_t cdr;$/;"	m	struct:scoop_info_s	file:
cdrom_change_cb	.\ide.c	/^static void cdrom_change_cb(void *opaque)$/;"	f	file:
cdrom_read_toc	.\cdrom.c	/^int cdrom_read_toc(int nb_sectors, uint8_t *buf, int msf, int start_track)$/;"	f
cdrom_read_toc_raw	.\cdrom.c	/^int cdrom_read_toc_raw(int nb_sectors, uint8_t *buf, int msf, int session_num)$/;"	f
ce	.\nand.c	/^    int cle, ale, ce, wp, gnd;$/;"	m	struct:nand_flash_s	file:
cfg	.\ppc405_uc.c	/^    uint32_t cfg;$/;"	m	struct:ppc40x_mal_t	file:
cfg	.\ppc405_uc.c	/^    uint32_t cfg;$/;"	m	struct:ppc4xx_ebc_t	file:
cfg	.\ppc405_uc.c	/^    uint32_t cfg;$/;"	m	struct:ppc4xx_sdram_t	file:
cfgdata1	.\arm_sysctl.c	/^    uint32_t cfgdata1;$/;"	m	struct:__anon5	file:
cfgdata2	.\arm_sysctl.c	/^    uint32_t cfgdata2;$/;"	m	struct:__anon5	file:
cfi_len	.\pflash_cfi01.c	/^    uint8_t cfi_len;$/;"	m	struct:pflash_t	file:
cfi_len	.\pflash_cfi02.c	/^    uint8_t cfi_len;$/;"	m	struct:pflash_t	file:
cfi_table	.\pflash_cfi01.c	/^    uint8_t cfi_table[0x52];$/;"	m	struct:pflash_t	file:
cfi_table	.\pflash_cfi02.c	/^    uint8_t cfi_table[0x52];$/;"	m	struct:pflash_t	file:
ch	.\omap.c	/^    struct omap_dma_channel_s ch[16];$/;"	m	struct:omap_dma_s	typeref:struct:omap_dma_s::omap_dma_channel_s	file:
chan	.\es1370.c	/^    struct chan chan[NB_CHANNELS];$/;"	m	struct:ES1370State	typeref:struct:ES1370State::chan	file:
chan	.\es1370.c	/^struct chan {$/;"	s	file:
chan	.\pl080.c	/^    pl080_channel chan[PL080_MAX_CHANNELS];$/;"	m	struct:__anon58	file:
chan	.\pxa2xx_dma.c	/^    struct pxa2xx_dma_channel_s *chan;$/;"	m	struct:pxa2xx_dma_state_s	typeref:struct:pxa2xx_dma_state_s::pxa2xx_dma_channel_s	file:
chan_bits	.\es1370.c	/^struct chan_bits {$/;"	s	file:
changed	.\usb-hid.c	/^    int changed;$/;"	m	struct:USBHIDState	file:
channel_run	.\dma.c	/^static void channel_run (int ncont, int ichan)$/;"	f	file:
channels	.\dma.c	/^static int channels[8] = {-1, 2, 3, 1, -1, -1, -1, 0};$/;"	v	file:
channels	.\i8254.c	/^    PITChannelState channels[3];$/;"	m	struct:PITState	file:
channels	.\pxa2xx_dma.c	/^    int channels;$/;"	m	struct:pxa2xx_dma_state_s	file:
chans	.\omap.c	/^    int chans;$/;"	m	struct:omap_dma_s	file:
check_dirty	.\tcx.c	/^static inline int check_dirty(TCXState *ts, ram_addr_t page, ram_addr_t page24,$/;"	f	file:
check_irq	.\heathrow_pic.c	/^static inline int check_irq(HeathrowPIC *pic)$/;"	f	file:
check_reserved_space	.\gt64xxx.c	/^static void check_reserved_space (target_phys_addr_t *start,$/;"	f	file:
checksum	.\firmware_abi.h	/^    uint8_t checksum;$/;"	m	struct:OpenBIOS_nvpart_v1
checksum	.\firmware_abi.h	/^    uint8_t checksum;$/;"	m	struct:Sun_nvram
child1	.\omap1_clk.c	/^    struct clk *child1;$/;"	m	struct:clk	typeref:struct:clk::clk	file:
chip	.\omap.c	/^    struct uwire_slave_s *chip[4];$/;"	m	struct:omap_uwire_s	typeref:struct:omap_uwire_s::uwire_slave_s	file:
chip	.\tsc210x.c	/^    struct uwire_slave_s chip;$/;"	m	struct:tsc210x_state_s	typeref:struct:tsc210x_state_s::uwire_slave_s	file:
chip	.\vmware_vga.c	/^    struct vmsvga_state_s chip;$/;"	m	struct:pci_vmsvga_state_s	typeref:struct:pci_vmsvga_state_s::vmsvga_state_s	file:
chip_flags	.\rtl8139.c	/^enum chip_flags {$/;"	g	file:
chip_id	.\nand.c	/^    uint8_t manf_id, chip_id;$/;"	m	struct:nand_flash_s	file:
chip_t	.\rtl8139.c	/^} chip_t;$/;"	t	typeref:enum:__anon87	file:
chn	.\slavio_serial.c	/^    chn_id_t chn; \/\/ this channel, A (base+4) or B (base+0)$/;"	m	struct:ChannelState	file:
chn	.\slavio_serial.c	/^    struct ChannelState chn[2];$/;"	m	struct:SerialState	typeref:struct:SerialState::ChannelState	file:
chn_a	.\slavio_serial.c	/^    chn_a, chn_b,$/;"	e	enum:__anon99	file:
chn_b	.\slavio_serial.c	/^    chn_a, chn_b,$/;"	e	enum:__anon99	file:
chn_id_t	.\slavio_serial.c	/^} chn_id_t;$/;"	t	typeref:enum:__anon99	file:
chn_type_t	.\slavio_serial.c	/^} chn_type_t;$/;"	t	typeref:enum:__anon100	file:
chr	.\mcf_uart.c	/^    CharDriverState *chr;$/;"	m	struct:__anon33	file:
chr	.\parallel.c	/^    CharDriverState *chr;$/;"	m	struct:ParallelState	file:
chr	.\pl011.c	/^    CharDriverState *chr;$/;"	m	struct:__anon52	file:
chr	.\pxa2xx.c	/^    CharDriverState *chr;$/;"	m	struct:pxa2xx_fir_s	file:
chr	.\serial.c	/^    CharDriverState *chr;$/;"	m	struct:SerialState	file:
chr	.\sh_serial.c	/^    CharDriverState *chr;$/;"	m	struct:__anon96	file:
chr	.\slavio_serial.c	/^    CharDriverState *chr;$/;"	m	struct:ChannelState	file:
cid	.\sd.c	/^    uint8_t cid[16];$/;"	m	struct:SDState	file:
cirrus_addr_mask	.\cirrus_vga.c	/^    uint32_t cirrus_addr_mask;$/;"	m	struct:CirrusVGAState	file:
cirrus_bank_base	.\cirrus_vga.c	/^    uint32_t cirrus_bank_base[2];$/;"	m	struct:CirrusVGAState	file:
cirrus_bank_limit	.\cirrus_vga.c	/^    uint32_t cirrus_bank_limit[2];$/;"	m	struct:CirrusVGAState	file:
cirrus_bitblt_bgcol	.\cirrus_vga.c	/^static inline void cirrus_bitblt_bgcol(CirrusVGAState *s)$/;"	f	file:
cirrus_bitblt_common_patterncopy	.\cirrus_vga.c	/^static int cirrus_bitblt_common_patterncopy(CirrusVGAState * s,$/;"	f	file:
cirrus_bitblt_cputovideo	.\cirrus_vga.c	/^static int cirrus_bitblt_cputovideo(CirrusVGAState * s)$/;"	f	file:
cirrus_bitblt_cputovideo_next	.\cirrus_vga.c	/^static void cirrus_bitblt_cputovideo_next(CirrusVGAState * s)$/;"	f	file:
cirrus_bitblt_fgcol	.\cirrus_vga.c	/^static inline void cirrus_bitblt_fgcol(CirrusVGAState *s)$/;"	f	file:
cirrus_bitblt_fill_nop	.\cirrus_vga.c	/^static void cirrus_bitblt_fill_nop(CirrusVGAState *s,$/;"	f	file:
cirrus_bitblt_reset	.\cirrus_vga.c	/^static void cirrus_bitblt_reset(CirrusVGAState * s)$/;"	f	file:
cirrus_bitblt_rop_nop	.\cirrus_vga.c	/^static void cirrus_bitblt_rop_nop(CirrusVGAState *s,$/;"	f	file:
cirrus_bitblt_rop_t	.\cirrus_vga.c	/^typedef void (*cirrus_bitblt_rop_t) (struct CirrusVGAState *s,$/;"	t	file:
cirrus_bitblt_solidfill	.\cirrus_vga.c	/^static int cirrus_bitblt_solidfill(CirrusVGAState *s, int blt_rop)$/;"	f	file:
cirrus_bitblt_start	.\cirrus_vga.c	/^static void cirrus_bitblt_start(CirrusVGAState * s)$/;"	f	file:
cirrus_bitblt_videotocpu	.\cirrus_vga.c	/^static int cirrus_bitblt_videotocpu(CirrusVGAState * s)$/;"	f	file:
cirrus_bitblt_videotovideo	.\cirrus_vga.c	/^static int cirrus_bitblt_videotovideo(CirrusVGAState * s)$/;"	f	file:
cirrus_bitblt_videotovideo_copy	.\cirrus_vga.c	/^static int cirrus_bitblt_videotovideo_copy(CirrusVGAState * s)$/;"	f	file:
cirrus_bitblt_videotovideo_patterncopy	.\cirrus_vga.c	/^static int cirrus_bitblt_videotovideo_patterncopy(CirrusVGAState * s)$/;"	f	file:
cirrus_bkwd_rop	.\cirrus_vga.c	/^static const cirrus_bitblt_rop_t cirrus_bkwd_rop[16] = {$/;"	v	file:
cirrus_bkwd_transp_rop	.\cirrus_vga.c	/^static const cirrus_bitblt_rop_t cirrus_bkwd_transp_rop[16][2] = {$/;"	v	file:
cirrus_blt_bgcol	.\cirrus_vga.c	/^    uint32_t cirrus_blt_bgcol;$/;"	m	struct:CirrusVGAState	file:
cirrus_blt_dstaddr	.\cirrus_vga.c	/^    uint32_t cirrus_blt_dstaddr;$/;"	m	struct:CirrusVGAState	file:
cirrus_blt_dstpitch	.\cirrus_vga.c	/^    int cirrus_blt_dstpitch;$/;"	m	struct:CirrusVGAState	file:
cirrus_blt_fgcol	.\cirrus_vga.c	/^    uint32_t cirrus_blt_fgcol;$/;"	m	struct:CirrusVGAState	file:
cirrus_blt_height	.\cirrus_vga.c	/^    int cirrus_blt_height;$/;"	m	struct:CirrusVGAState	file:
cirrus_blt_mode	.\cirrus_vga.c	/^    uint8_t cirrus_blt_mode;$/;"	m	struct:CirrusVGAState	file:
cirrus_blt_modeext	.\cirrus_vga.c	/^    uint8_t cirrus_blt_modeext;$/;"	m	struct:CirrusVGAState	file:
cirrus_blt_pixelwidth	.\cirrus_vga.c	/^    int cirrus_blt_pixelwidth;$/;"	m	struct:CirrusVGAState	file:
cirrus_blt_srcaddr	.\cirrus_vga.c	/^    uint32_t cirrus_blt_srcaddr;$/;"	m	struct:CirrusVGAState	file:
cirrus_blt_srcpitch	.\cirrus_vga.c	/^    int cirrus_blt_srcpitch;$/;"	m	struct:CirrusVGAState	file:
cirrus_blt_width	.\cirrus_vga.c	/^    int cirrus_blt_width;$/;"	m	struct:CirrusVGAState	file:
cirrus_bltbuf	.\cirrus_vga.c	/^    uint8_t cirrus_bltbuf[CIRRUS_BLTBUFSIZE];$/;"	m	struct:CirrusVGAState	file:
cirrus_colorexpand	.\cirrus_vga.c	/^static const cirrus_bitblt_rop_t cirrus_colorexpand[16][4] = {$/;"	v	file:
cirrus_colorexpand_pattern	.\cirrus_vga.c	/^static const cirrus_bitblt_rop_t cirrus_colorexpand_pattern[16][4] = {$/;"	v	file:
cirrus_colorexpand_pattern_transp	.\cirrus_vga.c	/^static const cirrus_bitblt_rop_t cirrus_colorexpand_pattern_transp[16][4] = {$/;"	v	file:
cirrus_colorexpand_transp	.\cirrus_vga.c	/^static const cirrus_bitblt_rop_t cirrus_colorexpand_transp[16][4] = {$/;"	v	file:
cirrus_cursor_compute_yrange	.\cirrus_vga.c	/^static inline void cirrus_cursor_compute_yrange(CirrusVGAState *s)$/;"	f	file:
cirrus_cursor_draw_line	.\cirrus_vga.c	/^static void cirrus_cursor_draw_line(VGAState *s1, uint8_t *d1, int scr_y)$/;"	f	file:
cirrus_cursor_invalidate	.\cirrus_vga.c	/^static void cirrus_cursor_invalidate(VGAState *s1)$/;"	f	file:
cirrus_do_copy	.\cirrus_vga.c	/^static void cirrus_do_copy(CirrusVGAState *s, int dst, int src, int w, int h)$/;"	f	file:
cirrus_fill	.\cirrus_vga.c	/^static const cirrus_fill_t cirrus_fill[16][4] = {$/;"	v	file:
cirrus_fill_t	.\cirrus_vga.c	/^typedef void (*cirrus_fill_t)(struct CirrusVGAState *s,$/;"	t	file:
cirrus_fwd_rop	.\cirrus_vga.c	/^static const cirrus_bitblt_rop_t cirrus_fwd_rop[16] = {$/;"	v	file:
cirrus_fwd_transp_rop	.\cirrus_vga.c	/^static const cirrus_bitblt_rop_t cirrus_fwd_transp_rop[16][2] = {$/;"	v	file:
cirrus_get_bpp	.\cirrus_vga.c	/^static int cirrus_get_bpp(VGAState *s1)$/;"	f	file:
cirrus_get_bpp16_depth	.\cirrus_vga.c	/^static uint32_t cirrus_get_bpp16_depth(CirrusVGAState * s)$/;"	f	file:
cirrus_get_offsets	.\cirrus_vga.c	/^static void cirrus_get_offsets(VGAState *s1,$/;"	f	file:
cirrus_get_resolution	.\cirrus_vga.c	/^static void cirrus_get_resolution(VGAState *s, int *pwidth, int *pheight)$/;"	f	file:
cirrus_hidden_dac_data	.\cirrus_vga.c	/^    uint8_t cirrus_hidden_dac_data;$/;"	m	struct:CirrusVGAState	file:
cirrus_hidden_dac_lockindex	.\cirrus_vga.c	/^    uint8_t cirrus_hidden_dac_lockindex;$/;"	m	struct:CirrusVGAState	file:
cirrus_hidden_palette	.\cirrus_vga.c	/^    uint8_t cirrus_hidden_palette[48];$/;"	m	struct:CirrusVGAState	file:
cirrus_hook_read_cr	.\cirrus_vga.c	/^cirrus_hook_read_cr(CirrusVGAState * s, unsigned reg_index, int *reg_value)$/;"	f	file:
cirrus_hook_read_gr	.\cirrus_vga.c	/^cirrus_hook_read_gr(CirrusVGAState * s, unsigned reg_index, int *reg_value)$/;"	f	file:
cirrus_hook_read_palette	.\cirrus_vga.c	/^static int cirrus_hook_read_palette(CirrusVGAState * s, int *reg_value)$/;"	f	file:
cirrus_hook_read_sr	.\cirrus_vga.c	/^cirrus_hook_read_sr(CirrusVGAState * s, unsigned reg_index, int *reg_value)$/;"	f	file:
cirrus_hook_write_cr	.\cirrus_vga.c	/^cirrus_hook_write_cr(CirrusVGAState * s, unsigned reg_index, int reg_value)$/;"	f	file:
cirrus_hook_write_gr	.\cirrus_vga.c	/^cirrus_hook_write_gr(CirrusVGAState * s, unsigned reg_index, int reg_value)$/;"	f	file:
cirrus_hook_write_palette	.\cirrus_vga.c	/^static int cirrus_hook_write_palette(CirrusVGAState * s, int reg_value)$/;"	f	file:
cirrus_hook_write_sr	.\cirrus_vga.c	/^cirrus_hook_write_sr(CirrusVGAState * s, unsigned reg_index, int reg_value)$/;"	f	file:
cirrus_init_common	.\cirrus_vga.c	/^static void cirrus_init_common(CirrusVGAState * s, int device_id, int is_pci)$/;"	f	file:
cirrus_invalidate_region	.\cirrus_vga.c	/^static void cirrus_invalidate_region(CirrusVGAState * s, int off_begin,$/;"	f	file:
cirrus_linear_bitblt_io_addr	.\cirrus_vga.c	/^    int cirrus_linear_bitblt_io_addr;$/;"	m	struct:CirrusVGAState	file:
cirrus_linear_bitblt_read	.\cirrus_vga.c	/^static CPUReadMemoryFunc *cirrus_linear_bitblt_read[3] = {$/;"	v	file:
cirrus_linear_bitblt_readb	.\cirrus_vga.c	/^static uint32_t cirrus_linear_bitblt_readb(void *opaque, target_phys_addr_t addr)$/;"	f	file:
cirrus_linear_bitblt_readl	.\cirrus_vga.c	/^static uint32_t cirrus_linear_bitblt_readl(void *opaque, target_phys_addr_t addr)$/;"	f	file:
cirrus_linear_bitblt_readw	.\cirrus_vga.c	/^static uint32_t cirrus_linear_bitblt_readw(void *opaque, target_phys_addr_t addr)$/;"	f	file:
cirrus_linear_bitblt_write	.\cirrus_vga.c	/^static CPUWriteMemoryFunc *cirrus_linear_bitblt_write[3] = {$/;"	v	file:
cirrus_linear_bitblt_writeb	.\cirrus_vga.c	/^static void cirrus_linear_bitblt_writeb(void *opaque, target_phys_addr_t addr,$/;"	f	file:
cirrus_linear_bitblt_writel	.\cirrus_vga.c	/^static void cirrus_linear_bitblt_writel(void *opaque, target_phys_addr_t addr,$/;"	f	file:
cirrus_linear_bitblt_writew	.\cirrus_vga.c	/^static void cirrus_linear_bitblt_writew(void *opaque, target_phys_addr_t addr,$/;"	f	file:
cirrus_linear_io_addr	.\cirrus_vga.c	/^    int cirrus_linear_io_addr;$/;"	m	struct:CirrusVGAState	file:
cirrus_linear_mem_writeb	.\cirrus_vga.c	/^static void cirrus_linear_mem_writeb(void *opaque, target_phys_addr_t addr,$/;"	f	file:
cirrus_linear_mem_writel	.\cirrus_vga.c	/^static void cirrus_linear_mem_writel(void *opaque, target_phys_addr_t addr,$/;"	f	file:
cirrus_linear_mem_writew	.\cirrus_vga.c	/^static void cirrus_linear_mem_writew(void *opaque, target_phys_addr_t addr,$/;"	f	file:
cirrus_linear_read	.\cirrus_vga.c	/^static CPUReadMemoryFunc *cirrus_linear_read[3] = {$/;"	v	file:
cirrus_linear_readb	.\cirrus_vga.c	/^static uint32_t cirrus_linear_readb(void *opaque, target_phys_addr_t addr)$/;"	f	file:
cirrus_linear_readl	.\cirrus_vga.c	/^static uint32_t cirrus_linear_readl(void *opaque, target_phys_addr_t addr)$/;"	f	file:
cirrus_linear_readw	.\cirrus_vga.c	/^static uint32_t cirrus_linear_readw(void *opaque, target_phys_addr_t addr)$/;"	f	file:
cirrus_linear_write	.\cirrus_vga.c	/^    CPUWriteMemoryFunc **cirrus_linear_write;$/;"	m	struct:CirrusVGAState	file:
cirrus_linear_write	.\cirrus_vga.c	/^static CPUWriteMemoryFunc *cirrus_linear_write[3] = {$/;"	v	file:
cirrus_linear_writeb	.\cirrus_vga.c	/^static void cirrus_linear_writeb(void *opaque, target_phys_addr_t addr,$/;"	f	file:
cirrus_linear_writel	.\cirrus_vga.c	/^static void cirrus_linear_writel(void *opaque, target_phys_addr_t addr,$/;"	f	file:
cirrus_linear_writew	.\cirrus_vga.c	/^static void cirrus_linear_writew(void *opaque, target_phys_addr_t addr,$/;"	f	file:
cirrus_mem_writeb_mode4and5_16bpp	.\cirrus_vga.c	/^static void cirrus_mem_writeb_mode4and5_16bpp(CirrusVGAState * s,$/;"	f	file:
cirrus_mem_writeb_mode4and5_8bpp	.\cirrus_vga.c	/^static void cirrus_mem_writeb_mode4and5_8bpp(CirrusVGAState * s,$/;"	f	file:
cirrus_mmio_blt_read	.\cirrus_vga.c	/^static uint8_t cirrus_mmio_blt_read(CirrusVGAState * s, unsigned address)$/;"	f	file:
cirrus_mmio_blt_write	.\cirrus_vga.c	/^static void cirrus_mmio_blt_write(CirrusVGAState * s, unsigned address,$/;"	f	file:
cirrus_mmio_io_addr	.\cirrus_vga.c	/^    int cirrus_mmio_io_addr;$/;"	m	struct:CirrusVGAState	file:
cirrus_mmio_read	.\cirrus_vga.c	/^static CPUReadMemoryFunc *cirrus_mmio_read[3] = {$/;"	v	file:
cirrus_mmio_readb	.\cirrus_vga.c	/^static uint32_t cirrus_mmio_readb(void *opaque, target_phys_addr_t addr)$/;"	f	file:
cirrus_mmio_readl	.\cirrus_vga.c	/^static uint32_t cirrus_mmio_readl(void *opaque, target_phys_addr_t addr)$/;"	f	file:
cirrus_mmio_readw	.\cirrus_vga.c	/^static uint32_t cirrus_mmio_readw(void *opaque, target_phys_addr_t addr)$/;"	f	file:
cirrus_mmio_write	.\cirrus_vga.c	/^static CPUWriteMemoryFunc *cirrus_mmio_write[3] = {$/;"	v	file:
cirrus_mmio_writeb	.\cirrus_vga.c	/^static void cirrus_mmio_writeb(void *opaque, target_phys_addr_t addr,$/;"	f	file:
cirrus_mmio_writel	.\cirrus_vga.c	/^static void cirrus_mmio_writel(void *opaque, target_phys_addr_t addr,$/;"	f	file:
cirrus_mmio_writew	.\cirrus_vga.c	/^static void cirrus_mmio_writew(void *opaque, target_phys_addr_t addr,$/;"	f	file:
cirrus_patternfill	.\cirrus_vga.c	/^static const cirrus_bitblt_rop_t cirrus_patternfill[16][4] = {$/;"	v	file:
cirrus_pci_lfb_map	.\cirrus_vga.c	/^static void cirrus_pci_lfb_map(PCIDevice *d, int region_num,$/;"	f	file:
cirrus_pci_mmio_map	.\cirrus_vga.c	/^static void cirrus_pci_mmio_map(PCIDevice *d, int region_num,$/;"	f	file:
cirrus_read_hidden_dac	.\cirrus_vga.c	/^static void cirrus_read_hidden_dac(CirrusVGAState * s, int *reg_value)$/;"	f	file:
cirrus_rop	.\cirrus_vga.c	/^    cirrus_bitblt_rop_t cirrus_rop;$/;"	m	struct:CirrusVGAState	file:
cirrus_shadow_gr0	.\cirrus_vga.c	/^    uint8_t cirrus_shadow_gr0;$/;"	m	struct:CirrusVGAState	file:
cirrus_shadow_gr1	.\cirrus_vga.c	/^    uint8_t cirrus_shadow_gr1;$/;"	m	struct:CirrusVGAState	file:
cirrus_srccounter	.\cirrus_vga.c	/^    uint32_t cirrus_srccounter;$/;"	m	struct:CirrusVGAState	file:
cirrus_srcptr	.\cirrus_vga.c	/^    uint8_t *cirrus_srcptr;$/;"	m	struct:CirrusVGAState	file:
cirrus_srcptr_end	.\cirrus_vga.c	/^    uint8_t *cirrus_srcptr_end;$/;"	m	struct:CirrusVGAState	file:
cirrus_update_bank_ptr	.\cirrus_vga.c	/^static void cirrus_update_bank_ptr(CirrusVGAState * s, unsigned bank_index)$/;"	f	file:
cirrus_update_memory_access	.\cirrus_vga.c	/^static void cirrus_update_memory_access(CirrusVGAState *s)$/;"	f	file:
cirrus_vga	.\cirrus_vga.c	/^    CirrusVGAState cirrus_vga;$/;"	m	struct:PCICirrusVGAState	file:
cirrus_vga_load	.\cirrus_vga.c	/^static int cirrus_vga_load(QEMUFile *f, void *opaque, int version_id)$/;"	f	file:
cirrus_vga_mem_read	.\cirrus_vga.c	/^static CPUReadMemoryFunc *cirrus_vga_mem_read[3] = {$/;"	v	file:
cirrus_vga_mem_readb	.\cirrus_vga.c	/^static uint32_t cirrus_vga_mem_readb(void *opaque, target_phys_addr_t addr)$/;"	f	file:
cirrus_vga_mem_readl	.\cirrus_vga.c	/^static uint32_t cirrus_vga_mem_readl(void *opaque, target_phys_addr_t addr)$/;"	f	file:
cirrus_vga_mem_readw	.\cirrus_vga.c	/^static uint32_t cirrus_vga_mem_readw(void *opaque, target_phys_addr_t addr)$/;"	f	file:
cirrus_vga_mem_write	.\cirrus_vga.c	/^static CPUWriteMemoryFunc *cirrus_vga_mem_write[3] = {$/;"	v	file:
cirrus_vga_mem_writeb	.\cirrus_vga.c	/^static void cirrus_vga_mem_writeb(void *opaque, target_phys_addr_t addr,$/;"	f	file:
cirrus_vga_mem_writel	.\cirrus_vga.c	/^static void cirrus_vga_mem_writel(void *opaque, target_phys_addr_t addr, uint32_t val)$/;"	f	file:
cirrus_vga_mem_writew	.\cirrus_vga.c	/^static void cirrus_vga_mem_writew(void *opaque, target_phys_addr_t addr, uint32_t val)$/;"	f	file:
cirrus_vga_save	.\cirrus_vga.c	/^static void cirrus_vga_save(QEMUFile *f, void *opaque)$/;"	f	file:
cirrus_write_bitblt	.\cirrus_vga.c	/^static void cirrus_write_bitblt(CirrusVGAState * s, unsigned reg_value)$/;"	f	file:
cirrus_write_hidden_dac	.\cirrus_vga.c	/^static void cirrus_write_hidden_dac(CirrusVGAState * s, int reg_value)$/;"	f	file:
cis	.\pcmcia.h	/^    const uint8_t *cis;$/;"	m	struct:pcmcia_card_s
cis_len	.\pcmcia.h	/^    int cis_len;$/;"	m	struct:pcmcia_card_s
ck_48m	.\omap1_clk.c	/^static struct clk ck_48m = {$/;"	v	typeref:struct:clk	file:
ck_dpll1out	.\omap1_clk.c	/^static struct clk ck_dpll1out = {$/;"	v	typeref:struct:clk	file:
ck_ref	.\omap1_clk.c	/^static struct clk ck_ref = {$/;"	v	typeref:struct:clk	file:
class	.\pci.c	/^    uint16_t class;$/;"	m	struct:__anon48	file:
cle	.\nand.c	/^    int cle, ale, ce, wp, gnd;$/;"	m	struct:nand_flash_s	file:
clear_queue	.\slavio_serial.c	/^static void clear_queue(void *opaque)$/;"	f	file:
clk	.\omap.c	/^    QEMUTimer *clk;$/;"	m	struct:omap_rtc_s	file:
clk	.\omap.c	/^    int clk;$/;"	m	struct:omap_lpg_s	file:
clk	.\omap.c	/^    int clk;$/;"	m	struct:omap_mpuio_s	file:
clk	.\omap.c	/^    omap_clk clk;$/;"	m	struct:omap_dma_s	file:
clk	.\omap.c	/^    omap_clk clk;$/;"	m	struct:omap_mpu_timer_s	file:
clk	.\omap.h	/^        int clk;$/;"	m	struct:omap_mpu_state_s::__anon38
clk	.\omap.h	/^        omap_clk clk;$/;"	m	struct:omap_mpu_state_s::__anon39
clk	.\omap1_clk.c	/^struct clk {$/;"	s	file:
clk	.\omap_mmc.c	/^    omap_clk clk;$/;"	m	struct:omap_mmc_s	file:
clk	.\pl050.c	/^    uint32_t clk;$/;"	m	struct:__anon55	file:
clk	.\pxa.h	/^    uint32_t clk;$/;"	m	struct:pxa2xx_i2s_s
clk32k	.\omap1_clk.c	/^static struct clk clk32k = {$/;"	v	typeref:struct:clk	file:
clk_setup	.\ppc.h	/^static inline void clk_setup (clk_setup_t *clk, uint32_t freq)$/;"	f
clk_setup	.\ppc405_uc.c	/^    clk_setup_t clk_setup[PPC405CR_CLK_NB];$/;"	m	struct:ppc405cr_cpc_t	file:
clk_setup	.\ppc405_uc.c	/^    clk_setup_t clk_setup[PPC405EP_CLK_NB];$/;"	m	struct:ppc405ep_cpc_t	file:
clk_setup_cb	.\ppc.h	/^typedef void (*clk_setup_cb)(void *opaque, uint32_t freq);$/;"	t
clk_setup_t	.\ppc.h	/^struct clk_setup_t {$/;"	s
clk_setup_t	.\ppc.h	/^typedef struct clk_setup_t clk_setup_t;$/;"	t	typeref:struct:clk_setup_t
clkcfg	.\pxa.h	/^    uint32_t clkcfg;$/;"	m	struct:pxa2xx_state_s
clkdiv	.\ppc405_uc.c	/^    uint8_t clkdiv;$/;"	m	struct:ppc4xx_i2c_t	file:
clkm	.\omap.h	/^    } clkm;$/;"	m	struct:omap_mpu_state_s	typeref:struct:omap_mpu_state_s::__anon40
clkm1	.\omap1_clk.c	/^static struct clk clkm1 = {$/;"	v	typeref:struct:clk	file:
clkm2	.\omap1_clk.c	/^static struct clk clkm2 = {$/;"	v	typeref:struct:clk	file:
clkm3	.\omap1_clk.c	/^static struct clk clkm3 = {$/;"	v	typeref:struct:clk	file:
clkrt	.\pxa2xx_mmci.c	/^    uint32_t clkrt;$/;"	m	struct:pxa2xx_mmci_s	file:
clks	.\omap.h	/^    omap_clk clks;$/;"	m	struct:omap_mpu_state_s
clkvclr	.\stellaris.c	/^    uint32_t clkvclr;$/;"	m	struct:__anon110	file:
clock	.\fmopl.h	/^	int clock;			\/* master clock  (Hz)                *\/$/;"	m	struct:fm_opl_f
clock	.\pl181.c	/^    uint32_t clock;$/;"	m	struct:__anon60	file:
clock	.\pxa2xx_timer.c	/^    int32_t clock;$/;"	m	struct:__anon86	file:
clock	.\pxa2xx_timer.c	/^    int32_t clock;$/;"	m	struct:pxa2xx_timer4_s	file:
clock1_irq	.\sun4m.c	/^    int esp_irq, le_irq, clock_irq, clock1_irq;$/;"	m	struct:sun4d_hwdef	file:
clock1_irq	.\sun4m.c	/^    int intctl_g_intr, esp_irq, le_irq, clock_irq, clock1_irq;$/;"	m	struct:hwdef	file:
clock_enabled	.\rtl8139.c	/^    uint8_t  clock_enabled;$/;"	m	struct:RTL8139State	file:
clock_irq	.\sun4m.c	/^    int esp_irq, le_irq, clock_irq, clock1_irq;$/;"	m	struct:sun4d_hwdef	file:
clock_irq	.\sun4m.c	/^    int intctl_g_intr, esp_irq, le_irq, clock_irq, clock1_irq;$/;"	m	struct:hwdef	file:
clocking_scheme	.\omap.h	/^        int clocking_scheme;$/;"	m	struct:omap_mpu_state_s::__anon40
clr_reg	.\sh_intc.h	/^    unsigned long set_reg, clr_reg, reg_width, field_width;$/;"	m	struct:intc_prio_reg
clr_reg	.\sh_intc.h	/^    unsigned long set_reg, clr_reg, reg_width;$/;"	m	struct:intc_mask_reg
clr_rxint	.\slavio_serial.c	/^static inline void clr_rxint(ChannelState *s)$/;"	f	file:
clr_txint	.\slavio_serial.c	/^static inline void clr_txint(ChannelState *s)$/;"	f	file:
cluster_size	.\scsi-disk.c	/^    int cluster_size;$/;"	m	struct:SCSIDeviceState	file:
cm_auxosc	.\integratorcp.c	/^    uint32_t cm_auxosc;$/;"	m	struct:__anon21	file:
cm_base	.\pxa.h	/^    target_phys_addr_t cm_base;$/;"	m	struct:pxa2xx_state_s
cm_ctrl	.\integratorcp.c	/^    uint32_t cm_ctrl;$/;"	m	struct:__anon21	file:
cm_flags	.\integratorcp.c	/^    uint32_t cm_flags;$/;"	m	struct:__anon21	file:
cm_init	.\integratorcp.c	/^    uint32_t cm_init;$/;"	m	struct:__anon21	file:
cm_lock	.\integratorcp.c	/^    uint32_t cm_lock;$/;"	m	struct:__anon21	file:
cm_nvflags	.\integratorcp.c	/^    uint32_t cm_nvflags;$/;"	m	struct:__anon21	file:
cm_osc	.\integratorcp.c	/^    uint32_t cm_osc;$/;"	m	struct:__anon21	file:
cm_regs	.\pxa.h	/^    uint32_t cm_regs[4];$/;"	m	struct:pxa2xx_state_s
cm_sdram	.\integratorcp.c	/^    uint32_t cm_sdram;$/;"	m	struct:__anon21	file:
cmd	.\eepro100.c	/^    uint8_t cmd;$/;"	m	struct:__anon16	file:
cmd	.\ide.c	/^    uint8_t cmd;$/;"	m	struct:BMDMAState	file:
cmd	.\ide.c	/^    uint8_t cmd;$/;"	m	struct:IDEState	file:
cmd	.\nand.c	/^    uint32_t cmd, addr;$/;"	m	struct:nand_flash_s	file:
cmd	.\ne2000.c	/^    uint8_t cmd;$/;"	m	struct:NE2000State	file:
cmd	.\pflash_cfi01.c	/^    uint8_t cmd;$/;"	m	struct:pflash_t	file:
cmd	.\pflash_cfi02.c	/^    uint8_t cmd;$/;"	m	struct:pflash_t	file:
cmd	.\pl181.c	/^    uint32_t cmd;$/;"	m	struct:__anon60	file:
cmd	.\pxa2xx_dma.c	/^    uint32_t cmd;$/;"	m	struct:pxa2xx_dma_channel_s	file:
cmd	.\pxa2xx_mmci.c	/^    int cmd;$/;"	m	struct:pxa2xx_mmci_s	file:
cmd	.\sb16.c	/^    int cmd;$/;"	m	struct:SB16State	file:
cmd	.\scsi-generic.c	/^    uint8_t cmd[SCSI_CMD_BUF_SIZE];$/;"	m	struct:SCSIRequest	file:
cmd	.\sd.h	/^    uint8_t cmd;$/;"	m	struct:sd_request_s
cmd	.\ssd0323.c	/^    int cmd;$/;"	m	struct:__anon106	file:
cmd	.\ssi-sd.c	/^    int cmd;$/;"	m	struct:__anon108	file:
cmd	.\usb-msd.c	/^    uint8_t cmd[16];$/;"	m	struct:usb_msd_cbw	file:
cmd	.\usb-uhci.c	/^    uint16_t cmd; \/* cmd register *\/$/;"	m	struct:UHCIState	file:
cmd	.\vmware_vga.c	/^        } *cmd;$/;"	m	union:vmsvga_state_s::__anon128	typeref:struct:vmsvga_state_s::__anon128::__anon129	file:
cmd646_set_irq	.\ide.c	/^static void cmd646_set_irq(void *opaque, int channel, int level)$/;"	f	file:
cmd646_update_irq	.\ide.c	/^static void cmd646_update_irq(PCIIDEState *d)$/;"	f	file:
cmd_data	.\ssd0323.c	/^    int cmd_data[8];$/;"	m	struct:__anon106	file:
cmd_len	.\ssd0323.c	/^    int cmd_len;$/;"	m	struct:__anon106	file:
cmd_len	.\usb-msd.c	/^    uint8_t cmd_len;$/;"	m	struct:usb_msd_cbw	file:
cmd_state	.\ssd0303.c	/^    enum ssd0303_cmd cmd_state;$/;"	m	struct:__anon105	typeref:enum:__anon105::ssd0303_cmd	file:
cmdarg	.\pl181.c	/^    uint32_t cmdarg;$/;"	m	struct:__anon60	file:
cmdarg	.\ssi-sd.c	/^    uint8_t cmdarg[4];$/;"	m	struct:__anon108	file:
cmdat	.\pxa2xx_mmci.c	/^    uint32_t cmdat;$/;"	m	struct:pxa2xx_mmci_s	file:
cmdbuf	.\esp.c	/^    uint8_t cmdbuf[TI_BUFSZ];$/;"	m	struct:ESPState	file:
cmdcr	.\pxa2xx_lcd.c	/^    uint32_t cmdcr;$/;"	m	struct:pxa2xx_lcdc_s	file:
cmdlen	.\esp.c	/^    int cmdlen;$/;"	m	struct:ESPState	file:
cmdlen	.\scsi-generic.c	/^    int cmdlen;$/;"	m	struct:SCSIRequest	file:
cmdline	.\firmware_abi.h	/^    uint64_t cmdline;$/;"	m	struct:ohwcfg_v3_t
cmdline_size	.\firmware_abi.h	/^    uint64_t cmdline_size;$/;"	m	struct:ohwcfg_v3_t
cmdreq	.\pxa2xx_mmci.c	/^    int cmdreq;$/;"	m	struct:pxa2xx_mmci_s	file:
cmos_data	.\mc146818rtc.c	/^    uint8_t cmos_data[128];$/;"	m	struct:RTCState	file:
cmos_get_fd_drive_type	.\pc.c	/^static int cmos_get_fd_drive_type(int fd0)$/;"	f	file:
cmos_index	.\mc146818rtc.c	/^    uint8_t cmos_index;$/;"	m	struct:RTCState	file:
cmos_init	.\pc.c	/^static void cmos_init(int ram_size, const char *boot_device, BlockDriverState **hd_table)$/;"	f	file:
cmos_init_hd	.\pc.c	/^static void cmos_init_hd(int type_ofs, int info_ofs, BlockDriverState *hd)$/;"	f	file:
cmos_ioport_read	.\mc146818rtc.c	/^static uint32_t cmos_ioport_read(void *opaque, uint32_t addr)$/;"	f	file:
cmos_ioport_write	.\mc146818rtc.c	/^static void cmos_ioport_write(void *opaque, uint32_t addr, uint32_t data)$/;"	f	file:
cmos_mm_readb	.\mc146818rtc.c	/^static uint32_t cmos_mm_readb (void *opaque, target_phys_addr_t addr)$/;"	f	file:
cmos_mm_readl	.\mc146818rtc.c	/^static uint32_t cmos_mm_readl (void *opaque, target_phys_addr_t addr)$/;"	f	file:
cmos_mm_readw	.\mc146818rtc.c	/^static uint32_t cmos_mm_readw (void *opaque, target_phys_addr_t addr)$/;"	f	file:
cmos_mm_writeb	.\mc146818rtc.c	/^static void cmos_mm_writeb (void *opaque,$/;"	f	file:
cmos_mm_writel	.\mc146818rtc.c	/^static void cmos_mm_writel (void *opaque,$/;"	f	file:
cmos_mm_writew	.\mc146818rtc.c	/^static void cmos_mm_writew (void *opaque,$/;"	f	file:
cntl	.\ppc405_uc.c	/^    uint8_t cntl;$/;"	m	struct:ppc4xx_i2c_t	file:
codec	.\es1370.c	/^    uint32_t codec;$/;"	m	struct:ES1370State	file:
codec	.\omap.c	/^    struct i2s_codec_s *codec;$/;"	m	struct:omap_mcbsp_s	typeref:struct:omap_mcbsp_s::i2s_codec_s	file:
codec	.\tsc210x.c	/^    struct i2s_codec_s codec;$/;"	m	struct:tsc210x_state_s	typeref:struct:tsc210x_state_s::i2s_codec_s	file:
codec_in	.\pxa.h	/^    uint32_t (*codec_in)(void *);$/;"	m	struct:pxa2xx_i2s_s
codec_out	.\pxa.h	/^    void (*codec_out)(void *, uint32_t);$/;"	m	struct:pxa2xx_i2s_s
col	.\ssd0303.c	/^    int col;$/;"	m	struct:__anon105	file:
col	.\ssd0323.c	/^    int col;$/;"	m	struct:__anon106	file:
col_end	.\ssd0323.c	/^    int col_end;$/;"	m	struct:__anon106	file:
col_start	.\ssd0323.c	/^    int col_start;$/;"	m	struct:__anon106	file:
cold_start	.\omap.h	/^        int cold_start;$/;"	m	struct:omap_mpu_state_s::__anon40
color	.\omap.c	/^    uint32_t color;$/;"	m	struct:omap_dma_channel_s	file:
cols	.\omap.c	/^    uint8_t cols;$/;"	m	struct:omap_mpuio_s	file:
cols	.\pl110.c	/^    int cols;$/;"	m	struct:__anon59	file:
column	.\palm.c	/^    int column;$/;"	m	struct:__anon47	file:
column	.\pxa.h	/^    int column;$/;"	m	struct:keymap
com	.\max111x.c	/^    int inputs, com;$/;"	m	struct:max111x_s	file:
comadj	.\spitz.c	/^    int32_t comadj;$/;"	m	struct:sl_param_info	file:
comadj_keyword	.\spitz.c	/^    uint32_t comadj_keyword;$/;"	m	struct:sl_param_info	file:
command	.\dma.c	/^    uint8_t command;$/;"	m	struct:dma_cont	file:
command	.\eepro100.c	/^    uint16_t command;$/;"	m	struct:__anon11	file:
command	.\eepro100.c	/^    uint16_t command;$/;"	m	struct:__anon12	file:
command	.\eeprom93xx.c	/^    uint8_t  command;$/;"	m	struct:_eeprom_t	file:
command	.\max7310.c	/^    uint8_t command;$/;"	m	struct:max7310_s	file:
command	.\mips_malta.c	/^  uint8_t command;$/;"	m	struct:_eeprom24c0x_t	file:
command	.\pxa2xx_lcd.c	/^        uint32_t command;$/;"	m	struct:pxa2xx_lcdc_s::__anon85	file:
command	.\sb16.c	/^static void command (SB16State *s, uint8_t cmd)$/;"	f	file:
command	.\smbus.h	/^    uint8_t command;$/;"	m	struct:SMBusDevice
command	.\tsc210x.c	/^    uint16_t command, dav;$/;"	m	struct:tsc210x_state_s	file:
command_complete	.\lsi53c895a.c	/^    int command_complete;$/;"	m	struct:__anon25	file:
commands	.\eepro100.c	/^enum commands {$/;"	g	file:
common	.\ps2.c	/^    PS2State common;$/;"	m	struct:__anon79	file:
common	.\ps2.c	/^    PS2State common;$/;"	m	struct:__anon80	file:
common_base	.\pxa2xx_pcmcia.c	/^    target_phys_addr_t common_base;$/;"	m	struct:pxa2xx_pcmcia_s	file:
common_read	.\pcmcia.h	/^    uint16_t (*common_read)(void *state, uint32_t address);$/;"	m	struct:pcmcia_card_s
common_write	.\pcmcia.h	/^    void (*common_write)(void *state, uint32_t address, uint16_t value);$/;"	m	struct:pcmcia_card_s
comp	.\ppc405_uc.c	/^    uint32_t comp[5];$/;"	m	struct:ppc4xx_gpt_t	file:
comp_mode_ctrl	.\omap.h	/^    uint32_t comp_mode_ctrl[1];$/;"	m	struct:omap_mpu_state_s
comp_reg	.\omap.c	/^    int16_t comp_reg;$/;"	m	struct:omap_rtc_s	file:
compat1509	.\omap.h	/^    int compat1509;$/;"	m	struct:omap_mpu_state_s
complete	.\eepro100.c	/^    uint32_t complete;$/;"	m	struct:__anon13	file:
complete	.\sb16.c	/^static void complete (SB16State *s)$/;"	f	file:
complete_cb	.\usb.h	/^    USBCallback *complete_cb;$/;"	m	struct:USBPacket
complete_opaque	.\usb.h	/^    void *complete_opaque;$/;"	m	struct:USBPacket
completion	.\scsi-disk.c	/^    scsi_completionfn completion;$/;"	m	struct:SCSIDeviceState	file:
completion	.\scsi-generic.c	/^    scsi_completionfn completion;$/;"	m	struct:SCSIDeviceState	file:
compute_mcast_idx	.\eepro100.c	/^static int compute_mcast_idx(const uint8_t * ep)$/;"	f	file:
compute_mcast_idx	.\ne2000.c	/^static int compute_mcast_idx(const uint8_t *ep)$/;"	f	file:
compute_mcast_idx	.\rtl8139.c	/^static int compute_mcast_idx(const uint8_t *ep)$/;"	f	file:
condition	.\omap.h	/^    int condition;$/;"	m	struct:omap_dma_lcd_channel_s
conf	.\adlib.c	/^} conf = {0x220, 44100};$/;"	v	typeref:struct:__anon1	file:
conf	.\pl080.c	/^    uint32_t conf;$/;"	m	struct:__anon57	file:
conf	.\pl080.c	/^    uint32_t conf;$/;"	m	struct:__anon58	file:
conf	.\sb16.c	/^} conf = {5, 4, 5, 1, 5, 0x220};$/;"	v	typeref:struct:__anon88	file:
config	.\fdc.c	/^    uint8_t config;$/;"	m	struct:fdctrl_t	file:
config	.\pci.h	/^    uint8_t config[256];$/;"	m	struct:PCIDevice
config	.\slavio_misc.c	/^    uint8_t config;$/;"	m	struct:MiscState	file:
config	.\stellaris.c	/^    uint32_t config;$/;"	m	struct:gptm_state	file:
config	.\vmware_vga.c	/^    int config;$/;"	m	struct:vmsvga_state_s	file:
config_read	.\pci.h	/^    PCIConfigReadFunc *config_read;$/;"	m	struct:PCIDevice
config_reg	.\pci.c	/^    uint32_t config_reg; \/* XXX: suppress *\/$/;"	m	struct:PCIBus	file:
config_reg	.\pci_host.h	/^    uint32_t config_reg;$/;"	m	struct:__anon50
config_write	.\pci.h	/^    PCIConfigWriteFunc *config_write;$/;"	m	struct:PCIDevice
configuration	.\eepro100.c	/^    uint8_t configuration[22];$/;"	m	struct:__anon16	file:
connect1	.\fmopl.h	/^	INT32 *connect1;	\/* slot1 output pointer                *\/$/;"	m	struct:fm_opl_channel
connect2	.\fmopl.h	/^	INT32 *connect2;	\/* slot2 output pointer                *\/$/;"	m	struct:fm_opl_channel
connex_init	.\gumstix.c	/^static void connex_init(int ram_size, int vga_ram_size,$/;"	f	file:
connex_machine	.\gumstix.c	/^QEMUMachine connex_machine = {$/;"	v
constant	.\omap.h	/^    constant = 0,$/;"	e	enum:__anon37
constant_fill	.\omap.c	/^    int constant_fill;$/;"	m	struct:omap_dma_channel_s	file:
contents	.\eeprom93xx.c	/^    uint16_t contents[0];$/;"	m	struct:_eeprom_t	file:
contents	.\mips_malta.c	/^  uint8_t contents[256];$/;"	m	struct:_eeprom24c0x_t	file:
contents	.\rtl8139.c	/^    uint16_t contents[EEPROM_9346_SIZE];$/;"	m	struct:EEprom9346	file:
contiguous_map	.\ppc_prep.c	/^    int contiguous_map;$/;"	m	struct:sysctrl_t	file:
continue_dma8	.\sb16.c	/^static void continue_dma8 (SB16State *s)$/;"	f	file:
control	.\arm_timer.c	/^    uint32_t control;$/;"	m	struct:__anon6	file:
control	.\armv7m_nvic.c	/^        uint32_t control;$/;"	m	struct:__anon3::__anon4	file:
control	.\mpcore.c	/^    uint32_t control;$/;"	m	struct:__anon35	file:
control	.\omap.c	/^    uint16_t control;$/;"	m	struct:omap_tipb_bridge_s	file:
control	.\omap.c	/^    uint16_t control;$/;"	m	struct:omap_uwire_s	file:
control	.\omap.c	/^    uint8_t control;$/;"	m	struct:omap_lpg_s	file:
control	.\omap_i2c.c	/^    uint16_t control;$/;"	m	struct:omap_i2c_s	file:
control	.\parallel.c	/^    uint8_t control;$/;"	m	struct:ParallelState	file:
control	.\pxa.h	/^    uint32_t control[2];$/;"	m	struct:pxa2xx_i2s_s
control	.\pxa2xx.c	/^    uint16_t control;$/;"	m	struct:pxa2xx_i2c_s	file:
control	.\pxa2xx.c	/^    uint8_t control[3];$/;"	m	struct:pxa2xx_fir_s	file:
control	.\pxa2xx_lcd.c	/^    uint32_t control[6];$/;"	m	struct:pxa2xx_lcdc_s	file:
control	.\pxa2xx_timer.c	/^    uint32_t control;$/;"	m	struct:pxa2xx_timer4_s	file:
control	.\sb16.c	/^static void control (SB16State *s, int hold)$/;"	f	file:
control	.\stellaris.c	/^    uint32_t control;$/;"	m	struct:gptm_state	file:
convert	.\omap.c	/^    struct tm *(*convert)(const time_t *timep, struct tm *result);$/;"	m	struct:omap_rtc_s	typeref:struct:omap_rtc_s::convert	file:
core99_machine	.\ppc_chrp.c	/^QEMUMachine core99_machine = {$/;"	v
corgi_ssp_gpio_cs	.\spitz.c	/^static void corgi_ssp_gpio_cs(void *opaque, int line, int level)$/;"	f	file:
corgi_ssp_read	.\spitz.c	/^static uint32_t corgi_ssp_read(void *opaque)$/;"	f	file:
corgi_ssp_write	.\spitz.c	/^static void corgi_ssp_write(void *opaque, uint32_t value)$/;"	f	file:
count	.\adb.c	/^    int rptr, wptr, count;$/;"	m	struct:KBDState	file:
count	.\eepro100.c	/^    uint16_t count;$/;"	m	struct:__anon12	file:
count	.\flash.h	/^    uint16_t count;$/;"	m	struct:ecc_state_s
count	.\i8254.c	/^    int count; \/* can be 65536 *\/$/;"	m	struct:PITChannelState	file:
count	.\mpcore.c	/^    uint32_t count;$/;"	m	struct:__anon35	file:
count	.\omap_i2c.c	/^    uint16_t count;$/;"	m	struct:omap_i2c_s	file:
count	.\ps2.c	/^    int rptr, wptr, count;$/;"	m	struct:__anon77	file:
count	.\slavio_serial.c	/^    int rptr, wptr, count;$/;"	m	struct:__anon101	file:
count	.\slavio_timer.c	/^    uint32_t count, counthigh, reached;$/;"	m	struct:SLAVIO_TIMERState	file:
count_cur	.\omap_i2c.c	/^    int count_cur;$/;"	m	struct:omap_i2c_s	file:
count_latched	.\i8254.c	/^    uint8_t count_latched;$/;"	m	struct:PITChannelState	file:
count_load_time	.\i8254.c	/^    int64_t count_load_time;$/;"	m	struct:PITChannelState	file:
count_shift	.\apic.c	/^    int count_shift;$/;"	m	struct:APICState	file:
counter	.\pflash_cfi01.c	/^    target_ulong counter;$/;"	m	struct:pflash_t	file:
counter_base	.\sun4m.c	/^    target_phys_addr_t counter_base, nvram_base, ms_kb_base;$/;"	m	struct:sun4d_hwdef	file:
counter_base	.\sun4m.c	/^    target_phys_addr_t intctl_base, counter_base, nvram_base, ms_kb_base;$/;"	m	struct:hwdef	file:
counter_value	.\cuda.c	/^    uint16_t counter_value; \/* counter value at load time *\/$/;"	m	struct:CUDATimer	file:
counthigh	.\slavio_timer.c	/^    uint32_t count, counthigh, reached;$/;"	m	struct:SLAVIO_TIMERState	file:
cp	.\flash.h	/^    uint8_t cp;		\/* Column parity *\/$/;"	m	struct:ecc_state_s
cpc	.\omap.c	/^    uint16_t cpc;$/;"	m	struct:omap_dma_channel_s	file:
cplane	.\tcx.c	/^    uint32_t *vram24, *cplane;$/;"	m	struct:TCXState	file:
cplane_offset	.\tcx.c	/^    ram_addr_t vram_offset, vram24_offset, cplane_offset;$/;"	m	struct:TCXState	file:
cplus_txbuffer	.\rtl8139.c	/^    uint8_t   *cplus_txbuffer;$/;"	m	struct:RTL8139State	file:
cplus_txbuffer_len	.\rtl8139.c	/^    int        cplus_txbuffer_len;$/;"	m	struct:RTL8139State	file:
cplus_txbuffer_offset	.\rtl8139.c	/^    int        cplus_txbuffer_offset;$/;"	m	struct:RTL8139State	file:
cpsr	.\pl022.c	/^    uint32_t cpsr;$/;"	m	struct:__anon53	file:
cpu	.\sh7750.c	/^    CPUSH4State *cpu;$/;"	m	struct:SH7750State	file:
cpu_4xx_fit_cb	.\ppc.c	/^static void cpu_4xx_fit_cb (void *opaque)$/;"	f	file:
cpu_4xx_pit_cb	.\ppc.c	/^static void cpu_4xx_pit_cb (void *opaque)$/;"	f	file:
cpu_4xx_wdt_cb	.\ppc.c	/^static void cpu_4xx_wdt_cb (void *opaque)$/;"	f	file:
cpu_check_irqs	.\sun4m.c	/^void cpu_check_irqs(CPUState *env)$/;"	f
cpu_class_omap1	.\omap.h	583;"	d
cpu_enabled	.\arm_gic.c	/^    int cpu_enabled[NCPU];$/;"	m	struct:gic_state	file:
cpu_env	.\apic.c	/^    CPUState *cpu_env;$/;"	m	struct:APICState	file:
cpu_env	.\pxa2xx_gpio.c	/^    CPUState *cpu_env;$/;"	m	struct:pxa2xx_gpio_info_s	file:
cpu_env	.\pxa2xx_pic.c	/^    CPUState *cpu_env;$/;"	m	struct:pxa2xx_pic_state_s	file:
cpu_get_apic_base	.\apic.c	/^uint64_t cpu_get_apic_base(CPUState *env)$/;"	f
cpu_get_apic_tpr	.\apic.c	/^uint8_t cpu_get_apic_tpr(CPUX86State *env)$/;"	f
cpu_get_pic_interrupt	.\pc.c	/^int cpu_get_pic_interrupt(CPUState *env)$/;"	f
cpu_get_tsc	.\pc.c	/^uint64_t cpu_get_tsc(CPUX86State *env)$/;"	f
cpu_get_tsc	.\sun4m.c	/^uint64_t cpu_get_tsc()$/;"	f
cpu_get_tsc	.\sun4u.c	/^uint64_t cpu_get_tsc()$/;"	f
cpu_irqs	.\sbi.c	/^    qemu_irq *cpu_irqs[MAX_CPUS];$/;"	m	struct:SBIState	file:
cpu_irqs	.\slavio_intctl.c	/^    qemu_irq *cpu_irqs[MAX_CPUS];$/;"	m	struct:SLAVIO_INTCTLState	file:
cpu_irqs	.\sun4c_intctl.c	/^    qemu_irq *cpu_irqs;$/;"	m	struct:Sun4c_INTCTLState	file:
cpu_is_omap1510	.\omap.h	580;"	d
cpu_is_omap15xx	.\omap.h	581;"	d
cpu_is_omap310	.\omap.h	579;"	d
cpu_mips_clock_init	.\mips_timer.c	/^void cpu_mips_clock_init (CPUState *env)$/;"	f
cpu_mips_get_count	.\mips_timer.c	/^uint32_t cpu_mips_get_count (CPUState *env)$/;"	f
cpu_mips_get_random	.\mips_timer.c	/^uint32_t cpu_mips_get_random (CPUState *env)$/;"	f
cpu_mips_irq_init_cpu	.\mips_int.c	/^void cpu_mips_irq_init_cpu(CPUState *env)$/;"	f
cpu_mips_irq_request	.\mips_int.c	/^static void cpu_mips_irq_request(void *opaque, int irq, int level)$/;"	f	file:
cpu_mips_irqctrl_init	.\mips_timer.c	/^void cpu_mips_irqctrl_init (void)$/;"	f
cpu_mips_start_count	.\mips_timer.c	/^void cpu_mips_start_count(CPUState *env)$/;"	f
cpu_mips_stop_count	.\mips_timer.c	/^void cpu_mips_stop_count(CPUState *env)$/;"	f
cpu_mips_store_compare	.\mips_timer.c	/^void cpu_mips_store_compare (CPUState *env, uint32_t value)$/;"	f
cpu_mips_store_count	.\mips_timer.c	/^void cpu_mips_store_count (CPUState *env, uint32_t count)$/;"	f
cpu_mips_update_count	.\mips_timer.c	/^static void cpu_mips_update_count (CPUState *env, uint32_t count)$/;"	f	file:
cpu_mips_update_irq	.\mips_int.c	/^void cpu_mips_update_irq(CPUState *env)$/;"	f
cpu_ppc601_load_rtcl	.\ppc.c	/^uint32_t cpu_ppc601_load_rtcl (CPUState *env)$/;"	f
cpu_ppc601_load_rtcu	.\ppc.c	/^uint32_t cpu_ppc601_load_rtcu (CPUState *env)$/;"	f
cpu_ppc601_rtc_init	.\ppc.c	/^clk_setup_cb cpu_ppc601_rtc_init (CPUState *env)$/;"	f
cpu_ppc601_store_rtcl	.\ppc.c	/^void cpu_ppc601_store_rtcl (CPUState *env, uint32_t value)$/;"	f
cpu_ppc601_store_rtcu	.\ppc.c	/^void cpu_ppc601_store_rtcu (CPUState *env, uint32_t value)$/;"	f
cpu_ppc_decr_cb	.\ppc.c	/^static void cpu_ppc_decr_cb (void *opaque)$/;"	f	file:
cpu_ppc_decr_excp	.\ppc.c	/^static always_inline void cpu_ppc_decr_excp (CPUState *env)$/;"	f	file:
cpu_ppc_get_tb	.\ppc.c	/^static always_inline uint64_t cpu_ppc_get_tb (ppc_tb_t *tb_env, uint64_t vmclk,$/;"	f	file:
cpu_ppc_hdecr_cb	.\ppc.c	/^static void cpu_ppc_hdecr_cb (void *opaque)$/;"	f	file:
cpu_ppc_hdecr_excp	.\ppc.c	/^static always_inline void cpu_ppc_hdecr_excp (CPUState *env)$/;"	f	file:
cpu_ppc_load_atbl	.\ppc.c	/^uint32_t cpu_ppc_load_atbl (CPUState *env)$/;"	f
cpu_ppc_load_atbu	.\ppc.c	/^uint32_t cpu_ppc_load_atbu (CPUState *env)$/;"	f
cpu_ppc_load_decr	.\ppc.c	/^uint32_t cpu_ppc_load_decr (CPUState *env)$/;"	f
cpu_ppc_load_hdecr	.\ppc.c	/^uint32_t cpu_ppc_load_hdecr (CPUState *env)$/;"	f
cpu_ppc_load_purr	.\ppc.c	/^uint64_t cpu_ppc_load_purr (CPUState *env)$/;"	f
cpu_ppc_load_tbl	.\ppc.c	/^uint32_t cpu_ppc_load_tbl (CPUState *env)$/;"	f
cpu_ppc_load_tbu	.\ppc.c	/^uint32_t cpu_ppc_load_tbu (CPUState *env)$/;"	f
cpu_ppc_set_tb_clk	.\ppc.c	/^static void cpu_ppc_set_tb_clk (void *opaque, uint32_t freq)$/;"	f	file:
cpu_ppc_store_atbl	.\ppc.c	/^void cpu_ppc_store_atbl (CPUState *env, uint32_t value)$/;"	f
cpu_ppc_store_atbu	.\ppc.c	/^void cpu_ppc_store_atbu (CPUState *env, uint32_t value)$/;"	f
cpu_ppc_store_decr	.\ppc.c	/^void cpu_ppc_store_decr (CPUState *env, uint32_t value)$/;"	f
cpu_ppc_store_hdecr	.\ppc.c	/^void cpu_ppc_store_hdecr (CPUState *env, uint32_t value)$/;"	f
cpu_ppc_store_purr	.\ppc.c	/^void cpu_ppc_store_purr (CPUState *env, uint64_t value)$/;"	f
cpu_ppc_store_tb	.\ppc.c	/^static always_inline void cpu_ppc_store_tb (ppc_tb_t *tb_env, uint64_t vmclk,$/;"	f	file:
cpu_ppc_store_tbl	.\ppc.c	/^void cpu_ppc_store_tbl (CPUState *env, uint32_t value)$/;"	f
cpu_ppc_store_tbu	.\ppc.c	/^void cpu_ppc_store_tbu (CPUState *env, uint32_t value)$/;"	f
cpu_ppc_tb_init	.\ppc.c	/^clk_setup_cb cpu_ppc_tb_init (CPUState *env, uint32_t freq)$/;"	f
cpu_ppc_tb_start	.\ppc.c	/^static void cpu_ppc_tb_start (CPUState *env)$/;"	f	file:
cpu_ppc_tb_stop	.\ppc.c	/^static void cpu_ppc_tb_stop (CPUState *env)$/;"	f	file:
cpu_register_io_memory	.\omap.h	845;"	d
cpu_set_apic_base	.\apic.c	/^void cpu_set_apic_base(CPUState *env, uint64_t val)$/;"	f
cpu_set_apic_tpr	.\apic.c	/^void cpu_set_apic_tpr(CPUX86State *env, uint8_t val)$/;"	f
cpu_set_ferr	.\pc.c	/^void cpu_set_ferr(CPUX86State *s)$/;"	f
cpu_set_irq	.\sun4m.c	/^static void cpu_set_irq(void *opaque, int irq, int level)$/;"	f	file:
cpu_smm_update	.\pc.c	/^void cpu_smm_update(CPUState *env)$/;"	f
cpu_to_ube16	.\ide.c	/^static inline void cpu_to_ube16(uint8_t *buf, int val)$/;"	f	file:
cpu_to_ube32	.\ide.c	/^static inline void cpu_to_ube32(uint8_t *buf, unsigned int val)$/;"	f	file:
cpuic	.\mpcore.c	/^    qemu_irq *cpuic;$/;"	m	struct:__anon36	file:
cputimer_lbit	.\slavio_intctl.c	/^    uint32_t cputimer_lbit, cputimer_mbit;$/;"	m	struct:SLAVIO_INTCTLState	file:
cputimer_mbit	.\slavio_intctl.c	/^    uint32_t cputimer_lbit, cputimer_mbit;$/;"	m	struct:SLAVIO_INTCTLState	file:
cr	.\pl011.c	/^    uint32_t cr;$/;"	m	struct:__anon52	file:
cr	.\pl031.c	/^    uint32_t cr;$/;"	m	struct:__anon54	file:
cr	.\pl050.c	/^    uint32_t cr;$/;"	m	struct:__anon55	file:
cr	.\pl061.c	/^    uint8_t cr;$/;"	m	struct:__anon56	file:
cr	.\pl110.c	/^    uint32_t cr;$/;"	m	struct:__anon59	file:
cr	.\ppc405_uc.c	/^    uint32_t cr[4];$/;"	m	struct:ppc405_dma_t	file:
cr	.\ppc405_uc.c	/^    uint8_t cr;$/;"	m	struct:ppc4xx_opba_t	file:
cr	.\smc91c111.c	/^    uint16_t cr;$/;"	m	struct:__anon103	file:
cr0	.\pl022.c	/^    uint32_t cr0;$/;"	m	struct:__anon53	file:
cr0	.\ppc405_uc.c	/^    uint32_t cr0;$/;"	m	struct:ppc405cr_cpc_t	file:
cr1	.\pl022.c	/^    uint32_t cr1;$/;"	m	struct:__anon53	file:
cr1	.\ppc405_uc.c	/^    uint32_t cr1;$/;"	m	struct:ppc405cr_cpc_t	file:
crc	.\firmware_abi.h	/^    uint16_t crc;$/;"	m	struct:ohwcfg_v3_t
crc	.\sd.h	/^    uint8_t crc;$/;"	m	struct:sd_request_s
crctab	.\pcnet.c	/^static const uint32_t crctab[256] = {$/;"	v	file:
cs_base	.\sun4m.c	/^    target_phys_addr_t tcx_base, cs_base, power_base;$/;"	m	struct:hwdef	file:
cs_init	.\cs4231.c	/^void cs_init(target_phys_addr_t base, int irq, void *intctl)$/;"	f
cs_irq	.\sun4m.c	/^    int ser_irq, ms_kb_irq, fd_irq, me_irq, cs_irq;$/;"	m	struct:hwdef	file:
cs_load	.\cs4231.c	/^static int cs_load(QEMUFile *f, void *opaque, int version_id)$/;"	f	file:
cs_mem_read	.\cs4231.c	/^static CPUReadMemoryFunc *cs_mem_read[3] = {$/;"	v	file:
cs_mem_readl	.\cs4231.c	/^static uint32_t cs_mem_readl(void *opaque, target_phys_addr_t addr)$/;"	f	file:
cs_mem_write	.\cs4231.c	/^static CPUWriteMemoryFunc *cs_mem_write[3] = {$/;"	v	file:
cs_mem_writel	.\cs4231.c	/^static void cs_mem_writel(void *opaque, target_phys_addr_t addr, uint32_t val)$/;"	f	file:
cs_reset	.\cs4231.c	/^static void cs_reset(void *opaque)$/;"	f	file:
cs_save	.\cs4231.c	/^static void cs_save(QEMUFile *f, void *opaque)$/;"	f	file:
csbc	.\lsi53c895a.c	/^    uint32_t csbc;$/;"	m	struct:__anon25	file:
csd	.\sd.c	/^    uint8_t csd[16];$/;"	m	struct:SDState	file:
csp_index	.\sb16.c	/^    uint8_t csp_index;$/;"	m	struct:SB16State	file:
csp_mode	.\sb16.c	/^    uint8_t csp_mode;$/;"	m	struct:SB16State	file:
csp_param	.\sb16.c	/^    uint8_t csp_param;$/;"	m	struct:SB16State	file:
csp_reg83	.\sb16.c	/^    uint8_t csp_reg83[4];$/;"	m	struct:SB16State	file:
csp_reg83r	.\sb16.c	/^    int csp_reg83r;$/;"	m	struct:SB16State	file:
csp_reg83w	.\sb16.c	/^    int csp_reg83w;$/;"	m	struct:SB16State	file:
csp_regs	.\sb16.c	/^    uint8_t csp_regs[256];$/;"	m	struct:SB16State	file:
csp_value	.\sb16.c	/^    uint8_t csp_value;$/;"	m	struct:SB16State	file:
csr	.\pcnet.c	/^    uint16_t csr[128];$/;"	m	struct:PCNetState_st	file:
ct	.\ppc405_uc.c	/^    uint32_t ct[4];$/;"	m	struct:ppc405_dma_t	file:
ctest3	.\lsi53c895a.c	/^    uint8_t ctest3;$/;"	m	struct:__anon25	file:
ctest4	.\lsi53c895a.c	/^    uint8_t ctest4;$/;"	m	struct:__anon25	file:
ctest5	.\lsi53c895a.c	/^    uint8_t ctest5;$/;"	m	struct:__anon25	file:
ctl	.\es1370.c	/^    uint32_t ctl;$/;"	m	struct:ES1370State	file:
ctl	.\spitz.c	/^    uint8_t ctl;$/;"	m	struct:sl_nand_s	file:
ctl	.\usb-ohci.c	/^    uint32_t ctl, status;$/;"	m	struct:__anon123	file:
ctl_en	.\es1370.c	/^    uint32_t ctl_en;$/;"	m	struct:chan_bits	file:
cto	.\omap_mmc.c	/^    uint8_t cto;$/;"	m	struct:omap_mmc_s	file:
ctr	.\smc91c111.c	/^    uint16_t ctr;$/;"	m	struct:__anon103	file:
ctrl	.\ide.c	/^    uint8_t ctrl;$/;"	m	struct:md_s	file:
ctrl	.\omap_lcdc.c	/^    uint32_t ctrl;$/;"	m	struct:omap_lcd_panel_s	file:
ctrl	.\pl080.c	/^    uint32_t ctrl;$/;"	m	struct:__anon57	file:
ctrl	.\usb-ohci.c	/^    uint32_t ctrl;$/;"	m	struct:OHCIPort	file:
ctrl	.\usb-uhci.c	/^    uint16_t ctrl;$/;"	m	struct:UHCIPort	file:
ctrl	.\usb-uhci.c	/^    uint32_t ctrl; \/* see TD_CTRL_xxx *\/$/;"	m	struct:UHCI_TD	file:
ctrl_cur	.\usb-ohci.c	/^    uint32_t ctrl_head, ctrl_cur;$/;"	m	struct:__anon123	file:
ctrl_head	.\usb-ohci.c	/^    uint32_t ctrl_head, ctrl_cur;$/;"	m	struct:__anon123	file:
cts	.\omap.h	/^    int cts;$/;"	m	struct:i2s_codec_s
ctz32	.\pflash_cfi01.c	/^static int ctz32 (uint32_t n)$/;"	f	file:
ctz32	.\pflash_cfi02.c	/^static int ctz32 (uint32_t n)$/;"	f	file:
cu_active	.\eepro100.c	/^    cu_active = 2,$/;"	e	enum:__anon14	file:
cu_base	.\eepro100.c	/^    uint32_t cu_base;           \/* CU base address *\/$/;"	m	struct:__anon16	file:
cu_hqp_active	.\eepro100.c	/^    cu_hqp_active = 3$/;"	e	enum:__anon14	file:
cu_idle	.\eepro100.c	/^    cu_idle = 0,$/;"	e	enum:__anon14	file:
cu_lpq_active	.\eepro100.c	/^    cu_lpq_active = 2,$/;"	e	enum:__anon14	file:
cu_offset	.\eepro100.c	/^    uint32_t cu_offset;         \/* CU address offset *\/$/;"	m	struct:__anon16	file:
cu_state_t	.\eepro100.c	/^} cu_state_t;$/;"	t	typeref:enum:__anon14	file:
cu_suspended	.\eepro100.c	/^    cu_suspended = 1,$/;"	e	enum:__anon14	file:
cuda_adb_poll	.\cuda.c	/^static void cuda_adb_poll(void *opaque)$/;"	f	file:
cuda_init	.\cuda.c	/^void cuda_init (int *cuda_mem_index, qemu_irq irq)$/;"	f
cuda_mem_index	.\macio.c	/^    int cuda_mem_index;$/;"	m	struct:macio_state_t	file:
cuda_read	.\cuda.c	/^static CPUReadMemoryFunc *cuda_read[] = {$/;"	v	file:
cuda_readb	.\cuda.c	/^static uint32_t cuda_readb(void *opaque, target_phys_addr_t addr)$/;"	f	file:
cuda_readl	.\cuda.c	/^static uint32_t cuda_readl (void *opaque, target_phys_addr_t addr)$/;"	f	file:
cuda_readw	.\cuda.c	/^static uint32_t cuda_readw (void *opaque, target_phys_addr_t addr)$/;"	f	file:
cuda_receive_packet	.\cuda.c	/^static void cuda_receive_packet(CUDAState *s,$/;"	f	file:
cuda_receive_packet_from_host	.\cuda.c	/^static void cuda_receive_packet_from_host(CUDAState *s,$/;"	f	file:
cuda_send_packet_to_host	.\cuda.c	/^static void cuda_send_packet_to_host(CUDAState *s,$/;"	f	file:
cuda_state	.\cuda.c	/^static CUDAState cuda_state;$/;"	v	file:
cuda_timer1	.\cuda.c	/^static void cuda_timer1(void *opaque)$/;"	f	file:
cuda_timer_update	.\cuda.c	/^static void cuda_timer_update(CUDAState *s, CUDATimer *ti,$/;"	f	file:
cuda_update	.\cuda.c	/^static void cuda_update(CUDAState *s)$/;"	f	file:
cuda_update_irq	.\cuda.c	/^static void cuda_update_irq(CUDAState *s)$/;"	f	file:
cuda_write	.\cuda.c	/^static CPUWriteMemoryFunc *cuda_write[] = {$/;"	v	file:
cuda_writeb	.\cuda.c	/^static void cuda_writeb(void *opaque, target_phys_addr_t addr, uint32_t val)$/;"	f	file:
cuda_writel	.\cuda.c	/^static void cuda_writel (void *opaque, target_phys_addr_t addr, uint32_t value)$/;"	f	file:
cuda_writew	.\cuda.c	/^static void cuda_writew (void *opaque, target_phys_addr_t addr, uint32_t value)$/;"	f	file:
cur_addr	.\ide.c	/^    uint32_t cur_addr;$/;"	m	struct:BMDMAState	file:
cur_chip	.\fmopl.c	/^static void *cur_chip = NULL;	\/* current chip point *\/$/;"	v	file:
cur_drive	.\ide.c	/^    struct IDEState *cur_drive;$/;"	m	struct:IDEState	typeref:struct:IDEState::IDEState	file:
cur_drv	.\fdc.c	/^    uint8_t cur_drv;$/;"	m	struct:fdctrl_t	file:
cur_prd_addr	.\ide.c	/^    uint32_t cur_prd_addr;$/;"	m	struct:BMDMAState	file:
cur_prd_last	.\ide.c	/^    uint32_t cur_prd_last;$/;"	m	struct:BMDMAState	file:
cur_prd_len	.\ide.c	/^    uint32_t cur_prd_len;$/;"	m	struct:BMDMAState	file:
curpag	.\eepro100.c	/^    uint8_t curpag;$/;"	m	struct:__anon16	file:
curpag	.\ne2000.c	/^    uint8_t curpag;$/;"	m	struct:NE2000State	file:
currCPlusRxDesc	.\rtl8139.c	/^    uint32_t   currCPlusRxDesc;$/;"	m	struct:RTL8139State	file:
currCPlusTxDesc	.\rtl8139.c	/^    uint32_t   currCPlusTxDesc;$/;"	m	struct:RTL8139State	file:
currTxDesc	.\rtl8139.c	/^    uint32_t   currTxDesc;$/;"	m	struct:RTL8139State	file:
current_cmd	.\sd.c	/^    int current_cmd;$/;"	m	struct:SDState	file:
current_dev	.\esp.c	/^    SCSIDevice *current_dev;$/;"	m	struct:ESPState	file:
current_dev	.\i2c.c	/^    i2c_slave *current_dev;$/;"	m	struct:i2c_bus	file:
current_dev	.\lsi53c895a.c	/^    SCSIDevice *current_dev;$/;"	m	struct:__anon25	file:
current_dev	.\stellaris.c	/^    int current_dev;$/;"	m	struct:__anon114	file:
current_dma_len	.\lsi53c895a.c	/^    uint32_t current_dma_len;$/;"	m	struct:__anon25	file:
current_frame	.\omap.h	/^    int current_frame;$/;"	m	struct:omap_dma_lcd_channel_s
current_lun	.\lsi53c895a.c	/^    int current_lun;$/;"	m	struct:__anon25	file:
current_mr	.\mcf_uart.c	/^    int current_mr;$/;"	m	struct:__anon33	file:
current_pending	.\arm_gic.c	/^    int current_pending[NCPU];$/;"	m	struct:gic_state	file:
current_tag	.\lsi53c895a.c	/^    uint32_t current_tag;$/;"	m	struct:__anon25	file:
current_tm	.\mc146818rtc.c	/^    struct tm current_tm;$/;"	m	struct:RTCState	typeref:struct:RTCState::tm	file:
current_tm	.\omap.c	/^    struct tm current_tm;$/;"	m	struct:omap_rtc_s	typeref:struct:omap_rtc_s::tm	file:
cursor	.\vmware_vga.c	/^    } cursor;$/;"	m	struct:vmsvga_state_s	typeref:struct:vmsvga_state_s::__anon127	file:
cursor_glyph	.\vga.c	/^static const uint8_t cursor_glyph[32 * 4] = {$/;"	v	file:
cycle	.\ads7846.c	/^    int cycle;$/;"	m	struct:ads7846_state_s	file:
cycle	.\ide.c	/^    int cycle;$/;"	m	struct:md_s	file:
cycle	.\max111x.c	/^    int cycle;$/;"	m	struct:max111x_s	file:
cycle	.\omap.c	/^    int cycle;$/;"	m	struct:omap_lpg_s	file:
cyl	.\ide.c	/^	uint8_t cyl;		\/* starting cylinder *\/$/;"	m	struct:partition	file:
cylinders	.\ide.c	/^    int cylinders, heads, sectors;$/;"	m	struct:IDEState	file:
da	.\ppc405_uc.c	/^    uint32_t da[4];$/;"	m	struct:ppc405_dma_t	file:
dac	.\wm8750.c	/^    int dac;$/;"	m	struct:wm_rate_s	file:
dac1_samplerate	.\es1370.c	/^static const unsigned dac1_samplerate[] = { 5512, 11025, 22050, 44100 };$/;"	v	file:
dac_hz	.\wm8750.c	/^    int dac_hz;$/;"	m	struct:wm_rate_s	file:
dac_index	.\tcx.c	/^    uint8_t dac_index, dac_state;$/;"	m	struct:TCXState	file:
dac_power	.\tsc210x.c	/^    uint16_t dac_power;$/;"	m	struct:tsc210x_state_s	file:
dac_state	.\tcx.c	/^    uint8_t dac_index, dac_state;$/;"	m	struct:TCXState	file:
dac_voice	.\es1370.c	/^    SWVoiceOut *dac_voice[2];$/;"	m	struct:ES1370State	file:
dac_voice	.\tsc210x.c	/^    SWVoiceOut *dac_voice[1];$/;"	m	struct:tsc210x_state_s	file:
dac_voice	.\wm8750.c	/^    SWVoiceOut *dac_voice[OUT_PORT_N];$/;"	m	struct:wm8750_s	file:
dack	.\dma.c	/^    uint8_t dack;$/;"	m	struct:dma_regs	file:
dar	.\openpic.c	/^    uint32_t dar;        \/* Doorbell activate register *\/$/;"	m	struct:openpic_t	file:
data	.\adb.c	/^    uint8_t data[128];$/;"	m	struct:KBDState	file:
data	.\eeprom93xx.c	/^    uint16_t data;$/;"	m	struct:_eeprom_t	file:
data	.\mac_nvram.c	/^    uint8_t data[0x2000];$/;"	m	struct:MacIONVRAMState	file:
data	.\mcf_fec.c	/^    uint32_t data;$/;"	m	struct:__anon31	file:
data	.\mips_malta.c	/^  uint8_t data;$/;"	m	struct:_eeprom24c0x_t	file:
data	.\pl061.c	/^    uint8_t data;$/;"	m	struct:__anon56	file:
data	.\ps2.c	/^    uint8_t data[PS2_QUEUE_SIZE];$/;"	m	struct:__anon77	file:
data	.\pxa2xx.c	/^    uint8_t data;$/;"	m	struct:pxa2xx_i2c_s	file:
data	.\sd.c	/^    uint8_t data[512];$/;"	m	struct:SDState	file:
data	.\slavio_serial.c	/^    uint8_t data[SERIO_QUEUE_SIZE];$/;"	m	struct:__anon101	file:
data	.\smbus_eeprom.c	/^    uint8_t *data;$/;"	m	struct:SMBusEEPROMDevice	file:
data	.\smc91c111.c	/^    uint8_t data[NUM_PACKETS][2048];$/;"	m	struct:__anon103	file:
data	.\stellaris.c	/^        uint32_t data[16];$/;"	m	struct:__anon112::__anon113	file:
data	.\stellaris_enet.c	/^        uint8_t data[2048];$/;"	m	struct:__anon115::__anon116	file:
data	.\usb.h	/^    uint8_t *data;$/;"	m	struct:USBPacket
data_buf	.\smbus.h	/^    uint8_t data_buf[34]; \/* command + len + 32 bytes of data.  *\/$/;"	m	struct:SMBusDevice
data_buf	.\usb.h	/^    uint8_t data_buf[1024];$/;"	m	struct:USBDevice
data_dir	.\fdc.c	/^    uint8_t data_dir;$/;"	m	struct:fdctrl_t	file:
data_end	.\ide.c	/^    uint8_t *data_end;$/;"	m	struct:IDEState	file:
data_in	.\cuda.c	/^    uint8_t data_in[128];$/;"	m	struct:CUDAState	file:
data_in	.\wm8750.c	/^    uint8_t data_in[4096];$/;"	m	struct:wm8750_s	file:
data_in_index	.\cuda.c	/^    int data_in_index;$/;"	m	struct:CUDAState	file:
data_in_size	.\cuda.c	/^    int data_in_size;$/;"	m	struct:CUDAState	file:
data_len	.\fdc.c	/^    uint32_t data_len;$/;"	m	struct:fdctrl_t	file:
data_len	.\smbus.h	/^    int data_len;$/;"	m	struct:SMBusDevice
data_len	.\usb-msd.c	/^    uint32_t data_len;$/;"	m	struct:__anon122	file:
data_len	.\usb-msd.c	/^    uint32_t data_len;$/;"	m	struct:usb_msd_cbw	file:
data_offset	.\sd.c	/^    uint32_t data_offset;$/;"	m	struct:SDState	file:
data_on	.\pcspk.c	/^    int data_on;$/;"	m	struct:__anon51	file:
data_out	.\cuda.c	/^    uint8_t data_out[16];$/;"	m	struct:CUDAState	file:
data_out	.\wm8750.c	/^    uint8_t data_out[4096];$/;"	m	struct:wm8750_s	file:
data_out_index	.\cuda.c	/^    int data_out_index;$/;"	m	struct:CUDAState	file:
data_pos	.\fdc.c	/^    uint32_t data_pos;$/;"	m	struct:fdctrl_t	file:
data_ptr	.\ide.c	/^    uint8_t *data_ptr;$/;"	m	struct:IDEState	file:
data_req	.\pxa.h	/^    void (*data_req)(void *, int, int);$/;"	m	struct:pxa2xx_i2s_s
data_req	.\wm8750.c	/^    void (*data_req)(void *, int, int);$/;"	m	struct:wm8750_s	file:
data_start	.\sd.c	/^    uint32_t data_start;$/;"	m	struct:SDState	file:
data_state	.\fdc.c	/^    uint8_t data_state;$/;"	m	struct:fdctrl_t	file:
data_type	.\omap.c	/^    int data_type;$/;"	m	struct:omap_dma_channel_s	file:
data_type_f1	.\omap.h	/^    unsigned char data_type_f1;$/;"	m	struct:omap_dma_lcd_channel_s
data_type_f2	.\omap.h	/^    unsigned char data_type_f2;$/;"	m	struct:omap_dma_lcd_channel_s
datacnt	.\pl181.c	/^    uint32_t datacnt;$/;"	m	struct:__anon60	file:
datactrl	.\pl181.c	/^    uint32_t datactrl;$/;"	m	struct:__anon60	file:
datalength	.\pl181.c	/^    uint32_t datalength;$/;"	m	struct:__anon60	file:
datar	.\parallel.c	/^    uint8_t datar;$/;"	m	struct:ParallelState	file:
datatimer	.\pl181.c	/^    uint32_t datatimer;$/;"	m	struct:__anon60	file:
dataw	.\parallel.c	/^    uint8_t dataw;$/;"	m	struct:ParallelState	file:
dav	.\tsc210x.c	/^    uint16_t command, dav;$/;"	m	struct:tsc210x_state_s	file:
dbc	.\lsi53c895a.c	/^    uint32_t dbc;$/;"	m	struct:__anon25	file:
dbdma_init	.\mac_dbdma.c	/^void dbdma_init (int *dbdma_mem_index)$/;"	f
dbdma_mem_index	.\macio.c	/^    int dbdma_mem_index;$/;"	m	struct:macio_state_t	file:
dbdma_read	.\mac_dbdma.c	/^static CPUReadMemoryFunc *dbdma_read[] = {$/;"	v	file:
dbdma_readb	.\mac_dbdma.c	/^static uint32_t dbdma_readb (void *opaque, target_phys_addr_t addr)$/;"	f	file:
dbdma_readl	.\mac_dbdma.c	/^static uint32_t dbdma_readl (void *opaque, target_phys_addr_t addr)$/;"	f	file:
dbdma_readw	.\mac_dbdma.c	/^static uint32_t dbdma_readw (void *opaque, target_phys_addr_t addr)$/;"	f	file:
dbdma_write	.\mac_dbdma.c	/^static CPUWriteMemoryFunc *dbdma_write[] = {$/;"	v	file:
dbdma_writeb	.\mac_dbdma.c	/^static void dbdma_writeb (void *opaque,$/;"	f	file:
dbdma_writel	.\mac_dbdma.c	/^static void dbdma_writel (void *opaque,$/;"	f	file:
dbdma_writew	.\mac_dbdma.c	/^static void dbdma_writew (void *opaque,$/;"	f	file:
dc0	.\stellaris.c	/^    uint32_t dc0;$/;"	m	struct:__anon109	file:
dc1	.\stellaris.c	/^    uint32_t dc1;$/;"	m	struct:__anon109	file:
dc2	.\stellaris.c	/^    uint32_t dc2;$/;"	m	struct:__anon109	file:
dc3	.\stellaris.c	/^    uint32_t dc3;$/;"	m	struct:__anon109	file:
dc4	.\stellaris.c	/^    uint32_t dc4;$/;"	m	struct:__anon109	file:
dcfg	.\eepro100.c	/^    uint8_t dcfg;$/;"	m	struct:__anon16	file:
dcfg	.\ne2000.c	/^    uint8_t dcfg;$/;"	m	struct:NE2000State	file:
dcgc	.\stellaris.c	/^    uint32_t dcgc[3];$/;"	m	struct:__anon110	file:
dcmd	.\lsi53c895a.c	/^    uint8_t dcmd;$/;"	m	struct:__anon25	file:
dcntl	.\lsi53c895a.c	/^    uint8_t dcntl;$/;"	m	struct:__anon25	file:
dcr_base	.\ppc4xx_devs.c	/^    uint32_t dcr_base;$/;"	m	struct:ppcuic_t	file:
dcr_read	.\ppc.c	/^    dcr_read_cb dcr_read;$/;"	m	struct:ppc_dcrn_t	file:
dcr_read_cb	.\ppc.h	/^typedef target_ulong (*dcr_read_cb)(void *opaque, int dcrn);$/;"	t
dcr_read_crcpc	.\ppc405_uc.c	/^static target_ulong dcr_read_crcpc (void *opaque, int dcrn)$/;"	f	file:
dcr_read_dma	.\ppc405_uc.c	/^static target_ulong dcr_read_dma (void *opaque, int dcrn)$/;"	f	file:
dcr_read_ebc	.\ppc405_uc.c	/^static target_ulong dcr_read_ebc (void *opaque, int dcrn)$/;"	f	file:
dcr_read_epcpc	.\ppc405_uc.c	/^static target_ulong dcr_read_epcpc (void *opaque, int dcrn)$/;"	f	file:
dcr_read_mal	.\ppc405_uc.c	/^static target_ulong dcr_read_mal (void *opaque, int dcrn)$/;"	f	file:
dcr_read_ocm	.\ppc405_uc.c	/^static target_ulong dcr_read_ocm (void *opaque, int dcrn)$/;"	f	file:
dcr_read_plb	.\ppc405_uc.c	/^static target_ulong dcr_read_plb (void *opaque, int dcrn)$/;"	f	file:
dcr_read_pob	.\ppc405_uc.c	/^static target_ulong dcr_read_pob (void *opaque, int dcrn)$/;"	f	file:
dcr_read_sdram	.\ppc405_uc.c	/^static target_ulong dcr_read_sdram (void *opaque, int dcrn)$/;"	f	file:
dcr_read_uic	.\ppc4xx_devs.c	/^static target_ulong dcr_read_uic (void *opaque, int dcrn)$/;"	f	file:
dcr_write	.\ppc.c	/^    dcr_write_cb dcr_write;$/;"	m	struct:ppc_dcrn_t	file:
dcr_write_cb	.\ppc.h	/^typedef void (*dcr_write_cb)(void *opaque, int dcrn, target_ulong val);$/;"	t
dcr_write_crcpc	.\ppc405_uc.c	/^static void dcr_write_crcpc (void *opaque, int dcrn, target_ulong val)$/;"	f	file:
dcr_write_dma	.\ppc405_uc.c	/^static void dcr_write_dma (void *opaque, int dcrn, target_ulong val)$/;"	f	file:
dcr_write_ebc	.\ppc405_uc.c	/^static void dcr_write_ebc (void *opaque, int dcrn, target_ulong val)$/;"	f	file:
dcr_write_epcpc	.\ppc405_uc.c	/^static void dcr_write_epcpc (void *opaque, int dcrn, target_ulong val)$/;"	f	file:
dcr_write_mal	.\ppc405_uc.c	/^static void dcr_write_mal (void *opaque, int dcrn, target_ulong val)$/;"	f	file:
dcr_write_ocm	.\ppc405_uc.c	/^static void dcr_write_ocm (void *opaque, int dcrn, target_ulong val)$/;"	f	file:
dcr_write_plb	.\ppc405_uc.c	/^static void dcr_write_plb (void *opaque, int dcrn, target_ulong val)$/;"	f	file:
dcr_write_pob	.\ppc405_uc.c	/^static void dcr_write_pob (void *opaque, int dcrn, target_ulong val)$/;"	f	file:
dcr_write_sdram	.\ppc405_uc.c	/^static void dcr_write_sdram (void *opaque, int dcrn, target_ulong val)$/;"	f	file:
dcr_write_uic	.\ppc4xx_devs.c	/^static void dcr_write_uic (void *opaque, int dcrn, target_ulong val)$/;"	f	file:
dcrn	.\ppc.c	/^    ppc_dcrn_t dcrn[DCRN_NB];$/;"	m	struct:ppc_dcr_t	file:
ddir	.\omap_mmc.c	/^    int ddir;$/;"	m	struct:omap_mmc_s	file:
debounce	.\omap.c	/^    uint16_t debounce;$/;"	m	struct:omap_mpuio_s	file:
debug_register_io_memory	.\omap.h	/^inline static int debug_register_io_memory(int io_index,$/;"	f
decr_freq	.\ppc.c	/^    uint32_t decr_freq;    \/* decrementer frequency           *\/$/;"	m	struct:ppc_tb_t	file:
decr_next	.\ppc.c	/^    uint64_t decr_next;    \/* Tick for next decr interrupt    *\/$/;"	m	struct:ppc_tb_t	file:
decr_timer	.\ppc.c	/^    struct QEMUTimer *decr_timer;$/;"	m	struct:ppc_tb_t	typeref:struct:ppc_tb_t::QEMUTimer	file:
default_addr	.\pl190.c	/^    uint32_t default_addr;$/;"	m	struct:__anon61	file:
default_cpu_model	.\sun4m.c	/^    const char * const default_cpu_model;$/;"	m	struct:hwdef	file:
default_cpu_model	.\sun4m.c	/^    const char * const default_cpu_model;$/;"	m	struct:sun4d_hwdef	file:
delay	.\omap.c	/^    int64_t delay;$/;"	m	struct:omap_dma_s	file:
delta	.\ptimer.c	/^    uint64_t delta;$/;"	m	struct:ptimer_state	file:
deltat	.\fmopl.h	/^	YM_DELTAT *deltat;			\/* DELTA-T ADPCM       *\/$/;"	m	struct:fm_opl_f
den	.\pl061.c	/^    uint8_t den;$/;"	m	struct:__anon56	file:
depth	.\firmware_abi.h	/^    uint16_t depth;$/;"	m	struct:ohwcfg_v3_t
depth	.\tcx.c	/^    uint16_t width, height, depth;$/;"	m	struct:TCXState	file:
depth	.\vmware_vga.c	/^    int depth;$/;"	m	struct:vmsvga_state_s	file:
desc	.\boards.h	/^    const char *desc;$/;"	m	struct:QEMUMachine
desc	.\pci.c	/^    const char *desc;$/;"	m	struct:__anon48	file:
descr	.\pxa2xx_dma.c	/^    target_phys_addr_t descr;$/;"	m	struct:pxa2xx_dma_channel_s	file:
descriptor	.\pxa2xx_lcd.c	/^        target_phys_addr_t descriptor;$/;"	m	struct:pxa2xx_lcdc_s::__anon85	file:
dest	.\omap.c	/^        target_phys_addr_t src, dest;$/;"	m	struct:omap_dma_channel_s::omap_dma_reg_set_s	file:
dest	.\pl080.c	/^    uint32_t dest;$/;"	m	struct:__anon57	file:
dest	.\pxa2xx_dma.c	/^    target_phys_addr_t dest;$/;"	m	struct:pxa2xx_dma_channel_s	file:
dest_mode	.\apic.c	/^    uint8_t dest_mode;$/;"	m	struct:APICState	file:
dest_width	.\pxa2xx_lcd.c	/^    int dest_width;$/;"	m	struct:pxa2xx_lcdc_s	file:
destroy	.\scsi-disk.h	/^    void (*destroy)(SCSIDevice *s);$/;"	m	struct:SCSIDevice
detach	.\pcmcia.h	/^    int (*detach)(void *state);$/;"	m	struct:pcmcia_card_s
dev	.\acpi.c	/^    PCIDevice dev;$/;"	m	struct:PIIX4PMState	file:
dev	.\cirrus_vga.c	/^    PCIDevice dev;$/;"	m	struct:PCICirrusVGAState	file:
dev	.\eepro100.c	/^    PCIDevice dev;$/;"	m	struct:PCIEEPRO100State	file:
dev	.\es1370.c	/^    PCIDevice dev;$/;"	m	struct:PCIES1370State	file:
dev	.\i2c.c	/^    i2c_slave *dev;$/;"	m	struct:i2c_bus	file:
dev	.\ide.c	/^    PCIDevice dev;$/;"	m	struct:PCIIDEState	file:
dev	.\ne2000.c	/^    PCIDevice dev;$/;"	m	struct:PCINE2000State	file:
dev	.\pci.c	/^    PCIDevice dev;$/;"	m	struct:__anon49	file:
dev	.\pcnet.c	/^    PCIDevice dev;$/;"	m	struct:PCNetState_st	file:
dev	.\pl050.c	/^    void *dev;$/;"	m	struct:__anon55	file:
dev	.\rtl8139.c	/^    PCIDevice dev;$/;"	m	struct:PCIRTL8139State	file:
dev	.\scsi-disk.c	/^    SCSIDeviceState *dev;$/;"	m	struct:SCSIRequest	file:
dev	.\scsi-generic.c	/^    SCSIDeviceState *dev;$/;"	m	struct:SCSIRequest	file:
dev	.\smbus_eeprom.c	/^    SMBusDevice dev;$/;"	m	struct:SMBusEEPROMDevice	file:
dev	.\usb-hid.c	/^    USBDevice dev;$/;"	m	struct:USBHIDState	file:
dev	.\usb-hub.c	/^    USBDevice dev;$/;"	m	struct:USBHubState	file:
dev	.\usb-msd.c	/^    USBDevice dev;$/;"	m	struct:__anon122	file:
dev	.\usb-uhci.c	/^    PCIDevice dev;$/;"	m	struct:UHCIState	file:
dev	.\usb-wacom.c	/^    USBDevice dev;$/;"	m	struct:USBWacomState	file:
dev	.\usb.h	/^    USBDevice *dev;$/;"	m	struct:USBPort
dev	.\vga.c	/^    PCIDevice dev;$/;"	m	struct:PCIVGAState	file:
dev_reset	.\sparc32_dma.c	/^    qemu_irq dev_reset;$/;"	m	struct:DMAState	file:
devaddr	.\ppc_mac.h	/^    int devaddr;$/;"	m	struct:ADBDevice
devaddr	.\usb.h	/^    uint8_t devaddr;$/;"	m	struct:USBPacket
devep	.\usb.h	/^    uint8_t devep;$/;"	m	struct:USBPacket
devfn	.\pci.h	/^    int devfn;$/;"	m	struct:PCIDevice
devfn_min	.\pci.c	/^    int devfn_min;$/;"	m	struct:PCIBus	file:
device	.\eepro100.c	/^    uint32_t device;            \/* device variant *\/$/;"	m	struct:__anon16	file:
devices	.\pci.c	/^    PCIDevice *devices[256];$/;"	m	struct:PCIBus	file:
devices	.\ppc_mac.h	/^    ADBDevice devices[MAX_ADB_DEVICES];$/;"	m	struct:ADBBusState
devices	.\sh7750.c	/^    sh7750_io_device *devices[NB_DEVICES];	\/* External peripherals *\/$/;"	m	struct:SH7750State	file:
devname	.\usb.h	/^    char devname[32];$/;"	m	struct:USBDevice
devreq	.\ppc_mac.h	/^    ADBDeviceRequest *devreq;$/;"	m	struct:ADBDevice
devreset	.\ppc_mac.h	/^    ADBDeviceReset *devreset;$/;"	m	struct:ADBDevice
dexp	.\adlib.c	/^    uint64_t dexp[2];$/;"	m	struct:__anon2	file:
dfifo	.\lsi53c895a.c	/^    uint8_t dfifo;$/;"	m	struct:__anon25	file:
diag	.\slavio_misc.c	/^    uint8_t diag, mctrl;$/;"	m	struct:MiscState	file:
did0	.\stellaris.c	/^    uint32_t did0;$/;"	m	struct:__anon109	file:
did1	.\stellaris.c	/^    uint32_t did1;$/;"	m	struct:__anon109	file:
dien	.\lsi53c895a.c	/^    uint8_t dien;$/;"	m	struct:__anon25	file:
diff	.\wm8750.c	/^    uint8_t diff[2], pol, ds, monomix[2], alc, mute;$/;"	m	struct:wm8750_s	file:
diff_timeval_us	.\etraxfs_timer.c	/^int diff_timeval_us(struct timeval *a, struct timeval *b)$/;"	f
dir	.\fdc.c	/^    uint8_t dir;              \/* Direction              *\/$/;"	m	struct:fdrive_t	file:
dir	.\omap.c	/^    uint16_t dir;$/;"	m	struct:omap_gpio_s	file:
dir	.\omap.c	/^    uint16_t dir;$/;"	m	struct:omap_mpuio_s	file:
dir	.\pl061.c	/^    uint8_t dir;$/;"	m	struct:__anon56	file:
dir	.\pxa2xx_gpio.c	/^    uint32_t dir[PXA2XX_GPIO_BANKS];$/;"	m	struct:pxa2xx_gpio_info_s	file:
dira	.\cuda.c	/^    uint8_t dira;   \/* A-side direction (1=output) *\/$/;"	m	struct:CUDAState	file:
dirb	.\cuda.c	/^    uint8_t dirb;   \/* B-side direction (1=output) *\/$/;"	m	struct:CUDAState	file:
directcntl	.\ppc405_uc.c	/^    uint8_t directcntl;$/;"	m	struct:ppc4xx_i2c_t	file:
direction	.\max7310.c	/^    uint8_t direction;$/;"	m	struct:max7310_s	file:
disable_interrupt	.\eepro100.c	/^static void disable_interrupt(EEPRO100State * s)$/;"	f	file:
disabled	.\slavio_serial.c	/^    int disabled;$/;"	m	struct:ChannelState	file:
disk	.\fdc.c	/^    fdisk_type_t  disk;$/;"	m	struct:fd_format_t	file:
display	.\mips_malta.c	/^    CharDriverState *display;$/;"	m	struct:__anon34	file:
display_text	.\mips_malta.c	/^    char display_text[9];$/;"	m	struct:__anon34	file:
divide_conf	.\apic.c	/^    uint32_t divide_conf;$/;"	m	struct:APICState	file:
divider	.\omap_i2c.c	/^    uint8_t divider;$/;"	m	struct:omap_i2c_s	file:
divider	.\serial.c	/^    uint16_t divider;$/;"	m	struct:SerialState	file:
divisor	.\omap1_clk.c	/^    unsigned int divisor;	\/* Rate relative to input (if .enabled) *\/$/;"	m	struct:clk	file:
dma	.\esp.c	/^    int dma;$/;"	m	struct:ESPState	file:
dma	.\omap.h	/^    struct omap_dma_s *dma;$/;"	m	struct:omap_mpu_state_s	typeref:struct:omap_mpu_state_s::omap_dma_s
dma	.\omap_i2c.c	/^    uint16_t dma;$/;"	m	struct:omap_i2c_s	file:
dma	.\omap_lcdc.c	/^    struct omap_dma_lcd_channel_s *dma;$/;"	m	struct:omap_lcd_panel_s	typeref:struct:omap_lcd_panel_s::omap_dma_lcd_channel_s	file:
dma	.\omap_mmc.c	/^    qemu_irq *dma;$/;"	m	struct:omap_mmc_s	file:
dma	.\pxa.h	/^    struct pxa2xx_dma_state_s *dma;$/;"	m	struct:pxa2xx_i2s_s	typeref:struct:pxa2xx_i2s_s::pxa2xx_dma_state_s
dma	.\pxa.h	/^    struct pxa2xx_dma_state_s *dma;$/;"	m	struct:pxa2xx_state_s	typeref:struct:pxa2xx_state_s::pxa2xx_dma_state_s
dma	.\pxa2xx.c	/^    struct pxa2xx_dma_state_s *dma;$/;"	m	struct:pxa2xx_fir_s	typeref:struct:pxa2xx_fir_s::pxa2xx_dma_state_s	file:
dma	.\pxa2xx_mmci.c	/^    void *dma;$/;"	m	struct:pxa2xx_mmci_s	file:
dma	.\sb16.c	/^    int dma;$/;"	m	struct:SB16State	file:
dma	.\sb16.c	/^    int dma;$/;"	m	struct:__anon88	file:
dma_auto	.\sb16.c	/^    int dma_auto;$/;"	m	struct:SB16State	file:
dma_base	.\sun4m.c	/^    target_phys_addr_t idreg_base, dma_base, esp_base, le_base;$/;"	m	struct:hwdef	file:
dma_buf	.\lsi53c895a.c	/^    uint8_t *dma_buf;$/;"	m	struct:__anon25	file:
dma_buf	.\scsi-disk.c	/^    uint8_t *dma_buf;$/;"	m	struct:SCSIRequest	file:
dma_buf_rw	.\ide.c	/^static int dma_buf_rw(BMDMAState *bm, int is_write)$/;"	f	file:
dma_cb	.\ide.c	/^    BlockDriverCompletionFunc *dma_cb;$/;"	m	struct:BMDMAState	file:
dma_ch	.\pxa2xx_lcd.c	/^    } dma_ch[7];$/;"	m	struct:pxa2xx_lcdc_s	typeref:struct:pxa2xx_lcdc_s::__anon85	file:
dma_chann	.\fdc.c	/^    int dma_chann;$/;"	m	struct:fdctrl_t	file:
dma_ck	.\omap1_clk.c	/^static struct clk dma_ck = {$/;"	v	typeref:struct:clk	file:
dma_cmd	.\sb16.c	/^static void dma_cmd (SB16State *s, uint8_t cmd, uint8_t d0, int dma_len)$/;"	f	file:
dma_cmd8	.\sb16.c	/^static void dma_cmd8 (SB16State *s, int mask, int dma_len)$/;"	f	file:
dma_cont	.\dma.c	/^static struct dma_cont {$/;"	s	file:
dma_controllers	.\dma.c	/^} dma_controllers[2];$/;"	v	typeref:struct:dma_cont	file:
dma_counter	.\esp.c	/^    uint32_t dma_counter;$/;"	m	struct:ESPState	file:
dma_en	.\fdc.c	/^    uint8_t dma_en;$/;"	m	struct:fdctrl_t	file:
dma_init2	.\dma.c	/^static void dma_init2(struct dma_cont *d, int base, int dshift,$/;"	f	file:
dma_irq_map	.\omap.c	/^struct dma_irq_map {$/;"	s	file:
dma_lcdfree_ck	.\omap1_clk.c	/^static struct clk dma_lcdfree_ck = {$/;"	v	typeref:struct:clk	file:
dma_left	.\esp.c	/^    uint32_t dma_left;$/;"	m	struct:ESPState	file:
dma_load	.\dma.c	/^static int dma_load (QEMUFile *f, void *opaque, int version_id)$/;"	f	file:
dma_load	.\sparc32_dma.c	/^static int dma_load(QEMUFile *f, void *opaque, int version_id)$/;"	f	file:
dma_mem_read	.\sparc32_dma.c	/^static CPUReadMemoryFunc *dma_mem_read[3] = {$/;"	v	file:
dma_mem_readl	.\sparc32_dma.c	/^static uint32_t dma_mem_readl(void *opaque, target_phys_addr_t addr)$/;"	f	file:
dma_mem_write	.\sparc32_dma.c	/^static CPUWriteMemoryFunc *dma_mem_write[3] = {$/;"	v	file:
dma_mem_writel	.\sparc32_dma.c	/^static void dma_mem_writel(void *opaque, target_phys_addr_t addr, uint32_t val)$/;"	f	file:
dma_opaque	.\esp.c	/^    void *dma_opaque;$/;"	m	struct:ESPState	file:
dma_opaque	.\pcnet.c	/^    void *dma_opaque;$/;"	m	struct:PCNetState_st	file:
dma_regs	.\dma.c	/^struct dma_regs {$/;"	s	file:
dma_reset	.\dma.c	/^static void dma_reset(void *opaque)$/;"	f	file:
dma_reset	.\sparc32_dma.c	/^static void dma_reset(void *opaque)$/;"	f	file:
dma_running	.\sb16.c	/^    int dma_running;$/;"	m	struct:SB16State	file:
dma_save	.\dma.c	/^static void dma_save (QEMUFile *f, void *opaque)$/;"	f	file:
dma_save	.\sparc32_dma.c	/^static void dma_save(QEMUFile *f, void *opaque)$/;"	f	file:
dma_set_irq	.\sparc32_dma.c	/^static void dma_set_irq(void *opaque, int irq, int level)$/;"	f	file:
dmacr	.\pl011.c	/^    uint32_t dmacr;$/;"	m	struct:__anon52	file:
dmaregs	.\sparc32_dma.c	/^    uint32_t dmaregs[DMA_REGS];$/;"	m	struct:DMAState	file:
dmask16	.\vga.c	/^static const uint32_t dmask16[16] = {$/;"	v	file:
dmask4	.\vga.c	/^static const uint32_t dmask4[4] = {$/;"	v	file:
dmbs	.\lsi53c895a.c	/^    uint32_t dmbs;$/;"	m	struct:__anon25	file:
dmode	.\lsi53c895a.c	/^    uint8_t dmode;$/;"	m	struct:__anon25	file:
dmr	.\openpic.c	/^	uint32_t dmr;    \/* Doorbell messaging register *\/$/;"	m	struct:openpic_t::__anon45	file:
dnad	.\lsi53c895a.c	/^    uint32_t dnad;$/;"	m	struct:__anon25	file:
dnad64	.\lsi53c895a.c	/^    uint32_t dnad64;$/;"	m	struct:__anon25	file:
do_cmd	.\esp.c	/^    int do_cmd;$/;"	m	struct:ESPState	file:
do_cmd	.\esp.c	/^static void do_cmd(ESPState *s, uint8_t *buf)$/;"	f	file:
do_swappal	.\alpha_palcode.c	/^static void do_swappal (CPUState *env, uint64_t palid)$/;"	f	file:
dolog	.\adlib.c	39;"	d	file:
dolog	.\dma.c	29;"	d	file:
dolog	.\es1370.c	249;"	d	file:
dolog	.\es1370.c	251;"	d	file:
dolog	.\sb16.c	32;"	d	file:
done	.\usb-ohci.c	/^    uint32_t done;$/;"	m	struct:__anon123	file:
done	.\usb-ohci.c	/^    uint32_t done;$/;"	m	struct:ohci_hcca	file:
done_count	.\usb-ohci.c	/^    int done_count;$/;"	m	struct:__anon123	file:
doorbells	.\openpic.c	/^    } doorbells[MAX_DBL];$/;"	m	struct:openpic_t	typeref:struct:openpic_t::__anon45	file:
double_index	.\omap.h	/^    double_index,$/;"	e	enum:__anon37
dpll	.\omap.h	/^        omap_clk dpll;$/;"	m	struct:omap_mpu_state_s::dpll_ctl_s
dpll	.\omap.h	/^    } dpll[3];$/;"	m	struct:omap_mpu_state_s	typeref:struct:omap_mpu_state_s::dpll_ctl_s
dpll1	.\omap1_clk.c	/^static struct clk dpll1 = {$/;"	v	typeref:struct:clk	file:
dpll1_mode	.\omap.h	/^        int dpll1_mode;$/;"	m	struct:omap_mpu_state_s::__anon40
dpll2	.\omap1_clk.c	/^static struct clk dpll2 = {$/;"	v	typeref:struct:clk	file:
dpll3	.\omap1_clk.c	/^static struct clk dpll3 = {$/;"	v	typeref:struct:clk	file:
dpll4	.\omap1_clk.c	/^static struct clk dpll4 = {$/;"	v	typeref:struct:clk	file:
dpll_ctl_s	.\omap.h	/^    struct dpll_ctl_s {$/;"	s	struct:omap_mpu_state_s
dprintf	.\gt64xxx.c	36;"	d	file:
dprintf	.\gt64xxx.c	38;"	d	file:
dprintf	.\usb-ohci.c	44;"	d	file:
dprintf	.\usb-ohci.c	46;"	d	file:
dr	.\sh_serial.c	/^    uint8_t dr; \/* ftdr \/ tdr *\/$/;"	m	struct:__anon96	file:
dr2r	.\pl061.c	/^    uint8_t dr2r;$/;"	m	struct:__anon56	file:
dr4r	.\pl061.c	/^    uint8_t dr4r;$/;"	m	struct:__anon56	file:
dr8r	.\pl061.c	/^    uint8_t dr8r;$/;"	m	struct:__anon56	file:
draw_horizontal_line	.\jazz_led.c	/^static void draw_horizontal_line(DisplayState *ds, int posy, int posx1, int posx2, uint32_t color)$/;"	f	file:
draw_line_func	.\omap_lcdc.c	/^typedef void draw_line_func($/;"	t	file:
draw_line_table12	.\omap_lcdc.c	/^}, *draw_line_table12[33] = {$/;"	v	file:
draw_line_table16	.\omap_lcdc.c	/^}, *draw_line_table16[33] = {$/;"	v	file:
draw_line_table2	.\omap_lcdc.c	/^static draw_line_func *draw_line_table2[33] = {$/;"	v	file:
draw_line_table4	.\omap_lcdc.c	/^}, *draw_line_table4[33] = {$/;"	v	file:
draw_line_table8	.\omap_lcdc.c	/^}, *draw_line_table8[33] = {$/;"	v	file:
draw_vertical_line	.\jazz_led.c	/^static void draw_vertical_line(DisplayState *ds, int posx, int posy1, int posy2, uint32_t color)$/;"	f	file:
drawfn	.\pl110.c	/^typedef void (*drawfn)(uint32_t *, uint8_t *, const uint8_t *, int);$/;"	t	file:
drawfn	.\pxa2xx_lcd.c	/^typedef void (*drawfn)(uint32_t *, uint8_t *, const uint8_t *, int, int);$/;"	t	file:
dregs	.\cs4231.c	/^    uint8_t dregs[CS_DREGS];$/;"	m	struct:CSState	file:
drflags	.\fdc.c	/^    fdrive_flags_t drflags;$/;"	m	struct:fdrive_t	file:
drive	.\fdc.c	/^    fdrive_type_t drive;$/;"	m	struct:fd_format_t	file:
drive	.\fdc.c	/^    fdrive_type_t drive;$/;"	m	struct:fdrive_t	file:
drive_serial	.\ide.c	/^    int drive_serial;$/;"	m	struct:IDEState	file:
driver_status	.\scsi-generic.c	/^    int driver_status;$/;"	m	struct:SCSIDeviceState	file:
drives	.\fdc.c	/^    fdrive_t drives[2];$/;"	m	struct:fdctrl_t	file:
drq	.\omap.c	/^    uint32_t drq;$/;"	m	struct:omap_dma_s	file:
drq	.\omap.h	/^    qemu_irq *drq;$/;"	m	struct:omap_mpu_state_s
drq	.\omap_i2c.c	/^    qemu_irq drq[2];$/;"	m	struct:omap_i2c_s	file:
drs	.\lsi53c895a.c	/^    uint32_t drs;$/;"	m	struct:__anon25	file:
drv0	.\fdc.c	/^static inline fdrive_t *drv0 (fdctrl_t *fdctrl)$/;"	f	file:
drv1	.\fdc.c	/^static inline fdrive_t *drv1 (fdctrl_t *fdctrl)$/;"	f	file:
ds	.\jazz_led.c	/^    DisplayState *ds;$/;"	m	struct:LedState	file:
ds	.\pl110.c	/^    DisplayState *ds;$/;"	m	struct:__anon59	file:
ds	.\pl190.c	/^    DisplayState *ds;$/;"	m	struct:__anon61	file:
ds	.\pxa2xx_lcd.c	/^    DisplayState *ds;$/;"	m	struct:pxa2xx_lcdc_s	file:
ds	.\ssd0303.c	/^    DisplayState *ds;$/;"	m	struct:__anon105	file:
ds	.\ssd0323.c	/^    DisplayState *ds;$/;"	m	struct:__anon106	file:
ds	.\tcx.c	/^    DisplayState *ds;$/;"	m	struct:TCXState	file:
ds	.\vmware_vga.c	/^    DisplayState *ds;$/;"	m	struct:vmsvga_state_s	file:
ds	.\wm8750.c	/^    uint8_t diff[2], pol, ds, monomix[2], alc, mute;$/;"	m	struct:wm8750_s	file:
ds1225y_init	.\ds1225y.c	/^ds1225y_t *ds1225y_init(target_phys_addr_t mem_base, const char *filename)$/;"	f
ds1225y_set_to_mode	.\ds1225y.c	/^static int ds1225y_set_to_mode(ds1225y_t *NVRAM, nvram_open_mode mode, const char *filemode)$/;"	f	file:
ds1225y_t	.\ds1225y.c	/^struct ds1225y_t$/;"	s	file:
ds1225y_t	.\mips.h	/^typedef struct ds1225y_t ds1225y_t;$/;"	t	typeref:struct:ds1225y_t
dsa	.\lsi53c895a.c	/^    uint32_t dsa;$/;"	m	struct:__anon25	file:
dsacntl	.\ppc405_uc.c	/^    uint32_t dsacntl;$/;"	m	struct:ppc405_ocm_t	file:
dsarc	.\ppc405_uc.c	/^    uint32_t dsarc;$/;"	m	struct:ppc405_ocm_t	file:
dscm1xxxx_attach	.\ide.c	/^static int dscm1xxxx_attach(void *opaque)$/;"	f	file:
dscm1xxxx_cis	.\ide.c	/^static const uint8_t dscm1xxxx_cis[0x14a] = {$/;"	v	file:
dscm1xxxx_detach	.\ide.c	/^static int dscm1xxxx_detach(void *opaque)$/;"	f	file:
dscm1xxxx_init	.\ide.c	/^struct pcmcia_card_s *dscm1xxxx_init(BlockDriverState *bdrv)$/;"	f
dshift	.\dma.c	/^    int dshift;$/;"	m	struct:dma_cont	file:
dsor	.\tsc210x.c	/^    int dsor;$/;"	m	struct:tsc210x_rate_info_s	file:
dsp	.\lsi53c895a.c	/^    uint32_t dsp;$/;"	m	struct:__anon25	file:
dsp_base	.\omap.h	/^        target_phys_addr_t dsp_base;$/;"	m	struct:omap_mpu_state_s::__anon40
dsp_ck	.\omap1_clk.c	/^static struct clk dsp_ck = {$/;"	v	typeref:struct:clk	file:
dsp_get_data	.\sb16.c	/^static inline uint8_t dsp_get_data (SB16State *s)$/;"	f	file:
dsp_get_hilo	.\sb16.c	/^static uint16_t dsp_get_hilo (SB16State *s)$/;"	f	file:
dsp_get_lohi	.\sb16.c	/^static uint16_t dsp_get_lohi (SB16State *s)$/;"	f	file:
dsp_idlect1	.\omap.h	/^        uint16_t dsp_idlect1;$/;"	m	struct:omap_mpu_state_s::__anon40
dsp_idlect2	.\omap.h	/^        uint16_t dsp_idlect2;$/;"	m	struct:omap_mpu_state_s::__anon40
dsp_out_data	.\sb16.c	/^static inline void dsp_out_data (SB16State *s, uint8_t val)$/;"	f	file:
dsp_rstct2	.\omap.h	/^        uint16_t dsp_rstct2;$/;"	m	struct:omap_mpu_state_s::__anon40
dspmmu_ck	.\omap1_clk.c	/^static struct clk dspmmu_ck = {$/;"	v	typeref:struct:clk	file:
dspper_ck	.\omap1_clk.c	/^static struct clk dspper_ck = {$/;"	v	typeref:struct:clk	file:
dsps	.\lsi53c895a.c	/^    uint32_t dsps;$/;"	m	struct:__anon25	file:
dsptim_ck	.\omap1_clk.c	/^static struct clk dsptim_ck = {$/;"	v	typeref:struct:clk	file:
dspxor_ck	.\omap1_clk.c	/^static struct clk dspxor_ck = {$/;"	v	typeref:struct:clk	file:
dst	.\omap.h	/^    unsigned char dst;$/;"	m	struct:omap_dma_lcd_channel_s
dst	.\openpic.c	/^    IRQ_dst_t dst[MAX_CPU];$/;"	m	struct:openpic_t	file:
dstat	.\lsi53c895a.c	/^    uint8_t dstat;$/;"	m	struct:__anon25	file:
dto	.\omap_mmc.c	/^    uint16_t dto;$/;"	m	struct:omap_mmc_s	file:
dual	.\omap.h	/^    int dual;$/;"	m	struct:omap_dma_lcd_channel_s
dummy_cpu_set_irq	.\etraxfs.c	/^static void dummy_cpu_set_irq(void *opaque, int irq, int level)$/;"	f	file:
dummy_cpu_set_irq	.\sun4m.c	/^static void dummy_cpu_set_irq(void *opaque, int irq, int level)$/;"	f	file:
dummy_cpu_set_irq	.\sun4u.c	/^static void dummy_cpu_set_irq(void *opaque, int irq, int level)$/;"	f	file:
dummy_m68k_init	.\dummy_m68k.c	/^static void dummy_m68k_init(int ram_size, int vga_ram_size,$/;"	f	file:
dummy_m68k_machine	.\dummy_m68k.c	/^QEMUMachine dummy_m68k_machine = {$/;"	v
dummy_refresh_clock	.\pcspk.c	/^    int dummy_refresh_clock;$/;"	m	struct:__anon51	file:
dummy_refresh_clock	.\ppc_prep.c	/^int dummy_refresh_clock;$/;"	v
dump_statistics	.\eepro100.c	/^static void dump_statistics(EEPRO100State * s)$/;"	f	file:
dw	.\omap_mmc.c	/^    int dw;$/;"	m	struct:omap_mmc_s	file:
dx	.\adb.c	/^    int dx, dy, dz;$/;"	m	struct:MouseState	file:
dx	.\usb-hid.c	/^    int dx, dy, dz, buttons_state;$/;"	m	struct:USBMouseState	file:
dx	.\usb-wacom.c	/^    int dx, dy, dz, buttons_state;$/;"	m	struct:USBWacomState	file:
dy	.\adb.c	/^    int dx, dy, dz;$/;"	m	struct:MouseState	file:
dy	.\usb-hid.c	/^    int dx, dy, dz, buttons_state;$/;"	m	struct:USBMouseState	file:
dy	.\usb-wacom.c	/^    int dx, dy, dz, buttons_state;$/;"	m	struct:USBWacomState	file:
dz	.\adb.c	/^    int dx, dy, dz;$/;"	m	struct:MouseState	file:
dz	.\usb-hid.c	/^    int dx, dy, dz, buttons_state;$/;"	m	struct:USBMouseState	file:
dz	.\usb-wacom.c	/^    int dx, dy, dz, buttons_state;$/;"	m	struct:USBWacomState	file:
e0_keycodes	.\slavio_serial.c	/^static const uint8_t e0_keycodes[128] = {$/;"	v	file:
e0_mode	.\slavio_serial.c	/^    int e0_mode, led_mode, caps_lock_mode, num_lock_mode;$/;"	m	struct:ChannelState	file:
e3	.\sb16.c	/^static const char e3[] = "COPYRIGHT (C) CREATIVE TECHNOLOGY LTD, 1992.";$/;"	v	file:
ebc_reset	.\ppc405_uc.c	/^static void ebc_reset (void *opaque)$/;"	f	file:
ecc	.\spitz.c	/^    struct ecc_state_s ecc;$/;"	m	struct:sl_nand_s	typeref:struct:sl_nand_s::ecc_state_s	file:
ecc_base	.\sun4m.c	/^    target_phys_addr_t ecc_base;$/;"	m	struct:hwdef	file:
ecc_digest	.\ecc.c	/^uint8_t ecc_digest(struct ecc_state_s *s, uint8_t sample)$/;"	f
ecc_get	.\ecc.c	/^void ecc_get(QEMUFile *f, struct ecc_state_s *s)$/;"	f
ecc_init	.\eccmemctl.c	/^void * ecc_init(target_phys_addr_t base, uint32_t version)$/;"	f
ecc_load	.\eccmemctl.c	/^static int ecc_load(QEMUFile *f, void *opaque, int version_id)$/;"	f	file:
ecc_mem_read	.\eccmemctl.c	/^static CPUReadMemoryFunc *ecc_mem_read[3] = {$/;"	v	file:
ecc_mem_readl	.\eccmemctl.c	/^static uint32_t ecc_mem_readl(void *opaque, target_phys_addr_t addr)$/;"	f	file:
ecc_mem_write	.\eccmemctl.c	/^static CPUWriteMemoryFunc *ecc_mem_write[3] = {$/;"	v	file:
ecc_mem_writel	.\eccmemctl.c	/^static void ecc_mem_writel(void *opaque, target_phys_addr_t addr, uint32_t val)$/;"	f	file:
ecc_put	.\ecc.c	/^void ecc_put(QEMUFile *f, struct ecc_state_s *s)$/;"	f
ecc_reset	.\ecc.c	/^void ecc_reset(struct ecc_state_s *s)$/;"	f
ecc_reset	.\eccmemctl.c	/^static void ecc_reset(void *opaque)$/;"	f	file:
ecc_save	.\eccmemctl.c	/^static void ecc_save(QEMUFile *f, void *opaque)$/;"	f	file:
ecc_state_s	.\flash.h	/^struct ecc_state_s {$/;"	s
ecc_version	.\sun4m.c	/^    uint32_t ecc_version;$/;"	m	struct:hwdef	file:
ecccfg	.\ppc405_uc.c	/^    uint32_t ecccfg;$/;"	m	struct:ppc4xx_sdram_t	file:
eccesr	.\ppc405_uc.c	/^    uint32_t eccesr;$/;"	m	struct:ppc4xx_sdram_t	file:
ecr	.\mcf_fec.c	/^    uint32_t ecr;$/;"	m	struct:__anon30	file:
edge	.\omap.c	/^    uint16_t edge;$/;"	m	struct:omap_gpio_s	file:
edge	.\omap.c	/^    uint16_t edge;$/;"	m	struct:omap_mpuio_s	file:
eecs	.\eeprom93xx.c	/^    uint8_t eecs;$/;"	m	struct:_eeprom_t	file:
eecs	.\rtl8139.c	/^    uint8_t eecs;$/;"	m	struct:EEprom9346	file:
eedi	.\rtl8139.c	/^    uint8_t eedi;$/;"	m	struct:EEprom9346	file:
eedo	.\eeprom93xx.c	/^    uint8_t eedo;$/;"	m	struct:_eeprom_t	file:
eedo	.\rtl8139.c	/^    uint8_t eedo;$/;"	m	struct:EEprom9346	file:
eepro100	.\eepro100.c	/^    EEPRO100State eepro100;$/;"	m	struct:PCIEEPRO100State	file:
eepro100_acknowledge	.\eepro100.c	/^static void eepro100_acknowledge(EEPRO100State * s)$/;"	f	file:
eepro100_cna_interrupt	.\eepro100.c	/^static void eepro100_cna_interrupt(EEPRO100State * s)$/;"	f	file:
eepro100_cu_command	.\eepro100.c	/^static void eepro100_cu_command(EEPRO100State * s, uint8_t val)$/;"	f	file:
eepro100_cx_interrupt	.\eepro100.c	/^static void eepro100_cx_interrupt(EEPRO100State * s)$/;"	f	file:
eepro100_fr_interrupt	.\eepro100.c	/^static void eepro100_fr_interrupt(EEPRO100State * s)$/;"	f	file:
eepro100_interrupt	.\eepro100.c	/^static void eepro100_interrupt(EEPRO100State * s, uint8_t stat)$/;"	f	file:
eepro100_mdi_default	.\eepro100.c	/^static const uint16_t eepro100_mdi_default[] = {$/;"	v	file:
eepro100_mdi_interrupt	.\eepro100.c	/^static void eepro100_mdi_interrupt(EEPRO100State * s)$/;"	f	file:
eepro100_mdi_mask	.\eepro100.c	/^static const uint16_t eepro100_mdi_mask[] = {$/;"	v	file:
eepro100_read1	.\eepro100.c	/^static uint8_t eepro100_read1(EEPRO100State * s, uint32_t addr)$/;"	f	file:
eepro100_read2	.\eepro100.c	/^static uint16_t eepro100_read2(EEPRO100State * s, uint32_t addr)$/;"	f	file:
eepro100_read4	.\eepro100.c	/^static uint32_t eepro100_read4(EEPRO100State * s, uint32_t addr)$/;"	f	file:
eepro100_read_eeprom	.\eepro100.c	/^static uint16_t eepro100_read_eeprom(EEPRO100State * s)$/;"	f	file:
eepro100_read_mdi	.\eepro100.c	/^static uint32_t eepro100_read_mdi(EEPRO100State * s)$/;"	f	file:
eepro100_read_port	.\eepro100.c	/^static uint32_t eepro100_read_port(EEPRO100State * s)$/;"	f	file:
eepro100_ru_command	.\eepro100.c	/^static void eepro100_ru_command(EEPRO100State * s, uint8_t val)$/;"	f	file:
eepro100_rx_t	.\eepro100.c	/^} eepro100_rx_t;$/;"	t	typeref:struct:__anon12	file:
eepro100_selftest_t	.\eepro100.c	/^} eepro100_selftest_t;$/;"	t	typeref:struct:__anon17	file:
eepro100_stats_t	.\eepro100.c	/^} eepro100_stats_t;$/;"	t	typeref:struct:__anon13	file:
eepro100_swi_interrupt	.\eepro100.c	/^static void eepro100_swi_interrupt(EEPRO100State * s)$/;"	f	file:
eepro100_tx_t	.\eepro100.c	/^} eepro100_tx_t;$/;"	t	typeref:struct:__anon11	file:
eepro100_write1	.\eepro100.c	/^static void eepro100_write1(EEPRO100State * s, uint32_t addr, uint8_t val)$/;"	f	file:
eepro100_write2	.\eepro100.c	/^static void eepro100_write2(EEPRO100State * s, uint32_t addr, uint16_t val)$/;"	f	file:
eepro100_write4	.\eepro100.c	/^static void eepro100_write4(EEPRO100State * s, uint32_t addr, uint32_t val)$/;"	f	file:
eepro100_write_command	.\eepro100.c	/^static void eepro100_write_command(EEPRO100State * s, uint8_t val)$/;"	f	file:
eepro100_write_eeprom	.\eepro100.c	/^static void eepro100_write_eeprom(eeprom_t * eeprom, uint8_t val)$/;"	f	file:
eepro100_write_mdi	.\eepro100.c	/^static void eepro100_write_mdi(EEPRO100State * s, uint32_t val)$/;"	f	file:
eepro100_write_pointer	.\eepro100.c	/^static void eepro100_write_pointer(EEPRO100State * s, uint32_t val)$/;"	f	file:
eepro100_write_port	.\eepro100.c	/^static void eepro100_write_port(EEPRO100State * s, uint32_t val)$/;"	f	file:
eeprom	.\eepro100.c	/^    eeprom_t *eeprom;$/;"	m	struct:__anon16	file:
eeprom	.\mips_malta.c	/^static eeprom24c0x_t eeprom = {$/;"	v	file:
eeprom	.\rtl8139.c	/^    EEprom9346 eeprom;$/;"	m	struct:RTL8139State	file:
eeprom24c0x_read	.\mips_malta.c	/^static uint8_t eeprom24c0x_read()$/;"	f	file:
eeprom24c0x_t	.\mips_malta.c	/^typedef struct _eeprom24c0x_t eeprom24c0x_t;$/;"	t	typeref:struct:_eeprom24c0x_t	file:
eeprom24c0x_write	.\mips_malta.c	/^static void eeprom24c0x_write(int scl, int sda)$/;"	f	file:
eeprom93xx_data	.\eeprom93xx.c	/^uint16_t *eeprom93xx_data(eeprom_t *eeprom)$/;"	f
eeprom93xx_free	.\eeprom93xx.c	/^void eeprom93xx_free(eeprom_t *eeprom)$/;"	f
eeprom93xx_new	.\eeprom93xx.c	/^eeprom_t *eeprom93xx_new(uint16_t nwords)$/;"	f
eeprom93xx_read	.\eeprom93xx.c	/^uint16_t eeprom93xx_read(eeprom_t *eeprom)$/;"	f
eeprom93xx_write	.\eeprom93xx.c	/^void eeprom93xx_write(eeprom_t *eeprom, int eecs, int eesk, int eedi)$/;"	f
eeprom_instance	.\eeprom93xx.c	/^static int eeprom_instance = 0;$/;"	v	file:
eeprom_load	.\eeprom93xx.c	/^static int eeprom_load(QEMUFile *f, void *opaque, int version_id)$/;"	f	file:
eeprom_quick_cmd	.\smbus_eeprom.c	/^static void eeprom_quick_cmd(SMBusDevice *dev, uint8_t read)$/;"	f	file:
eeprom_read_data	.\smbus_eeprom.c	/^static uint8_t eeprom_read_data(SMBusDevice *dev, uint8_t cmd, int n)$/;"	f	file:
eeprom_receive_byte	.\smbus_eeprom.c	/^static uint8_t eeprom_receive_byte(SMBusDevice *dev)$/;"	f	file:
eeprom_save	.\eeprom93xx.c	/^static void eeprom_save(QEMUFile *f, void *opaque)$/;"	f	file:
eeprom_send_byte	.\smbus_eeprom.c	/^static void eeprom_send_byte(SMBusDevice *dev, uint8_t val)$/;"	f	file:
eeprom_t	.\eeprom93xx.h	/^typedef struct _eeprom_t eeprom_t;$/;"	t	typeref:struct:_eeprom_t
eeprom_version	.\eeprom93xx.c	/^static const int eeprom_version = 20061112;$/;"	v	file:
eeprom_write_data	.\smbus_eeprom.c	/^static void eeprom_write_data(SMBusDevice *dev, uint8_t cmd, uint8_t *buf, int len)$/;"	f	file:
eesk	.\eeprom93xx.c	/^    uint8_t eesk;$/;"	m	struct:_eeprom_t	file:
eesk	.\rtl8139.c	/^    uint8_t eesk;$/;"	m	struct:EEprom9346	file:
eg_typ	.\fmopl.h	/^	UINT8 eg_typ;	\/* envelope type flag                  *\/$/;"	m	struct:fm_opl_slot
eh_entry	.\usb-hid.c	/^    QEMUPutMouseEntry *eh_entry;$/;"	m	struct:USBMouseState	file:
eh_entry	.\usb-wacom.c	/^    QEMUPutMouseEntry *eh_entry;$/;"	m	struct:USBWacomState	file:
eimr	.\mcf_fec.c	/^    uint32_t eimr;$/;"	m	struct:__anon30	file:
eir	.\mcf_fec.c	/^    uint32_t eir;$/;"	m	struct:__anon30	file:
el_link	.\usb-uhci.c	/^    uint32_t el_link;$/;"	m	struct:UHCI_QH	file:
elcr	.\i8259.c	/^    uint8_t elcr; \/* PIIX edge\/trigger selection*\/$/;"	m	struct:PicState	file:
elcr_ioport_read	.\i8259.c	/^static uint32_t elcr_ioport_read(void *opaque, uint32_t addr1)$/;"	f	file:
elcr_ioport_write	.\i8259.c	/^static void elcr_ioport_write(void *opaque, uint32_t addr, uint32_t val)$/;"	f	file:
elcr_mask	.\i8259.c	/^    uint8_t elcr_mask;$/;"	m	struct:PicState	file:
elem_delta	.\omap.c	/^        int elem_delta[2];$/;"	m	struct:omap_dma_channel_s::omap_dma_reg_set_s	file:
element	.\omap.c	/^        int element;$/;"	m	struct:omap_dma_channel_s::omap_dma_reg_set_s	file:
element_index	.\omap.c	/^    int16_t element_index[2];$/;"	m	struct:omap_dma_channel_s	file:
element_index_f1	.\omap.h	/^    int16_t element_index_f1;$/;"	m	struct:omap_dma_lcd_channel_s
element_index_f2	.\omap.h	/^    int16_t element_index_f2;$/;"	m	struct:omap_dma_lcd_channel_s
elementary_transfer_size	.\ide.c	/^    int elementary_transfer_size;$/;"	m	struct:IDEState	file:
elements	.\omap.c	/^        int elements;$/;"	m	struct:omap_dma_channel_s::omap_dma_reg_set_s	file:
elements	.\omap.c	/^    uint16_t elements;$/;"	m	struct:omap_dma_channel_s	file:
elements_f1	.\omap.h	/^    uint16_t elements_f1;$/;"	m	struct:omap_dma_lcd_channel_s
elements_f2	.\omap.h	/^    uint16_t elements_f2;$/;"	m	struct:omap_dma_lcd_channel_s
emiff	.\omap.h	/^    emiff = 0,$/;"	e	enum:omap_dma_port
emiff_base	.\omap_lcdc.c	/^    ram_addr_t emiff_base;$/;"	m	struct:omap_lcd_panel_s	file:
emifs	.\omap.h	/^    emifs,$/;"	e	enum:omap_dma_port
emrbr	.\mcf_fec.c	/^    uint32_t emrbr;$/;"	m	struct:__anon30	file:
emux	.\stellaris.c	/^    uint32_t emux;$/;"	m	struct:__anon112	file:
enable	.\omap.c	/^    int enable;$/;"	m	struct:omap_dma_channel_s	file:
enable	.\omap.c	/^    int enable;$/;"	m	struct:omap_mpu_timer_s	file:
enable	.\omap.h	/^        uint8_t enable;$/;"	m	struct:omap_mpu_state_s::__anon38
enable	.\omap_lcdc.c	/^    int enable;$/;"	m	struct:omap_lcd_panel_s	file:
enable	.\omap_mmc.c	/^    int enable;$/;"	m	struct:omap_mmc_s	file:
enable	.\pxa.h	/^    int enable;$/;"	m	struct:pxa2xx_i2s_s
enable	.\pxa2xx.c	/^    int enable;$/;"	m	struct:pxa2xx_fir_s	file:
enable	.\pxa2xx.c	/^    int enable;$/;"	m	struct:pxa2xx_ssp_s	file:
enable	.\vmware_vga.c	/^    int enable;$/;"	m	struct:vmsvga_state_s	file:
enable	.\wm8750.c	/^    int enable;$/;"	m	struct:wm8750_s	file:
enable_count	.\sh_intc.h	/^    int enable_count;$/;"	m	struct:intc_source
enable_interrupt	.\eepro100.c	/^static void enable_interrupt(EEPRO100State * s)$/;"	f	file:
enable_max	.\sh_intc.h	/^    int enable_max;$/;"	m	struct:intc_source
enabled	.\adlib.c	/^    int enabled;$/;"	m	struct:__anon2	file:
enabled	.\arm_gic.c	/^    int enabled;$/;"	m	struct:gic_state	file:
enabled	.\arm_gic.c	/^    unsigned enabled:1;$/;"	m	struct:gic_irq_state	file:
enabled	.\mcf_intc.c	/^    uint64_t enabled;$/;"	m	struct:__anon32	file:
enabled	.\omap1_clk.c	/^    int enabled;		\/* Is enabled, regardless of its input clk *\/$/;"	m	struct:clk	file:
enabled	.\ptimer.c	/^    int enabled; \/* 0 = disabled, 1 = periodic, 2 = oneshot.  *\/$/;"	m	struct:ptimer_state	file:
enabled	.\sh_timer.c	/^    int enabled;$/;"	m	struct:__anon97	file:
enabled	.\ssd0303.c	/^    int enabled;$/;"	m	struct:__anon105	file:
enabled	.\tsc210x.c	/^    int enabled;$/;"	m	struct:tsc210x_state_s	file:
end_cyl	.\ide.c	/^	uint8_t end_cyl;		\/* end cylinder *\/$/;"	m	struct:partition	file:
end_head	.\ide.c	/^	uint8_t end_head;		\/* end head *\/$/;"	m	struct:partition	file:
end_prog	.\omap.c	/^    int end_prog;$/;"	m	struct:omap_dma_channel_s	file:
end_prog	.\omap.h	/^    unsigned char end_prog;$/;"	m	struct:omap_dma_lcd_channel_s
end_sector	.\ide.c	/^	uint8_t end_sector;	\/* end sector *\/$/;"	m	struct:partition	file:
end_transfer_func	.\ide.c	/^    EndTransferFunc *end_transfer_func;$/;"	m	struct:IDEState	file:
endian	.\ppc_prep.c	/^    int endian;$/;"	m	struct:sysctrl_t	file:
endintr	.\pxa2xx_dma.c	/^    uint32_t endintr;$/;"	m	struct:pxa2xx_dma_state_s	file:
enh_control	.\omap.c	/^    uint16_t enh_control;$/;"	m	struct:omap_tipb_bridge_s	file:
entry	.\vmmouse.c	/^    QEMUPutMouseEntry *entry;$/;"	m	struct:_VMMouseState	file:
enum_id	.\sh_intc.h	/^    intc_enum enum_id;$/;"	m	struct:intc_group
enum_id	.\sh_intc.h	/^    intc_enum enum_id;$/;"	m	struct:intc_vect
enum_ids	.\sh_intc.h	/^    intc_enum enum_ids[16];$/;"	m	struct:intc_prio_reg
enum_ids	.\sh_intc.h	/^    intc_enum enum_ids[32];$/;"	m	struct:intc_group
enum_ids	.\sh_intc.h	/^    intc_enum enum_ids[32];$/;"	m	struct:intc_mask_reg
env	.\etraxfs_timer.c	/^	CPUState *env;$/;"	m	struct:fs_timer_t	file:
env	.\mcf5206.c	/^    CPUState *env;$/;"	m	struct:__anon27	file:
env	.\mcf_intc.c	/^    CPUState *env;$/;"	m	struct:__anon32	file:
env	.\omap.h	/^    CPUState *env;$/;"	m	struct:omap_mpu_state_s
env	.\pxa.h	/^    CPUState *env;$/;"	m	struct:pxa2xx_state_s
env	.\vmport.c	/^    CPUState *env;$/;"	m	struct:_VMPortState	file:
eof_timer	.\usb-ohci.c	/^    QEMUTimer *eof_timer;$/;"	m	struct:__anon123	file:
eop	.\dma.c	/^    uint8_t eop;$/;"	m	struct:dma_regs	file:
eorintr	.\pxa2xx_dma.c	/^    uint32_t eorintr;$/;"	m	struct:pxa2xx_dma_state_s	file:
eot	.\fdc.c	/^    uint8_t eot; \/* last wanted sector *\/$/;"	m	struct:fdctrl_t	file:
epctl	.\ppc405_uc.c	/^    uint32_t epctl;$/;"	m	struct:ppc405ep_cpc_t	file:
epp_timeout	.\parallel.c	/^    int epp_timeout;$/;"	m	struct:ParallelState	file:
er	.\ppc405_uc.c	/^    uint32_t er;$/;"	m	struct:ppc405cr_cpc_t	file:
er	.\ppc405_uc.c	/^    uint32_t er;$/;"	m	struct:ppc405ep_cpc_t	file:
erase_end	.\sd.c	/^    uint32_t erase_end;$/;"	m	struct:SDState	file:
erase_shift	.\nand.c	/^    int erase_shift;$/;"	m	struct:nand_info_s	file:
erase_shift	.\nand.c	/^    int page_shift, oob_shift, erase_shift, addr_shift;$/;"	m	struct:nand_flash_s	file:
erase_start	.\sd.c	/^    uint32_t erase_start;$/;"	m	struct:SDState	file:
ercv	.\smc91c111.c	/^    uint16_t ercv;$/;"	m	struct:__anon103	file:
erdsr	.\mcf_fec.c	/^    uint32_t erdsr;$/;"	m	struct:__anon30	file:
err_int	.\pl080.c	/^    uint8_t err_int;$/;"	m	struct:__anon58	file:
err_mask	.\pl080.c	/^    uint8_t err_mask;$/;"	m	struct:__anon58	file:
error	.\ide.c	/^    uint8_t error;$/;"	m	struct:IDEState	file:
error_access	.\sh7750.c	/^static void error_access(const char *kind, target_phys_addr_t addr)$/;"	f	file:
es1370	.\es1370.c	/^    ES1370State es1370;$/;"	m	struct:PCIES1370State	file:
es1370_adc_callback	.\es1370.c	/^static void es1370_adc_callback (void *opaque, int avail)$/;"	f	file:
es1370_chan_bits	.\es1370.c	/^static const struct chan_bits es1370_chan_bits[] = {$/;"	v	typeref:struct:chan_bits	file:
es1370_dac1_calc_freq	.\es1370.c	/^static void es1370_dac1_calc_freq (ES1370State *s, uint32_t ctl,$/;"	f	file:
es1370_dac1_callback	.\es1370.c	/^static void es1370_dac1_callback (void *opaque, int free)$/;"	f	file:
es1370_dac2_and_adc_calc_freq	.\es1370.c	/^static void es1370_dac2_and_adc_calc_freq (ES1370State *s, uint32_t ctl,$/;"	f	file:
es1370_dac2_callback	.\es1370.c	/^static void es1370_dac2_callback (void *opaque, int free)$/;"	f	file:
es1370_fixup	.\es1370.c	/^static inline uint32_t es1370_fixup (ES1370State *s, uint32_t addr)$/;"	f	file:
es1370_init	.\es1370.c	/^int es1370_init (PCIBus *bus, AudioState *audio)$/;"	f
es1370_load	.\es1370.c	/^static int es1370_load (QEMUFile *f, void *opaque, int version_id)$/;"	f	file:
es1370_map	.\es1370.c	/^static void es1370_map (PCIDevice *pci_dev, int region_num,$/;"	f	file:
es1370_maybe_lower_irq	.\es1370.c	/^static void es1370_maybe_lower_irq (ES1370State *s, uint32_t sctl)$/;"	f	file:
es1370_on_reset	.\es1370.c	/^static void es1370_on_reset (void *opaque)$/;"	f	file:
es1370_reset	.\es1370.c	/^static void es1370_reset (ES1370State *s)$/;"	f	file:
es1370_run_channel	.\es1370.c	/^static void es1370_run_channel (ES1370State *s, size_t chan, int free_or_avail)$/;"	f	file:
es1370_save	.\es1370.c	/^static void es1370_save (QEMUFile *f, void *opaque)$/;"	f	file:
es1370_transfer_audio	.\es1370.c	/^static void es1370_transfer_audio (ES1370State *s, struct chan *d, int loop_sel,$/;"	f	file:
es1370_update_status	.\es1370.c	/^static void es1370_update_status (ES1370State *s, uint32_t new_status)$/;"	f	file:
es1370_update_voices	.\es1370.c	/^static void es1370_update_voices (ES1370State *s, uint32_t ctl, uint32_t sctl)$/;"	f	file:
esp_base	.\sun4m.c	/^    target_phys_addr_t espdma_base, esp_base;$/;"	m	struct:sun4d_hwdef	file:
esp_base	.\sun4m.c	/^    target_phys_addr_t idreg_base, dma_base, esp_base, le_base;$/;"	m	struct:hwdef	file:
esp_command_complete	.\esp.c	/^static void esp_command_complete(void *opaque, int reason, uint32_t tag,$/;"	f	file:
esp_dma_done	.\esp.c	/^static void esp_dma_done(ESPState *s)$/;"	f	file:
esp_do_dma	.\esp.c	/^static void esp_do_dma(ESPState *s)$/;"	f	file:
esp_init	.\esp.c	/^void *esp_init(target_phys_addr_t espaddr,$/;"	f
esp_irq	.\sun4m.c	/^    int esp_irq, le_irq, clock_irq, clock1_irq;$/;"	m	struct:sun4d_hwdef	file:
esp_irq	.\sun4m.c	/^    int intctl_g_intr, esp_irq, le_irq, clock_irq, clock1_irq;$/;"	m	struct:hwdef	file:
esp_load	.\esp.c	/^static int esp_load(QEMUFile *f, void *opaque, int version_id)$/;"	f	file:
esp_mem_read	.\esp.c	/^static CPUReadMemoryFunc *esp_mem_read[3] = {$/;"	v	file:
esp_mem_readb	.\esp.c	/^static uint32_t esp_mem_readb(void *opaque, target_phys_addr_t addr)$/;"	f	file:
esp_mem_write	.\esp.c	/^static CPUWriteMemoryFunc *esp_mem_write[3] = {$/;"	v	file:
esp_mem_writeb	.\esp.c	/^static void esp_mem_writeb(void *opaque, target_phys_addr_t addr, uint32_t val)$/;"	f	file:
esp_reset	.\esp.c	/^static void esp_reset(void *opaque)$/;"	f	file:
esp_save	.\esp.c	/^static void esp_save(QEMUFile *f, void *opaque)$/;"	f	file:
esp_scsi_attach	.\esp.c	/^void esp_scsi_attach(void *opaque, BlockDriverState *bd, int id)$/;"	f
espdma_base	.\sun4m.c	/^    target_phys_addr_t espdma_base, esp_base;$/;"	m	struct:sun4d_hwdef	file:
espdma_memory_read	.\sparc32_dma.c	/^void espdma_memory_read(void *opaque, uint8_t *buf, int len)$/;"	f
espdma_memory_write	.\sparc32_dma.c	/^void espdma_memory_write(void *opaque, uint8_t *buf, int len)$/;"	f
esr	.\apic.c	/^    uint32_t esr; \/* error register *\/$/;"	m	struct:APICState	file:
esr	.\ppc405_uc.c	/^    uint32_t esr;$/;"	m	struct:ppc40x_mal_t	file:
etdsr	.\mcf_fec.c	/^    uint32_t etdsr;$/;"	m	struct:__anon30	file:
ether_dhost	.\pcnet.c	/^    uint8_t ether_dhost[6];$/;"	m	struct:qemu_ether_header	file:
ether_shost	.\pcnet.c	/^    uint8_t ether_shost[6];$/;"	m	struct:qemu_ether_header	file:
ether_type	.\pcnet.c	/^    uint16_t ether_type;$/;"	m	struct:qemu_ether_header	file:
etrax_ack_irq	.\etraxfs.c	/^void etrax_ack_irq(CPUState *env, uint32_t mask)$/;"	f
etraxfs_ser_init	.\etraxfs_ser.c	/^void etraxfs_ser_init(CPUState *env, qemu_irq *irqs)$/;"	f
etraxfs_timer_init	.\etraxfs_timer.c	/^void etraxfs_timer_init(CPUState *env, qemu_irq *irqs)$/;"	f
evc	.\fmopl.h	/^	INT32 evc;		\/* envelope counter                    *\/$/;"	m	struct:fm_opl_slot
eve	.\fmopl.h	/^	INT32 eve;		\/* envelope counter end point          *\/$/;"	m	struct:fm_opl_slot
event	.\i2c.h	/^    i2c_event_cb event;$/;"	m	struct:i2c_slave
event	.\omap.c	/^    uint8_t event;$/;"	m	struct:omap_mpuio_s	file:
events	.\heathrow_pic.c	/^    uint32_t events;$/;"	m	struct:HeathrowPIC	file:
events	.\pxa2xx_timer.c	/^    uint32_t events;$/;"	m	struct:__anon86	file:
evm	.\fmopl.h	/^	UINT8 evm;		\/* envelope phase                      *\/$/;"	m	struct:fm_opl_slot
evs	.\fmopl.h	/^	INT32 evs;		\/* envelope counter step               *\/$/;"	m	struct:fm_opl_slot
evsa	.\fmopl.h	/^	INT32 evsa;	\/* envelope step for AR :AR[ksr]           *\/$/;"	m	struct:fm_opl_slot
evsd	.\fmopl.h	/^	INT32 evsd;	\/* envelope step for DR :DR[ksr]           *\/$/;"	m	struct:fm_opl_slot
evsr	.\fmopl.h	/^	INT32 evsr;	\/* envelope step for RR :RR[ksr]           *\/$/;"	m	struct:fm_opl_slot
execute_command	.\scsi-generic.c	/^static int execute_command(BlockDriverState *bdrv,$/;"	f	file:
exp	.\adlib.c	/^    int64_t exp[2];$/;"	m	struct:__anon2	file:
expand2	.\vga.c	/^static uint16_t expand2[256];$/;"	v	file:
expand4	.\vga.c	/^static uint32_t expand4[256];$/;"	v	file:
expand4to8	.\vga.c	/^static uint8_t expand4to8[16];$/;"	v	file:
ext_error	.\ide.c	/^    uint8_t ext_error;$/;"	m	struct:IDEState	file:
extension	.\stellaris_input.c	/^    int extension;$/;"	m	struct:__anon118	file:
extsts	.\ppc405_uc.c	/^    uint8_t extsts;$/;"	m	struct:ppc4xx_i2c_t	file:
fake_io	.\ppc_prep.c	/^    uint8_t fake_io[2];$/;"	m	struct:sysctrl_t	file:
falling	.\pxa2xx_gpio.c	/^    uint32_t falling[PXA2XX_GPIO_BANKS];$/;"	m	struct:pxa2xx_gpio_info_s	file:
fb_size	.\vmware_vga.c	/^    int fb_size;$/;"	m	struct:vmsvga_state_s	file:
fbrd	.\pl011.c	/^    uint32_t fbrd;$/;"	m	struct:__anon52	file:
fc	.\fmopl.h	/^	UINT32  fc;			\/* Freq. Increment base                *\/$/;"	m	struct:fm_opl_channel
fc_rcv_pause	.\eepro100.c	/^    uint32_t fc_xmt_pause, fc_rcv_pause, fc_rcv_unsupported;$/;"	m	struct:__anon13	file:
fc_rcv_unsupported	.\eepro100.c	/^    uint32_t fc_xmt_pause, fc_rcv_pause, fc_rcv_unsupported;$/;"	m	struct:__anon13	file:
fc_xmt_pause	.\eepro100.c	/^    uint32_t fc_xmt_pause, fc_rcv_pause, fc_rcv_unsupported;$/;"	m	struct:__anon13	file:
fcr	.\sh_serial.c	/^    uint16_t fcr;$/;"	m	struct:__anon96	file:
fd_base	.\sun4m.c	/^    target_phys_addr_t serial_base, fd_base;$/;"	m	struct:hwdef	file:
fd_format_t	.\fdc.c	/^typedef struct fd_format_t {$/;"	s	file:
fd_format_t	.\fdc.c	/^} fd_format_t;$/;"	t	typeref:struct:fd_format_t	file:
fd_formats	.\fdc.c	/^static const fd_format_t fd_formats[] = {$/;"	v	file:
fd_init	.\fdc.c	/^static void fd_init (fdrive_t *drv, BlockDriverState *bs)$/;"	f	file:
fd_irq	.\sun4m.c	/^    int ser_irq, ms_kb_irq, fd_irq, me_irq, cs_irq;$/;"	m	struct:hwdef	file:
fd_load	.\fdc.c	/^static int fd_load (QEMUFile *f, fdrive_t *fd)$/;"	f	file:
fd_recalibrate	.\fdc.c	/^static void fd_recalibrate (fdrive_t *drv)$/;"	f	file:
fd_reset	.\fdc.c	/^static void fd_reset (fdrive_t *drv)$/;"	f	file:
fd_revalidate	.\fdc.c	/^static void fd_revalidate (fdrive_t *drv)$/;"	f	file:
fd_save	.\fdc.c	/^static void fd_save (QEMUFile *f, fdrive_t *fd)$/;"	f	file:
fd_sector	.\fdc.c	/^static int fd_sector (fdrive_t *drv)$/;"	f	file:
fd_seek	.\fdc.c	/^static int fd_seek (fdrive_t *drv, uint8_t head, uint8_t track, uint8_t sect,$/;"	f	file:
fd_start	.\fdc.c	/^static void fd_start (fdrive_t *drv)$/;"	f	file:
fd_stop	.\fdc.c	/^static void fd_stop (fdrive_t *drv)$/;"	f	file:
fdaddr	.\pxa2xx_lcd.c	/^    uint32_t fdaddr;$/;"	m	struct:pxa_frame_descriptor_s	file:
fdc_load	.\fdc.c	/^static int fdc_load (QEMUFile *f, void *opaque, int version_id)$/;"	f	file:
fdc_save	.\fdc.c	/^static void fdc_save (QEMUFile *f, void *opaque)$/;"	f	file:
fdctrl	.\fdc.c	/^    fdctrl_t *fdctrl;$/;"	m	struct:fdctrl_t	file:
fdctrl_external_reset	.\fdc.c	/^static void fdctrl_external_reset(void *opaque)$/;"	f	file:
fdctrl_format_sector	.\fdc.c	/^static void fdctrl_format_sector (fdctrl_t *fdctrl)$/;"	f	file:
fdctrl_get_drive_type	.\fdc.c	/^int fdctrl_get_drive_type(fdctrl_t *fdctrl, int drive_num)$/;"	f
fdctrl_init	.\fdc.c	/^fdctrl_t *fdctrl_init (qemu_irq irq, int dma_chann, int mem_mapped,$/;"	f
fdctrl_init_common	.\fdc.c	/^static fdctrl_t *fdctrl_init_common (qemu_irq irq, int dma_chann,$/;"	f	file:
fdctrl_media_changed	.\fdc.c	/^static int fdctrl_media_changed(fdrive_t *drv)$/;"	f	file:
fdctrl_mem_read	.\fdc.c	/^static CPUReadMemoryFunc *fdctrl_mem_read[3] = {$/;"	v	file:
fdctrl_mem_read_strict	.\fdc.c	/^static CPUReadMemoryFunc *fdctrl_mem_read_strict[3] = {$/;"	v	file:
fdctrl_mem_write	.\fdc.c	/^static CPUWriteMemoryFunc *fdctrl_mem_write[3] = {$/;"	v	file:
fdctrl_mem_write_strict	.\fdc.c	/^static CPUWriteMemoryFunc *fdctrl_mem_write_strict[3] = {$/;"	v	file:
fdctrl_raise_irq	.\fdc.c	/^static void fdctrl_raise_irq (fdctrl_t *fdctrl, uint8_t status)$/;"	f	file:
fdctrl_read	.\fdc.c	/^static uint32_t fdctrl_read (void *opaque, uint32_t reg)$/;"	f	file:
fdctrl_read_data	.\fdc.c	/^static uint32_t fdctrl_read_data (fdctrl_t *fdctrl)$/;"	f	file:
fdctrl_read_dir	.\fdc.c	/^static uint32_t fdctrl_read_dir (fdctrl_t *fdctrl)$/;"	f	file:
fdctrl_read_dor	.\fdc.c	/^static uint32_t fdctrl_read_dor (fdctrl_t *fdctrl)$/;"	f	file:
fdctrl_read_main_status	.\fdc.c	/^static uint32_t fdctrl_read_main_status (fdctrl_t *fdctrl)$/;"	f	file:
fdctrl_read_mem	.\fdc.c	/^static uint32_t fdctrl_read_mem (void *opaque, target_phys_addr_t reg)$/;"	f	file:
fdctrl_read_statusB	.\fdc.c	/^static uint32_t fdctrl_read_statusB (fdctrl_t *fdctrl)$/;"	f	file:
fdctrl_read_tape	.\fdc.c	/^static uint32_t fdctrl_read_tape (fdctrl_t *fdctrl)$/;"	f	file:
fdctrl_reset	.\fdc.c	/^static void fdctrl_reset (fdctrl_t *fdctrl, int do_irq)$/;"	f	file:
fdctrl_reset_fifo	.\fdc.c	/^static void fdctrl_reset_fifo (fdctrl_t *fdctrl)$/;"	f	file:
fdctrl_reset_irq	.\fdc.c	/^static void fdctrl_reset_irq (fdctrl_t *fdctrl)$/;"	f	file:
fdctrl_result_timer	.\fdc.c	/^static void fdctrl_result_timer(void *opaque)$/;"	f	file:
fdctrl_set_fifo	.\fdc.c	/^static void fdctrl_set_fifo (fdctrl_t *fdctrl, int fifo_len, int do_irq)$/;"	f	file:
fdctrl_start_transfer	.\fdc.c	/^static void fdctrl_start_transfer (fdctrl_t *fdctrl, int direction)$/;"	f	file:
fdctrl_start_transfer_del	.\fdc.c	/^static void fdctrl_start_transfer_del (fdctrl_t *fdctrl, int direction)$/;"	f	file:
fdctrl_stop_transfer	.\fdc.c	/^static void fdctrl_stop_transfer (fdctrl_t *fdctrl, uint8_t status0,$/;"	f	file:
fdctrl_t	.\fdc.c	/^struct fdctrl_t {$/;"	s	file:
fdctrl_t	.\fdc.h	/^typedef struct fdctrl_t fdctrl_t;$/;"	t	typeref:struct:fdctrl_t
fdctrl_transfer_handler	.\fdc.c	/^static int fdctrl_transfer_handler (void *opaque, int nchan,$/;"	f	file:
fdctrl_unimplemented	.\fdc.c	/^static void fdctrl_unimplemented (fdctrl_t *fdctrl)$/;"	f	file:
fdctrl_write	.\fdc.c	/^static void fdctrl_write (void *opaque, uint32_t reg, uint32_t value)$/;"	f	file:
fdctrl_write_data	.\fdc.c	/^static void fdctrl_write_data (fdctrl_t *fdctrl, uint32_t value)$/;"	f	file:
fdctrl_write_dor	.\fdc.c	/^static void fdctrl_write_dor (fdctrl_t *fdctrl, uint32_t value)$/;"	f	file:
fdctrl_write_mem	.\fdc.c	/^static void fdctrl_write_mem (void *opaque,$/;"	f	file:
fdctrl_write_rate	.\fdc.c	/^static void fdctrl_write_rate (fdctrl_t *fdctrl, uint32_t value)$/;"	f	file:
fdctrl_write_tape	.\fdc.c	/^static void fdctrl_write_tape (fdctrl_t *fdctrl, uint32_t value)$/;"	f	file:
fdisk_flags_t	.\fdc.c	/^typedef enum fdisk_flags_t {$/;"	g	file:
fdisk_flags_t	.\fdc.c	/^} fdisk_flags_t;$/;"	t	typeref:enum:fdisk_flags_t	file:
fdisk_type_t	.\fdc.c	/^typedef enum fdisk_type_t {$/;"	g	file:
fdisk_type_t	.\fdc.c	/^} fdisk_type_t;$/;"	t	typeref:enum:fdisk_type_t	file:
fdrive_flags_t	.\fdc.c	/^typedef enum fdrive_flags_t {$/;"	g	file:
fdrive_flags_t	.\fdc.c	/^} fdrive_flags_t;$/;"	t	typeref:enum:fdrive_flags_t	file:
fdrive_t	.\fdc.c	/^typedef struct fdrive_t {$/;"	s	file:
fdrive_t	.\fdc.c	/^} fdrive_t;$/;"	t	typeref:struct:fdrive_t	file:
fdrive_type_t	.\fdc.c	/^typedef enum fdrive_type_t {$/;"	g	file:
fdrive_type_t	.\fdc.c	/^} fdrive_type_t;$/;"	t	typeref:enum:fdrive_type_t	file:
feat	.\sh_serial.c	/^    int feat;$/;"	m	struct:__anon96	file:
feat	.\sh_timer.c	/^    int feat;$/;"	m	struct:__anon97	file:
feat	.\sh_timer.c	/^    int feat;$/;"	m	struct:__anon98	file:
feature	.\ide.c	/^    uint8_t feature;$/;"	m	struct:IDEState	file:
feedback2	.\fmopl.c	/^static INT32 feedback2;		\/* connect for SLOT 2 *\/$/;"	v	file:
ferr_irq	.\pc.c	/^static qemu_irq ferr_irq;$/;"	v	file:
ffs_bit	.\apic.c	/^static int ffs_bit(uint32_t value)$/;"	f	file:
fi	.\usb-ohci.c	/^    uint32_t fi:14;$/;"	m	struct:__anon123	file:
fidr	.\pxa2xx_lcd.c	/^    uint32_t fidr;$/;"	m	struct:pxa_frame_descriptor_s	file:
field_width	.\sh_intc.h	/^    unsigned long set_reg, clr_reg, reg_width, field_width;$/;"	m	struct:intc_prio_reg
fifo	.\fdc.c	/^    uint8_t *fifo;$/;"	m	struct:fdctrl_t	file:
fifo	.\mcf_uart.c	/^    uint8_t fifo[4];$/;"	m	struct:__anon33	file:
fifo	.\omap.h	/^        uint8_t *fifo;$/;"	m	struct:i2s_codec_s::i2s_fifo_s
fifo	.\omap_i2c.c	/^    uint32_t fifo;$/;"	m	struct:omap_i2c_s	file:
fifo	.\omap_mmc.c	/^    uint16_t fifo[32];$/;"	m	struct:omap_mmc_s	file:
fifo	.\pl181.c	/^    uint32_t fifo[PL181_FIFO_LEN];$/;"	m	struct:__anon60	file:
fifo	.\pxa.h	/^    uint32_t fifo[16];$/;"	m	struct:pxa2xx_i2s_s
fifo	.\sb16.c	/^    int fifo;$/;"	m	struct:SB16State	file:
fifo	.\spitz.c	/^    uint8_t fifo[16];$/;"	m	struct:spitz_keyboard_s	file:
fifo	.\stellaris.c	/^    } fifo[4];$/;"	m	struct:__anon112	typeref:struct:__anon112::__anon113	file:
fifo	.\vmware_vga.c	/^            uint32_t fifo[0];$/;"	m	struct:vmsvga_state_s::__anon128::__anon129	file:
fifo	.\vmware_vga.c	/^        uint32_t *fifo;$/;"	m	union:vmsvga_state_s::__anon128	file:
fifo_len	.\mcf_uart.c	/^    int fifo_len;$/;"	m	struct:__anon33	file:
fifo_len	.\omap_mmc.c	/^    int fifo_len;$/;"	m	struct:omap_mmc_s	file:
fifo_len	.\pl181.c	/^    int fifo_len;$/;"	m	struct:__anon60	file:
fifo_len	.\pxa.h	/^    int fifo_len;$/;"	m	struct:pxa2xx_i2s_s
fifo_pos	.\pl181.c	/^    int fifo_pos;$/;"	m	struct:__anon60	file:
fifo_start	.\omap_mmc.c	/^    int fifo_start;$/;"	m	struct:omap_mmc_s	file:
fifolen	.\spitz.c	/^    int fifopos, fifolen;$/;"	m	struct:spitz_keyboard_s	file:
fifopos	.\spitz.c	/^    int fifopos, fifolen;$/;"	m	struct:spitz_keyboard_s	file:
file	.\ds1225y.c	/^    QEMUFile *file;$/;"	m	struct:ds1225y_t	file:
filename	.\ds1225y.c	/^    const char *filename;$/;"	m	struct:ds1225y_t	file:
filter	.\tsc210x.c	/^    int filter;$/;"	m	struct:tsc210x_state_s	file:
filter_data	.\tsc210x.c	/^    uint16_t filter_data[0x14];$/;"	m	struct:tsc210x_state_s	file:
fiq	.\omap.c	/^    uint32_t fiq;$/;"	m	struct:omap_intr_handler_bank_s	file:
fiq	.\pl190.c	/^    qemu_irq fiq;$/;"	m	struct:__anon61	file:
fiq_enabled	.\integratorcp.c	/^    uint32_t fiq_enabled;$/;"	m	struct:__anon21	file:
fiq_enabled	.\integratorcp.c	/^  uint32_t fiq_enabled;$/;"	m	struct:icp_pic_state	file:
fiq_select	.\pl190.c	/^    uint32_t fiq_select;$/;"	m	struct:__anon61	file:
fir	.\pxa.h	/^    struct pxa2xx_fir_s *fir;$/;"	m	struct:pxa2xx_state_s	typeref:struct:pxa2xx_state_s::pxa2xx_fir_s
first_bus	.\pci.c	/^static PCIBus *first_bus;$/;"	v	file:
fit	.\usb-ohci.c	/^    uint32_t fit:1;$/;"	m	struct:__anon123	file:
fit_next	.\ppc.c	/^    uint64_t fit_next;    \/* Tick for next FIT interrupt  *\/$/;"	m	struct:ppcemb_timer_t	file:
fit_timer	.\ppc.c	/^    struct QEMUTimer *fit_timer;$/;"	m	struct:ppcemb_timer_t	typeref:struct:ppcemb_timer_t::QEMUTimer	file:
fl_base_addr	.\usb-uhci.c	/^    uint32_t fl_base_addr; \/* frame list base address *\/$/;"	m	struct:UHCIState	file:
fl_mem	.\pflash_cfi01.c	/^    int fl_mem;$/;"	m	struct:pflash_t	file:
fl_mem	.\pflash_cfi02.c	/^    int fl_mem;$/;"	m	struct:pflash_t	file:
flags	.\arm_sysctl.c	/^    uint32_t flags;$/;"	m	struct:__anon5	file:
flags	.\fdc.c	/^    fdisk_flags_t flags;$/;"	m	struct:fdrive_t	file:
flags	.\mcf_fec.c	/^    uint16_t flags;$/;"	m	struct:__anon31	file:
flags	.\omap1_clk.c	/^    uint32_t flags;$/;"	m	struct:clk	file:
flags	.\pl011.c	/^    uint32_t flags;$/;"	m	struct:__anon52	file:
flags	.\sh_serial.c	/^    int flags;$/;"	m	struct:__anon96	file:
flags	.\usb-msd.c	/^    uint8_t flags;$/;"	m	struct:usb_msd_cbw	file:
flags	.\usb-ohci.c	/^    uint32_t flags;$/;"	m	struct:ohci_ed	file:
flags	.\usb-ohci.c	/^    uint32_t flags;$/;"	m	struct:ohci_iso_td	file:
flags	.\usb-ohci.c	/^    uint32_t flags;$/;"	m	struct:ohci_td	file:
flash	.\ssd0303.c	/^    int flash;$/;"	m	struct:__anon105	file:
flash_contents	.\tc58128.c	/^    uint8_t *flash_contents;$/;"	m	struct:__anon120	file:
flash_offset	.\integratorcp.c	/^    uint32_t flash_offset;$/;"	m	struct:__anon21	file:
flip_flop	.\dma.c	/^    uint8_t flip_flop;$/;"	m	struct:dma_cont	file:
float_high	.\pl061.c	/^    uint8_t float_high;$/;"	m	struct:__anon56	file:
floppy_controller	.\pc.c	/^static fdctrl_t *floppy_controller;$/;"	v	file:
floppy_controller	.\sun4u.c	/^static fdctrl_t *floppy_controller;$/;"	v	file:
fls_bit	.\apic.c	/^static int fls_bit(uint32_t value)$/;"	f	file:
fm_opl_channel	.\fmopl.h	/^typedef struct fm_opl_channel {$/;"	s
fm_opl_f	.\fmopl.h	/^typedef struct fm_opl_f {$/;"	s
fm_opl_slot	.\fmopl.h	/^typedef struct fm_opl_slot {$/;"	s
fmt	.\sb16.c	/^    audfmt_e fmt;$/;"	m	struct:SB16State	file:
fmt_bits	.\sb16.c	/^    int fmt_bits;$/;"	m	struct:SB16State	file:
fmt_signed	.\sb16.c	/^    int fmt_signed;$/;"	m	struct:SB16State	file:
fmt_stereo	.\sb16.c	/^    int fmt_stereo;$/;"	m	struct:SB16State	file:
foreach_apic	.\apic.c	169;"	d	file:
format	.\wm8750.c	/^    uint8_t path[4], mpath[2], power, format;$/;"	m	struct:wm8750_s	file:
fr	.\ppc405_uc.c	/^    uint32_t fr;$/;"	m	struct:ppc405cr_cpc_t	file:
fr	.\ppc405_uc.c	/^    uint32_t fr;$/;"	m	struct:ppc405ep_cpc_t	file:
frame	.\omap.c	/^        int frame;$/;"	m	struct:omap_dma_channel_s::omap_dma_reg_set_s	file:
frame	.\usb-ohci.c	/^    uint16_t frame, pad;$/;"	m	struct:ohci_hcca	file:
frame_addr	.\es1370.c	/^    uint32_t frame_addr;$/;"	m	struct:chan	file:
frame_cnt	.\es1370.c	/^    uint32_t frame_cnt;$/;"	m	struct:chan	file:
frame_delta	.\omap.c	/^        int frame_delta[2];$/;"	m	struct:omap_dma_channel_s::omap_dma_reg_set_s	file:
frame_done	.\omap_lcdc.c	/^    int frame_done;$/;"	m	struct:omap_lcd_panel_s	file:
frame_index	.\omap.c	/^    int16_t frame_index[2];$/;"	m	struct:omap_dma_channel_s	file:
frame_index_f1	.\omap.h	/^    int32_t frame_index_f1;$/;"	m	struct:omap_dma_lcd_channel_s
frame_index_f2	.\omap.h	/^    int32_t frame_index_f2;$/;"	m	struct:omap_dma_lcd_channel_s
frame_number	.\usb-ohci.c	/^    uint16_t frame_number;$/;"	m	struct:__anon123	file:
frame_timer	.\usb-uhci.c	/^    QEMUTimer *frame_timer;$/;"	m	struct:UHCIState	file:
framebuffer	.\ssd0303.c	/^    uint8_t framebuffer[132*8];$/;"	m	struct:__anon105	file:
framebuffer	.\ssd0323.c	/^    uint8_t framebuffer[128 * 80 \/ 2];$/;"	m	struct:__anon106	file:
frames	.\omap.c	/^        int frames;$/;"	m	struct:omap_dma_channel_s::omap_dma_reg_set_s	file:
frames	.\omap.c	/^    uint16_t frames;$/;"	m	struct:omap_dma_channel_s	file:
frames_f1	.\omap.h	/^    uint16_t frames_f1;$/;"	m	struct:omap_dma_lcd_channel_s
frames_f2	.\omap.h	/^    uint16_t frames_f2;$/;"	m	struct:omap_dma_lcd_channel_s
frc	.\omap.h	/^        uint8_t frc;$/;"	m	struct:omap_mpu_state_s::__anon39
free	.\omap.c	/^    int free;$/;"	m	struct:omap_watchdog_timer_s	file:
free_requests	.\scsi-disk.c	/^static SCSIRequest *free_requests = NULL;$/;"	v	file:
free_requests	.\scsi-generic.c	/^static SCSIRequest *free_requests = NULL;$/;"	v	file:
frep	.\openpic.c	/^    uint32_t frep; \/* Feature reporting register *\/$/;"	m	struct:openpic_t	file:
freq	.\adlib.c	/^    int freq;$/;"	m	struct:__anon1	file:
freq	.\arm_timer.c	/^    int freq;$/;"	m	struct:__anon6	file:
freq	.\pxa2xx_timer.c	/^    uint32_t freq;$/;"	m	struct:__anon86	file:
freq	.\pxa2xx_timer.c	/^    uint32_t freq;$/;"	m	struct:pxa2xx_timer4_s	file:
freq	.\sb16.c	/^    int freq;$/;"	m	struct:SB16State	file:
freq	.\sh_serial.c	/^    int freq;$/;"	m	struct:__anon96	file:
freq	.\sh_timer.c	/^    int freq;$/;"	m	struct:__anon97	file:
freqbase	.\fmopl.h	/^	double freqbase;	\/* frequency base                    *\/$/;"	m	struct:fm_opl_f
frnum	.\usb-uhci.c	/^    uint16_t frnum; \/* frame number *\/$/;"	m	struct:UHCIState	file:
fromBCD	.\m48t59.c	/^static inline uint8_t fromBCD (uint8_t BCD)$/;"	f	file:
from_bcd	.\mc146818rtc.c	/^static inline int from_bcd(RTCState *s, int a)$/;"	f	file:
frt	.\usb-ohci.c	/^    uint32_t frt:1;$/;"	m	struct:__anon123	file:
fs	.\omap.c	/^    int fs;$/;"	m	struct:omap_dma_channel_s	file:
fs	.\omap.h	/^    unsigned char fs;$/;"	m	struct:omap_dma_lcd_channel_s
fs_mmio_read	.\etraxfs.c	/^static CPUReadMemoryFunc *fs_mmio_read[] = {$/;"	v	file:
fs_mmio_readb	.\etraxfs.c	/^static uint32_t fs_mmio_readb (void *opaque, target_phys_addr_t addr)$/;"	f	file:
fs_mmio_readl	.\etraxfs.c	/^static uint32_t fs_mmio_readl (void *opaque, target_phys_addr_t addr)$/;"	f	file:
fs_mmio_readw	.\etraxfs.c	/^static uint32_t fs_mmio_readw (void *opaque, target_phys_addr_t addr)$/;"	f	file:
fs_mmio_write	.\etraxfs.c	/^static CPUWriteMemoryFunc *fs_mmio_write[] = {$/;"	v	file:
fs_mmio_writeb	.\etraxfs.c	/^fs_mmio_writeb (void *opaque, target_phys_addr_t addr, uint32_t value)$/;"	f	file:
fs_mmio_writel	.\etraxfs.c	/^fs_mmio_writel (void *opaque, target_phys_addr_t addr, uint32_t value)$/;"	f	file:
fs_mmio_writew	.\etraxfs.c	/^fs_mmio_writew (void *opaque, target_phys_addr_t addr, uint32_t value)$/;"	f	file:
fs_timer_t	.\etraxfs_timer.c	/^struct fs_timer_t {$/;"	s	file:
fsaddr	.\pxa2xx_lcd.c	/^    uint32_t fsaddr;$/;"	m	struct:pxa_frame_descriptor_s	file:
fsmps	.\usb-ohci.c	/^    uint32_t fsmps:15;$/;"	m	struct:__anon123	file:
fsref	.\tsc210x.c	/^    int fsref;$/;"	m	struct:tsc210x_rate_info_s	file:
func	.\vmport.c	/^    IOPortReadFunc *func[VMPORT_ENTRIES];$/;"	m	struct:_VMPortState	file:
func_mux_ctrl	.\omap.h	/^    uint32_t func_mux_ctrl[14];$/;"	m	struct:omap_mpu_state_s
function	.\tsc210x.c	/^    int function;$/;"	m	struct:tsc210x_state_s	file:
function_group	.\sd.c	/^    int function_group[6];$/;"	m	struct:SDState	file:
g	.\tcx.c	/^    uint8_t r[256], g[256], b[256];$/;"	m	struct:TCXState	file:
gafr	.\pxa2xx_gpio.c	/^    uint32_t gafr[PXA2XX_GPIO_BANKS * 2];$/;"	m	struct:pxa2xx_gpio_info_s	file:
gamepad_button	.\stellaris_input.c	/^} gamepad_button;$/;"	t	typeref:struct:__anon117	file:
gamepad_state	.\stellaris_input.c	/^} gamepad_state;$/;"	t	typeref:struct:__anon118	file:
gate	.\i8254.c	/^    uint8_t gate; \/* timer start *\/$/;"	m	struct:PITChannelState	file:
gate_inh_ctrl	.\omap.h	/^    uint32_t gate_inh_ctrl[1];$/;"	m	struct:omap_mpu_state_s
gcr	.\omap.c	/^    uint16_t gcr;$/;"	m	struct:omap_dma_s	file:
gcr	.\omap.h	/^        uint8_t gcr;$/;"	m	struct:omap_mpu_state_s::__anon39
gen_port_interrupts	.\sh7750.c	/^static void gen_port_interrupts(SH7750State * s)$/;"	f	file:
generate_bootsect	.\pc.c	/^static void generate_bootsect(uint32_t gpr[8], uint16_t segs[6], uint16_t ip)$/;"	f	file:
generate_samples	.\pcspk.c	/^static inline void generate_samples(PCSpkState *s)$/;"	f	file:
get_alarm	.\m48t59.c	/^static void get_alarm (m48t59_t *NVRAM, struct tm *tm)$/;"	f	file:
get_blocksize	.\scsi-generic.c	/^static int get_blocksize(BlockDriverState *bdrv)$/;"	f	file:
get_buf	.\scsi-disk.h	/^    uint8_t *(*get_buf)(SCSIDevice *s, uint32_t tag);$/;"	m	struct:SCSIDevice
get_cmd	.\esp.c	/^static int get_cmd(ESPState *s, uint8_t *buf)$/;"	f	file:
get_counter	.\cuda.c	/^static unsigned int get_counter(CUDATimer *s)$/;"	f	file:
get_cu_state	.\eepro100.c	/^static cu_state_t get_cu_state(EEPRO100State * s)$/;"	f	file:
get_cur_drv	.\fdc.c	/^static fdrive_t *get_cur_drv (fdctrl_t *fdctrl)$/;"	f	file:
get_days_in_month	.\mc146818rtc.c	/^static int get_days_in_month(int month, int year)$/;"	f	file:
get_depth_index	.\vga.c	/^static inline int get_depth_index(DisplayState *s)$/;"	f	file:
get_dwords	.\usb-ohci.c	/^static inline int get_dwords(uint32_t addr, uint32_t *buf, int num)$/;"	f	file:
get_file_size	.\pc.c	/^static long get_file_size(FILE *f)$/;"	f	file:
get_highest_priority_int	.\apic.c	/^static int get_highest_priority_int(uint32_t *tab)$/;"	f	file:
get_next_irq_time	.\cuda.c	/^static int64_t get_next_irq_time(CUDATimer *s, int64_t current_time)$/;"	f	file:
get_pmsts	.\acpi.c	/^static int get_pmsts(PIIX4PMState *s)$/;"	f	file:
get_pmtmr	.\acpi.c	/^static uint32_t get_pmtmr(PIIX4PMState *s)$/;"	f	file:
get_priority	.\i8259.c	/^static inline int get_priority(PicState *s, int mask)$/;"	f	file:
get_queue	.\slavio_serial.c	/^static uint32_t get_queue(void *opaque)$/;"	f	file:
get_ru_state	.\eepro100.c	/^static ru_state_t get_ru_state(EEPRO100State * s)$/;"	f	file:
get_time	.\m48t59.c	/^static void get_time (m48t59_t *NVRAM, struct tm *tm)$/;"	f	file:
get_words	.\usb-ohci.c	/^static inline int get_words(uint32_t addr, uint16_t *buf, int num)$/;"	f	file:
getff	.\dma.c	/^static inline int getff (struct dma_cont *d)$/;"	f	file:
gic	.\armv7m_nvic.c	/^    gic_state *gic;$/;"	m	struct:__anon3	file:
gic	.\mpcore.c	/^    gic_state *gic;$/;"	m	struct:mpcore_priv_state	file:
gic_acknowledge_irq	.\arm_gic.c	/^static uint32_t gic_acknowledge_irq(gic_state *s, int cpu)$/;"	f	file:
gic_complete_irq	.\arm_gic.c	/^static void gic_complete_irq(gic_state * s, int cpu, int irq)$/;"	f	file:
gic_cpu_read	.\arm_gic.c	/^static uint32_t gic_cpu_read(gic_state *s, int cpu, int offset)$/;"	f	file:
gic_cpu_write	.\arm_gic.c	/^static void gic_cpu_write(gic_state *s, int cpu, int offset, uint32_t value)$/;"	f	file:
gic_dist_readb	.\arm_gic.c	/^static uint32_t gic_dist_readb(void *opaque, target_phys_addr_t offset)$/;"	f	file:
gic_dist_readfn	.\arm_gic.c	/^static CPUReadMemoryFunc *gic_dist_readfn[] = {$/;"	v	file:
gic_dist_readl	.\arm_gic.c	/^static uint32_t gic_dist_readl(void *opaque, target_phys_addr_t offset)$/;"	f	file:
gic_dist_readw	.\arm_gic.c	/^static uint32_t gic_dist_readw(void *opaque, target_phys_addr_t offset)$/;"	f	file:
gic_dist_writeb	.\arm_gic.c	/^static void gic_dist_writeb(void *opaque, target_phys_addr_t offset,$/;"	f	file:
gic_dist_writefn	.\arm_gic.c	/^static CPUWriteMemoryFunc *gic_dist_writefn[] = {$/;"	v	file:
gic_dist_writel	.\arm_gic.c	/^static void gic_dist_writel(void *opaque, target_phys_addr_t offset,$/;"	f	file:
gic_dist_writew	.\arm_gic.c	/^static void gic_dist_writew(void *opaque, target_phys_addr_t offset,$/;"	f	file:
gic_get_current_cpu	.\armv7m_nvic.c	/^gic_get_current_cpu(void)$/;"	f	file:
gic_get_current_cpu	.\mpcore.c	/^gic_get_current_cpu(void)$/;"	f	file:
gic_get_current_cpu	.\realview_gic.c	/^gic_get_current_cpu(void)$/;"	f	file:
gic_id	.\arm_gic.c	/^static const uint8_t gic_id[] =$/;"	v	file:
gic_init	.\arm_gic.c	/^static gic_state *gic_init(uint32_t base, qemu_irq *parent_irq)$/;"	f	file:
gic_irq_state	.\arm_gic.c	/^typedef struct gic_irq_state$/;"	s	file:
gic_irq_state	.\arm_gic.c	/^} gic_irq_state;$/;"	t	typeref:struct:gic_irq_state	file:
gic_reset	.\arm_gic.c	/^static void gic_reset(gic_state *s)$/;"	f	file:
gic_set_irq	.\arm_gic.c	/^static void gic_set_irq(void *opaque, int irq, int level)$/;"	f	file:
gic_set_pending_private	.\arm_gic.c	/^gic_set_pending_private(gic_state *s, int cpu, int irq)$/;"	f	file:
gic_set_running_irq	.\arm_gic.c	/^static void gic_set_running_irq(gic_state *s, int cpu, int irq)$/;"	f	file:
gic_state	.\arm_gic.c	/^typedef struct gic_state$/;"	s	file:
gic_state	.\arm_gic.c	/^} gic_state;$/;"	t	typeref:struct:gic_state	file:
gic_update	.\arm_gic.c	/^static void gic_update(gic_state *s)$/;"	f	file:
glbc	.\openpic.c	/^    uint32_t glbc; \/* Global configuration register  *\/$/;"	m	struct:openpic_t	file:
glob_adlib	.\adlib.c	/^static AdlibState glob_adlib;$/;"	v	file:
glue	.\cirrus_vga_rop.h	/^glue(cirrus_bitblt_rop_bkwd_, ROP_NAME)(CirrusVGAState *s,$/;"	f
glue	.\cirrus_vga_rop.h	/^glue(cirrus_bitblt_rop_fwd_, ROP_NAME)(CirrusVGAState *s,$/;"	f
glue	.\nand.c	/^static void glue(nand_blk_erase_, PAGE_SIZE)(struct nand_flash_s *s)$/;"	f	file:
glue	.\nand.c	/^static void glue(nand_blk_load_, PAGE_SIZE)(struct nand_flash_s *s,$/;"	f	file:
glue	.\nand.c	/^static void glue(nand_blk_write_, PAGE_SIZE)(struct nand_flash_s *s)$/;"	f	file:
glue	.\nand.c	/^static void glue(nand_init_, PAGE_SIZE)(struct nand_flash_s *s)$/;"	f	file:
glue	.\omap_lcd_template.h	/^static void glue(draw_line12_, DEPTH)($/;"	f
glue	.\omap_lcd_template.h	/^static void glue(draw_line16_, DEPTH)($/;"	f
glue	.\omap_lcd_template.h	/^static void glue(draw_line2_, DEPTH)($/;"	f
glue	.\omap_lcd_template.h	/^static void glue(draw_line4_, DEPTH)($/;"	f
glue	.\omap_lcd_template.h	/^static void glue(draw_line8_, DEPTH)($/;"	f
glue	.\pl110_template.h	/^static void glue(pl110_draw_line16_,NAME)(uint32_t *pallette, uint8_t *d, const uint8_t *src, int width)$/;"	f
glue	.\pl110_template.h	/^static void glue(pl110_draw_line1_,NAME)(uint32_t *pallette, uint8_t *d, const uint8_t *src, int width)$/;"	f
glue	.\pl110_template.h	/^static void glue(pl110_draw_line2_,NAME)(uint32_t *pallette, uint8_t *d, const uint8_t *src, int width)$/;"	f
glue	.\pl110_template.h	/^static void glue(pl110_draw_line32_,NAME)(uint32_t *pallette, uint8_t *d, const uint8_t *src, int width)$/;"	f
glue	.\pl110_template.h	/^static void glue(pl110_draw_line4_,NAME)(uint32_t *pallette, uint8_t *d, const uint8_t *src, int width)$/;"	f
glue	.\pl110_template.h	/^static void glue(pl110_draw_line8_,NAME)(uint32_t *pallette, uint8_t *d, const uint8_t *src, int width)$/;"	f
glue	.\pxa2xx_template.h	/^static void glue(pxa2xx_draw_line16_, BITS)(uint32_t *palette,$/;"	f
glue	.\pxa2xx_template.h	/^static void glue(pxa2xx_draw_line16t_, BITS)(uint32_t *palette,$/;"	f
glue	.\pxa2xx_template.h	/^static void glue(pxa2xx_draw_line18_, BITS)(uint32_t *palette,$/;"	f
glue	.\pxa2xx_template.h	/^static void glue(pxa2xx_draw_line18p_, BITS)(uint32_t *palette,$/;"	f
glue	.\pxa2xx_template.h	/^static void glue(pxa2xx_draw_line19_, BITS)(uint32_t *palette,$/;"	f
glue	.\pxa2xx_template.h	/^static void glue(pxa2xx_draw_line19p_, BITS)(uint32_t *palette,$/;"	f
glue	.\pxa2xx_template.h	/^static void glue(pxa2xx_draw_line24_, BITS)(uint32_t *palette,$/;"	f
glue	.\pxa2xx_template.h	/^static void glue(pxa2xx_draw_line24t_, BITS)(uint32_t *palette,$/;"	f
glue	.\pxa2xx_template.h	/^static void glue(pxa2xx_draw_line25_, BITS)(uint32_t *palette,$/;"	f
glue	.\pxa2xx_template.h	/^static void glue(pxa2xx_draw_line2_, BITS)(uint32_t *palette,$/;"	f
glue	.\pxa2xx_template.h	/^static void glue(pxa2xx_draw_line4_, BITS)(uint32_t *palette,$/;"	f
glue	.\pxa2xx_template.h	/^static void glue(pxa2xx_draw_line8_, BITS)(uint32_t *palette,$/;"	f
glue	.\vga_template.h	/^static inline void glue(vga_draw_glyph_line_, DEPTH)(uint8_t *d,$/;"	f
glue	.\vga_template.h	/^static void glue(vga_draw_glyph16_, DEPTH)(uint8_t *d, int linesize,$/;"	f
glue	.\vga_template.h	/^static void glue(vga_draw_glyph8_, DEPTH)(uint8_t *d, int linesize,$/;"	f
glue	.\vga_template.h	/^static void glue(vga_draw_glyph9_, DEPTH)(uint8_t *d, int linesize,$/;"	f
glue	.\vga_template.h	/^static void glue(vga_draw_line15_, PIXEL_NAME)(VGAState *s1, uint8_t *d,$/;"	f
glue	.\vga_template.h	/^static void glue(vga_draw_line16_, PIXEL_NAME)(VGAState *s1, uint8_t *d,$/;"	f
glue	.\vga_template.h	/^static void glue(vga_draw_line24_, PIXEL_NAME)(VGAState *s1, uint8_t *d,$/;"	f
glue	.\vga_template.h	/^static void glue(vga_draw_line2_, DEPTH)(VGAState *s1, uint8_t *d,$/;"	f
glue	.\vga_template.h	/^static void glue(vga_draw_line2d2_, DEPTH)(VGAState *s1, uint8_t *d,$/;"	f
glue	.\vga_template.h	/^static void glue(vga_draw_line32_, PIXEL_NAME)(VGAState *s1, uint8_t *d,$/;"	f
glue	.\vga_template.h	/^static void glue(vga_draw_line4_, DEPTH)(VGAState *s1, uint8_t *d,$/;"	f
glue	.\vga_template.h	/^static void glue(vga_draw_line4d2_, DEPTH)(VGAState *s1, uint8_t *d,$/;"	f
glue	.\vga_template.h	/^static void glue(vga_draw_line8_, DEPTH)(VGAState *s1, uint8_t *d,$/;"	f
glue	.\vga_template.h	/^static void glue(vga_draw_line8d2_, DEPTH)(VGAState *s1, uint8_t *d,$/;"	f
glue	.\vga_template.h	/^void glue(vga_draw_cursor_line_, DEPTH)(uint8_t *d1,$/;"	f
gnd	.\nand.c	/^    int cle, ale, ce, wp, gnd;$/;"	m	struct:nand_flash_s	file:
gpio	.\omap.h	/^    struct omap_gpio_s *gpio;$/;"	m	struct:omap_mpu_state_s	typeref:struct:omap_mpu_state_s::omap_gpio_s
gpio	.\pxa.h	/^    struct pxa2xx_gpio_info_s *gpio;$/;"	m	struct:pxa2xx_state_s	typeref:struct:pxa2xx_state_s::pxa2xx_gpio_info_s
gpio_dir	.\spitz.c	/^    uint32_t gpio_dir;$/;"	m	struct:scoop_info_s	file:
gpio_in	.\max7310.c	/^    qemu_irq *gpio_in;$/;"	m	struct:max7310_s	file:
gpio_level	.\spitz.c	/^    uint32_t gpio_level;$/;"	m	struct:scoop_info_s	file:
gpioic	.\sh7750.c	/^    uint16_t gpioic;$/;"	m	struct:SH7750State	file:
gpiomap	.\spitz.c	/^    qemu_irq gpiomap[5];$/;"	m	struct:spitz_keyboard_s	file:
gpout	.\mips_malta.c	/^    uint32_t gpout;$/;"	m	struct:__anon34	file:
gpr	.\smc91c111.c	/^    uint16_t gpr;$/;"	m	struct:__anon103	file:
gprr	.\spitz.c	/^    uint16_t gprr;$/;"	m	struct:scoop_info_s	file:
gpsr	.\pxa2xx_gpio.c	/^    uint32_t gpsr[PXA2XX_GPIO_BANKS];$/;"	m	struct:pxa2xx_gpio_info_s	file:
gpswr	.\mst_fpga.c	/^	uint32_t gpswr;$/;"	m	struct:mst_irq_state	file:
gpt_read	.\ppc405_uc.c	/^static CPUReadMemoryFunc *gpt_read[] = {$/;"	v	file:
gpt_write	.\ppc405_uc.c	/^static CPUWriteMemoryFunc *gpt_write[] = {$/;"	v	file:
gptm_read	.\stellaris.c	/^static uint32_t gptm_read(void *opaque, target_phys_addr_t offset)$/;"	f	file:
gptm_readfn	.\stellaris.c	/^static CPUReadMemoryFunc *gptm_readfn[] = {$/;"	v	file:
gptm_reload	.\stellaris.c	/^static void gptm_reload(gptm_state *s, int n, int reset)$/;"	f	file:
gptm_state	.\stellaris.c	/^typedef struct gptm_state {$/;"	s	file:
gptm_state	.\stellaris.c	/^} gptm_state;$/;"	t	typeref:struct:gptm_state	file:
gptm_stop	.\stellaris.c	/^static void gptm_stop(gptm_state *s, int n)$/;"	f	file:
gptm_tick	.\stellaris.c	/^static void gptm_tick(void *opaque)$/;"	f	file:
gptm_update_irq	.\stellaris.c	/^static void gptm_update_irq(gptm_state *s)$/;"	f	file:
gptm_write	.\stellaris.c	/^static void gptm_write(void *opaque, target_phys_addr_t offset, uint32_t value)$/;"	f	file:
gptm_writefn	.\stellaris.c	/^static CPUWriteMemoryFunc *gptm_writefn[] = {$/;"	v	file:
gr_mask	.\vga.c	/^const uint8_t gr_mask[16] = {$/;"	v
graphic_flags	.\firmware_abi.h	/^    uint16_t graphic_flags;$/;"	m	struct:ohwcfg_v3_t
groups	.\sh7750.c	/^static struct intc_group groups[] = {$/;"	v	typeref:struct:intc_group	file:
groups_dma4	.\sh7750.c	/^static struct intc_group groups_dma4[] = {$/;"	v	typeref:struct:intc_group	file:
groups_dma8	.\sh7750.c	/^static struct intc_group groups_dma8[] = {$/;"	v	typeref:struct:intc_group	file:
groups_pci	.\sh7750.c	/^static struct intc_group groups_pci[] = {$/;"	v	typeref:struct:intc_group	file:
gt64120_isd_mapping	.\gt64xxx.c	/^static void gt64120_isd_mapping(GT64120State *s)$/;"	f	file:
gt64120_load	.\gt64xxx.c	/^static int gt64120_load(QEMUFile* f, void *opaque, int version_id)$/;"	f	file:
gt64120_pci_mapping	.\gt64xxx.c	/^static void gt64120_pci_mapping(GT64120State *s)$/;"	f	file:
gt64120_read	.\gt64xxx.c	/^static CPUReadMemoryFunc *gt64120_read[] = {$/;"	v	file:
gt64120_read_config	.\gt64xxx.c	/^static uint32_t gt64120_read_config(PCIDevice *d, uint32_t address, int len)$/;"	f	file:
gt64120_readl	.\gt64xxx.c	/^static uint32_t gt64120_readl (void *opaque,$/;"	f	file:
gt64120_reset	.\gt64xxx.c	/^static void gt64120_reset(void *opaque)$/;"	f	file:
gt64120_save	.\gt64xxx.c	/^static void gt64120_save(QEMUFile* f, void *opaque)$/;"	f	file:
gt64120_write	.\gt64xxx.c	/^static CPUWriteMemoryFunc *gt64120_write[] = {$/;"	v	file:
gt64120_write_config	.\gt64xxx.c	/^static void gt64120_write_config(PCIDevice *d, uint32_t address, uint32_t val,$/;"	f	file:
gt64120_writel	.\gt64xxx.c	/^static void gt64120_writel (void *opaque, target_phys_addr_t addr,$/;"	f	file:
guess_disk_lchs	.\ide.c	/^static int guess_disk_lchs(IDEState *s,$/;"	f	file:
guest	.\vmware_vga.c	/^    uint32_t guest;$/;"	m	struct:vmsvga_state_s	file:
h	.\vmware_vga.c	/^        int x, y, w, h;$/;"	m	struct:vmsvga_state_s::vmsvga_rect_s	file:
handle_address	.\tc58128.c	/^void handle_address(tc58128_dev * dev, uint8_t data)$/;"	f
handle_command	.\tc58128.c	/^void handle_command(tc58128_dev * dev, uint8_t command)$/;"	f
handle_control	.\usb.h	/^    int (*handle_control)(USBDevice *dev, int request, int value,$/;"	m	struct:USBDevice
handle_data	.\usb.h	/^    int (*handle_data)(USBDevice *dev, USBPacket *p);$/;"	m	struct:USBDevice
handle_destroy	.\usb.h	/^    void (*handle_destroy)(USBDevice *dev);$/;"	m	struct:USBDevice
handle_kbd_command	.\slavio_serial.c	/^static void handle_kbd_command(ChannelState *s, int val)$/;"	f	file:
handle_packet	.\usb.h	/^    int (*handle_packet)(USBDevice *dev, USBPacket *p);$/;"	m	struct:USBDevice
handle_read	.\tc58128.c	/^uint8_t handle_read(tc58128_dev * dev)$/;"	f
handle_reset	.\usb.h	/^    void (*handle_reset)(USBDevice *dev);$/;"	m	struct:USBDevice
handle_satn	.\esp.c	/^static void handle_satn(ESPState *s)$/;"	f	file:
handle_satn_stop	.\esp.c	/^static void handle_satn_stop(ESPState *s)$/;"	f	file:
handle_ti	.\esp.c	/^static void handle_ti(ESPState *s)$/;"	f	file:
handler	.\irq.c	/^    qemu_irq_handler handler;$/;"	m	struct:IRQState	file:
handler	.\max7310.c	/^    qemu_irq handler[8];$/;"	m	struct:max7310_s	file:
handler	.\omap.c	/^    qemu_irq handler[16];$/;"	m	struct:omap_gpio_s	file:
handler	.\omap.c	/^    qemu_irq handler[16];$/;"	m	struct:omap_mpuio_s	file:
handler	.\ppc_mac.h	/^    int handler;$/;"	m	struct:ADBDevice
handler	.\pxa2xx_dma.c	/^    pxa2xx_dma_handler_t handler;$/;"	m	struct:pxa2xx_dma_state_s	file:
handler	.\pxa2xx_gpio.c	/^    qemu_irq handler[PXA2XX_GPIO_BANKS * 32];$/;"	m	struct:pxa2xx_gpio_info_s	file:
handler	.\spitz.c	/^    qemu_irq handler[16];$/;"	m	struct:scoop_info_s	file:
hcca	.\usb-ohci.c	/^    uint32_t hcca;$/;"	m	struct:__anon123	file:
hcyl	.\ide.c	/^    uint8_t hcyl;$/;"	m	struct:IDEState	file:
hdecr_next	.\ppc.c	/^    uint64_t hdecr_next;    \/* Tick for next hdecr interrupt  *\/$/;"	m	struct:ppc_tb_t	file:
hdecr_timer	.\ppc.c	/^    struct QEMUTimer *hdecr_timer;$/;"	m	struct:ppc_tb_t	typeref:struct:ppc_tb_t::QEMUTimer	file:
hdma	.\sb16.c	/^    int hdma;$/;"	m	struct:SB16State	file:
hdma	.\sb16.c	/^    int hdma;$/;"	m	struct:__anon88	file:
head	.\fdc.c	/^    uint8_t head;$/;"	m	struct:fdrive_t	file:
head	.\ide.c	/^	uint8_t head;		\/* starting head *\/$/;"	m	struct:partition	file:
head	.\usb-ohci.c	/^    uint32_t head;$/;"	m	struct:ohci_ed	file:
heads	.\ide.c	/^    int cylinders, heads, sectors;$/;"	m	struct:IDEState	file:
heathrow_machine	.\ppc_oldworld.c	/^QEMUMachine heathrow_machine = {$/;"	v
heathrow_pic_init	.\heathrow_pic.c	/^qemu_irq *heathrow_pic_init(int *pmem_index,$/;"	f
heathrow_pic_set_irq	.\heathrow_pic.c	/^static void heathrow_pic_set_irq(void *opaque, int num, int level)$/;"	f	file:
heathrow_pic_update	.\heathrow_pic.c	/^static void heathrow_pic_update(HeathrowPICS *s)$/;"	f	file:
height	.\firmware_abi.h	/^    uint16_t height;$/;"	m	struct:ohwcfg_v3_t
height	.\omap_lcdc.c	/^    int height;$/;"	m	struct:omap_lcd_panel_s	file:
height	.\tcx.c	/^    uint16_t width, height, depth;$/;"	m	struct:TCXState	file:
height	.\vmware_vga.c	/^    int height;$/;"	m	struct:vmsvga_cursor_definition_s	file:
height	.\vmware_vga.c	/^    int height;$/;"	m	struct:vmsvga_state_s	file:
highspeed	.\sb16.c	/^    int highspeed;$/;"	m	struct:SB16State	file:
hmadr	.\ppc405_uc.c	/^    uint8_t hmadr;$/;"	m	struct:ppc4xx_i2c_t	file:
hmask	.\usb-ohci.c	/^    uint32_t hmask;$/;"	m	struct:__anon123	file:
hob_feature	.\ide.c	/^    uint8_t hob_feature;$/;"	m	struct:IDEState	file:
hob_hcyl	.\ide.c	/^    uint8_t hob_hcyl;$/;"	m	struct:IDEState	file:
hob_lcyl	.\ide.c	/^    uint8_t hob_lcyl;$/;"	m	struct:IDEState	file:
hob_nsector	.\ide.c	/^    uint8_t hob_nsector;$/;"	m	struct:IDEState	file:
hob_sector	.\ide.c	/^    uint8_t hob_sector;$/;"	m	struct:IDEState	file:
host_mode	.\tsc210x.c	/^    int host_mode;$/;"	m	struct:tsc210x_state_s	file:
hot_x	.\vmware_vga.c	/^    int hot_x;$/;"	m	struct:vmsvga_cursor_definition_s	file:
hot_y	.\vmware_vga.c	/^    int hot_y;$/;"	m	struct:vmsvga_cursor_definition_s	file:
hreset	.\usb-ohci.c	/^    uint32_t hreset;$/;"	m	struct:__anon123	file:
hsab_ck	.\omap1_clk.c	/^static struct clk hsab_ck = {$/;"	v	typeref:struct:clk	file:
hsadr	.\ppc405_uc.c	/^    uint8_t hsadr;$/;"	m	struct:ppc4xx_i2c_t	file:
hstatus	.\usb-ohci.c	/^    uint32_t hstatus;$/;"	m	struct:__anon123	file:
hstick_irq	.\sun4u.c	/^void hstick_irq(void *opaque)$/;"	f
htest	.\usb-ohci.c	/^    uint32_t htest;$/;"	m	struct:__anon123	file:
hw_cursor_x	.\cirrus_vga.c	/^    uint32_t hw_cursor_x;$/;"	m	struct:CirrusVGAState	file:
hw_cursor_y	.\cirrus_vga.c	/^    uint32_t hw_cursor_y;$/;"	m	struct:CirrusVGAState	file:
hw_driver	.\parallel.c	/^    int hw_driver;$/;"	m	struct:ParallelState	file:
hw_omap_h	.\omap.h	22;"	d
hwdef	.\sun4m.c	/^struct hwdef {$/;"	s	file:
hwdefs	.\sun4m.c	/^static const struct hwdef hwdefs[] = {$/;"	v	typeref:struct:hwdef	file:
i2c	.\max7310.c	/^    i2c_slave i2c;$/;"	m	struct:max7310_s	file:
i2c	.\omap.h	/^    struct omap_i2c_s *i2c;$/;"	m	struct:omap_mpu_state_s	typeref:struct:omap_mpu_state_s::omap_i2c_s
i2c	.\pxa.h	/^    struct pxa2xx_i2c_s *i2c[2];$/;"	m	struct:pxa2xx_state_s	typeref:struct:pxa2xx_state_s::pxa2xx_i2c_s
i2c	.\smbus.h	/^    i2c_slave i2c;$/;"	m	struct:SMBusDevice
i2c	.\ssd0303.c	/^    i2c_slave i2c;$/;"	m	struct:__anon105	file:
i2c	.\wm8750.c	/^    i2c_slave i2c;$/;"	m	struct:wm8750_s	file:
i2c_bus	.\i2c.c	/^struct i2c_bus$/;"	s	file:
i2c_bus_busy	.\i2c.c	/^int i2c_bus_busy(i2c_bus *bus)$/;"	f
i2c_bus_load	.\i2c.c	/^void i2c_bus_load(QEMUFile *f, i2c_bus *bus)$/;"	f
i2c_bus_save	.\i2c.c	/^void i2c_bus_save(QEMUFile *f, i2c_bus *bus)$/;"	f
i2c_command_byte	.\max7310.c	/^    int i2c_command_byte;$/;"	m	struct:max7310_s	file:
i2c_data	.\wm8750.c	/^    uint8_t i2c_data[2];$/;"	m	struct:wm8750_s	file:
i2c_end_transfer	.\i2c.c	/^void i2c_end_transfer(i2c_bus *bus)$/;"	f
i2c_event	.\i2c.h	/^enum i2c_event {$/;"	g
i2c_event_cb	.\i2c.h	/^typedef void (*i2c_event_cb)(i2c_slave *s, enum i2c_event event);$/;"	t
i2c_fck	.\omap1_clk.c	/^static struct clk i2c_fck = {$/;"	v	typeref:struct:clk	file:
i2c_ick	.\omap1_clk.c	/^static struct clk i2c_ick = {$/;"	v	typeref:struct:clk	file:
i2c_init_bus	.\i2c.c	/^i2c_bus *i2c_init_bus(void)$/;"	f
i2c_len	.\wm8750.c	/^    int i2c_len;$/;"	m	struct:wm8750_s	file:
i2c_nack	.\i2c.c	/^void i2c_nack(i2c_bus *bus)$/;"	f
i2c_read	.\ppc405_uc.c	/^static CPUReadMemoryFunc *i2c_read[] = {$/;"	v	file:
i2c_recv	.\i2c.c	/^int i2c_recv(i2c_bus *bus)$/;"	f
i2c_recv_cb	.\i2c.h	/^typedef int (*i2c_recv_cb)(i2c_slave *s);$/;"	t
i2c_send	.\i2c.c	/^int i2c_send(i2c_bus *bus, uint8_t data)$/;"	f
i2c_send_cb	.\i2c.h	/^typedef int (*i2c_send_cb)(i2c_slave *s, uint8_t data);$/;"	t
i2c_set_slave_address	.\i2c.c	/^void i2c_set_slave_address(i2c_slave *dev, int address)$/;"	f
i2c_slave	.\i2c.h	/^struct i2c_slave$/;"	s
i2c_slave_init	.\i2c.c	/^i2c_slave *i2c_slave_init(i2c_bus *bus, int address, int size)$/;"	f
i2c_slave_load	.\i2c.c	/^void i2c_slave_load(QEMUFile *f, i2c_slave *dev)$/;"	f
i2c_slave_save	.\i2c.c	/^void i2c_slave_save(QEMUFile *f, i2c_slave *dev)$/;"	f
i2c_start_transfer	.\i2c.c	/^int i2c_start_transfer(i2c_bus *bus, int address, int recv)$/;"	f
i2c_write	.\ppc405_uc.c	/^static CPUWriteMemoryFunc *i2c_write[] = {$/;"	v	file:
i2cin	.\mips_malta.c	/^    uint32_t i2cin;$/;"	m	struct:__anon34	file:
i2coe	.\mips_malta.c	/^    uint32_t i2coe;$/;"	m	struct:__anon34	file:
i2cout	.\mips_malta.c	/^    uint32_t i2cout;$/;"	m	struct:__anon34	file:
i2csel	.\mips_malta.c	/^    uint32_t i2csel;$/;"	m	struct:__anon34	file:
i2s	.\pxa.h	/^    struct pxa2xx_i2s_s *i2s;$/;"	m	struct:pxa2xx_state_s	typeref:struct:pxa2xx_state_s::pxa2xx_i2s_s
i2s_codec_s	.\omap.h	/^struct i2s_codec_s {$/;"	s
i2s_fifo_s	.\omap.h	/^    struct i2s_fifo_s {$/;"	s	struct:i2s_codec_s
i2s_rx_rate	.\tsc210x.c	/^    int i2s_rx_rate;$/;"	m	struct:tsc210x_state_s	file:
i2s_tx_rate	.\tsc210x.c	/^    int i2s_tx_rate;$/;"	m	struct:tsc210x_state_s	file:
i440fx_addr_readl	.\piix_pci.c	/^static uint32_t i440fx_addr_readl(void* opaque, uint32_t addr)$/;"	f	file:
i440fx_addr_writel	.\piix_pci.c	/^static void i440fx_addr_writel(void* opaque, uint32_t addr, uint32_t val)$/;"	f	file:
i440fx_init	.\piix_pci.c	/^PCIBus *i440fx_init(PCIDevice **pi440fx_state, qemu_irq *pic)$/;"	f
i440fx_init_memory_mappings	.\piix_pci.c	/^void i440fx_init_memory_mappings(PCIDevice *d)$/;"	f
i440fx_load	.\piix_pci.c	/^static int i440fx_load(QEMUFile* f, void *opaque, int version_id)$/;"	f	file:
i440fx_save	.\piix_pci.c	/^static void i440fx_save(QEMUFile* f, void *opaque)$/;"	f	file:
i440fx_set_smm	.\piix_pci.c	/^void i440fx_set_smm(PCIDevice *d, int val)$/;"	f
i440fx_state	.\pc.c	/^static PCIDevice *i440fx_state;$/;"	v	file:
i440fx_update_memory_mappings	.\piix_pci.c	/^static void i440fx_update_memory_mappings(PCIDevice *d)$/;"	f	file:
i440fx_write_config	.\piix_pci.c	/^static void i440fx_write_config(PCIDevice *d,$/;"	f	file:
i8042_init	.\pckbd.c	/^void i8042_init(qemu_irq kbd_irq, qemu_irq mouse_irq, uint32_t io_base)$/;"	f
i8042_mm_init	.\pckbd.c	/^void i8042_mm_init(qemu_irq kbd_irq, qemu_irq mouse_irq,$/;"	f
i82551	.\eepro100.c	95;"	d	file:
i82557B	.\eepro100.c	96;"	d	file:
i82557C	.\eepro100.c	97;"	d	file:
i82558B	.\eepro100.c	98;"	d	file:
i82559C	.\eepro100.c	99;"	d	file:
i82559ER	.\eepro100.c	100;"	d	file:
i82562	.\eepro100.c	101;"	d	file:
i8259_init	.\i8259.c	/^qemu_irq *i8259_init(qemu_irq parent_irq)$/;"	f
i8259_set_irq	.\i8259.c	/^static void i8259_set_irq(void *opaque, int irq, int level)$/;"	f	file:
ia	.\lsi53c895a.c	/^    uint32_t ia;$/;"	m	struct:__anon25	file:
ibe	.\pl061.c	/^    uint8_t ibe;$/;"	m	struct:__anon56	file:
ibmr	.\pxa2xx.c	/^    uint8_t ibmr;$/;"	m	struct:pxa2xx_i2c_s	file:
ibrd	.\pl011.c	/^    uint32_t ibrd;$/;"	m	struct:__anon52	file:
icp_control_init	.\integratorcp.c	/^static void icp_control_init(uint32_t base)$/;"	f	file:
icp_control_read	.\integratorcp.c	/^static uint32_t icp_control_read(void *opaque, target_phys_addr_t offset)$/;"	f	file:
icp_control_readfn	.\integratorcp.c	/^static CPUReadMemoryFunc *icp_control_readfn[] = {$/;"	v	file:
icp_control_state	.\integratorcp.c	/^} icp_control_state;$/;"	t	typeref:struct:__anon22	file:
icp_control_write	.\integratorcp.c	/^static void icp_control_write(void *opaque, target_phys_addr_t offset,$/;"	f	file:
icp_control_writefn	.\integratorcp.c	/^static CPUWriteMemoryFunc *icp_control_writefn[] = {$/;"	v	file:
icp_pic_init	.\integratorcp.c	/^static qemu_irq *icp_pic_init(uint32_t base,$/;"	f	file:
icp_pic_read	.\integratorcp.c	/^static uint32_t icp_pic_read(void *opaque, target_phys_addr_t offset)$/;"	f	file:
icp_pic_readfn	.\integratorcp.c	/^static CPUReadMemoryFunc *icp_pic_readfn[] = {$/;"	v	file:
icp_pic_set_irq	.\integratorcp.c	/^static void icp_pic_set_irq(void *opaque, int irq, int level)$/;"	f	file:
icp_pic_state	.\integratorcp.c	/^typedef struct icp_pic_state$/;"	s	file:
icp_pic_state	.\integratorcp.c	/^} icp_pic_state;$/;"	t	typeref:struct:icp_pic_state	file:
icp_pic_update	.\integratorcp.c	/^static void icp_pic_update(icp_pic_state *s)$/;"	f	file:
icp_pic_write	.\integratorcp.c	/^static void icp_pic_write(void *opaque, target_phys_addr_t offset,$/;"	f	file:
icp_pic_writefn	.\integratorcp.c	/^static CPUWriteMemoryFunc *icp_pic_writefn[] = {$/;"	v	file:
icp_pit_init	.\arm_timer.c	/^void icp_pit_init(uint32_t base, qemu_irq *pic, int irq)$/;"	f
icp_pit_read	.\arm_timer.c	/^static uint32_t icp_pit_read(void *opaque, target_phys_addr_t offset)$/;"	f	file:
icp_pit_readfn	.\arm_timer.c	/^static CPUReadMemoryFunc *icp_pit_readfn[] = {$/;"	v	file:
icp_pit_state	.\arm_timer.c	/^} icp_pit_state;$/;"	t	typeref:struct:__anon8	file:
icp_pit_write	.\arm_timer.c	/^static void icp_pit_write(void *opaque, target_phys_addr_t offset,$/;"	f	file:
icp_pit_writefn	.\arm_timer.c	/^static CPUWriteMemoryFunc *icp_pit_writefn[] = {$/;"	v	file:
icr	.\apic.c	/^    uint32_t icr[2];$/;"	m	struct:APICState	file:
icr	.\mcf5206.c	/^    uint8_t icr[14];$/;"	m	struct:__anon27	file:
icr	.\mcf_intc.c	/^    uint8_t icr[64];$/;"	m	struct:__anon32	file:
icr	.\sh7750.c	/^    uint16_t icr;$/;"	m	struct:SH7750State	file:
id	.\apic.c	/^    uint8_t id;$/;"	m	struct:APICState	file:
id	.\apic.c	/^    uint8_t id;$/;"	m	struct:IOAPICState	file:
id	.\mpcore.c	/^    int id; \/* Encodes both timer\/watchdog and CPU.  *\/$/;"	m	struct:__anon35	file:
id	.\omap1_clk.c	/^    int id;$/;"	m	struct:clk	file:
id	.\pxa2xx_lcd.c	/^        uint32_t id;$/;"	m	struct:pxa2xx_lcdc_s::__anon85	file:
id	.\vmware_vga.c	/^        int id;$/;"	m	struct:vmsvga_state_s::__anon127	file:
id	.\vmware_vga.c	/^    int id;$/;"	m	struct:vmsvga_cursor_definition_s	file:
ide	.\ide.c	/^    IDEState ide[2];$/;"	m	struct:md_s	file:
ide	.\openpic.c	/^    uint32_t ide;   \/* IRQ destination register *\/$/;"	m	struct:IRQ_src_t	file:
ide_abort_command	.\ide.c	/^static inline void ide_abort_command(IDEState *s)$/;"	f	file:
ide_atapi_cmd	.\ide.c	/^static void ide_atapi_cmd(IDEState *s)$/;"	f	file:
ide_atapi_cmd_error	.\ide.c	/^static void ide_atapi_cmd_error(IDEState *s, int sense_key, int asc)$/;"	f	file:
ide_atapi_cmd_ok	.\ide.c	/^static void ide_atapi_cmd_ok(IDEState *s)$/;"	f	file:
ide_atapi_cmd_read	.\ide.c	/^static void ide_atapi_cmd_read(IDEState *s, int lba, int nb_sectors,$/;"	f	file:
ide_atapi_cmd_read_dma	.\ide.c	/^static void ide_atapi_cmd_read_dma(IDEState *s, int lba, int nb_sectors,$/;"	f	file:
ide_atapi_cmd_read_dma_cb	.\ide.c	/^static void ide_atapi_cmd_read_dma_cb(void *opaque, int ret)$/;"	f	file:
ide_atapi_cmd_read_pio	.\ide.c	/^static void ide_atapi_cmd_read_pio(IDEState *s, int lba, int nb_sectors,$/;"	f	file:
ide_atapi_cmd_reply	.\ide.c	/^static void ide_atapi_cmd_reply(IDEState *s, int size, int max_size)$/;"	f	file:
ide_atapi_cmd_reply_end	.\ide.c	/^static void ide_atapi_cmd_reply_end(IDEState *s)$/;"	f	file:
ide_atapi_identify	.\ide.c	/^static void ide_atapi_identify(IDEState *s)$/;"	f	file:
ide_atapi_io_error	.\ide.c	/^static void ide_atapi_io_error(IDEState *s, int ret)$/;"	f	file:
ide_cfata_identify	.\ide.c	/^static void ide_cfata_identify(IDEState *s)$/;"	f	file:
ide_cfata_metadata_inquiry	.\ide.c	/^static void ide_cfata_metadata_inquiry(IDEState *s)$/;"	f	file:
ide_cfata_metadata_read	.\ide.c	/^static void ide_cfata_metadata_read(IDEState *s)$/;"	f	file:
ide_cfata_metadata_write	.\ide.c	/^static void ide_cfata_metadata_write(IDEState *s)$/;"	f	file:
ide_clear_hob	.\ide.c	/^static void ide_clear_hob(IDEState *ide_if)$/;"	f	file:
ide_cmd_lba48_transform	.\ide.c	/^static void ide_cmd_lba48_transform(IDEState *s, int lba48)$/;"	f	file:
ide_cmd_write	.\ide.c	/^static void ide_cmd_write(void *opaque, uint32_t addr, uint32_t val)$/;"	f	file:
ide_data_readl	.\ide.c	/^static uint32_t ide_data_readl(void *opaque, uint32_t addr)$/;"	f	file:
ide_data_readw	.\ide.c	/^static uint32_t ide_data_readw(void *opaque, uint32_t addr)$/;"	f	file:
ide_data_writel	.\ide.c	/^static void ide_data_writel(void *opaque, uint32_t addr, uint32_t val)$/;"	f	file:
ide_data_writew	.\ide.c	/^static void ide_data_writew(void *opaque, uint32_t addr, uint32_t val)$/;"	f	file:
ide_dma_start	.\ide.c	/^static void ide_dma_start(IDEState *s, BlockDriverCompletionFunc *dma_cb)$/;"	f	file:
ide_dummy_transfer_stop	.\ide.c	/^static void ide_dummy_transfer_stop(IDEState *s)$/;"	f	file:
ide_get_sector	.\ide.c	/^static int64_t ide_get_sector(IDEState *s)$/;"	f	file:
ide_identify	.\ide.c	/^static void ide_identify(IDEState *s)$/;"	f	file:
ide_if	.\ide.c	/^    IDEState *ide_if;$/;"	m	struct:BMDMAState	file:
ide_if	.\ide.c	/^    IDEState ide_if[4];$/;"	m	struct:PCIIDEState	file:
ide_init2	.\ide.c	/^static void ide_init2(IDEState *ide_state,$/;"	f	file:
ide_init_ioport	.\ide.c	/^static void ide_init_ioport(IDEState *ide_state, int iobase, int iobase2)$/;"	f	file:
ide_iobase	.\mips_pica61.c	/^static const int ide_iobase[2] = { 0x1f0, 0x170 };$/;"	v	file:
ide_iobase	.\mips_r4k.c	/^static const int ide_iobase[2] = { 0x1f0, 0x170 };$/;"	v	file:
ide_iobase	.\pc.c	/^static const int ide_iobase[2] = { 0x1f0, 0x170 };$/;"	v	file:
ide_iobase	.\ppc_prep.c	/^static const int ide_iobase[2] = { 0x1f0, 0x170 };$/;"	v	file:
ide_iobase	.\sun4u.c	/^static const int ide_iobase[2] = { 0x1f0, 0x170 };$/;"	v	file:
ide_iobase2	.\mips_pica61.c	/^static const int ide_iobase2[2] = { 0x3f6, 0x376 };$/;"	v	file:
ide_iobase2	.\mips_r4k.c	/^static const int ide_iobase2[2] = { 0x3f6, 0x376 };$/;"	v	file:
ide_iobase2	.\pc.c	/^static const int ide_iobase2[2] = { 0x3f6, 0x376 };$/;"	v	file:
ide_iobase2	.\ppc_prep.c	/^static const int ide_iobase2[2] = { 0x3f6, 0x376 };$/;"	v	file:
ide_iobase2	.\sun4u.c	/^static const int ide_iobase2[2] = { 0x3f6, 0x376 };$/;"	v	file:
ide_ioport_read	.\ide.c	/^static uint32_t ide_ioport_read(void *opaque, uint32_t addr1)$/;"	f	file:
ide_ioport_write	.\ide.c	/^static void ide_ioport_write(void *opaque, uint32_t addr, uint32_t val)$/;"	f	file:
ide_irq	.\mips_pica61.c	/^static const int ide_irq[2] = { 14, 15 };$/;"	v	file:
ide_irq	.\mips_r4k.c	/^static const int ide_irq[2] = { 14, 15 };$/;"	v	file:
ide_irq	.\pc.c	/^static const int ide_irq[2] = { 14, 15 };$/;"	v	file:
ide_irq	.\ppc_prep.c	/^static const int ide_irq[2] = { 13, 13 };$/;"	v	file:
ide_irq	.\sun4u.c	/^static const int ide_irq[2] = { 14, 15 };$/;"	v	file:
ide_load	.\ide.c	/^static void ide_load(QEMUFile* f, IDEState *s)$/;"	f	file:
ide_map	.\ide.c	/^static void ide_map(PCIDevice *pci_dev, int region_num,$/;"	f	file:
ide_mem_index	.\macio.c	/^    int ide_mem_index[4];$/;"	m	struct:macio_state_t	file:
ide_read_dma_cb	.\ide.c	/^static void ide_read_dma_cb(void *opaque, int ret)$/;"	f	file:
ide_reset	.\ide.c	/^static void ide_reset(IDEState *s)$/;"	f	file:
ide_save	.\ide.c	/^static void ide_save(QEMUFile* f, IDEState *s)$/;"	f	file:
ide_sector_read	.\ide.c	/^static void ide_sector_read(IDEState *s)$/;"	f	file:
ide_sector_read_dma	.\ide.c	/^static void ide_sector_read_dma(IDEState *s)$/;"	f	file:
ide_sector_write	.\ide.c	/^static void ide_sector_write(IDEState *s)$/;"	f	file:
ide_sector_write_dma	.\ide.c	/^static void ide_sector_write_dma(IDEState *s)$/;"	f	file:
ide_sector_write_timer_cb	.\ide.c	/^static void ide_sector_write_timer_cb(void *opaque)$/;"	f	file:
ide_set_irq	.\ide.c	/^static inline void ide_set_irq(IDEState *s)$/;"	f	file:
ide_set_sector	.\ide.c	/^static void ide_set_sector(IDEState *s, int64_t sector_num)$/;"	f	file:
ide_set_signature	.\ide.c	/^static void ide_set_signature(IDEState *s)$/;"	f	file:
ide_status_read	.\ide.c	/^static uint32_t ide_status_read(void *opaque, uint32_t addr)$/;"	f	file:
ide_transfer_start	.\ide.c	/^static void ide_transfer_start(IDEState *s, uint8_t *buf, int size,$/;"	f	file:
ide_transfer_stop	.\ide.c	/^static void ide_transfer_stop(IDEState *s)$/;"	f	file:
ide_write_dma_cb	.\ide.c	/^static void ide_write_dma_cb(void *opaque, int ret)$/;"	f	file:
ident	.\pflash_cfi01.c	/^    uint16_t ident[4];$/;"	m	struct:pflash_t	file:
ident	.\pflash_cfi02.c	/^    uint16_t ident[4];$/;"	m	struct:pflash_t	file:
identify_data	.\ide.c	/^    uint16_t identify_data[256];$/;"	m	struct:IDEState	file:
identify_set	.\ide.c	/^    int identify_set;$/;"	m	struct:IDEState	file:
idle	.\usb-hid.c	/^    int idle;$/;"	m	struct:USBHIDState	file:
idreg_base	.\sun4m.c	/^    target_phys_addr_t idreg_base, dma_base, esp_base, le_base;$/;"	m	struct:hwdef	file:
idx_in	.\wm8750.c	/^    int idx_in, req_in;$/;"	m	struct:wm8750_s	file:
idx_out	.\wm8750.c	/^    int idx_out, req_out;$/;"	m	struct:wm8750_s	file:
ie	.\ppc405_uc.c	/^    uint32_t ie;$/;"	m	struct:ppc4xx_gpt_t	file:
ier	.\cuda.c	/^    uint8_t ier;    \/* Interrupt enable register *\/$/;"	m	struct:CUDAState	file:
ier	.\ppc405_uc.c	/^    uint32_t ier;$/;"	m	struct:ppc40x_mal_t	file:
ier	.\serial.c	/^    uint8_t ier;$/;"	m	struct:SerialState	file:
iev	.\pl061.c	/^    uint8_t iev;$/;"	m	struct:__anon56	file:
ifl	.\pl011.c	/^    uint32_t ifl;$/;"	m	struct:__anon52	file:
ifr	.\cuda.c	/^    uint8_t ifr;    \/* Interrupt flag register *\/$/;"	m	struct:CUDAState	file:
ifr	.\mcf_intc.c	/^    uint64_t ifr;$/;"	m	struct:__anon32	file:
ignore_access	.\sh7750.c	/^static void ignore_access(const char *kind, target_phys_addr_t addr)$/;"	f	file:
ih	.\omap.c	/^    int ih;$/;"	m	struct:dma_irq_map	file:
ih	.\omap.h	/^    struct omap_intr_handler_s *ih[2];$/;"	m	struct:omap_mpu_state_s	typeref:struct:omap_mpu_state_s::omap_intr_handler_s
iir	.\serial.c	/^    uint8_t iir; \/* read only *\/$/;"	m	struct:SerialState	file:
ilevel	.\pxa2xx_gpio.c	/^    uint32_t ilevel[PXA2XX_GPIO_BANKS];$/;"	m	struct:pxa2xx_gpio_info_s	file:
ilpr	.\pl011.c	/^    uint32_t ilpr;$/;"	m	struct:__anon52	file:
im	.\pl022.c	/^    uint32_t im;$/;"	m	struct:__anon53	file:
im	.\pl031.c	/^    uint32_t im;$/;"	m	struct:__anon54	file:
im	.\pl061.c	/^    uint8_t im;$/;"	m	struct:__anon56	file:
im	.\ppc405_uc.c	/^    uint32_t im;$/;"	m	struct:ppc4xx_gpt_t	file:
im	.\stellaris.c	/^    uint32_t im;$/;"	m	struct:__anon112	file:
im	.\stellaris_enet.c	/^    uint32_t im;$/;"	m	struct:__anon115	file:
image	.\vmware_vga.c	/^    uint32_t image[1024];$/;"	m	struct:vmsvga_cursor_definition_s	file:
imif	.\omap.h	/^    imif,	\/* omap16xx: ocp_t1 *\/$/;"	e	enum:omap_dma_port
imif_base	.\omap_lcdc.c	/^    ram_addr_t imif_base;$/;"	m	struct:omap_lcd_panel_s	file:
imodifiers	.\spitz.c	/^    uint16_t imodifiers;$/;"	m	struct:spitz_keyboard_s	file:
imr	.\eepro100.c	/^    uint8_t imr;$/;"	m	struct:__anon16	file:
imr	.\i8259.c	/^    uint8_t imr; \/* interrupt mask register *\/$/;"	m	struct:PicState	file:
imr	.\mcf5206.c	/^    uint16_t imr; \/* 1 == interrupt is masked.  *\/$/;"	m	struct:__anon27	file:
imr	.\mcf_intc.c	/^    uint64_t imr;$/;"	m	struct:__anon32	file:
imr	.\mcf_uart.c	/^    uint8_t imr;$/;"	m	struct:__anon33	file:
imr	.\ne2000.c	/^    uint8_t imr;$/;"	m	struct:NE2000State	file:
imr	.\spitz.c	/^    uint16_t imr;$/;"	m	struct:scoop_info_s	file:
in	.\arm_gic.c	/^    qemu_irq *in;$/;"	m	struct:gic_state	file:
in	.\omap.c	/^    qemu_irq *in;$/;"	m	struct:omap_gpio_s	file:
in	.\omap.c	/^    qemu_irq *in;$/;"	m	struct:omap_mpuio_s	file:
in	.\omap.h	/^    int in;$/;"	m	struct:io_fn
in	.\omap.h	/^    } in, out;$/;"	m	struct:i2s_codec_s	typeref:struct:i2s_codec_s::i2s_fifo_s
in	.\pxa2xx_gpio.c	/^    qemu_irq *in;$/;"	m	struct:pxa2xx_gpio_info_s	file:
in	.\spitz.c	/^    qemu_irq *in;$/;"	m	struct:scoop_info_s	file:
in	.\wm8750.c	/^    SWVoiceIn **in[2];$/;"	m	struct:wm8750_s	file:
in2_data	.\sb16.c	/^    uint8_t in2_data[10];$/;"	m	struct:SB16State	file:
in_fifo	.\tsc210x.c	/^    uint8_t in_fifo[16384];$/;"	m	struct:tsc210x_state_s	file:
in_index	.\sb16.c	/^    int in_index;$/;"	m	struct:SB16State	file:
index	.\cuda.c	/^    int index;$/;"	m	struct:CUDATimer	file:
index	.\usb.h	/^    int index; \/* internal port index, may be used with the opaque *\/$/;"	m	struct:USBPort
index	.\vmware_vga.c	/^    int index;$/;"	m	struct:vmsvga_state_s	file:
info	.\pxa2xx_timer.c	/^    void *info;$/;"	m	struct:pxa2xx_timer0_s	file:
init	.\boards.h	/^    QEMUMachineInitFunc *init;$/;"	m	struct:QEMUMachine
init4	.\i8259.c	/^    uint8_t init4; \/* true if 4 byte init *\/$/;"	m	struct:PicState	file:
init_chan	.\dma.c	/^static inline void init_chan (struct dma_cont *d, int ichan)$/;"	f	file:
init_dev	.\tc58128.c	/^void init_dev(tc58128_dev * dev, char *filename)$/;"	f
init_state	.\i8259.c	/^    uint8_t init_state;$/;"	m	struct:PicState	file:
init_timetables	.\fmopl.c	/^static void init_timetables( FM_OPL *OPL , int ARRATE , int DRRATE )$/;"	f	file:
initial_count	.\apic.c	/^    uint32_t initial_count;$/;"	m	struct:APICState	file:
initial_count_load_time	.\apic.c	/^    int64_t initial_count_load_time, next_time;$/;"	m	struct:APICState	file:
initrd_filename	.\mips_malta.c	/^    const char *initrd_filename;$/;"	m	struct:_loaderparams	file:
initrd_filename	.\mips_mipssim.c	/^    const char *initrd_filename;$/;"	m	struct:_loaderparams	file:
initrd_filename	.\mips_r4k.c	/^    const char *initrd_filename;$/;"	m	struct:_loaderparams	file:
initrd_image	.\firmware_abi.h	/^    uint64_t initrd_image;$/;"	m	struct:ohwcfg_v3_t
initrd_size	.\firmware_abi.h	/^    uint64_t initrd_size;$/;"	m	struct:ohwcfg_v3_t
inmask	.\wm8750.c	/^    uint32_t inmask, outmask;$/;"	m	struct:wm8750_s	file:
inmute	.\wm8750.c	/^    uint8_t invol[4], inmute[2];$/;"	m	struct:wm8750_s	file:
input	.\ads7846.c	/^    int input[8];$/;"	m	struct:ads7846_state_s	file:
input	.\max111x.c	/^    int input[8];$/;"	m	struct:max111x_s	file:
input	.\rtl8139.c	/^    uint16_t input;$/;"	m	struct:EEprom9346	file:
inputs	.\max111x.c	/^    int inputs, com;$/;"	m	struct:max111x_s	file:
inputs	.\omap.c	/^    uint16_t inputs;$/;"	m	struct:omap_gpio_s	file:
inputs	.\omap.c	/^    uint16_t inputs;$/;"	m	struct:omap_mpuio_s	file:
inputs	.\omap.c	/^    uint32_t inputs;$/;"	m	struct:omap_intr_handler_bank_s	file:
inserted_cb	.\sd.c	/^    qemu_irq inserted_cb;$/;"	m	struct:SDState	file:
int_clamp	.\usb-hid.c	/^static inline int int_clamp(int val, int vmin, int vmax)$/;"	f	file:
int_clamp	.\usb-wacom.c	/^static inline int int_clamp(int val, int vmin, int vmax)$/;"	f	file:
int_enabled	.\pl011.c	/^    uint32_t int_enabled;$/;"	m	struct:__anon52	file:
int_enabled	.\pxa2xx_pic.c	/^    uint32_t int_enabled[2];$/;"	m	struct:pxa2xx_pic_state_s	file:
int_idle	.\pxa2xx_pic.c	/^    uint32_t int_idle;$/;"	m	struct:pxa2xx_pic_state_s	file:
int_level	.\arm_timer.c	/^    int int_level;$/;"	m	struct:__anon6	file:
int_level	.\integratorcp.c	/^    uint32_t int_level;$/;"	m	struct:__anon21	file:
int_level	.\pl011.c	/^    uint32_t int_level;$/;"	m	struct:__anon52	file:
int_level	.\sh_timer.c	/^    int int_level;$/;"	m	struct:__anon97	file:
int_level	.\smc91c111.c	/^    uint8_t int_level;$/;"	m	struct:__anon103	file:
int_mask	.\pl110.c	/^    uint32_t int_mask;$/;"	m	struct:__anon59	file:
int_mask	.\smc91c111.c	/^    uint8_t int_mask;$/;"	m	struct:__anon103	file:
int_mask	.\stellaris.c	/^    uint32_t int_mask;$/;"	m	struct:__anon110	file:
int_pending	.\pxa2xx_pic.c	/^    uint32_t int_pending[2];$/;"	m	struct:pxa2xx_pic_state_s	file:
int_stat	.\eepro100.c	/^    uint8_t int_stat;           \/* PCI interrupt status *\/$/;"	m	struct:__anon16	file:
int_status	.\fdc.c	/^    uint8_t int_status;$/;"	m	struct:fdctrl_t	file:
int_status	.\pl110.c	/^    uint32_t int_status;$/;"	m	struct:__anon59	file:
int_status	.\stellaris.c	/^    uint32_t int_status;$/;"	m	struct:__anon110	file:
intbit_to_level	.\slavio_intctl.c	/^    const uint32_t *intbit_to_level;$/;"	m	struct:SLAVIO_INTCTLState	file:
intbit_to_level	.\sun4c_intctl.c	/^    const uint32_t *intbit_to_level;$/;"	m	struct:Sun4c_INTCTLState	file:
intbit_to_level	.\sun4c_intctl.c	/^static const uint32_t intbit_to_level[] = { 0, 1, 4, 6, 8, 10, 0, 14, };$/;"	v	file:
intbit_to_level	.\sun4m.c	/^    uint32_t intbit_to_level[32];$/;"	m	struct:hwdef	file:
intc	.\sh7750.c	/^    struct intc_desc intc;$/;"	m	struct:SH7750State	typeref:struct:SH7750State::intc_desc	file:
intc_desc	.\sh_intc.h	/^struct intc_desc {$/;"	s
intc_enum	.\sh_intc.h	/^typedef unsigned char intc_enum;$/;"	t
intc_group	.\sh_intc.h	/^struct intc_group {$/;"	s
intc_mask_reg	.\sh_intc.h	/^struct intc_mask_reg {$/;"	s
intc_prio_reg	.\sh_intc.h	/^struct intc_prio_reg {$/;"	s
intc_source	.\sh_intc.h	/^struct intc_source {$/;"	s
intc_vect	.\sh_intc.h	/^struct intc_vect {$/;"	s
intctl	.\cs4231.c	/^    void *intctl;$/;"	m	struct:CSState	file:
intctl	.\mipsnet.c	/^    uint32_t intctl;$/;"	m	struct:MIPSnetState	file:
intctl_base	.\sun4m.c	/^    target_phys_addr_t intctl_base, counter_base, nvram_base, ms_kb_base;$/;"	m	struct:hwdef	file:
intctl_g_intr	.\sun4m.c	/^    int intctl_g_intr, esp_irq, le_irq, clock_irq, clock1_irq;$/;"	m	struct:hwdef	file:
integrator_spd	.\integratorcp.c	/^static uint8_t integrator_spd[128] = {$/;"	v	file:
integratorcm_do_remap	.\integratorcp.c	/^static void integratorcm_do_remap(integratorcm_state *s, int flash)$/;"	f	file:
integratorcm_init	.\integratorcp.c	/^static void integratorcm_init(int memsz, uint32_t flash_offset)$/;"	f	file:
integratorcm_read	.\integratorcp.c	/^static uint32_t integratorcm_read(void *opaque, target_phys_addr_t offset)$/;"	f	file:
integratorcm_readfn	.\integratorcp.c	/^static CPUReadMemoryFunc *integratorcm_readfn[] = {$/;"	v	file:
integratorcm_set_ctrl	.\integratorcp.c	/^static void integratorcm_set_ctrl(integratorcm_state *s, uint32_t value)$/;"	f	file:
integratorcm_state	.\integratorcp.c	/^} integratorcm_state;$/;"	t	typeref:struct:__anon21	file:
integratorcm_update	.\integratorcp.c	/^static void integratorcm_update(integratorcm_state *s)$/;"	f	file:
integratorcm_write	.\integratorcp.c	/^static void integratorcm_write(void *opaque, target_phys_addr_t offset,$/;"	f	file:
integratorcm_writefn	.\integratorcp.c	/^static CPUWriteMemoryFunc *integratorcm_writefn[] = {$/;"	v	file:
integratorcp_init	.\integratorcp.c	/^static void integratorcp_init(int ram_size, int vga_ram_size,$/;"	f	file:
integratorcp_machine	.\integratorcp.c	/^QEMUMachine integratorcp_machine = {$/;"	v
interleave_disabled	.\omap.c	/^    int interleave_disabled;$/;"	m	struct:omap_dma_channel_s	file:
interrupt	.\ads7846.c	/^    qemu_irq interrupt;$/;"	m	struct:ads7846_state_s	file:
interrupt	.\max111x.c	/^    qemu_irq interrupt;$/;"	m	struct:max111x_s	file:
interrupts	.\omap.c	/^    int interrupts;$/;"	m	struct:omap_dma_channel_s	file:
interrupts	.\omap.c	/^    uint8_t interrupts;$/;"	m	struct:omap_rtc_s	file:
interrupts	.\omap.h	/^    int interrupts;$/;"	m	struct:omap_dma_lcd_channel_s
interrupts	.\omap_lcdc.c	/^    int interrupts;$/;"	m	struct:omap_lcd_panel_s	file:
intmask	.\pxa2xx_mmci.c	/^    uint32_t intmask;$/;"	m	struct:pxa2xx_mmci_s	file:
intmskena	.\mst_fpga.c	/^	uint32_t intmskena;$/;"	m	struct:mst_irq_state	file:
intr	.\omap.c	/^    int intr;$/;"	m	struct:dma_irq_map	file:
intr	.\usb-ohci.c	/^    uint32_t intr;$/;"	m	struct:__anon123	file:
intr	.\usb-ohci.c	/^    uint32_t intr[32];$/;"	m	struct:ohci_hcca	file:
intr	.\usb-uhci.c	/^    uint16_t intr; \/* interrupt enable register *\/$/;"	m	struct:UHCIState	file:
intr_status	.\usb-ohci.c	/^    uint32_t intr_status;$/;"	m	struct:__anon123	file:
intreg_pending	.\sbi.c	/^    uint32_t intreg_pending[MAX_CPUS];$/;"	m	struct:SBIState	file:
intreg_pending	.\slavio_intctl.c	/^    uint32_t intreg_pending[MAX_CPUS];$/;"	m	struct:SLAVIO_INTCTLState	file:
intregm_disabled	.\slavio_intctl.c	/^    uint32_t intregm_disabled;$/;"	m	struct:SLAVIO_INTCTLState	file:
intregm_pending	.\slavio_intctl.c	/^    uint32_t intregm_pending;$/;"	m	struct:SLAVIO_INTCTLState	file:
intreq	.\pxa2xx_mmci.c	/^    uint32_t intreq;$/;"	m	struct:pxa2xx_mmci_s	file:
intrmsk	.\ppc405_uc.c	/^    uint8_t intrmsk;$/;"	m	struct:ppc4xx_i2c_t	file:
ints	.\omap.c	/^    uint16_t ints;$/;"	m	struct:omap_gpio_s	file:
ints	.\omap.c	/^    uint16_t ints;$/;"	m	struct:omap_mpuio_s	file:
intsetclr	.\mst_fpga.c	/^	uint32_t intsetclr;$/;"	m	struct:mst_irq_state	file:
invalidate	.\omap_lcdc.c	/^    int invalidate;$/;"	m	struct:omap_lcd_panel_s	file:
invalidate	.\pl110.c	/^    int invalidate;$/;"	m	struct:__anon59	file:
invalidate_cursor1	.\cirrus_vga.c	/^static inline void invalidate_cursor1(CirrusVGAState *s)$/;"	f	file:
invalidated	.\pxa2xx_lcd.c	/^    int invalidated;$/;"	m	struct:pxa2xx_lcdc_s	file:
invalidated	.\vmware_vga.c	/^    int invalidated;$/;"	m	struct:vmsvga_state_s	file:
inverse	.\ssd0303.c	/^    int inverse;$/;"	m	struct:__anon105	file:
invol	.\wm8750.c	/^    uint8_t invol[4], inmute[2];$/;"	m	struct:wm8750_s	file:
io	.\ide.c	/^    uint16_t io;$/;"	m	struct:md_s	file:
io	.\nand.c	/^    uint8_t io[MAX_PAGE + MAX_OOB + 0x400];$/;"	m	struct:nand_flash_s	file:
io_base	.\fdc.c	/^    target_phys_addr_t io_base;$/;"	m	struct:fdctrl_t	file:
io_base	.\ide.c	/^    uint32_t io_base;$/;"	m	struct:md_s	file:
io_base	.\m48t59.c	/^    uint32_t io_base;$/;"	m	struct:m48t59_t	file:
io_base	.\pxa2xx.c	/^    target_phys_addr_t io_base;$/;"	m	struct:PXASSPDef	file:
io_base	.\pxa2xx.c	/^    target_phys_addr_t io_base;$/;"	m	struct:__anon81	file:
io_base	.\pxa2xx_pcmcia.c	/^    target_phys_addr_t io_base;$/;"	m	struct:pxa2xx_pcmcia_s	file:
io_buffer	.\ide.c	/^    uint8_t *io_buffer;$/;"	m	struct:IDEState	file:
io_buffer_index	.\ide.c	/^    int io_buffer_index;$/;"	m	struct:IDEState	file:
io_buffer_size	.\ide.c	/^    int io_buffer_size;$/;"	m	struct:IDEState	file:
io_fn	.\omap.h	/^struct io_fn {$/;"	s
io_header	.\scsi-generic.c	/^    sg_io_hdr_t io_header;$/;"	m	struct:SCSIRequest	file:
io_read	.\pcmcia.h	/^    uint16_t (*io_read)(void *state, uint32_t address);$/;"	m	struct:pcmcia_card_s
io_readb	.\omap.h	/^static uint32_t io_readb(void *opaque, target_phys_addr_t addr)$/;"	f
io_readfn	.\omap.h	/^static CPUReadMemoryFunc *io_readfn[] = { io_readb, io_readh, io_readw, };$/;"	v
io_readh	.\omap.h	/^static uint32_t io_readh(void *opaque, target_phys_addr_t addr)$/;"	f
io_readw	.\omap.h	/^static uint32_t io_readw(void *opaque, target_phys_addr_t addr)$/;"	f
io_regions	.\pci.h	/^    PCIIORegion io_regions[PCI_NUM_REGIONS];$/;"	m	struct:PCIDevice
io_write	.\pcmcia.h	/^    void (*io_write)(void *state, uint32_t address, uint16_t value);$/;"	m	struct:pcmcia_card_s
io_writeb	.\omap.h	/^static void io_writeb(void *opaque, target_phys_addr_t addr, uint32_t value)$/;"	f
io_writefn	.\omap.h	/^static CPUWriteMemoryFunc *io_writefn[] = { io_writeb, io_writeh, io_writew, };$/;"	v
io_writeh	.\omap.h	/^static void io_writeh(void *opaque, target_phys_addr_t addr, uint32_t value)$/;"	f
io_writew	.\omap.h	/^static void io_writew(void *opaque, target_phys_addr_t addr, uint32_t value)$/;"	f
ioaddr	.\nand.c	/^    uint8_t *ioaddr;$/;"	m	struct:nand_flash_s	file:
ioapic	.\pc.c	/^static IOAPICState *ioapic;$/;"	v	file:
ioapic_init	.\apic.c	/^IOAPICState *ioapic_init(void)$/;"	f
ioapic_load	.\apic.c	/^static int ioapic_load(QEMUFile *f, void *opaque, int version_id)$/;"	f	file:
ioapic_mem_read	.\apic.c	/^static CPUReadMemoryFunc *ioapic_mem_read[3] = {$/;"	v	file:
ioapic_mem_readl	.\apic.c	/^static uint32_t ioapic_mem_readl(void *opaque, target_phys_addr_t addr)$/;"	f	file:
ioapic_mem_write	.\apic.c	/^static CPUWriteMemoryFunc *ioapic_mem_write[3] = {$/;"	v	file:
ioapic_mem_writel	.\apic.c	/^static void ioapic_mem_writel(void *opaque, target_phys_addr_t addr, uint32_t val)$/;"	f	file:
ioapic_reset	.\apic.c	/^static void ioapic_reset(void *opaque)$/;"	f	file:
ioapic_save	.\apic.c	/^static void ioapic_save(QEMUFile *f, void *opaque)$/;"	f	file:
ioapic_service	.\apic.c	/^static void ioapic_service(IOAPICState *s)$/;"	f	file:
ioapic_set_irq	.\apic.c	/^void ioapic_set_irq(void *opaque, int vector, int level)$/;"	f
iolen	.\nand.c	/^    int iolen;$/;"	m	struct:nand_flash_s	file:
iomemtype	.\sh_intc.h	/^    int iomemtype;$/;"	m	struct:intc_desc
iommu	.\sparc32_dma.c	/^    void *iommu;$/;"	m	struct:DMAState	file:
iommu_bad_addr	.\iommu.c	/^static void iommu_bad_addr(IOMMUState *s, target_phys_addr_t addr,$/;"	f	file:
iommu_base	.\sun4m.c	/^    target_phys_addr_t iommu_base, slavio_base;$/;"	m	struct:hwdef	file:
iommu_init	.\iommu.c	/^void *iommu_init(target_phys_addr_t addr, uint32_t version, qemu_irq irq)$/;"	f
iommu_load	.\iommu.c	/^static int iommu_load(QEMUFile *f, void *opaque, int version_id)$/;"	f	file:
iommu_mem_read	.\iommu.c	/^static CPUReadMemoryFunc *iommu_mem_read[3] = {$/;"	v	file:
iommu_mem_readl	.\iommu.c	/^static uint32_t iommu_mem_readl(void *opaque, target_phys_addr_t addr)$/;"	f	file:
iommu_mem_write	.\iommu.c	/^static CPUWriteMemoryFunc *iommu_mem_write[3] = {$/;"	v	file:
iommu_mem_writel	.\iommu.c	/^static void iommu_mem_writel(void *opaque, target_phys_addr_t addr,$/;"	f	file:
iommu_page_get_flags	.\iommu.c	/^static uint32_t iommu_page_get_flags(IOMMUState *s, target_phys_addr_t addr)$/;"	f	file:
iommu_reset	.\iommu.c	/^static void iommu_reset(void *opaque)$/;"	f	file:
iommu_save	.\iommu.c	/^static void iommu_save(QEMUFile *f, void *opaque)$/;"	f	file:
iommu_translate_pa	.\iommu.c	/^static target_phys_addr_t iommu_translate_pa(IOMMUState *s,$/;"	f	file:
iommu_version	.\sun4m.c	/^    uint32_t iommu_version;$/;"	m	struct:hwdef	file:
ioport80_write	.\pc.c	/^static void ioport80_write(void *opaque, uint32_t addr, uint32_t data)$/;"	f	file:
ioport92_read	.\pc.c	/^static uint32_t ioport92_read(void *opaque, uint32_t addr)$/;"	f	file:
ioport92_write	.\pc.c	/^static void ioport92_write(void *opaque, uint32_t addr, uint32_t val)$/;"	f	file:
ioportF0_write	.\pc.c	/^static void ioportF0_write(void *opaque, uint32_t addr, uint32_t data)$/;"	f	file:
ioport_get_a20	.\pc.c	/^int ioport_get_a20(void)$/;"	f
ioport_read1	.\eepro100.c	/^static uint32_t ioport_read1(void *opaque, uint32_t addr)$/;"	f	file:
ioport_read2	.\eepro100.c	/^static uint32_t ioport_read2(void *opaque, uint32_t addr)$/;"	f	file:
ioport_read4	.\eepro100.c	/^static uint32_t ioport_read4(void *opaque, uint32_t addr)$/;"	f	file:
ioport_set_a20	.\pc.c	/^void ioport_set_a20(int enable)$/;"	f
ioport_write1	.\eepro100.c	/^static void ioport_write1(void *opaque, uint32_t addr, uint32_t val)$/;"	f	file:
ioport_write2	.\eepro100.c	/^static void ioport_write2(void *opaque, uint32_t addr, uint32_t val)$/;"	f	file:
ioport_write4	.\eepro100.c	/^static void ioport_write4(void *opaque, uint32_t addr, uint32_t val)$/;"	f	file:
ioredtbl	.\apic.c	/^    uint64_t ioredtbl[IOAPIC_NUM_PINS];$/;"	m	struct:IOAPICState	file:
ioregsel	.\apic.c	/^    uint8_t ioregsel;$/;"	m	struct:IOAPICState	file:
iostart	.\iommu.c	/^    target_phys_addr_t iostart;$/;"	m	struct:IOMMUState	file:
iounit_bases	.\sun4m.c	/^    target_phys_addr_t iounit_bases[MAX_IOUNITS], slavio_base;$/;"	m	struct:sun4d_hwdef	file:
iounit_version	.\sun4m.c	/^    uint32_t iounit_version;$/;"	m	struct:sun4d_hwdef	file:
ip_checksum	.\rtl8139.c	/^static uint16_t ip_checksum(void *data, size_t len)$/;"	f	file:
ip_dst	.\rtl8139.c	/^    uint32_t ip_dst;$/;"	m	struct:ip_pseudo_header	file:
ip_dst	.\rtl8139.c	/^    uint32_t ip_src,ip_dst; \/* source and dest address *\/$/;"	m	struct:ip_header	file:
ip_header	.\rtl8139.c	/^typedef struct ip_header$/;"	s	file:
ip_header	.\rtl8139.c	/^} ip_header;$/;"	t	typeref:struct:ip_header	file:
ip_id	.\rtl8139.c	/^    uint16_t ip_id;         \/* identification *\/$/;"	m	struct:ip_header	file:
ip_len	.\rtl8139.c	/^    uint16_t ip_len;        \/* total length *\/$/;"	m	struct:ip_header	file:
ip_off	.\rtl8139.c	/^    uint16_t ip_off;        \/* fragment offset field *\/$/;"	m	struct:ip_header	file:
ip_p	.\rtl8139.c	/^    uint8_t  ip_p;          \/* protocol *\/$/;"	m	struct:ip_header	file:
ip_payload	.\rtl8139.c	/^    uint16_t ip_payload;$/;"	m	struct:ip_pseudo_header	file:
ip_proto	.\rtl8139.c	/^    uint8_t  ip_proto;$/;"	m	struct:ip_pseudo_header	file:
ip_pseudo_header	.\rtl8139.c	/^typedef struct ip_pseudo_header$/;"	s	file:
ip_pseudo_header	.\rtl8139.c	/^} ip_pseudo_header;$/;"	t	typeref:struct:ip_pseudo_header	file:
ip_src	.\rtl8139.c	/^    uint32_t ip_src,ip_dst; \/* source and dest address *\/$/;"	m	struct:ip_header	file:
ip_src	.\rtl8139.c	/^    uint32_t ip_src;$/;"	m	struct:ip_pseudo_header	file:
ip_sum	.\rtl8139.c	/^    uint16_t ip_sum;        \/* checksum *\/$/;"	m	struct:ip_header	file:
ip_tos	.\rtl8139.c	/^    uint8_t  ip_tos;        \/* type of service *\/$/;"	m	struct:ip_header	file:
ip_ttl	.\rtl8139.c	/^    uint8_t  ip_ttl;        \/* time to live *\/$/;"	m	struct:ip_header	file:
ip_ver_len	.\rtl8139.c	/^    uint8_t  ip_ver_len;    \/* version and header length *\/$/;"	m	struct:ip_header	file:
ipr	.\mcf5206.c	/^    uint16_t ipr;$/;"	m	struct:__anon27	file:
ipr	.\mcf_intc.c	/^    uint64_t ipr;$/;"	m	struct:__anon32	file:
ipvp	.\openpic.c	/^    uint32_t ipvp;  \/* IRQ vector\/priority register *\/$/;"	m	struct:IRQ_src_t	file:
ir	.\ppc405_uc.c	/^    uint32_t ir;$/;"	m	struct:ppc405_gpio_t	file:
irq	.\arm_timer.c	/^    qemu_irq irq;$/;"	m	struct:__anon6	file:
irq	.\arm_timer.c	/^    qemu_irq irq;$/;"	m	struct:__anon7	file:
irq	.\cuda.c	/^    qemu_irq irq;$/;"	m	struct:CUDAState	file:
irq	.\esp.c	/^    qemu_irq irq;$/;"	m	struct:ESPState	file:
irq	.\etraxfs_timer.c	/^	qemu_irq *irq;$/;"	m	struct:fs_timer_t	file:
irq	.\fdc.c	/^    qemu_irq irq;$/;"	m	struct:fdctrl_t	file:
irq	.\i8254.c	/^    qemu_irq irq;$/;"	m	struct:PITChannelState	file:
irq	.\ide.c	/^    qemu_irq irq;$/;"	m	struct:IDEState	file:
irq	.\iommu.c	/^    qemu_irq irq;$/;"	m	struct:IOMMUState	file:
irq	.\mc146818rtc.c	/^    qemu_irq irq;$/;"	m	struct:RTCState	file:
irq	.\mcf5206.c	/^    qemu_irq irq;$/;"	m	struct:__anon26	file:
irq	.\mcf5208.c	/^    qemu_irq irq;$/;"	m	struct:__anon28	file:
irq	.\mcf_fec.c	/^    qemu_irq *irq;$/;"	m	struct:__anon30	file:
irq	.\mcf_uart.c	/^    qemu_irq irq;$/;"	m	struct:__anon33	file:
irq	.\mipsnet.c	/^    qemu_irq irq;$/;"	m	struct:MIPSnetState	file:
irq	.\ne2000.c	/^    qemu_irq irq;$/;"	m	struct:NE2000State	file:
irq	.\omap.c	/^    qemu_irq irq;$/;"	m	struct:omap_dma_channel_s	file:
irq	.\omap.c	/^    qemu_irq irq;$/;"	m	struct:omap_gpio_s	file:
irq	.\omap.c	/^    qemu_irq irq;$/;"	m	struct:omap_mpu_timer_s	file:
irq	.\omap.c	/^    qemu_irq irq;$/;"	m	struct:omap_mpuio_s	file:
irq	.\omap.c	/^    qemu_irq irq;$/;"	m	struct:omap_rtc_s	file:
irq	.\omap.h	/^    qemu_irq *irq[2];$/;"	m	struct:omap_mpu_state_s
irq	.\omap.h	/^    qemu_irq irq;$/;"	m	struct:omap_dma_lcd_channel_s
irq	.\omap_i2c.c	/^    qemu_irq irq;$/;"	m	struct:omap_i2c_s	file:
irq	.\omap_lcdc.c	/^    qemu_irq irq;$/;"	m	struct:omap_lcd_panel_s	file:
irq	.\omap_mmc.c	/^    qemu_irq irq;$/;"	m	struct:omap_mmc_s	file:
irq	.\parallel.c	/^    qemu_irq irq;$/;"	m	struct:ParallelState	file:
irq	.\pci.h	/^    qemu_irq *irq;$/;"	m	struct:PCIDevice
irq	.\pcmcia.h	/^    qemu_irq irq;$/;"	m	struct:pcmcia_socket_s
irq	.\pcnet.c	/^    qemu_irq irq;$/;"	m	struct:PCNetState_st	file:
irq	.\pl011.c	/^    qemu_irq irq;$/;"	m	struct:__anon52	file:
irq	.\pl022.c	/^    qemu_irq irq;$/;"	m	struct:__anon53	file:
irq	.\pl031.c	/^    qemu_irq irq;$/;"	m	struct:__anon54	file:
irq	.\pl050.c	/^    qemu_irq irq;$/;"	m	struct:__anon55	file:
irq	.\pl061.c	/^    qemu_irq irq;$/;"	m	struct:__anon56	file:
irq	.\pl080.c	/^    qemu_irq irq;$/;"	m	struct:__anon58	file:
irq	.\pl110.c	/^    qemu_irq irq;$/;"	m	struct:__anon59	file:
irq	.\pl181.c	/^    qemu_irq irq[2];$/;"	m	struct:__anon60	file:
irq	.\pl190.c	/^    qemu_irq irq;$/;"	m	struct:__anon61	file:
irq	.\ppc405_uc.c	/^    qemu_irq irq;$/;"	m	struct:ppc4xx_i2c_t	file:
irq	.\ppc405_uc.c	/^    qemu_irq irq;$/;"	m	struct:ppc4xx_sdram_t	file:
irq	.\pxa.h	/^    qemu_irq irq;$/;"	m	struct:pxa2xx_i2s_s
irq	.\pxa2xx.c	/^    qemu_irq irq;$/;"	m	struct:pxa2xx_fir_s	file:
irq	.\pxa2xx.c	/^    qemu_irq irq;$/;"	m	struct:pxa2xx_i2c_s	file:
irq	.\pxa2xx.c	/^    qemu_irq irq;$/;"	m	struct:pxa2xx_ssp_s	file:
irq	.\pxa2xx_dma.c	/^    qemu_irq irq;$/;"	m	struct:pxa2xx_dma_state_s	file:
irq	.\pxa2xx_keypad.c	/^    qemu_irq    irq;$/;"	m	struct:pxa2xx_keypad_s	file:
irq	.\pxa2xx_lcd.c	/^    qemu_irq irq;$/;"	m	struct:pxa2xx_lcdc_s	file:
irq	.\pxa2xx_mmci.c	/^    qemu_irq irq;$/;"	m	struct:pxa2xx_mmci_s	file:
irq	.\pxa2xx_pcmcia.c	/^    qemu_irq irq;$/;"	m	struct:pxa2xx_pcmcia_s	file:
irq	.\pxa2xx_timer.c	/^    qemu_irq irq;$/;"	m	struct:pxa2xx_timer0_s	file:
irq	.\sb16.c	/^    int irq;$/;"	m	struct:SB16State	file:
irq	.\sb16.c	/^    int irq;$/;"	m	struct:__anon88	file:
irq	.\serial.c	/^    qemu_irq irq;$/;"	m	struct:SerialState	file:
irq	.\sh_timer.c	/^    struct intc_source *irq;$/;"	m	struct:__anon97	typeref:struct:__anon97::intc_source	file:
irq	.\slavio_misc.c	/^    qemu_irq irq;$/;"	m	struct:MiscState	file:
irq	.\slavio_serial.c	/^    qemu_irq irq;$/;"	m	struct:ChannelState	file:
irq	.\slavio_timer.c	/^    qemu_irq irq;$/;"	m	struct:SLAVIO_TIMERState	file:
irq	.\smc91c111.c	/^    qemu_irq irq;$/;"	m	struct:__anon103	file:
irq	.\sparc32_dma.c	/^    qemu_irq irq;$/;"	m	struct:DMAState	file:
irq	.\stellaris.c	/^    qemu_irq irq;$/;"	m	struct:__anon110	file:
irq	.\stellaris.c	/^    qemu_irq irq;$/;"	m	struct:__anon111	file:
irq	.\stellaris.c	/^    qemu_irq irq;$/;"	m	struct:__anon112	file:
irq	.\stellaris.c	/^    qemu_irq irq;$/;"	m	struct:__anon114	file:
irq	.\stellaris.c	/^    qemu_irq irq;$/;"	m	struct:gptm_state	file:
irq	.\stellaris_enet.c	/^    qemu_irq irq;$/;"	m	struct:__anon115	file:
irq	.\stellaris_input.c	/^    qemu_irq irq;$/;"	m	struct:__anon117	file:
irq	.\tsc210x.c	/^    int state, page, offset, irq;$/;"	m	struct:tsc210x_state_s	file:
irq	.\usb-ohci.c	/^    qemu_irq irq;$/;"	m	struct:__anon123	file:
irq	.\versatilepb.c	/^  int irq;$/;"	m	struct:vpb_sic_state	file:
irq_base	.\i8259.c	/^    uint8_t irq_base;$/;"	m	struct:PicState	file:
irq_count	.\i8259.c	/^static uint64_t irq_count[16];$/;"	v	file:
irq_count	.\ide.c	/^    uint32_t irq_count; \/* counts IRQs when using win2k install hack *\/$/;"	m	struct:IDEState	file:
irq_count	.\pci.c	/^    int irq_count[];$/;"	m	struct:PCIBus	file:
irq_count	.\slavio_intctl.c	/^    uint64_t irq_count[32];$/;"	m	struct:SLAVIO_INTCTLState	file:
irq_count	.\sun4c_intctl.c	/^    uint64_t irq_count;$/;"	m	struct:Sun4c_INTCTLState	file:
irq_enable	.\pl190.c	/^    uint32_t irq_enable;$/;"	m	struct:__anon61	file:
irq_enabled	.\integratorcp.c	/^    uint32_t irq_enabled;$/;"	m	struct:__anon21	file:
irq_enabled	.\integratorcp.c	/^  uint32_t irq_enabled;$/;"	m	struct:icp_pic_state	file:
irq_enabled	.\pxa2xx_timer.c	/^    uint32_t irq_enabled;$/;"	m	struct:__anon86	file:
irq_index	.\pci.h	/^    int irq_index;$/;"	m	struct:PCIDevice
irq_info	.\an5206.c	/^void irq_info(void)$/;"	f
irq_info	.\arm_pic.c	/^void irq_info(void)$/;"	f
irq_info	.\etraxfs.c	/^void irq_info()$/;"	f
irq_info	.\i8259.c	/^void irq_info(void)$/;"	f
irq_info	.\shix.c	/^void irq_info(void)$/;"	f
irq_info	.\sun4m.c	/^void irq_info()$/;"	f
irq_info	.\sun4u.c	/^void irq_info()$/;"	f
irq_kbd	.\pckbd.c	/^    qemu_irq irq_kbd;$/;"	m	struct:KBDState	file:
irq_level	.\i8259.c	/^static int irq_level[16];$/;"	v	file:
irq_mouse	.\pckbd.c	/^    qemu_irq irq_mouse;$/;"	m	struct:KBDState	file:
irq_of_magic	.\sb16.c	/^static int irq_of_magic (int magic)$/;"	f	file:
irq_opaque	.\pci.c	/^    qemu_irq *irq_opaque;$/;"	m	struct:PCIBus	file:
irq_out	.\openpic.c	/^    qemu_irq irq_out;$/;"	m	struct:openpic_t	file:
irq_pending	.\parallel.c	/^    int irq_pending;$/;"	m	struct:ParallelState	file:
irq_request_opaque	.\i8259.c	/^    void *irq_request_opaque;$/;"	m	struct:PicState2	file:
irq_state	.\arm_gic.c	/^    gic_irq_state irq_state[GIC_NIRQ];$/;"	m	struct:gic_state	file:
irq_state	.\mcf5206.c	/^    int irq_state;$/;"	m	struct:__anon26	file:
irq_state	.\mcf_fec.c	/^    uint32_t irq_state;$/;"	m	struct:__anon30	file:
irq_state	.\pci.h	/^    int irq_state[4];$/;"	m	struct:PCIDevice
irq_target	.\arm_gic.c	/^    int irq_target[GIC_NIRQ];$/;"	m	struct:gic_state	file:
irq_time	.\i8259.c	/^int64_t irq_time[16];$/;"	v
irq_timer	.\i8254.c	/^    QEMUTimer *irq_timer;$/;"	m	struct:PITChannelState	file:
irqlevel	.\pxa2xx_lcd.c	/^    int irqlevel;$/;"	m	struct:pxa2xx_lcdc_s	file:
irqn	.\pxa2xx.c	/^    int irqn;$/;"	m	struct:PXASSPDef	file:
irqn	.\pxa2xx.c	/^    int irqn;$/;"	m	struct:__anon81	file:
irqs	.\heathrow_pic.c	/^    qemu_irq *irqs;$/;"	m	struct:HeathrowPICS	file:
irqs	.\omap.c	/^    uint32_t irqs;$/;"	m	struct:omap_intr_handler_bank_s	file:
irqs	.\openpic.c	/^    qemu_irq *irqs;$/;"	m	struct:IRQ_dst_t	file:
irqs	.\ppc405_uc.c	/^    qemu_irq irqs[4];$/;"	m	struct:ppc405_dma_t	file:
irqs	.\ppc405_uc.c	/^    qemu_irq irqs[4];$/;"	m	struct:ppc40x_mal_t	file:
irqs	.\ppc405_uc.c	/^    qemu_irq irqs[5];$/;"	m	struct:ppc4xx_gpt_t	file:
irqs	.\ppc4xx_devs.c	/^    qemu_irq *irqs;$/;"	m	struct:ppcuic_t	file:
irr	.\apic.c	/^    uint32_t irr;$/;"	m	struct:IOAPICState	file:
irr	.\apic.c	/^    uint32_t irr[8]; \/* interrupt request register *\/$/;"	m	struct:APICState	file:
irr	.\i8259.c	/^    uint8_t irr; \/* interrupt request register *\/$/;"	m	struct:PicState	file:
irr	.\spitz.c	/^    uint16_t irr;$/;"	m	struct:scoop_info_s	file:
is	.\pl022.c	/^    uint32_t is;$/;"	m	struct:__anon53	file:
is	.\pl031.c	/^    uint32_t is;$/;"	m	struct:__anon54	file:
is	.\ppc405_uc.c	/^    uint32_t is;$/;"	m	struct:ppc4xx_gpt_t	file:
is_cdrom	.\ide.c	/^    int is_cdrom;$/;"	m	struct:IDEState	file:
is_cf	.\ide.c	/^    int is_cf;$/;"	m	struct:IDEState	file:
is_fiq	.\pxa2xx_pic.c	/^    uint32_t is_fiq[2];$/;"	m	struct:pxa2xx_pic_state_s	file:
is_mouse	.\pl050.c	/^    int is_mouse;$/;"	m	struct:__anon55	file:
is_oldworld	.\macio.c	/^    int is_oldworld;$/;"	m	struct:macio_state_t	file:
is_write	.\scsi-generic.c	/^static int is_write(int command)$/;"	f	file:
isa_cirrus_vga_init	.\cirrus_vga.c	/^void isa_cirrus_vga_init(DisplayState *ds, uint8_t *vga_ram_base,$/;"	f
isa_ide_init	.\ide.c	/^void isa_ide_init(int iobase, int iobase2, qemu_irq irq,$/;"	f
isa_mmio_init	.\isa_mmio.c	/^void isa_mmio_init(target_phys_addr_t base, target_phys_addr_t size)$/;"	f
isa_mmio_iomemtype	.\isa_mmio.c	/^static int isa_mmio_iomemtype = 0;$/;"	v	file:
isa_mmio_read	.\isa_mmio.c	/^static CPUReadMemoryFunc *isa_mmio_read[] = {$/;"	v	file:
isa_mmio_readb	.\isa_mmio.c	/^static uint32_t isa_mmio_readb (void *opaque, target_phys_addr_t addr)$/;"	f	file:
isa_mmio_readl	.\isa_mmio.c	/^static uint32_t isa_mmio_readl (void *opaque, target_phys_addr_t addr)$/;"	f	file:
isa_mmio_readw	.\isa_mmio.c	/^static uint32_t isa_mmio_readw (void *opaque, target_phys_addr_t addr)$/;"	f	file:
isa_mmio_write	.\isa_mmio.c	/^static CPUWriteMemoryFunc *isa_mmio_write[] = {$/;"	v	file:
isa_mmio_writeb	.\isa_mmio.c	/^static void isa_mmio_writeb (void *opaque, target_phys_addr_t addr,$/;"	f	file:
isa_mmio_writel	.\isa_mmio.c	/^static void isa_mmio_writel (void *opaque, target_phys_addr_t addr,$/;"	f	file:
isa_mmio_writew	.\isa_mmio.c	/^static void isa_mmio_writew (void *opaque, target_phys_addr_t addr,$/;"	f	file:
isa_ne2000_init	.\ne2000.c	/^void isa_ne2000_init(int base, qemu_irq irq, NICInfo *nd)$/;"	f
isa_page_descs	.\piix_pci.c	/^static uint32_t isa_page_descs[384 \/ 4];$/;"	v	file:
isa_vga_init	.\vga.c	/^int isa_vga_init(DisplayState *ds, uint8_t *vga_ram_base,$/;"	f
isa_vga_mm_init	.\vga.c	/^int isa_vga_mm_init(DisplayState *ds, uint8_t *vga_ram_base,$/;"	f
isacntl	.\ppc405_uc.c	/^    uint32_t isacntl;$/;"	m	struct:ppc405_ocm_t	file:
isapc_machine	.\pc.c	/^QEMUMachine isapc_machine = {$/;"	v
isarc	.\ppc405_uc.c	/^    uint32_t isarc;$/;"	m	struct:ppc405_ocm_t	file:
isense	.\pl061.c	/^    uint8_t isense;$/;"	m	struct:__anon56	file:
isr	.\apic.c	/^    uint32_t isr[8];  \/* in service register *\/$/;"	m	struct:APICState	file:
isr	.\eepro100.c	/^    uint8_t isr;$/;"	m	struct:__anon16	file:
isr	.\i8259.c	/^    uint8_t isr; \/* interrupt service register *\/$/;"	m	struct:PicState	file:
isr	.\mcf_uart.c	/^    uint8_t isr;$/;"	m	struct:__anon33	file:
isr	.\ne2000.c	/^    uint8_t isr;$/;"	m	struct:NE2000State	file:
isr	.\pcnet.c	/^    int mmio_index, rap, isr, lnkst;$/;"	m	struct:PCNetState_st	file:
isr	.\spitz.c	/^    uint16_t isr;$/;"	m	struct:scoop_info_s	file:
isr1h	.\ppc405_uc.c	/^    uint32_t isr1h;$/;"	m	struct:ppc405_gpio_t	file:
isr1l	.\ppc405_uc.c	/^    uint32_t isr1l;$/;"	m	struct:ppc405_gpio_t	file:
istat0	.\lsi53c895a.c	/^    uint8_t istat0;$/;"	m	struct:__anon25	file:
istat1	.\lsi53c895a.c	/^    uint8_t istat1;$/;"	m	struct:__anon25	file:
istate	.\pl061.c	/^    uint8_t istate;$/;"	m	struct:__anon56	file:
it_ena	.\omap.c	/^    int it_ena;$/;"	m	struct:omap_mpu_timer_s	file:
it_shift	.\mc146818rtc.c	/^    int it_shift;$/;"	m	struct:RTCState	file:
it_shift	.\parallel.c	/^    int it_shift;$/;"	m	struct:ParallelState	file:
it_shift	.\pckbd.c	/^    int it_shift;$/;"	m	struct:KBDState	file:
it_shift	.\serial.c	/^    int it_shift;$/;"	m	struct:SerialState	file:
jazz_led_init	.\jazz_led.c	/^void jazz_led_init(DisplayState *ds, target_phys_addr_t base)$/;"	f
jazz_led_invalidate_display	.\jazz_led.c	/^static void jazz_led_invalidate_display(void *opaque)$/;"	f	file:
jazz_led_screen_dump	.\jazz_led.c	/^static void jazz_led_screen_dump(void *opaque, const char *filename)$/;"	f	file:
jazz_led_update_display	.\jazz_led.c	/^static void jazz_led_update_display(void *opaque)$/;"	f	file:
jtagid	.\ppc405_uc.c	/^    uint32_t jtagid;$/;"	m	struct:ppc405cr_cpc_t	file:
jtagid	.\ppc405_uc.c	/^    uint32_t jtagid;$/;"	m	struct:ppc405ep_cpc_t	file:
kbd	.\pckbd.c	/^    void *kbd;$/;"	m	struct:KBDState	file:
kbd	.\slavio_serial.c	/^    ser, kbd, mouse,$/;"	e	enum:__anon100	file:
kbd	.\usb-hid.c	/^        USBKeyboardState kbd;$/;"	m	union:USBHIDState::__anon121	file:
kbd_irq	.\omap.c	/^    qemu_irq kbd_irq;$/;"	m	struct:omap_mpuio_s	file:
kbd_load	.\pckbd.c	/^static int kbd_load(QEMUFile* f, void* opaque, int version_id)$/;"	f	file:
kbd_mask	.\omap.c	/^    int kbd_mask;$/;"	m	struct:omap_mpuio_s	file:
kbd_mm_read	.\pckbd.c	/^static CPUReadMemoryFunc *kbd_mm_read[] = {$/;"	v	file:
kbd_mm_readb	.\pckbd.c	/^static uint32_t kbd_mm_readb (void *opaque, target_phys_addr_t addr)$/;"	f	file:
kbd_mm_write	.\pckbd.c	/^static CPUWriteMemoryFunc *kbd_mm_write[] = {$/;"	v	file:
kbd_mm_writeb	.\pckbd.c	/^static void kbd_mm_writeb (void *opaque, target_phys_addr_t addr, uint32_t value)$/;"	f	file:
kbd_queue	.\pckbd.c	/^static void kbd_queue(KBDState *s, int b, int aux)$/;"	f	file:
kbd_read_data	.\pckbd.c	/^static uint32_t kbd_read_data(void *opaque, uint32_t addr)$/;"	f	file:
kbd_read_status	.\pckbd.c	/^static uint32_t kbd_read_status(void *opaque, uint32_t addr)$/;"	f	file:
kbd_reset	.\pckbd.c	/^static void kbd_reset(void *opaque)$/;"	f	file:
kbd_save	.\pckbd.c	/^static void kbd_save(QEMUFile* f, void* opaque)$/;"	f	file:
kbd_state	.\pckbd.c	/^KBDState kbd_state;$/;"	v
kbd_update_aux_irq	.\pckbd.c	/^static void kbd_update_aux_irq(void *opaque, int level)$/;"	f	file:
kbd_update_irq	.\pckbd.c	/^static void kbd_update_irq(KBDState *s)$/;"	f	file:
kbd_update_kbd_irq	.\pckbd.c	/^static void kbd_update_kbd_irq(void *opaque, int level)$/;"	f	file:
kbd_write_command	.\pckbd.c	/^static void kbd_write_command(void *opaque, uint32_t addr, uint32_t val)$/;"	f	file:
kbd_write_data	.\pckbd.c	/^static void kbd_write_data(void *opaque, uint32_t addr, uint32_t val)$/;"	f	file:
kbdtimer	.\spitz.c	/^    QEMUTimer *kbdtimer;$/;"	m	struct:spitz_keyboard_s	file:
kcode	.\fmopl.h	/^	UINT8 kcode;		\/* key code        : KeyScaleCode      *\/$/;"	m	struct:fm_opl_channel
kernel_cmdline	.\mips_malta.c	/^    const char *kernel_cmdline;$/;"	m	struct:_loaderparams	file:
kernel_cmdline	.\mips_mipssim.c	/^    const char *kernel_cmdline;$/;"	m	struct:_loaderparams	file:
kernel_cmdline	.\mips_r4k.c	/^    const char *kernel_cmdline;$/;"	m	struct:_loaderparams	file:
kernel_filename	.\mips_malta.c	/^    const char *kernel_filename;$/;"	m	struct:_loaderparams	file:
kernel_filename	.\mips_mipssim.c	/^    const char *kernel_filename;$/;"	m	struct:_loaderparams	file:
kernel_filename	.\mips_r4k.c	/^    const char *kernel_filename;$/;"	m	struct:_loaderparams	file:
kernel_image	.\firmware_abi.h	/^    uint64_t kernel_image;$/;"	m	struct:ohwcfg_v3_t
kernel_size	.\firmware_abi.h	/^    uint64_t kernel_size;$/;"	m	struct:ohwcfg_v3_t
key	.\usb-hid.c	/^    uint8_t key[16];$/;"	m	struct:USBKeyboardState	file:
keyboard_param	.\fmopl.h	/^	int keyboard_param;$/;"	m	struct:fm_opl_f
keyboardhandler_r	.\fmopl.h	/^	OPL_PORTHANDLER_R keyboardhandler_r;$/;"	m	struct:fm_opl_f
keyboardhandler_w	.\fmopl.h	/^	OPL_PORTHANDLER_W keyboardhandler_w;$/;"	m	struct:fm_opl_f
keycode	.\stellaris_input.c	/^    int keycode;$/;"	m	struct:__anon117	file:
keycodes	.\slavio_serial.c	/^static const uint8_t keycodes[128] = {$/;"	v	file:
keymap	.\pxa.h	/^struct  keymap {$/;"	s
keymap	.\spitz.c	/^    int keymap[0x80];$/;"	m	struct:spitz_keyboard_s	file:
keyon	.\fmopl.h	/^	UINT8 keyon;		\/* key on\/off flag                     *\/$/;"	m	struct:fm_opl_channel
keyrow	.\spitz.c	/^    uint16_t keyrow[SPITZ_KEY_SENSE_NUM];$/;"	m	struct:spitz_keyboard_s	file:
keys	.\usb-hid.c	/^    int keys;$/;"	m	struct:USBKeyboardState	file:
kind	.\usb-hid.c	/^    int kind;$/;"	m	struct:USBHIDState	file:
kp	.\pxa.h	/^    struct pxa2xx_keypad_s *kp;$/;"	m	struct:pxa2xx_state_s	typeref:struct:pxa2xx_state_s::pxa2xx_keypad_s
kpas	.\pxa2xx_keypad.c	/^    uint32_t    kpas;$/;"	m	struct:pxa2xx_keypad_s	file:
kpasmkp0	.\pxa2xx_keypad.c	/^    uint32_t    kpasmkp0;$/;"	m	struct:pxa2xx_keypad_s	file:
kpasmkp1	.\pxa2xx_keypad.c	/^    uint32_t    kpasmkp1;$/;"	m	struct:pxa2xx_keypad_s	file:
kpasmkp2	.\pxa2xx_keypad.c	/^    uint32_t    kpasmkp2;$/;"	m	struct:pxa2xx_keypad_s	file:
kpasmkp3	.\pxa2xx_keypad.c	/^    uint32_t    kpasmkp3;$/;"	m	struct:pxa2xx_keypad_s	file:
kpc	.\pxa2xx_keypad.c	/^    uint32_t    kpc;$/;"	m	struct:pxa2xx_keypad_s	file:
kpdk	.\pxa2xx_keypad.c	/^    uint32_t    kpdk;$/;"	m	struct:pxa2xx_keypad_s	file:
kpkdi	.\pxa2xx_keypad.c	/^    uint32_t    kpkdi;$/;"	m	struct:pxa2xx_keypad_s	file:
kpmk	.\pxa2xx_keypad.c	/^    uint32_t    kpmk;$/;"	m	struct:pxa2xx_keypad_s	file:
kprec	.\pxa2xx_keypad.c	/^    uint32_t    kprec;$/;"	m	struct:pxa2xx_keypad_s	file:
ksl	.\fmopl.h	/^	UINT8 ksl;		\/* keyscale level  :(shift down bits)  *\/$/;"	m	struct:fm_opl_slot
ksl_base	.\fmopl.h	/^	UINT32  ksl_base;	\/* KeyScaleLevel Base step             *\/$/;"	m	struct:fm_opl_channel
ksr	.\fmopl.h	/^	UINT8 ksr;		\/* key scale rate  :kcode>>KSR         *\/$/;"	m	struct:fm_opl_slot
l3_ocpi_ck	.\omap1_clk.c	/^static struct clk l3_ocpi_ck = {$/;"	v	typeref:struct:clk	file:
ladr_match	.\pcnet.c	/^static inline int ladr_match(PCNetState *s, const uint8_t *buf, int size)$/;"	f	file:
ladrf	.\pcnet.c	/^    uint16_t ladrf[4];$/;"	m	struct:pcnet_initblk16	file:
ladrf	.\pcnet.c	/^    uint16_t ladrf[4];$/;"	m	struct:pcnet_initblk32	file:
lance_init	.\pcnet.c	/^void lance_init(NICInfo *nd, target_phys_addr_t leaddr, void *dma_opaque,$/;"	f
lance_mem_read	.\pcnet.c	/^static CPUReadMemoryFunc *lance_mem_read[3] = {$/;"	v	file:
lance_mem_readw	.\pcnet.c	/^static uint32_t lance_mem_readw(void *opaque, target_phys_addr_t addr)$/;"	f	file:
lance_mem_write	.\pcnet.c	/^static CPUWriteMemoryFunc *lance_mem_write[3] = {$/;"	v	file:
lance_mem_writew	.\pcnet.c	/^static void lance_mem_writew(void *opaque, target_phys_addr_t addr,$/;"	f	file:
last	.\pl050.c	/^    uint32_t last;$/;"	m	struct:__anon55	file:
last_acr	.\cuda.c	/^    uint8_t last_acr; \/* last value of B register *\/$/;"	m	struct:CUDAState	file:
last_active	.\arm_gic.c	/^    int last_active[GIC_NIRQ][NCPU];$/;"	m	struct:gic_state	file:
last_apic_id	.\apic.c	/^static int last_apic_id = 0;$/;"	v	file:
last_b	.\cuda.c	/^    uint8_t last_b; \/* last value of B register *\/$/;"	m	struct:CUDAState	file:
last_break_enable	.\serial.c	/^    int last_break_enable;$/;"	m	struct:SerialState	file:
last_buttons_state	.\adb.c	/^    int buttons_state, last_buttons_state;$/;"	m	struct:MouseState	file:
last_cmd	.\omap_mmc.c	/^    uint16_t last_cmd;$/;"	m	struct:omap_mmc_s	file:
last_cpu	.\openpic.c	/^    int last_cpu;$/;"	m	struct:IRQ_src_t	file:
last_event	.\ptimer.c	/^    int64_t last_event;$/;"	m	struct:ptimer_state	file:
last_hw_cursor_size	.\cirrus_vga.c	/^    int last_hw_cursor_size;$/;"	m	struct:CirrusVGAState	file:
last_hw_cursor_x	.\cirrus_vga.c	/^    int last_hw_cursor_x;$/;"	m	struct:CirrusVGAState	file:
last_hw_cursor_y	.\cirrus_vga.c	/^    int last_hw_cursor_y;$/;"	m	struct:CirrusVGAState	file:
last_hw_cursor_y_end	.\cirrus_vga.c	/^    int last_hw_cursor_y_end;$/;"	m	struct:CirrusVGAState	file:
last_hw_cursor_y_start	.\cirrus_vga.c	/^    int last_hw_cursor_y_start;$/;"	m	struct:CirrusVGAState	file:
last_hz	.\pxa.h	/^    int64_t last_hz;$/;"	m	struct:pxa2xx_state_s
last_irr	.\i8259.c	/^    uint8_t last_irr; \/* edge detection *\/$/;"	m	struct:PicState	file:
last_pi	.\pxa.h	/^    int64_t last_pi;$/;"	m	struct:pxa2xx_state_s
last_rcnr	.\pxa.h	/^    uint32_t last_rcnr;$/;"	m	struct:pxa2xx_state_s
last_rdcr	.\pxa.h	/^    uint32_t last_rdcr;$/;"	m	struct:pxa2xx_state_s
last_read_byte	.\sb16.c	/^    uint8_t last_read_byte;$/;"	m	struct:SB16State	file:
last_read_offset	.\parallel.c	/^    uint32_t last_read_offset; \/* For debugging *\/$/;"	m	struct:ParallelState	file:
last_rtcpicr	.\pxa.h	/^    uint32_t last_rtcpicr;$/;"	m	struct:pxa2xx_state_s
last_rycr	.\pxa.h	/^    uint32_t last_rycr;$/;"	m	struct:pxa2xx_state_s
last_sect	.\fdc.c	/^    uint8_t last_sect;        \/* Nb sector per track    *\/$/;"	m	struct:fdrive_t	file:
last_sect	.\fdc.c	/^    uint8_t last_sect;$/;"	m	struct:fd_format_t	file:
last_sw	.\pxa.h	/^    int64_t last_sw;$/;"	m	struct:pxa2xx_state_s
last_swcr	.\pxa.h	/^    uint32_t last_swcr;$/;"	m	struct:pxa2xx_state_s
last_wr	.\omap.c	/^    uint8_t last_wr;$/;"	m	struct:omap_watchdog_timer_s	file:
lastload	.\pxa2xx_timer.c	/^    uint64_t lastload;$/;"	m	struct:__anon86	file:
lastload	.\pxa2xx_timer.c	/^    uint64_t lastload;$/;"	m	struct:pxa2xx_timer4_s	file:
latch	.\cuda.c	/^    uint16_t latch;$/;"	m	struct:CUDATimer	file:
latch	.\omap.c	/^    uint16_t latch;$/;"	m	struct:omap_mpuio_s	file:
latched_count	.\i8254.c	/^    uint16_t latched_count;$/;"	m	struct:PITChannelState	file:
lb_ck	.\omap1_clk.c	/^static struct clk lb_ck = {$/;"	v	typeref:struct:clk	file:
lba	.\ide.c	/^    int lba;$/;"	m	struct:IDEState	file:
lba48	.\ide.c	/^    uint8_t lba48;$/;"	m	struct:IDEState	file:
lba_to_msf	.\cdrom.c	/^static void lba_to_msf(uint8_t *buf, int lba)$/;"	f	file:
lba_to_msf	.\ide.c	/^static void lba_to_msf(uint8_t *buf, int lba)$/;"	f	file:
lbfree_ck	.\omap1_clk.c	/^static struct clk lbfree_ck = {$/;"	v	typeref:struct:clk	file:
lcd	.\omap.h	/^    struct omap_lcd_panel_s *lcd;$/;"	m	struct:omap_mpu_state_s	typeref:struct:omap_mpu_state_s::omap_lcd_panel_s
lcd	.\pxa.h	/^    struct pxa2xx_lcdc_s *lcd;$/;"	m	struct:pxa2xx_state_s	typeref:struct:pxa2xx_state_s::pxa2xx_lcdc_s
lcd_ch	.\omap.c	/^    struct omap_dma_lcd_channel_s lcd_ch;$/;"	m	struct:omap_dma_s	typeref:struct:omap_dma_s::omap_dma_lcd_channel_s	file:
lcd_ck_1510	.\omap1_clk.c	/^static struct clk lcd_ck_1510 = {$/;"	v	typeref:struct:clk	file:
lcd_ck_16xx	.\omap1_clk.c	/^static struct clk lcd_ck_16xx = {$/;"	v	typeref:struct:clk	file:
lcd_en	.\spitz.c	/^static int lcd_en, ads_en, max_en;$/;"	v	file:
lch_type	.\omap.h	/^    unsigned char lch_type;$/;"	m	struct:omap_dma_lcd_channel_s
lcr	.\pl011.c	/^    uint32_t lcr;$/;"	m	struct:__anon52	file:
lcr	.\serial.c	/^    uint8_t lcr;$/;"	m	struct:SerialState	file:
lcyl	.\ide.c	/^    uint8_t lcyl;$/;"	m	struct:IDEState	file:
ldcmd	.\pxa2xx_lcd.c	/^    uint32_t ldcmd;$/;"	m	struct:pxa_frame_descriptor_s	file:
ldebug	.\adlib.c	41;"	d	file:
ldebug	.\adlib.c	43;"	d	file:
ldebug	.\dma.c	33;"	d	file:
ldebug	.\dma.c	37;"	d	file:
ldebug	.\es1370.c	170;"	d	file:
ldebug	.\es1370.c	243;"	d	file:
ldebug	.\sb16.c	38;"	d	file:
ldebug	.\sb16.c	40;"	d	file:
ldoarst	.\stellaris.c	/^    uint32_t ldoarst;$/;"	m	struct:__anon110	file:
ldopctl	.\stellaris.c	/^    uint32_t ldopctl;$/;"	m	struct:__anon110	file:
le_base	.\sun4m.c	/^    target_phys_addr_t idreg_base, dma_base, esp_base, le_base;$/;"	m	struct:hwdef	file:
le_base	.\sun4m.c	/^    target_phys_addr_t ledma_base, le_base;$/;"	m	struct:sun4d_hwdef	file:
le_irq	.\sun4m.c	/^    int esp_irq, le_irq, clock_irq, clock1_irq;$/;"	m	struct:sun4d_hwdef	file:
le_irq	.\sun4m.c	/^    int intctl_g_intr, esp_irq, le_irq, clock_irq, clock1_irq;$/;"	m	struct:hwdef	file:
led	.\omap.h	/^    struct omap_lpg_s *led[2];$/;"	m	struct:omap_mpu_state_s	typeref:struct:omap_mpu_state_s::omap_lpg_s
led_mode	.\slavio_serial.c	/^    int e0_mode, led_mode, caps_lock_mode, num_lock_mode;$/;"	m	struct:ChannelState	file:
led_read	.\jazz_led.c	/^static CPUReadMemoryFunc *led_read[3] = {$/;"	v	file:
led_readb	.\jazz_led.c	/^static uint32_t led_readb(void *opaque, target_phys_addr_t addr)$/;"	f	file:
led_readl	.\jazz_led.c	/^static uint32_t led_readl(void *opaque, target_phys_addr_t addr)$/;"	f	file:
led_readw	.\jazz_led.c	/^static uint32_t led_readw(void *opaque, target_phys_addr_t addr)$/;"	f	file:
led_write	.\jazz_led.c	/^static CPUWriteMemoryFunc *led_write[3] = {$/;"	v	file:
led_writeb	.\jazz_led.c	/^static void led_writeb(void *opaque, target_phys_addr_t addr, uint32_t val)$/;"	f	file:
led_writel	.\jazz_led.c	/^static void led_writel(void *opaque, target_phys_addr_t addr, uint32_t val)$/;"	f	file:
led_writew	.\jazz_led.c	/^static void led_writew(void *opaque, target_phys_addr_t addr, uint32_t val)$/;"	f	file:
ledctrl	.\mst_fpga.c	/^	uint32_t ledctrl;$/;"	m	struct:mst_irq_state	file:
leddat1	.\mst_fpga.c	/^	uint32_t leddat1;$/;"	m	struct:mst_irq_state	file:
leddat2	.\mst_fpga.c	/^	uint32_t leddat2;$/;"	m	struct:mst_irq_state	file:
ledma_base	.\sun4m.c	/^    target_phys_addr_t ledma_base, le_base;$/;"	m	struct:sun4d_hwdef	file:
ledma_memory_read	.\sparc32_dma.c	/^void ledma_memory_read(void *opaque, target_phys_addr_t addr,$/;"	f
ledma_memory_write	.\sparc32_dma.c	/^void ledma_memory_write(void *opaque, target_phys_addr_t addr,$/;"	f
leds	.\arm_sysctl.c	/^    uint32_t leds;$/;"	m	struct:__anon5	file:
leds	.\mips_malta.c	/^    uint32_t leds;$/;"	m	struct:__anon34	file:
leds	.\slavio_misc.c	/^    uint16_t leds;$/;"	m	struct:MiscState	file:
leds	.\usb-hid.c	/^    uint8_t leds;$/;"	m	struct:USBKeyboardState	file:
left	.\adlib.c	/^    int left, pos, samples;$/;"	m	struct:__anon2	file:
left_till_irq	.\sb16.c	/^    int left_till_irq;$/;"	m	struct:SB16State	file:
leftover	.\es1370.c	/^    uint32_t leftover;$/;"	m	struct:chan	file:
legacy_reset	.\sb16.c	/^static void legacy_reset (SB16State *s)$/;"	f	file:
len	.\firmware_abi.h	/^    uint16_t len; \/\/ BE, length divided by 16$/;"	m	struct:OpenBIOS_nvpart_v1
len	.\max7310.c	/^    int len;$/;"	m	struct:max7310_s	file:
len	.\omap.h	/^        int len;$/;"	m	struct:i2s_codec_s::i2s_fifo_s
len	.\scsi-generic.c	/^    int len;$/;"	m	struct:SCSIRequest	file:
len	.\stellaris_enet.c	/^        int len;$/;"	m	struct:__anon115::__anon116	file:
len	.\usb.h	/^    int len;$/;"	m	struct:USBPacket
length	.\mcf_fec.c	/^    uint16_t length;$/;"	m	struct:__anon31	file:
length	.\pcnet.c	/^    int16_t length;$/;"	m	struct:pcnet_TMD	file:
level	.\arm_gic.c	/^    unsigned level:1;$/;"	m	struct:gic_irq_state	file:
level	.\arm_timer.c	/^    int level[2];$/;"	m	struct:__anon7	file:
level	.\integratorcp.c	/^  uint32_t level;$/;"	m	struct:icp_pic_state	file:
level	.\max7310.c	/^    uint8_t level;$/;"	m	struct:max7310_s	file:
level	.\omap.h	/^        uint8_t level;$/;"	m	struct:omap_mpu_state_s::__anon38
level	.\pl190.c	/^    uint32_t level;$/;"	m	struct:__anon61	file:
level	.\pxa2xx_timer.c	/^    int level;$/;"	m	struct:pxa2xx_timer0_s	file:
level	.\sh_timer.c	/^    int level[3];$/;"	m	struct:__anon98	file:
level	.\versatilepb.c	/^  uint32_t level;$/;"	m	struct:vpb_sic_state	file:
level_triggered	.\heathrow_pic.c	/^    uint32_t level_triggered;$/;"	m	struct:HeathrowPIC	file:
levels	.\heathrow_pic.c	/^    uint32_t levels;$/;"	m	struct:HeathrowPIC	file:
liidr	.\pxa2xx_lcd.c	/^    uint32_t liidr;$/;"	m	struct:pxa2xx_lcdc_s	file:
limit	.\arm_timer.c	/^    uint32_t limit;$/;"	m	struct:__anon6	file:
limit	.\etraxfs_timer.c	/^	unsigned int limit;$/;"	m	struct:fs_timer_t	file:
limit	.\ptimer.c	/^    uint64_t limit;$/;"	m	struct:ptimer_state	file:
limit	.\slavio_timer.c	/^    uint64_t limit;$/;"	m	struct:SLAVIO_TIMERState	file:
line_fn	.\pxa2xx_lcd.c	/^    drawfn *line_fn[2];$/;"	m	struct:pxa2xx_lcdc_s	file:
linear_mmio_mask	.\cirrus_vga.c	/^    uint32_t linear_mmio_mask;$/;"	m	struct:CirrusVGAState	file:
lines	.\pxa2xx_gpio.c	/^    int lines;$/;"	m	struct:pxa2xx_gpio_info_s	file:
linfo	.\dma.c	32;"	d	file:
linfo	.\dma.c	36;"	d	file:
link	.\eepro100.c	/^    uint32_t link;              \/* struct RxFD * *\/$/;"	m	struct:__anon12	file:
link	.\eepro100.c	/^    uint32_t link;              \/* void * *\/$/;"	m	struct:__anon11	file:
link	.\usb-uhci.c	/^    uint32_t link;$/;"	m	struct:UHCI_QH	file:
link	.\usb-uhci.c	/^    uint32_t link;$/;"	m	struct:UHCI_TD	file:
link_enabled	.\omap.c	/^    int link_enabled;$/;"	m	struct:omap_dma_channel_s	file:
link_next_ch	.\omap.c	/^    int link_next_ch;$/;"	m	struct:omap_dma_channel_s	file:
linux_hack	.\pl181.c	/^    int linux_hack;$/;"	m	struct:__anon60	file:
lli	.\pl080.c	/^    uint32_t lli;$/;"	m	struct:__anon57	file:
lm3s6965evb_init	.\stellaris.c	/^static void lm3s6965evb_init(int ram_size, int vga_ram_size,$/;"	f	file:
lm3s6965evb_machine	.\stellaris.c	/^QEMUMachine lm3s6965evb_machine = {$/;"	v
lm3s811evb_init	.\stellaris.c	/^static void lm3s811evb_init(int ram_size, int vga_ram_size,$/;"	f	file:
lm3s811evb_machine	.\stellaris.c	/^QEMUMachine lm3s811evb_machine = {$/;"	v
lmadr	.\ppc405_uc.c	/^    uint8_t lmadr;$/;"	m	struct:ppc4xx_i2c_t	file:
lnc_mchash	.\pcnet.c	/^static inline uint32_t lnc_mchash(const uint8_t *ether_addr)$/;"	f	file:
lnkst	.\pcnet.c	/^    int mmio_index, rap, isr, lnkst;$/;"	m	struct:PCNetState_st	file:
load	.\mpcore.c	/^    uint32_t load;$/;"	m	struct:__anon35	file:
load	.\stellaris.c	/^    uint32_t load[2];$/;"	m	struct:gptm_state	file:
load_40x_pit	.\ppc.c	/^target_ulong load_40x_pit (CPUState *env)$/;"	f
load_kernel	.\mips_malta.c	/^static int64_t load_kernel (CPUState *env)$/;"	f	file:
load_kernel	.\mips_mipssim.c	/^static void load_kernel (CPUState *env)$/;"	f	file:
load_kernel	.\mips_r4k.c	/^static void load_kernel (CPUState *env)$/;"	f	file:
load_kernel	.\pc.c	/^static int load_kernel(const char *filename, uint8_t *addr,$/;"	f	file:
load_linux	.\pc.c	/^static void load_linux(const char *kernel_filename,$/;"	f	file:
load_time	.\cuda.c	/^    int64_t load_time;$/;"	m	struct:CUDATimer	file:
loaderparams	.\mips_malta.c	/^} loaderparams;$/;"	v	typeref:struct:_loaderparams	file:
loaderparams	.\mips_mipssim.c	/^} loaderparams;$/;"	v	typeref:struct:_loaderparams	file:
loaderparams	.\mips_r4k.c	/^} loaderparams;$/;"	v	typeref:struct:_loaderparams	file:
local	.\omap.h	/^    local,	\/* omap16xx: ocp_t2 *\/$/;"	e	enum:omap_dma_port
local_apics	.\apic.c	/^static APICState *local_apics[MAX_APICS + 1];$/;"	v	file:
lock	.\fdc.c	/^    uint8_t lock;$/;"	m	struct:fdctrl_t	file:
lock	.\m48t59.c	/^    uint8_t  lock;$/;"	m	struct:m48t59_t	file:
locked	.\pl061.c	/^    int locked;$/;"	m	struct:__anon56	file:
lockval	.\arm_sysctl.c	/^    uint16_t lockval;$/;"	m	struct:__anon5	file:
log_dest	.\apic.c	/^    uint8_t log_dest;$/;"	m	struct:APICState	file:
logout	.\eepro100.c	80;"	d	file:
logout	.\eepro100.c	82;"	d	file:
logout	.\eeprom93xx.c	47;"	d	file:
logout	.\eeprom93xx.c	49;"	d	file:
logout	.\mips_malta.c	118;"	d	file:
logout	.\mips_malta.c	120;"	d	file:
low_set_irq	.\pci.c	/^    SetIRQFunc *low_set_irq;$/;"	m	struct:PCIBus	file:
lp	.\flash.h	/^    uint16_t lp[2];	\/* Line parity *\/$/;"	m	struct:ecc_state_s
lpbase	.\pl110.c	/^    uint32_t lpbase;$/;"	m	struct:__anon59	file:
lr	.\pl031.c	/^    uint32_t lr;$/;"	m	struct:__anon54	file:
lsadr	.\ppc405_uc.c	/^    uint8_t lsadr;$/;"	m	struct:ppc4xx_i2c_t	file:
lsi_add_msg_byte	.\lsi53c895a.c	/^static void lsi_add_msg_byte(LSIState *s, uint8_t data)$/;"	f	file:
lsi_bad_phase	.\lsi53c895a.c	/^static void lsi_bad_phase(LSIState *s, int out, int new_phase)$/;"	f	file:
lsi_command_complete	.\lsi53c895a.c	/^static void lsi_command_complete(void *opaque, int reason, uint32_t tag,$/;"	f	file:
lsi_disconnect	.\lsi53c895a.c	/^static void lsi_disconnect(LSIState *s)$/;"	f	file:
lsi_do_command	.\lsi53c895a.c	/^static void lsi_do_command(LSIState *s)$/;"	f	file:
lsi_do_dma	.\lsi53c895a.c	/^static void lsi_do_dma(LSIState *s, int out)$/;"	f	file:
lsi_do_msgin	.\lsi53c895a.c	/^static void lsi_do_msgin(LSIState *s)$/;"	f	file:
lsi_do_msgout	.\lsi53c895a.c	/^static void lsi_do_msgout(LSIState *s)$/;"	f	file:
lsi_do_status	.\lsi53c895a.c	/^static void lsi_do_status(LSIState *s)$/;"	f	file:
lsi_execute_script	.\lsi53c895a.c	/^static void lsi_execute_script(LSIState *s)$/;"	f	file:
lsi_get_msgbyte	.\lsi53c895a.c	/^static uint8_t lsi_get_msgbyte(LSIState *s)$/;"	f	file:
lsi_io_mapfunc	.\lsi53c895a.c	/^static void lsi_io_mapfunc(PCIDevice *pci_dev, int region_num,$/;"	f	file:
lsi_io_readb	.\lsi53c895a.c	/^static uint32_t lsi_io_readb(void *opaque, uint32_t addr)$/;"	f	file:
lsi_io_readl	.\lsi53c895a.c	/^static uint32_t lsi_io_readl(void *opaque, uint32_t addr)$/;"	f	file:
lsi_io_readw	.\lsi53c895a.c	/^static uint32_t lsi_io_readw(void *opaque, uint32_t addr)$/;"	f	file:
lsi_io_writeb	.\lsi53c895a.c	/^static void lsi_io_writeb(void *opaque, uint32_t addr, uint32_t val)$/;"	f	file:
lsi_io_writel	.\lsi53c895a.c	/^static void lsi_io_writel(void *opaque, uint32_t addr, uint32_t val)$/;"	f	file:
lsi_io_writew	.\lsi53c895a.c	/^static void lsi_io_writew(void *opaque, uint32_t addr, uint32_t val)$/;"	f	file:
lsi_memcpy	.\lsi53c895a.c	/^static void lsi_memcpy(LSIState *s, uint32_t dest, uint32_t src, int count)$/;"	f	file:
lsi_mmio_mapfunc	.\lsi53c895a.c	/^static void lsi_mmio_mapfunc(PCIDevice *pci_dev, int region_num,$/;"	f	file:
lsi_mmio_readb	.\lsi53c895a.c	/^static uint32_t lsi_mmio_readb(void *opaque, target_phys_addr_t addr)$/;"	f	file:
lsi_mmio_readfn	.\lsi53c895a.c	/^static CPUReadMemoryFunc *lsi_mmio_readfn[3] = {$/;"	v	file:
lsi_mmio_readl	.\lsi53c895a.c	/^static uint32_t lsi_mmio_readl(void *opaque, target_phys_addr_t addr)$/;"	f	file:
lsi_mmio_readw	.\lsi53c895a.c	/^static uint32_t lsi_mmio_readw(void *opaque, target_phys_addr_t addr)$/;"	f	file:
lsi_mmio_writeb	.\lsi53c895a.c	/^static void lsi_mmio_writeb(void *opaque, target_phys_addr_t addr, uint32_t val)$/;"	f	file:
lsi_mmio_writefn	.\lsi53c895a.c	/^static CPUWriteMemoryFunc *lsi_mmio_writefn[3] = {$/;"	v	file:
lsi_mmio_writel	.\lsi53c895a.c	/^static void lsi_mmio_writel(void *opaque, target_phys_addr_t addr, uint32_t val)$/;"	f	file:
lsi_mmio_writew	.\lsi53c895a.c	/^static void lsi_mmio_writew(void *opaque, target_phys_addr_t addr, uint32_t val)$/;"	f	file:
lsi_queue	.\lsi53c895a.c	/^} lsi_queue;$/;"	t	typeref:struct:__anon24	file:
lsi_queue_command	.\lsi53c895a.c	/^static void lsi_queue_command(LSIState *s)$/;"	f	file:
lsi_queue_tag	.\lsi53c895a.c	/^static int lsi_queue_tag(LSIState *s, uint32_t tag, uint32_t arg)$/;"	f	file:
lsi_ram_mapfunc	.\lsi53c895a.c	/^static void lsi_ram_mapfunc(PCIDevice *pci_dev, int region_num,$/;"	f	file:
lsi_ram_readb	.\lsi53c895a.c	/^static uint32_t lsi_ram_readb(void *opaque, target_phys_addr_t addr)$/;"	f	file:
lsi_ram_readfn	.\lsi53c895a.c	/^static CPUReadMemoryFunc *lsi_ram_readfn[3] = {$/;"	v	file:
lsi_ram_readl	.\lsi53c895a.c	/^static uint32_t lsi_ram_readl(void *opaque, target_phys_addr_t addr)$/;"	f	file:
lsi_ram_readw	.\lsi53c895a.c	/^static uint32_t lsi_ram_readw(void *opaque, target_phys_addr_t addr)$/;"	f	file:
lsi_ram_writeb	.\lsi53c895a.c	/^static void lsi_ram_writeb(void *opaque, target_phys_addr_t addr, uint32_t val)$/;"	f	file:
lsi_ram_writefn	.\lsi53c895a.c	/^static CPUWriteMemoryFunc *lsi_ram_writefn[3] = {$/;"	v	file:
lsi_ram_writel	.\lsi53c895a.c	/^static void lsi_ram_writel(void *opaque, target_phys_addr_t addr, uint32_t val)$/;"	f	file:
lsi_ram_writew	.\lsi53c895a.c	/^static void lsi_ram_writew(void *opaque, target_phys_addr_t addr, uint32_t val)$/;"	f	file:
lsi_reg_readb	.\lsi53c895a.c	/^static uint8_t lsi_reg_readb(LSIState *s, int offset)$/;"	f	file:
lsi_reg_writeb	.\lsi53c895a.c	/^static void lsi_reg_writeb(LSIState *s, int offset, uint8_t val)$/;"	f	file:
lsi_reselect	.\lsi53c895a.c	/^static void lsi_reselect(LSIState *s, uint32_t tag)$/;"	f	file:
lsi_resume_script	.\lsi53c895a.c	/^static void lsi_resume_script(LSIState *s)$/;"	f	file:
lsi_script_dma_interrupt	.\lsi53c895a.c	/^static void lsi_script_dma_interrupt(LSIState *s, int stat)$/;"	f	file:
lsi_script_scsi_interrupt	.\lsi53c895a.c	/^static void lsi_script_scsi_interrupt(LSIState *s, int stat0, int stat1)$/;"	f	file:
lsi_scsi_attach	.\lsi53c895a.c	/^void lsi_scsi_attach(void *opaque, BlockDriverState *bd, int id)$/;"	f
lsi_scsi_init	.\lsi53c895a.c	/^void *lsi_scsi_init(PCIBus *bus, int devfn)$/;"	f
lsi_set_phase	.\lsi53c895a.c	/^static inline void lsi_set_phase(LSIState *s, int phase)$/;"	f	file:
lsi_soft_reset	.\lsi53c895a.c	/^static void lsi_soft_reset(LSIState *s)$/;"	f	file:
lsi_stop_script	.\lsi53c895a.c	/^static void lsi_stop_script(LSIState *s)$/;"	f	file:
lsi_update_irq	.\lsi53c895a.c	/^static void lsi_update_irq(LSIState *s)$/;"	f	file:
lsi_wait_reselect	.\lsi53c895a.c	/^static void lsi_wait_reselect(LSIState *s)$/;"	f	file:
lsr	.\serial.c	/^    uint8_t lsr; \/* read only *\/$/;"	m	struct:SerialState	file:
lst	.\usb-ohci.c	/^    uint32_t lst;$/;"	m	struct:__anon123	file:
lun	.\scsi-generic.c	/^    int lun;$/;"	m	struct:SCSIDeviceState	file:
lun	.\usb-msd.c	/^    uint8_t lun;$/;"	m	struct:usb_msd_cbw	file:
lvt	.\apic.c	/^    uint32_t lvt[APIC_LVT_NB];$/;"	m	struct:APICState	file:
lwarn	.\dma.c	31;"	d	file:
lwarn	.\dma.c	35;"	d	file:
lwarn	.\es1370.c	255;"	d	file:
lwarn	.\es1370.c	257;"	d	file:
m48t59_init	.\m48t59.c	/^m48t59_t *m48t59_init (qemu_irq IRQ, target_phys_addr_t mem_base,$/;"	f
m48t59_load	.\m48t59.c	/^static int m48t59_load(QEMUFile *f, void *opaque, int version_id)$/;"	f	file:
m48t59_read	.\m48t59.c	/^uint32_t m48t59_read (void *opaque, uint32_t addr)$/;"	f
m48t59_reset	.\m48t59.c	/^static void m48t59_reset(void *opaque)$/;"	f	file:
m48t59_save	.\m48t59.c	/^static void m48t59_save(QEMUFile *f, void *opaque)$/;"	f	file:
m48t59_set_addr	.\m48t59.c	/^void m48t59_set_addr (void *opaque, uint32_t addr)$/;"	f
m48t59_t	.\m48t59.c	/^struct m48t59_t {$/;"	s	file:
m48t59_t	.\nvram.h	/^typedef struct m48t59_t m48t59_t;$/;"	t	typeref:struct:m48t59_t
m48t59_toggle_lock	.\m48t59.c	/^void m48t59_toggle_lock (void *opaque, int lock)$/;"	f
m48t59_write	.\m48t59.c	/^void m48t59_write (void *opaque, uint32_t addr, uint32_t val)$/;"	f
m5206_find_pending_irq	.\mcf5206.c	/^static int m5206_find_pending_irq(m5206_mbar_state *s)$/;"	f	file:
m5206_mbar_read	.\mcf5206.c	/^static uint32_t m5206_mbar_read(m5206_mbar_state *s, uint32_t offset)$/;"	f	file:
m5206_mbar_readb	.\mcf5206.c	/^static uint32_t m5206_mbar_readb(void *opaque, target_phys_addr_t offset)$/;"	f	file:
m5206_mbar_readfn	.\mcf5206.c	/^static CPUReadMemoryFunc *m5206_mbar_readfn[] = {$/;"	v	file:
m5206_mbar_readl	.\mcf5206.c	/^static uint32_t m5206_mbar_readl(void *opaque, target_phys_addr_t offset)$/;"	f	file:
m5206_mbar_readw	.\mcf5206.c	/^static uint32_t m5206_mbar_readw(void *opaque, target_phys_addr_t offset)$/;"	f	file:
m5206_mbar_reset	.\mcf5206.c	/^static void m5206_mbar_reset(m5206_mbar_state *s)$/;"	f	file:
m5206_mbar_set_irq	.\mcf5206.c	/^static void m5206_mbar_set_irq(void *opaque, int irq, int level)$/;"	f	file:
m5206_mbar_state	.\mcf5206.c	/^} m5206_mbar_state;$/;"	t	typeref:struct:__anon27	file:
m5206_mbar_update	.\mcf5206.c	/^static void m5206_mbar_update(m5206_mbar_state *s)$/;"	f	file:
m5206_mbar_width	.\mcf5206.c	/^static const int m5206_mbar_width[] =$/;"	v	file:
m5206_mbar_write	.\mcf5206.c	/^static void m5206_mbar_write(m5206_mbar_state *s, uint32_t offset,$/;"	f	file:
m5206_mbar_writeb	.\mcf5206.c	/^static void m5206_mbar_writeb(void *opaque, target_phys_addr_t offset,$/;"	f	file:
m5206_mbar_writefn	.\mcf5206.c	/^static CPUWriteMemoryFunc *m5206_mbar_writefn[] = {$/;"	v	file:
m5206_mbar_writel	.\mcf5206.c	/^static void m5206_mbar_writel(void *opaque, target_phys_addr_t offset,$/;"	f	file:
m5206_mbar_writew	.\mcf5206.c	/^static void m5206_mbar_writew(void *opaque, target_phys_addr_t offset,$/;"	f	file:
m5206_timer_init	.\mcf5206.c	/^static m5206_timer_state *m5206_timer_init(qemu_irq irq)$/;"	f	file:
m5206_timer_read	.\mcf5206.c	/^static uint32_t m5206_timer_read(m5206_timer_state *s, uint32_t addr)$/;"	f	file:
m5206_timer_recalibrate	.\mcf5206.c	/^static void m5206_timer_recalibrate(m5206_timer_state *s)$/;"	f	file:
m5206_timer_reset	.\mcf5206.c	/^static void m5206_timer_reset(m5206_timer_state *s)$/;"	f	file:
m5206_timer_state	.\mcf5206.c	/^} m5206_timer_state;$/;"	t	typeref:struct:__anon26	file:
m5206_timer_trigger	.\mcf5206.c	/^static void m5206_timer_trigger(void *opaque)$/;"	f	file:
m5206_timer_update	.\mcf5206.c	/^static void m5206_timer_update(m5206_timer_state *s)$/;"	f	file:
m5206_timer_write	.\mcf5206.c	/^static void m5206_timer_write(m5206_timer_state *s, uint32_t addr, uint32_t val)$/;"	f	file:
m5208_sys_read	.\mcf5208.c	/^static uint32_t m5208_sys_read(void *opaque, target_phys_addr_t addr)$/;"	f	file:
m5208_sys_readfn	.\mcf5208.c	/^static CPUReadMemoryFunc *m5208_sys_readfn[] = {$/;"	v	file:
m5208_sys_state	.\mcf5208.c	/^} m5208_sys_state;$/;"	t	typeref:struct:__anon29	file:
m5208_sys_write	.\mcf5208.c	/^static void m5208_sys_write(void *opaque, target_phys_addr_t addr,$/;"	f	file:
m5208_sys_writefn	.\mcf5208.c	/^static CPUWriteMemoryFunc *m5208_sys_writefn[] = {$/;"	v	file:
m5208_timer_state	.\mcf5208.c	/^} m5208_timer_state;$/;"	t	typeref:struct:__anon28	file:
m5208_timer_trigger	.\mcf5208.c	/^static void m5208_timer_trigger(void *opaque)$/;"	f	file:
m5208_timer_update	.\mcf5208.c	/^static void m5208_timer_update(m5208_timer_state *s)$/;"	f	file:
m5208_timer_write	.\mcf5208.c	/^static void m5208_timer_write(m5208_timer_state *s, int offset,$/;"	f	file:
macaddr	.\eepro100.c	/^    uint8_t macaddr[6];$/;"	m	struct:__anon16	file:
macaddr	.\firmware_abi.h	/^    uint8_t macaddr[6];$/;"	m	struct:Sun_nvram
macaddr	.\mcf_fec.c	/^    uint8_t macaddr[6];$/;"	m	struct:__anon30	file:
macaddr	.\ne2000.c	/^    uint8_t macaddr[6];$/;"	m	struct:NE2000State	file:
macaddr	.\rtl8139.c	/^    uint8_t macaddr[6];$/;"	m	struct:RTL8139State	file:
macaddr	.\smc91c111.c	/^    uint8_t macaddr[6];$/;"	m	struct:__anon103	file:
macaddr	.\stellaris_enet.c	/^    uint8_t macaddr[6];$/;"	m	struct:__anon115	file:
machine_id	.\firmware_abi.h	/^    uint8_t machine_id;$/;"	m	struct:Sun_nvram
machine_id	.\sun4m.c	/^    int machine_id; \/\/ For NVRAM$/;"	m	struct:hwdef	file:
machine_id	.\sun4m.c	/^    int machine_id; \/\/ For NVRAM$/;"	m	struct:sun4d_hwdef	file:
macio_init	.\macio.c	/^void macio_init (PCIBus *bus, int device_id, int is_oldworld, int pic_mem_index,$/;"	f
macio_map	.\macio.c	/^static void macio_map (PCIDevice *pci_dev, int region_num,$/;"	f	file:
macio_nvram_init	.\mac_nvram.c	/^MacIONVRAMState *macio_nvram_init (int *mem_index, target_phys_addr_t size)$/;"	f
macio_nvram_map	.\mac_nvram.c	/^void macio_nvram_map (void *opaque, target_phys_addr_t mem_base)$/;"	f
macio_nvram_read	.\mac_nvram.c	/^uint32_t macio_nvram_read (void *opaque, uint32_t addr)$/;"	f
macio_nvram_readb	.\mac_nvram.c	/^static uint32_t macio_nvram_readb (void *opaque, target_phys_addr_t addr)$/;"	f	file:
macio_nvram_write	.\mac_nvram.c	/^void macio_nvram_write (void *opaque, uint32_t addr, uint32_t val)$/;"	f
macio_nvram_writeb	.\mac_nvram.c	/^static void macio_nvram_writeb (void *opaque,$/;"	f	file:
macio_state_t	.\macio.c	/^struct macio_state_t {$/;"	s	file:
macio_state_t	.\macio.c	/^typedef struct macio_state_t macio_state_t;$/;"	t	typeref:struct:macio_state_t	file:
magic_of_irq	.\sb16.c	/^static int magic_of_irq (int irq)$/;"	f	file:
mailboxes	.\openpic.c	/^    } mailboxes[MAX_MAILBOXES];$/;"	m	struct:openpic_t	typeref:struct:openpic_t::__anon46	file:
main_cpu_reset	.\arm_boot.c	/^static void main_cpu_reset(void *opaque)$/;"	f	file:
main_cpu_reset	.\etraxfs.c	/^static void main_cpu_reset(void *opaque)$/;"	f	file:
main_cpu_reset	.\mips_malta.c	/^static void main_cpu_reset(void *opaque)$/;"	f	file:
main_cpu_reset	.\mips_mipssim.c	/^static void main_cpu_reset(void *opaque)$/;"	f	file:
main_cpu_reset	.\mips_pica61.c	/^static void main_cpu_reset(void *opaque)$/;"	f	file:
main_cpu_reset	.\mips_r4k.c	/^static void main_cpu_reset(void *opaque)$/;"	f	file:
main_cpu_reset	.\pc.c	/^static void main_cpu_reset(void *opaque)$/;"	f	file:
main_cpu_reset	.\sun4m.c	/^static void main_cpu_reset(void *opaque)$/;"	f	file:
main_cpu_reset	.\sun4u.c	/^static void main_cpu_reset(void *opaque)$/;"	f	file:
mainstone	.\mainstone.c	/^enum mainstone_model_e { mainstone };$/;"	e	enum:mainstone_model_e	file:
mainstone2_machine	.\mainstone.c	/^QEMUMachine mainstone2_machine = {$/;"	v
mainstone_common_init	.\mainstone.c	/^static void mainstone_common_init(int ram_size, int vga_ram_size,$/;"	f	file:
mainstone_init	.\mainstone.c	/^static void mainstone_init(int ram_size, int vga_ram_size,$/;"	f	file:
mainstone_model_e	.\mainstone.c	/^enum mainstone_model_e { mainstone };$/;"	g	file:
malta_fpga_init	.\mips_malta.c	/^static MaltaFPGAState *malta_fpga_init(target_phys_addr_t base, CPUState *env)$/;"	f	file:
malta_fpga_read	.\mips_malta.c	/^static CPUReadMemoryFunc *malta_fpga_read[] = {$/;"	v	file:
malta_fpga_readl	.\mips_malta.c	/^static uint32_t malta_fpga_readl(void *opaque, target_phys_addr_t addr)$/;"	f	file:
malta_fpga_reset	.\mips_malta.c	/^static void malta_fpga_reset(void *opaque)$/;"	f	file:
malta_fpga_update_display	.\mips_malta.c	/^static void malta_fpga_update_display(void *opaque)$/;"	f	file:
malta_fpga_write	.\mips_malta.c	/^static CPUWriteMemoryFunc *malta_fpga_write[] = {$/;"	v	file:
malta_fpga_writel	.\mips_malta.c	/^static void malta_fpga_writel(void *opaque, target_phys_addr_t addr,$/;"	f	file:
manf_id	.\nand.c	/^    uint8_t manf_id, chip_id;$/;"	m	struct:nand_flash_s	file:
map	.\mainstone.c	/^static struct keymap map[0xE0] = {$/;"	v	typeref:struct:keymap	file:
map	.\pxa2xx_keypad.c	/^    struct  keymap *map;$/;"	m	struct:pxa2xx_keypad_s	typeref:struct:pxa2xx_keypad_s::keymap	file:
map_func	.\pci.h	/^    PCIMapIORegionFunc *map_func;$/;"	m	struct:PCIIORegion
map_irq	.\pci.c	/^    pci_map_irq_fn map_irq;$/;"	m	struct:PCIBus	file:
mask	.\dma.c	/^    uint8_t mask;$/;"	m	struct:dma_cont	file:
mask	.\etraxfs_timer.c	/^	uint32_t mask;$/;"	m	struct:fs_timer_t	file:
mask	.\heathrow_pic.c	/^    uint32_t mask;$/;"	m	struct:HeathrowPIC	file:
mask	.\omap.c	/^    uint16_t mask;$/;"	m	struct:omap_gpio_s	file:
mask	.\omap.c	/^    uint16_t mask;$/;"	m	struct:omap_mpuio_s	file:
mask	.\omap.c	/^    uint32_t mask;$/;"	m	struct:omap_intr_handler_bank_s	file:
mask	.\omap_i2c.c	/^    uint8_t mask;$/;"	m	struct:omap_i2c_s	file:
mask	.\omap_mmc.c	/^    uint16_t mask;$/;"	m	struct:omap_mmc_s	file:
mask	.\pl181.c	/^    uint32_t mask[2];$/;"	m	struct:__anon60	file:
mask	.\ppc405_uc.c	/^    uint32_t mask[5];$/;"	m	struct:ppc4xx_gpt_t	file:
mask	.\pxa.h	/^    uint32_t mask;$/;"	m	struct:pxa2xx_i2s_s
mask	.\stellaris.c	/^    uint32_t mask;$/;"	m	struct:gptm_state	file:
mask	.\versatilepb.c	/^  uint32_t mask;$/;"	m	struct:vpb_sic_state	file:
mask	.\vmware_vga.c	/^    uint32_t mask[1024];$/;"	m	struct:vmsvga_cursor_definition_s	file:
mask16	.\vga.c	/^static const uint32_t mask16[16] = {$/;"	v	file:
mask_registers	.\sh7750.c	/^static struct intc_mask_reg mask_registers[] = {$/;"	v	typeref:struct:intc_mask_reg	file:
mask_regs	.\sh_intc.h	/^    struct intc_mask_reg *mask_regs;$/;"	m	struct:intc_desc	typeref:struct:intc_desc::intc_mask_reg
master	.\slavio_timer.c	/^    struct SLAVIO_TIMERState *master;$/;"	m	struct:SLAVIO_TIMERState	typeref:struct:SLAVIO_TIMERState::SLAVIO_TIMERState	file:
match	.\stellaris.c	/^    uint32_t match[2];$/;"	m	struct:gptm_state	file:
match_prescale	.\stellaris.c	/^    uint32_t match_prescale[2];$/;"	m	struct:gptm_state	file:
max	.\vmware_vga.c	/^            uint32_t max;$/;"	m	struct:vmsvga_state_s::__anon128::__anon129	file:
max1110_init	.\max111x.c	/^struct max111x_s *max1110_init(qemu_irq cb)$/;"	f
max1111	.\spitz.c	/^static struct max111x_s *max1111;$/;"	v	typeref:struct:max111x_s	file:
max1111_init	.\max111x.c	/^struct max111x_s *max1111_init(qemu_irq cb)$/;"	f
max111x_iid	.\max111x.c	/^static int max111x_iid = 0;$/;"	v	file:
max111x_init	.\max111x.c	/^static struct max111x_s *max111x_init(qemu_irq cb)$/;"	f	file:
max111x_load	.\max111x.c	/^static int max111x_load(QEMUFile *f, void *opaque, int version_id)$/;"	f	file:
max111x_read	.\max111x.c	/^uint32_t max111x_read(void *opaque)$/;"	f
max111x_s	.\max111x.c	/^struct max111x_s {$/;"	s	file:
max111x_save	.\max111x.c	/^static void max111x_save(QEMUFile *f, void *opaque)$/;"	f	file:
max111x_set_input	.\max111x.c	/^void max111x_set_input(struct max111x_s *s, int line, uint8_t value)$/;"	f
max111x_write	.\max111x.c	/^void max111x_write(void *opaque, uint32_t value)$/;"	f
max7310_event	.\max7310.c	/^static void max7310_event(i2c_slave *i2c, enum i2c_event event)$/;"	f	file:
max7310_gpio_in_get	.\max7310.c	/^qemu_irq *max7310_gpio_in_get(i2c_slave *i2c)$/;"	f
max7310_gpio_out_set	.\max7310.c	/^void max7310_gpio_out_set(i2c_slave *i2c, int line, qemu_irq handler)$/;"	f
max7310_gpio_set	.\max7310.c	/^static void max7310_gpio_set(void *opaque, int line, int level)$/;"	f	file:
max7310_iid	.\max7310.c	/^static int max7310_iid = 0;$/;"	v	file:
max7310_init	.\max7310.c	/^struct i2c_slave *max7310_init(i2c_bus *bus)$/;"	f
max7310_load	.\max7310.c	/^static int max7310_load(QEMUFile *f, void *opaque, int version_id)$/;"	f	file:
max7310_reset	.\max7310.c	/^void max7310_reset(i2c_slave *i2c)$/;"	f
max7310_rx	.\max7310.c	/^static int max7310_rx(i2c_slave *i2c)$/;"	f	file:
max7310_s	.\max7310.c	/^struct max7310_s {$/;"	s	file:
max7310_save	.\max7310.c	/^static void max7310_save(QEMUFile *f, void *opaque)$/;"	f	file:
max7310_tx	.\max7310.c	/^static int max7310_tx(i2c_slave *i2c, uint8_t data)$/;"	f	file:
max_ch	.\fmopl.h	/^	int	max_ch;			\/* maximum channel                   *\/$/;"	m	struct:fm_opl_f
max_en	.\spitz.c	/^static int lcd_en, ads_en, max_en;$/;"	v	file:
max_head	.\fdc.c	/^    uint8_t max_head;$/;"	m	struct:fd_format_t	file:
max_mem	.\sun4m.c	/^    uint64_t max_mem;$/;"	m	struct:hwdef	file:
max_mem	.\sun4m.c	/^    uint64_t max_mem;$/;"	m	struct:sun4d_hwdef	file:
max_track	.\fdc.c	/^    uint8_t max_track;        \/* Nb of tracks           *\/$/;"	m	struct:fdrive_t	file:
max_track	.\fdc.c	/^    uint8_t max_track;$/;"	m	struct:fd_format_t	file:
mbox0	.\lsi53c895a.c	/^    uint8_t mbox0;$/;"	m	struct:__anon25	file:
mbox1	.\lsi53c895a.c	/^    uint8_t mbox1;$/;"	m	struct:__anon25	file:
mbr	.\openpic.c	/^	uint32_t mbr;    \/* Mailbox register *\/$/;"	m	struct:openpic_t::__anon46	file:
mcbsp1	.\omap.h	/^    struct omap_mcbsp_s *mcbsp1;$/;"	m	struct:omap_mpu_state_s	typeref:struct:omap_mpu_state_s::omap_mcbsp_s
mcbsp2	.\omap.h	/^    struct omap_mcbsp_s *mcbsp2;$/;"	m	struct:omap_mpu_state_s	typeref:struct:omap_mpu_state_s::omap_mcbsp_s
mcbsp3	.\omap.h	/^    struct omap_mcbsp_s *mcbsp3;$/;"	m	struct:omap_mpu_state_s	typeref:struct:omap_mpu_state_s::omap_mcbsp_s
mcf5206_init	.\mcf5206.c	/^qemu_irq *mcf5206_init(uint32_t base, CPUState *env)$/;"	f
mcf5208_sys_init	.\mcf5208.c	/^static void mcf5208_sys_init(qemu_irq *pic)$/;"	f	file:
mcf5208evb_init	.\mcf5208.c	/^static void mcf5208evb_init(int ram_size, int vga_ram_size,$/;"	f	file:
mcf5208evb_machine	.\mcf5208.c	/^QEMUMachine mcf5208evb_machine = {$/;"	v
mcf_do_command	.\mcf_uart.c	/^static void mcf_do_command(mcf_uart_state *s, uint8_t cmd)$/;"	f	file:
mcf_fec_bd	.\mcf_fec.c	/^} mcf_fec_bd;$/;"	t	typeref:struct:__anon31	file:
mcf_fec_can_receive	.\mcf_fec.c	/^static int mcf_fec_can_receive(void *opaque)$/;"	f	file:
mcf_fec_do_tx	.\mcf_fec.c	/^static void mcf_fec_do_tx(mcf_fec_state *s)$/;"	f	file:
mcf_fec_enable_rx	.\mcf_fec.c	/^static void mcf_fec_enable_rx(mcf_fec_state *s)$/;"	f	file:
mcf_fec_init	.\mcf_fec.c	/^void mcf_fec_init(NICInfo *nd, target_phys_addr_t base, qemu_irq *irq)$/;"	f
mcf_fec_irq_map	.\mcf_fec.c	/^static const uint32_t mcf_fec_irq_map[FEC_NUM_IRQ] = {$/;"	v	file:
mcf_fec_read	.\mcf_fec.c	/^static uint32_t mcf_fec_read(void *opaque, target_phys_addr_t addr)$/;"	f	file:
mcf_fec_read_bd	.\mcf_fec.c	/^static void mcf_fec_read_bd(mcf_fec_bd *bd, uint32_t addr)$/;"	f	file:
mcf_fec_readfn	.\mcf_fec.c	/^static CPUReadMemoryFunc *mcf_fec_readfn[] = {$/;"	v	file:
mcf_fec_receive	.\mcf_fec.c	/^static void mcf_fec_receive(void *opaque, const uint8_t *buf, int size)$/;"	f	file:
mcf_fec_reset	.\mcf_fec.c	/^static void mcf_fec_reset(mcf_fec_state *s)$/;"	f	file:
mcf_fec_state	.\mcf_fec.c	/^} mcf_fec_state;$/;"	t	typeref:struct:__anon30	file:
mcf_fec_update	.\mcf_fec.c	/^static void mcf_fec_update(mcf_fec_state *s)$/;"	f	file:
mcf_fec_write	.\mcf_fec.c	/^static void mcf_fec_write(void *opaque, target_phys_addr_t addr, uint32_t value)$/;"	f	file:
mcf_fec_write_bd	.\mcf_fec.c	/^static void mcf_fec_write_bd(mcf_fec_bd *bd, uint32_t addr)$/;"	f	file:
mcf_fec_writefn	.\mcf_fec.c	/^static CPUWriteMemoryFunc *mcf_fec_writefn[] = {$/;"	v	file:
mcf_intc_init	.\mcf_intc.c	/^qemu_irq *mcf_intc_init(target_phys_addr_t base, CPUState *env)$/;"	f
mcf_intc_read	.\mcf_intc.c	/^static uint32_t mcf_intc_read(void *opaque, target_phys_addr_t addr)$/;"	f	file:
mcf_intc_readfn	.\mcf_intc.c	/^static CPUReadMemoryFunc *mcf_intc_readfn[] = {$/;"	v	file:
mcf_intc_reset	.\mcf_intc.c	/^static void mcf_intc_reset(mcf_intc_state *s)$/;"	f	file:
mcf_intc_set_irq	.\mcf_intc.c	/^static void mcf_intc_set_irq(void *opaque, int irq, int level)$/;"	f	file:
mcf_intc_state	.\mcf_intc.c	/^} mcf_intc_state;$/;"	t	typeref:struct:__anon32	file:
mcf_intc_update	.\mcf_intc.c	/^static void mcf_intc_update(mcf_intc_state *s)$/;"	f	file:
mcf_intc_write	.\mcf_intc.c	/^static void mcf_intc_write(void *opaque, target_phys_addr_t addr, uint32_t val)$/;"	f	file:
mcf_intc_writefn	.\mcf_intc.c	/^static CPUWriteMemoryFunc *mcf_intc_writefn[] = {$/;"	v	file:
mcf_uart_can_receive	.\mcf_uart.c	/^static int mcf_uart_can_receive(void *opaque)$/;"	f	file:
mcf_uart_do_tx	.\mcf_uart.c	/^static void mcf_uart_do_tx(mcf_uart_state *s)$/;"	f	file:
mcf_uart_event	.\mcf_uart.c	/^static void mcf_uart_event(void *opaque, int event)$/;"	f	file:
mcf_uart_init	.\mcf_uart.c	/^void *mcf_uart_init(qemu_irq irq, CharDriverState *chr)$/;"	f
mcf_uart_mm_init	.\mcf_uart.c	/^void mcf_uart_mm_init(target_phys_addr_t base, qemu_irq irq,$/;"	f
mcf_uart_push_byte	.\mcf_uart.c	/^static void mcf_uart_push_byte(mcf_uart_state *s, uint8_t data)$/;"	f	file:
mcf_uart_read	.\mcf_uart.c	/^uint32_t mcf_uart_read(void *opaque, target_phys_addr_t addr)$/;"	f
mcf_uart_readfn	.\mcf_uart.c	/^static CPUReadMemoryFunc *mcf_uart_readfn[] = {$/;"	v	file:
mcf_uart_receive	.\mcf_uart.c	/^static void mcf_uart_receive(void *opaque, const uint8_t *buf, int size)$/;"	f	file:
mcf_uart_reset	.\mcf_uart.c	/^static void mcf_uart_reset(mcf_uart_state *s)$/;"	f	file:
mcf_uart_state	.\mcf_uart.c	/^} mcf_uart_state;$/;"	t	typeref:struct:__anon33	file:
mcf_uart_update	.\mcf_uart.c	/^static void mcf_uart_update(mcf_uart_state *s)$/;"	f	file:
mcf_uart_write	.\mcf_uart.c	/^void mcf_uart_write(void *opaque, target_phys_addr_t addr, uint32_t val)$/;"	f
mcf_uart_writefn	.\mcf_uart.c	/^static CPUWriteMemoryFunc *mcf_uart_writefn[] = {$/;"	v	file:
mclk_1510	.\omap1_clk.c	/^static struct clk mclk_1510 = {$/;"	v	typeref:struct:clk	file:
mclk_16xx	.\omap1_clk.c	/^static struct clk mclk_16xx = {$/;"	v	typeref:struct:clk	file:
mclk_310	.\omap1_clk.c	/^static struct clk mclk_310 = {$/;"	v	typeref:struct:clk	file:
mcr	.\omap.c	/^    uint16_t mcr[2];$/;"	m	struct:omap_mcbsp_s	file:
mcr	.\serial.c	/^    uint8_t mcr;$/;"	m	struct:SerialState	file:
mcr	.\spitz.c	/^    uint16_t mcr;$/;"	m	struct:scoop_info_s	file:
mcr	.\stellaris.c	/^    uint32_t mcr;$/;"	m	struct:__anon111	file:
mcs	.\stellaris.c	/^    uint32_t mcs;$/;"	m	struct:__anon111	file:
mctl	.\stellaris_enet.c	/^    uint32_t mctl;$/;"	m	struct:__anon115	file:
mctrl	.\slavio_misc.c	/^    uint8_t diag, mctrl;$/;"	m	struct:MiscState	file:
md_attr_read	.\ide.c	/^static uint8_t md_attr_read(void *opaque, uint32_t at)$/;"	f	file:
md_attr_write	.\ide.c	/^static void md_attr_write(void *opaque, uint32_t at, uint8_t value)$/;"	f	file:
md_common_read	.\ide.c	/^static uint16_t md_common_read(void *opaque, uint32_t at)$/;"	f	file:
md_common_write	.\ide.c	/^static void md_common_write(void *opaque, uint32_t at, uint16_t value)$/;"	f	file:
md_cstat	.\ide.c	/^enum md_cstat {$/;"	g	file:
md_ctrl	.\ide.c	/^enum md_ctrl {$/;"	g	file:
md_iid	.\ide.c	/^static int md_iid = 0;$/;"	v	file:
md_interrupt_update	.\ide.c	/^static inline void md_interrupt_update(struct md_s *s)$/;"	f	file:
md_load	.\ide.c	/^static int md_load(QEMUFile *f, void *opaque, int version_id)$/;"	f	file:
md_opt	.\ide.c	/^enum md_opt {$/;"	g	file:
md_pins	.\ide.c	/^enum md_pins {$/;"	g	file:
md_reset	.\ide.c	/^static void md_reset(struct md_s *s)$/;"	f	file:
md_s	.\ide.c	/^struct md_s {$/;"	s	file:
md_save	.\ide.c	/^static void md_save(QEMUFile *f, void *opaque)$/;"	f	file:
md_set_irq	.\ide.c	/^static void md_set_irq(void *opaque, int irq, int level)$/;"	f	file:
mdata	.\ppc405_uc.c	/^    uint8_t mdata;$/;"	m	struct:ppc4xx_i2c_t	file:
mdata_size	.\ide.c	/^    uint32_t mdata_size;$/;"	m	struct:IDEState	file:
mdata_storage	.\ide.c	/^    uint8_t *mdata_storage;$/;"	m	struct:IDEState	file:
mdcntl	.\ppc405_uc.c	/^    uint8_t mdcntl;$/;"	m	struct:ppc4xx_i2c_t	file:
mdi_op_name	.\eepro100.c	/^static const char *mdi_op_name[] = {$/;"	v	file:
mdi_reg_name	.\eepro100.c	/^static const char *mdi_reg_name[] = {$/;"	v	file:
mdimem	.\eepro100.c	/^    uint16_t mdimem[32];$/;"	m	struct:__anon16	file:
mdr	.\stellaris.c	/^    uint32_t mdr;$/;"	m	struct:__anon111	file:
mdv	.\stellaris_enet.c	/^    uint32_t mdv;$/;"	m	struct:__anon115	file:
me_irq	.\sun4m.c	/^    int ser_irq, ms_kb_irq, fd_irq, me_irq, cs_irq;$/;"	m	struct:hwdef	file:
me_irq	.\sun4m.c	/^    int ser_irq, ms_kb_irq, me_irq;$/;"	m	struct:sun4d_hwdef	file:
media_changed	.\ide.c	/^    int media_changed;$/;"	m	struct:IDEState	file:
mem	.\eepro100.c	/^    uint8_t mem[PCI_MEM_SIZE];$/;"	m	struct:__anon16	file:
mem	.\ne2000.c	/^    uint8_t mem[NE2000_MEM_SIZE];$/;"	m	struct:NE2000State	file:
mem	.\usb-ohci.c	/^    int mem;$/;"	m	struct:__anon123	file:
mem_base	.\ds1225y.c	/^    target_phys_addr_t mem_base;$/;"	m	struct:ds1225y_t	file:
mem_base	.\m48t59.c	/^    target_phys_addr_t mem_base;$/;"	m	struct:m48t59_t	file:
mem_base	.\mac_nvram.c	/^    target_phys_addr_t mem_base;$/;"	m	struct:MacIONVRAMState	file:
mem_base	.\usb-ohci.c	/^    target_phys_addr_t mem_base;$/;"	m	struct:__anon123	file:
mem_index	.\m48t59.c	/^    int mem_index;$/;"	m	struct:m48t59_t	file:
mem_index	.\mac_nvram.c	/^    int mem_index;$/;"	m	struct:MacIONVRAMState	file:
mem_index	.\openpic.c	/^    int mem_index;$/;"	m	struct:openpic_t	file:
mem_oob	.\nand.c	/^    int mem_oob;$/;"	m	struct:nand_flash_s	file:
mem_read	.\omap.h	/^    CPUReadMemoryFunc **mem_read;$/;"	m	struct:io_fn
mem_read	.\ppc4xx_devs.c	/^    CPUReadMemoryFunc **mem_read[MMIO_AREA_NB];$/;"	m	struct:ppc4xx_mmio_t	file:
mem_write	.\omap.h	/^    CPUWriteMemoryFunc **mem_write;$/;"	m	struct:io_fn
mem_write	.\ppc4xx_devs.c	/^    CPUWriteMemoryFunc **mem_write[MMIO_AREA_NB];$/;"	m	struct:ppc4xx_mmio_t	file:
mempage	.\es1370.c	/^    uint32_t mempage;$/;"	m	struct:ES1370State	file:
micr	.\openpic.c	/^    uint32_t micr; \/* MPIC interrupt configuration register *\/$/;"	m	struct:openpic_t	file:
microwire	.\omap.h	/^    struct omap_uwire_s *microwire;$/;"	m	struct:omap_mpu_state_s	typeref:struct:omap_mpu_state_s::omap_uwire_s
mimr	.\stellaris.c	/^    uint32_t mimr;$/;"	m	struct:__anon111	file:
min	.\vmware_vga.c	/^            uint32_t min;$/;"	m	struct:vmsvga_state_s::__anon128::__anon129	file:
mips_machine	.\mips_r4k.c	/^QEMUMachine mips_machine = {$/;"	v
mips_malta_init	.\mips_malta.c	/^void mips_malta_init (int ram_size, int vga_ram_size,$/;"	f	file:
mips_malta_machine	.\mips_malta.c	/^QEMUMachine mips_malta_machine = {$/;"	v
mips_mipssim_init	.\mips_mipssim.c	/^mips_mipssim_init (int ram_size, int vga_ram_size,$/;"	f	file:
mips_mipssim_machine	.\mips_mipssim.c	/^QEMUMachine mips_mipssim_machine = {$/;"	v
mips_pica61_init	.\mips_pica61.c	/^void mips_pica61_init (int ram_size, int vga_ram_size,$/;"	f	file:
mips_pica61_machine	.\mips_pica61.c	/^QEMUMachine mips_pica61_machine = {$/;"	v
mips_qemu_iomemtype	.\mips_r4k.c	/^static int mips_qemu_iomemtype = 0;$/;"	v	file:
mips_qemu_read	.\mips_r4k.c	/^static CPUReadMemoryFunc *mips_qemu_read[] = {$/;"	v	file:
mips_qemu_readl	.\mips_r4k.c	/^static uint32_t mips_qemu_readl (void *opaque, target_phys_addr_t addr)$/;"	f	file:
mips_qemu_write	.\mips_r4k.c	/^static CPUWriteMemoryFunc *mips_qemu_write[] = {$/;"	v	file:
mips_qemu_writel	.\mips_r4k.c	/^static void mips_qemu_writel (void *opaque, target_phys_addr_t addr,$/;"	f	file:
mips_r4k_init	.\mips_r4k.c	/^void mips_r4k_init (int ram_size, int vga_ram_size,$/;"	f	file:
mips_timer_cb	.\mips_timer.c	/^static void mips_timer_cb (void *opaque)$/;"	f	file:
mipsnet_buffer_full	.\mipsnet.c	/^static int mipsnet_buffer_full(MIPSnetState *s)$/;"	f	file:
mipsnet_can_receive	.\mipsnet.c	/^static int mipsnet_can_receive(void *opaque)$/;"	f	file:
mipsnet_init	.\mipsnet.c	/^void mipsnet_init (int base, qemu_irq irq, NICInfo *nd)$/;"	f
mipsnet_ioport_read	.\mipsnet.c	/^static uint32_t mipsnet_ioport_read(void *opaque, uint32_t addr)$/;"	f	file:
mipsnet_ioport_write	.\mipsnet.c	/^static void mipsnet_ioport_write(void *opaque, uint32_t addr, uint32_t val)$/;"	f	file:
mipsnet_load	.\mipsnet.c	/^static int mipsnet_load(QEMUFile *f, void *opaque, int version_id)$/;"	f	file:
mipsnet_receive	.\mipsnet.c	/^static void mipsnet_receive(void *opaque, const uint8_t *buf, int size)$/;"	f	file:
mipsnet_reset	.\mipsnet.c	/^static void mipsnet_reset(MIPSnetState *s)$/;"	f	file:
mipsnet_save	.\mipsnet.c	/^static void mipsnet_save(QEMUFile *f, void *opaque)$/;"	f	file:
mipsnet_update_irq	.\mipsnet.c	/^static void mipsnet_update_irq(MIPSnetState *s)$/;"	f	file:
mirror	.\ssd0303.c	/^    int mirror;$/;"	m	struct:__anon105	file:
misc	.\pcnet.c	/^    uint32_t misc;$/;"	m	struct:pcnet_TMD	file:
missing	.\eepro100.c	90;"	d	file:
mixbuf	.\adlib.c	/^    int16_t *mixbuf;$/;"	m	struct:__anon2	file:
mixer_nreg	.\sb16.c	/^    int mixer_nreg;$/;"	m	struct:SB16State	file:
mixer_regs	.\sb16.c	/^    uint8_t mixer_regs[256];$/;"	m	struct:SB16State	file:
mm_base	.\pxa.h	/^    target_phys_addr_t mm_base;$/;"	m	struct:pxa2xx_state_s
mm_regs	.\pxa.h	/^    uint32_t mm_regs[0x1a];$/;"	m	struct:pxa2xx_state_s
mmc	.\omap.h	/^    struct omap_mmc_s *mmc;$/;"	m	struct:omap_mpu_state_s	typeref:struct:omap_mpu_state_s::omap_mmc_s
mmc	.\pxa.h	/^    struct pxa2xx_mmci_s *mmc;$/;"	m	struct:pxa2xx_state_s	typeref:struct:pxa2xx_state_s::pxa2xx_mmci_s
mmc1_ck	.\omap1_clk.c	/^static struct clk mmc1_ck = {$/;"	v	typeref:struct:clk	file:
mmc2_ck	.\omap1_clk.c	/^static struct clk mmc2_ck = {$/;"	v	typeref:struct:clk	file:
mmfr	.\mcf_fec.c	/^    uint32_t mmfr;$/;"	m	struct:__anon30	file:
mmio_index	.\eepro100.c	/^    int mmio_index;$/;"	m	struct:__anon16	file:
mmio_index	.\pcnet.c	/^    int mmio_index, rap, isr, lnkst;$/;"	m	struct:PCNetState_st	file:
mmio_io_addr	.\lsi53c895a.c	/^    int mmio_io_addr;$/;"	m	struct:__anon25	file:
mmio_read	.\ppc4xx_devs.c	/^static CPUReadMemoryFunc *mmio_read[] = {$/;"	v	file:
mmio_readb	.\ppc4xx_devs.c	/^static uint32_t mmio_readb (void *opaque, target_phys_addr_t addr)$/;"	f	file:
mmio_readl	.\ppc4xx_devs.c	/^static uint32_t mmio_readl (void *opaque, target_phys_addr_t addr)$/;"	f	file:
mmio_readlen	.\ppc4xx_devs.c	/^static uint32_t mmio_readlen (ppc4xx_mmio_t *mmio,$/;"	f	file:
mmio_readw	.\ppc4xx_devs.c	/^static uint32_t mmio_readw (void *opaque, target_phys_addr_t addr)$/;"	f	file:
mmio_write	.\ppc4xx_devs.c	/^static CPUWriteMemoryFunc *mmio_write[] = {$/;"	v	file:
mmio_writeb	.\ppc4xx_devs.c	/^static void mmio_writeb (void *opaque,$/;"	f	file:
mmio_writel	.\ppc4xx_devs.c	/^static void mmio_writel (void *opaque,$/;"	f	file:
mmio_writelen	.\ppc4xx_devs.c	/^static void mmio_writelen (ppc4xx_mmio_t *mmio,$/;"	f	file:
mmio_writew	.\ppc4xx_devs.c	/^static void mmio_writew (void *opaque,$/;"	f	file:
mmrs	.\lsi53c895a.c	/^    uint32_t mmrs;$/;"	m	struct:__anon25	file:
mmws	.\lsi53c895a.c	/^    uint32_t mmws;$/;"	m	struct:__anon25	file:
mod_conf_ctrl	.\omap.h	/^    uint32_t mod_conf_ctrl[1];$/;"	m	struct:omap_mpu_state_s
mode	.\dma.c	/^    uint8_t mode;$/;"	m	struct:dma_regs	file:
mode	.\fmopl.h	/^	UINT32 mode;		\/* Reg.08 : CSM , notesel,etc.       *\/$/;"	m	struct:fm_opl_f
mode	.\i8254.c	/^    uint8_t mode;$/;"	m	struct:PITChannelState	file:
mode	.\omap.c	/^    int mode;$/;"	m	struct:omap_watchdog_timer_s	file:
mode	.\omap.c	/^    omap_dma_addressing_t mode[2];$/;"	m	struct:omap_dma_channel_s	file:
mode	.\omap.h	/^        uint16_t mode;$/;"	m	struct:omap_mpu_state_s::dpll_ctl_s
mode	.\omap_mmc.c	/^    int mode;$/;"	m	struct:omap_mmc_s	file:
mode	.\pckbd.c	/^    uint8_t mode;$/;"	m	struct:KBDState	file:
mode	.\pcnet.c	/^    uint16_t mode;$/;"	m	struct:pcnet_initblk16	file:
mode	.\pcnet.c	/^    uint16_t mode;$/;"	m	struct:pcnet_initblk32	file:
mode	.\rtl8139.c	/^    int      mode;$/;"	m	struct:EEprom9346	file:
mode	.\sd.c	/^    } mode;$/;"	m	struct:SDState	typeref:enum:SDState::__anon90	file:
mode	.\smbus.h	/^    int mode;$/;"	m	struct:SMBusDevice
mode	.\ssd0303.c	/^    enum ssd0303_mode mode;$/;"	m	struct:__anon105	typeref:enum:__anon105::ssd0303_mode	file:
mode	.\ssd0323.c	/^    enum ssd0323_mode mode;$/;"	m	struct:__anon106	typeref:enum:__anon106::ssd0323_mode	file:
mode	.\ssi-sd.c	/^    ssi_sd_mode mode;$/;"	m	struct:__anon108	file:
mode	.\stellaris.c	/^    uint32_t mode[2];$/;"	m	struct:gptm_state	file:
mode	.\usb-msd.c	/^    enum USBMSDMode mode;$/;"	m	struct:__anon122	typeref:enum:__anon122::USBMSDMode	file:
mode	.\usb-wacom.c	/^    } mode;$/;"	m	struct:USBWacomState	typeref:enum:USBWacomState::__anon125	file:
mode_f1	.\omap.h	/^    omap_dma_addressing_t mode_f1;$/;"	m	struct:omap_dma_lcd_channel_s
mode_f2	.\omap.h	/^    omap_dma_addressing_t mode_f2;$/;"	m	struct:omap_dma_lcd_channel_s
mode_regs	.\tsc210x.c	/^static const uint16_t mode_regs[16] = {$/;"	v	file:
model	.\arm_gic.c	/^    unsigned model:1; \/* 0 = N:N, 1 = 1:N *\/$/;"	m	struct:gic_irq_state	file:
model	.\omap.c	/^    enum omap_dma_model model;$/;"	m	struct:omap_dma_s	typeref:enum:omap_dma_s::omap_dma_model	file:
modifiers	.\spitz.c	/^    uint16_t modifiers;$/;"	m	struct:spitz_keyboard_s	file:
modifiers	.\usb-hid.c	/^    uint16_t modifiers;$/;"	m	struct:USBKeyboardState	file:
mono	.\omap_lcdc.c	/^    int mono;$/;"	m	struct:omap_lcd_panel_s	file:
monomix	.\wm8750.c	/^    uint8_t diff[2], pol, ds, monomix[2], alc, mute;$/;"	m	struct:wm8750_s	file:
mouse	.\pckbd.c	/^    void *mouse;$/;"	m	struct:KBDState	file:
mouse	.\slavio_serial.c	/^    ser, kbd, mouse,$/;"	e	enum:__anon100	file:
mouse_buttons	.\ps2.c	/^    uint8_t mouse_buttons;$/;"	m	struct:__anon80	file:
mouse_detect_state	.\ps2.c	/^    uint8_t mouse_detect_state;$/;"	m	struct:__anon80	file:
mouse_dx	.\ps2.c	/^    int mouse_dx; \/* current values, needed for 'poll' mode *\/$/;"	m	struct:__anon80	file:
mouse_dy	.\ps2.c	/^    int mouse_dy;$/;"	m	struct:__anon80	file:
mouse_dz	.\ps2.c	/^    int mouse_dz;$/;"	m	struct:__anon80	file:
mouse_grabbed	.\usb-hid.c	/^    int mouse_grabbed;$/;"	m	struct:USBMouseState	file:
mouse_grabbed	.\usb-wacom.c	/^    int mouse_grabbed;$/;"	m	struct:USBWacomState	file:
mouse_resolution	.\ps2.c	/^    uint8_t mouse_resolution;$/;"	m	struct:__anon80	file:
mouse_sample_rate	.\ps2.c	/^    uint8_t mouse_sample_rate;$/;"	m	struct:__anon80	file:
mouse_status	.\ps2.c	/^    uint8_t mouse_status;$/;"	m	struct:__anon80	file:
mouse_type	.\ps2.c	/^    uint8_t mouse_type; \/* 0 = PS2, 3 = IMPS\/2, 4 = IMEX *\/$/;"	m	struct:__anon80	file:
mouse_wrap	.\ps2.c	/^    uint8_t mouse_wrap;$/;"	m	struct:__anon80	file:
mpath	.\wm8750.c	/^    uint8_t path[4], mpath[2], power, format;$/;"	m	struct:wm8750_s	file:
mpcore	.\mpcore.c	/^    struct mpcore_priv_state *mpcore;$/;"	m	struct:__anon35	typeref:struct:__anon35::mpcore_priv_state	file:
mpcore_irq_init	.\mpcore.c	/^qemu_irq *mpcore_irq_init(qemu_irq *cpu_irq)$/;"	f
mpcore_irq_map	.\mpcore.c	/^static const int mpcore_irq_map[32] = {$/;"	v	file:
mpcore_priv_init	.\mpcore.c	/^static qemu_irq *mpcore_priv_init(uint32_t base, qemu_irq *pic_irq)$/;"	f	file:
mpcore_priv_read	.\mpcore.c	/^static uint32_t mpcore_priv_read(void *opaque, target_phys_addr_t offset)$/;"	f	file:
mpcore_priv_readfn	.\mpcore.c	/^static CPUReadMemoryFunc *mpcore_priv_readfn[] = {$/;"	v	file:
mpcore_priv_state	.\mpcore.c	/^typedef struct mpcore_priv_state {$/;"	s	file:
mpcore_priv_state	.\mpcore.c	/^} mpcore_priv_state;$/;"	t	typeref:struct:mpcore_priv_state	file:
mpcore_priv_write	.\mpcore.c	/^static void mpcore_priv_write(void *opaque, target_phys_addr_t offset,$/;"	f	file:
mpcore_priv_writefn	.\mpcore.c	/^static CPUWriteMemoryFunc *mpcore_priv_writefn[] = {$/;"	v	file:
mpcore_rirq_set_irq	.\mpcore.c	/^static void mpcore_rirq_set_irq(void *opaque, int irq, int level)$/;"	f	file:
mpcore_rirq_state	.\mpcore.c	/^} mpcore_rirq_state;$/;"	t	typeref:struct:__anon36	file:
mpcore_timer_init	.\mpcore.c	/^static void mpcore_timer_init(mpcore_priv_state *mpcore,$/;"	f	file:
mpcore_timer_read	.\mpcore.c	/^static uint32_t mpcore_timer_read(mpcore_timer_state *s, int offset)$/;"	f	file:
mpcore_timer_reload	.\mpcore.c	/^static void mpcore_timer_reload(mpcore_timer_state *s, int restart)$/;"	f	file:
mpcore_timer_scale	.\mpcore.c	/^static inline uint32_t mpcore_timer_scale(mpcore_timer_state *s)$/;"	f	file:
mpcore_timer_state	.\mpcore.c	/^} mpcore_timer_state;$/;"	t	typeref:struct:__anon35	file:
mpcore_timer_tick	.\mpcore.c	/^static void mpcore_timer_tick(void *opaque)$/;"	f	file:
mpcore_timer_update_irq	.\mpcore.c	/^static inline void mpcore_timer_update_irq(mpcore_timer_state *s)$/;"	f	file:
mpcore_timer_write	.\mpcore.c	/^static void mpcore_timer_write(mpcore_timer_state *s, int offset,$/;"	f	file:
mpu	.\omap.c	/^    struct omap_mpu_state_s *mpu;$/;"	m	struct:omap_dma_s	typeref:struct:omap_dma_s::omap_mpu_state_s	file:
mpu	.\omap.h	/^    struct omap_mpu_state_s *mpu;$/;"	m	struct:omap_dma_lcd_channel_s	typeref:struct:omap_dma_lcd_channel_s::omap_mpu_state_s
mpu_base	.\omap.h	/^        target_phys_addr_t mpu_base;$/;"	m	struct:omap_mpu_state_s::__anon40
mpu_model	.\omap.h	/^    } mpu_model;$/;"	m	struct:omap_mpu_state_s	typeref:enum:omap_mpu_state_s::omap1_mpu_model
mpui_base	.\omap.h	/^    target_phys_addr_t mpui_base;$/;"	m	struct:omap_mpu_state_s
mpui_ctrl	.\omap.h	/^    uint32_t mpui_ctrl;$/;"	m	struct:omap_mpu_state_s
mpuio	.\omap.h	/^    struct omap_mpuio_s *mpuio;$/;"	m	struct:omap_mpu_state_s	typeref:struct:omap_mpu_state_s::omap_mpuio_s
mr	.\mcf_uart.c	/^    uint8_t mr[2];$/;"	m	struct:__anon33	file:
mr	.\pl031.c	/^    uint32_t mr;$/;"	m	struct:__anon54	file:
mris	.\stellaris.c	/^    uint32_t mris;$/;"	m	struct:__anon111	file:
mrxd	.\stellaris_enet.c	/^    uint32_t mrxd;$/;"	m	struct:__anon115	file:
ms_kb_base	.\sun4m.c	/^    target_phys_addr_t counter_base, nvram_base, ms_kb_base;$/;"	m	struct:sun4d_hwdef	file:
ms_kb_base	.\sun4m.c	/^    target_phys_addr_t intctl_base, counter_base, nvram_base, ms_kb_base;$/;"	m	struct:hwdef	file:
ms_kb_irq	.\sun4m.c	/^    int ser_irq, ms_kb_irq, fd_irq, me_irq, cs_irq;$/;"	m	struct:hwdef	file:
ms_kb_irq	.\sun4m.c	/^    int ser_irq, ms_kb_irq, me_irq;$/;"	m	struct:sun4d_hwdef	file:
msa	.\stellaris.c	/^    uint32_t msa;$/;"	m	struct:__anon111	file:
mscr	.\mcf_fec.c	/^    uint32_t mscr;$/;"	m	struct:__anon30	file:
mscrd	.\mst_fpga.c	/^	uint32_t mscrd;$/;"	m	struct:mst_irq_state	file:
mscwr1	.\mst_fpga.c	/^	uint32_t mscwr1;$/;"	m	struct:mst_irq_state	file:
mscwr2	.\mst_fpga.c	/^	uint32_t mscwr2;$/;"	m	struct:mst_irq_state	file:
mscwr3	.\mst_fpga.c	/^	uint32_t mscwr3;$/;"	m	struct:mst_irq_state	file:
msg	.\lsi53c895a.c	/^    uint8_t msg[LSI_MAX_MSGIN_LEN];$/;"	m	struct:__anon25	file:
msg_action	.\lsi53c895a.c	/^    int msg_action;$/;"	m	struct:__anon25	file:
msg_len	.\lsi53c895a.c	/^    int msg_len;$/;"	m	struct:__anon25	file:
msg_length	.\pcnet.c	/^    uint32_t msg_length;$/;"	m	struct:pcnet_RMD	file:
msr	.\serial.c	/^    uint8_t msr; \/* read only *\/$/;"	m	struct:SerialState	file:
mst_fpga_load	.\mst_fpga.c	/^mst_fpga_load(QEMUFile *f, void *opaque, int version_id)$/;"	f	file:
mst_fpga_readb	.\mst_fpga.c	/^mst_fpga_readb(void *opaque, target_phys_addr_t addr)$/;"	f	file:
mst_fpga_readfn	.\mst_fpga.c	/^CPUReadMemoryFunc *mst_fpga_readfn[] = {$/;"	v
mst_fpga_save	.\mst_fpga.c	/^mst_fpga_save(QEMUFile *f, void *opaque)$/;"	f	file:
mst_fpga_set_irq	.\mst_fpga.c	/^mst_fpga_set_irq(void *opaque, int irq, int level)$/;"	f	file:
mst_fpga_update_gpio	.\mst_fpga.c	/^mst_fpga_update_gpio(mst_irq_state *s)$/;"	f	file:
mst_fpga_writeb	.\mst_fpga.c	/^mst_fpga_writeb(void *opaque, target_phys_addr_t addr, uint32_t value)$/;"	f	file:
mst_fpga_writefn	.\mst_fpga.c	/^CPUWriteMemoryFunc *mst_fpga_writefn[] = {$/;"	v
mst_irq_init	.\mst_fpga.c	/^qemu_irq *mst_irq_init(struct pxa2xx_state_s *cpu, uint32_t base, int irq)$/;"	f
mst_irq_state	.\mst_fpga.c	/^typedef struct mst_irq_state{$/;"	s	file:
mst_irq_state	.\mst_fpga.c	/^}mst_irq_state;$/;"	t	typeref:struct:mst_irq_state	file:
mtpr	.\stellaris.c	/^    uint32_t mtpr;$/;"	m	struct:__anon111	file:
mtxd	.\stellaris_enet.c	/^    uint32_t mtxd;$/;"	m	struct:__anon115	file:
mul	.\fmopl.h	/^	UINT32 mul;		\/* multiple        :ML_TABLE[ML]       *\/$/;"	m	struct:fm_opl_slot
mult	.\eepro100.c	/^    uint8_t mult[8];            \/* multicast mask array *\/$/;"	m	struct:__anon16	file:
mult	.\ne2000.c	/^    uint8_t mult[8]; \/* multicast mask array *\/$/;"	m	struct:NE2000State	file:
mult	.\rtl8139.c	/^    uint8_t mult[8]; \/* multicast mask array *\/$/;"	m	struct:RTL8139State	file:
mult_sectors	.\ide.c	/^    int mult_sectors;$/;"	m	struct:IDEState	file:
multiplier	.\omap1_clk.c	/^    unsigned int multiplier;	\/* Rate relative to input (if .enabled) *\/$/;"	m	struct:clk	file:
mute	.\wm8750.c	/^    uint8_t diff[2], pol, ds, monomix[2], alc, mute;$/;"	m	struct:wm8750_s	file:
n	.\irq.c	/^    int n;$/;"	m	struct:IRQState	file:
name	.\boards.h	/^    const char *name;$/;"	m	struct:QEMUMachine
name	.\firmware_abi.h	/^    char name[12];$/;"	m	struct:OpenBIOS_nvpart_v1
name	.\omap.c	/^    const char *name;$/;"	m	struct:omap_map_s	file:
name	.\omap1_clk.c	/^    const char *name;$/;"	m	struct:clk	file:
name	.\pci.h	/^    char name[64];$/;"	m	struct:PCIDevice
name	.\stellaris.c	/^    const char *name;$/;"	m	struct:__anon109	file:
name	.\tsc210x.c	/^    const char *name;$/;"	m	struct:tsc210x_state_s	file:
name	.\usb-ohci.c	/^    const char *name;$/;"	m	struct:__anon123	file:
nand	.\spitz.c	/^    struct nand_flash_s *nand;$/;"	m	struct:sl_nand_s	typeref:struct:sl_nand_s::nand_flash_s	file:
nand_command	.\nand.c	/^static void nand_command(struct nand_flash_s *s)$/;"	f	file:
nand_done	.\nand.c	/^void nand_done(struct nand_flash_s *s)$/;"	f
nand_ecc_precalc_table	.\ecc.c	/^static const uint8_t nand_ecc_precalc_table[] = {$/;"	v	file:
nand_flash_ids	.\nand.c	/^} nand_flash_ids[0x100] = {$/;"	v	typeref:struct:nand_info_s
nand_flash_s	.\nand.c	/^struct nand_flash_s {$/;"	s	file:
nand_getio	.\nand.c	/^uint8_t nand_getio(struct nand_flash_s *s)$/;"	f
nand_getpins	.\nand.c	/^void nand_getpins(struct nand_flash_s *s, int *rb)$/;"	f
nand_iid	.\nand.c	/^static int nand_iid = 0;$/;"	v	file:
nand_info_s	.\nand.c	/^struct nand_info_s {$/;"	s	file:
nand_init	.\nand.c	/^struct nand_flash_s *nand_init(int manf_id, int chip_id)$/;"	f
nand_load	.\nand.c	/^static int nand_load(QEMUFile *f, void *opaque, int version_id)$/;"	f	file:
nand_reset	.\nand.c	/^static void nand_reset(struct nand_flash_s *s)$/;"	f	file:
nand_save	.\nand.c	/^static void nand_save(QEMUFile *f, void *opaque)$/;"	f	file:
nand_setio	.\nand.c	/^void nand_setio(struct nand_flash_s *s, uint8_t value)$/;"	f
nand_setpins	.\nand.c	/^void nand_setpins(struct nand_flash_s *s,$/;"	f
nb_cpus	.\firmware_abi.h	/^    uint8_t  nb_cpus;$/;"	m	struct:ohwcfg_v3_t
nb_cpus	.\openpic.c	/^    int nb_cpus;$/;"	m	struct:openpic_t	file:
nb_devices	.\ppc_mac.h	/^    int nb_devices;$/;"	m	struct:ADBBusState
nb_ide	.\macio.c	/^    int nb_ide;$/;"	m	struct:macio_state_t	file:
nb_ports	.\usb-hub.c	/^    int nb_ports;$/;"	m	struct:USBHubState	file:
nb_queue	.\vmmouse.c	/^    uint16_t nb_queue;$/;"	m	struct:_VMMouseState	file:
nb_sectors	.\ide.c	/^    int64_t nb_sectors;$/;"	m	struct:IDEState	file:
nbanks	.\omap.c	/^    unsigned char nbanks;$/;"	m	struct:omap_intr_handler_s	file:
nbanks	.\ppc405_uc.c	/^    int nbanks;$/;"	m	struct:ppc4xx_sdram_t	file:
nblk	.\omap_mmc.c	/^    uint16_t nblk;$/;"	m	struct:omap_mmc_s	file:
nblk_counter	.\omap_mmc.c	/^    uint16_t nblk_counter;$/;"	m	struct:omap_mmc_s	file:
nboot_devices	.\firmware_abi.h	/^    uint8_t  nboot_devices;$/;"	m	struct:ohwcfg_v3_t
nchannels	.\pl080.c	/^    int nchannels;$/;"	m	struct:__anon58	file:
nd	.\mipsnet.c	/^    NICInfo *nd;$/;"	m	struct:MIPSnetState	file:
nd	.\pcnet.c	/^    NICInfo *nd;$/;"	m	struct:PCNetState_st	file:
ne2000	.\ne2000.c	/^    NE2000State ne2000;$/;"	m	struct:PCINE2000State	file:
ne2000_asic_ioport_read	.\ne2000.c	/^static uint32_t ne2000_asic_ioport_read(void *opaque, uint32_t addr)$/;"	f	file:
ne2000_asic_ioport_readl	.\ne2000.c	/^static uint32_t ne2000_asic_ioport_readl(void *opaque, uint32_t addr)$/;"	f	file:
ne2000_asic_ioport_write	.\ne2000.c	/^static void ne2000_asic_ioport_write(void *opaque, uint32_t addr, uint32_t val)$/;"	f	file:
ne2000_asic_ioport_writel	.\ne2000.c	/^static void ne2000_asic_ioport_writel(void *opaque, uint32_t addr, uint32_t val)$/;"	f	file:
ne2000_buffer_full	.\ne2000.c	/^static int ne2000_buffer_full(NE2000State *s)$/;"	f	file:
ne2000_can_receive	.\ne2000.c	/^static int ne2000_can_receive(void *opaque)$/;"	f	file:
ne2000_dma_update	.\ne2000.c	/^static inline void ne2000_dma_update(NE2000State *s, int len)$/;"	f	file:
ne2000_io	.\pc.c	/^static int ne2000_io[NE2000_NB_MAX] = { 0x300, 0x320, 0x340, 0x360, 0x280, 0x380 };$/;"	v	file:
ne2000_io	.\ppc_prep.c	/^static uint32_t ne2000_io[NE2000_NB_MAX] = { 0x300, 0x320, 0x340, 0x360, 0x280, 0x380 };$/;"	v	file:
ne2000_ioport_read	.\ne2000.c	/^static uint32_t ne2000_ioport_read(void *opaque, uint32_t addr)$/;"	f	file:
ne2000_ioport_write	.\ne2000.c	/^static void ne2000_ioport_write(void *opaque, uint32_t addr, uint32_t val)$/;"	f	file:
ne2000_irq	.\pc.c	/^static int ne2000_irq[NE2000_NB_MAX] = { 9, 10, 11, 3, 4, 5 };$/;"	v	file:
ne2000_irq	.\ppc_prep.c	/^static int ne2000_irq[NE2000_NB_MAX] = { 9, 10, 11, 3, 4, 5 };$/;"	v	file:
ne2000_load	.\ne2000.c	/^static int ne2000_load(QEMUFile* f,void* opaque,int version_id)$/;"	f	file:
ne2000_map	.\ne2000.c	/^static void ne2000_map(PCIDevice *pci_dev, int region_num,$/;"	f	file:
ne2000_mem_readb	.\ne2000.c	/^static inline uint32_t ne2000_mem_readb(NE2000State *s, uint32_t addr)$/;"	f	file:
ne2000_mem_readl	.\ne2000.c	/^static inline uint32_t ne2000_mem_readl(NE2000State *s, uint32_t addr)$/;"	f	file:
ne2000_mem_readw	.\ne2000.c	/^static inline uint32_t ne2000_mem_readw(NE2000State *s, uint32_t addr)$/;"	f	file:
ne2000_mem_writeb	.\ne2000.c	/^static inline void ne2000_mem_writeb(NE2000State *s, uint32_t addr,$/;"	f	file:
ne2000_mem_writel	.\ne2000.c	/^static inline void ne2000_mem_writel(NE2000State *s, uint32_t addr,$/;"	f	file:
ne2000_mem_writew	.\ne2000.c	/^static inline void ne2000_mem_writew(NE2000State *s, uint32_t addr,$/;"	f	file:
ne2000_receive	.\ne2000.c	/^static void ne2000_receive(void *opaque, const uint8_t *buf, int size)$/;"	f	file:
ne2000_reset	.\ne2000.c	/^static void ne2000_reset(NE2000State *s)$/;"	f	file:
ne2000_reset_ioport_read	.\ne2000.c	/^static uint32_t ne2000_reset_ioport_read(void *opaque, uint32_t addr)$/;"	f	file:
ne2000_reset_ioport_write	.\ne2000.c	/^static void ne2000_reset_ioport_write(void *opaque, uint32_t addr, uint32_t val)$/;"	f	file:
ne2000_save	.\ne2000.c	/^static void ne2000_save(QEMUFile* f,void* opaque)$/;"	f	file:
ne2000_update_irq	.\ne2000.c	/^static void ne2000_update_irq(NE2000State *s)$/;"	f	file:
needed_bytes	.\sb16.c	/^    int needed_bytes;$/;"	m	struct:SB16State	file:
network_init	.\mips_malta.c	/^static void network_init (PCIBus *pci_bus)$/;"	f	file:
new_agr	.\omap.c	/^    uint32_t new_agr[2];$/;"	m	struct:omap_intr_handler_s	file:
new_height	.\vmware_vga.c	/^    int new_height;$/;"	m	struct:vmsvga_state_s	file:
new_width	.\vmware_vga.c	/^    int new_width;$/;"	m	struct:vmsvga_state_s	file:
next	.\boards.h	/^    struct QEMUMachine *next;$/;"	m	struct:QEMUMachine	typeref:struct:QEMUMachine::QEMUMachine
next	.\i2c.h	/^    void *next;$/;"	m	struct:i2c_slave
next	.\openpic.c	/^    int next;$/;"	m	struct:IRQ_queue_t	file:
next	.\pci.c	/^    PCIBus *next;$/;"	m	struct:PCIBus	file:
next	.\scsi-disk.c	/^    struct SCSIRequest *next;$/;"	m	struct:SCSIRequest	typeref:struct:SCSIRequest::SCSIRequest	file:
next	.\scsi-generic.c	/^    struct SCSIRequest *next;$/;"	m	struct:SCSIRequest	typeref:struct:SCSIRequest::SCSIRequest	file:
next	.\usb-ohci.c	/^    uint32_t next;$/;"	m	struct:ohci_ed	file:
next	.\usb-ohci.c	/^    uint32_t next;$/;"	m	struct:ohci_iso_td	file:
next	.\usb-ohci.c	/^    uint32_t next;$/;"	m	struct:ohci_td	file:
next	.\usb.h	/^    struct USBPort *next; \/* Used internally by qemu.  *\/$/;"	m	struct:USBPort	typeref:struct:USBPort::USBPort
next_cmd	.\vmware_vga.c	/^            uint32_t next_cmd;$/;"	m	struct:vmsvga_state_s::__anon128::__anon129	file:
next_enum_id	.\sh_intc.h	/^    intc_enum next_enum_id;$/;"	m	struct:intc_source
next_event	.\ptimer.c	/^    int64_t next_event;$/;"	m	struct:ptimer_state	file:
next_irq_time	.\cuda.c	/^    int64_t next_irq_time;$/;"	m	struct:CUDATimer	file:
next_packet	.\stellaris_enet.c	/^    int next_packet;$/;"	m	struct:__anon115	file:
next_periodic_time	.\mc146818rtc.c	/^    int64_t next_periodic_time;$/;"	m	struct:RTCState	file:
next_second_time	.\mc146818rtc.c	/^    int64_t next_second_time;$/;"	m	struct:RTCState	file:
next_time	.\apic.c	/^    int64_t initial_count_load_time, next_time;$/;"	m	struct:APICState	file:
next_transition_time	.\i8254.c	/^    int64_t next_transition_time;$/;"	m	struct:PITChannelState	file:
nextfunction	.\tsc210x.c	/^    int nextfunction;$/;"	m	struct:tsc210x_state_s	file:
nextprecision	.\tsc210x.c	/^    int nextprecision;$/;"	m	struct:tsc210x_state_s	file:
nic_can_receive	.\eepro100.c	/^static int nic_can_receive(void *opaque)$/;"	f	file:
nic_dump	.\eepro100.c	/^static const char *nic_dump(const uint8_t * buf, unsigned size)$/;"	f	file:
nic_init	.\eepro100.c	/^static void nic_init(PCIBus * bus, NICInfo * nd,$/;"	f	file:
nic_load	.\eepro100.c	/^static int nic_load(QEMUFile * f, void *opaque, int version_id)$/;"	f	file:
nic_receive	.\eepro100.c	/^static void nic_receive(void *opaque, const uint8_t * buf, int size)$/;"	f	file:
nic_reset	.\eepro100.c	/^static void nic_reset(void *opaque)$/;"	f	file:
nic_save	.\eepro100.c	/^static void nic_save(QEMUFile * f, void *opaque)$/;"	f	file:
nic_selective_reset	.\eepro100.c	/^static void nic_selective_reset(EEPRO100State * s)$/;"	f	file:
nirq	.\pci.c	/^    int nirq;$/;"	m	struct:PCIBus	file:
noise	.\ads7846.c	/^    int noise;$/;"	m	struct:ads7846_state_s	file:
noise	.\tsc210x.c	/^    int noise;$/;"	m	struct:tsc210x_state_s	file:
none	.\ds1225y.c	/^    none = 0,$/;"	e	enum:__anon10	file:
now	.\dma.c	/^    int now[2];$/;"	m	struct:dma_regs	file:
np	.\stellaris_enet.c	/^    uint32_t np;$/;"	m	struct:__anon115	file:
nr_mask_regs	.\sh_intc.h	/^    int nr_mask_regs;$/;"	m	struct:intc_desc
nr_prio_regs	.\sh_intc.h	/^    int nr_prio_regs;$/;"	m	struct:intc_desc
nr_sects	.\ide.c	/^	uint32_t nr_sects;		\/* nr of sectors in partition *\/$/;"	m	struct:partition	file:
nr_sources	.\sh_intc.h	/^    int nr_sources;$/;"	m	struct:intc_desc
nsector	.\ide.c	/^    uint32_t nsector;$/;"	m	struct:IDEState	file:
num	.\pxa2xx_timer.c	/^    int num;$/;"	m	struct:pxa2xx_timer0_s	file:
num_buttons	.\stellaris_input.c	/^    int num_buttons;$/;"	m	struct:__anon118	file:
num_lock	.\fmopl.c	/^static int num_lock = 0;$/;"	v	file:
num_lock_mode	.\slavio_serial.c	/^    int e0_mode, led_mode, caps_lock_mode, num_lock_mode;$/;"	m	struct:ChannelState	file:
num_ports	.\usb-ohci.c	/^    int num_ports;$/;"	m	struct:__anon123	file:
num_slaves	.\slavio_timer.c	/^    unsigned int num_slaves;$/;"	m	struct:SLAVIO_TIMERState	file:
numblk	.\pxa2xx_mmci.c	/^    int numblk;$/;"	m	struct:pxa2xx_mmci_s	file:
nvflags	.\arm_sysctl.c	/^    uint32_t nvflags;$/;"	m	struct:__anon5	file:
nvic	.\arm_gic.c	/^    void *nvic;$/;"	m	struct:gic_state	file:
nvic_readl	.\armv7m_nvic.c	/^static uint32_t nvic_readl(void *opaque, uint32_t offset)$/;"	f	file:
nvic_state	.\armv7m_nvic.c	/^} nvic_state;$/;"	t	typeref:struct:__anon3	file:
nvic_writel	.\armv7m_nvic.c	/^static void nvic_writel(void *opaque, uint32_t offset, uint32_t value)$/;"	f	file:
nvram	.\macio.c	/^    void *nvram;$/;"	m	struct:macio_state_t	file:
nvram	.\ppc_prep.c	/^    m48t59_t *nvram;$/;"	m	struct:sysctrl_t	file:
nvram_arch_crc	.\firmware_abi.h	/^    uint16_t nvram_arch_crc;$/;"	m	struct:ohwcfg_v3_t
nvram_arch_ptr	.\firmware_abi.h	/^    uint16_t nvram_arch_ptr;$/;"	m	struct:ohwcfg_v3_t
nvram_arch_size	.\firmware_abi.h	/^    uint16_t nvram_arch_size;$/;"	m	struct:ohwcfg_v3_t
nvram_base	.\sun4m.c	/^    target_phys_addr_t counter_base, nvram_base, ms_kb_base;$/;"	m	struct:sun4d_hwdef	file:
nvram_base	.\sun4m.c	/^    target_phys_addr_t intctl_base, counter_base, nvram_base, ms_kb_base;$/;"	m	struct:hwdef	file:
nvram_chksum	.\mac_nvram.c	/^static uint8_t nvram_chksum (const uint8_t *buf, int n)$/;"	f	file:
nvram_init	.\sun4m.c	/^static void nvram_init(m48t59_t *nvram, uint8_t *macaddr, const char *cmdline,$/;"	f	file:
nvram_none	.\ds1225y.c	/^static CPUWriteMemoryFunc *nvram_none[] = {$/;"	v	file:
nvram_open_mode	.\ds1225y.c	/^} nvram_open_mode;$/;"	t	typeref:enum:__anon10	file:
nvram_read	.\ds1225y.c	/^static CPUReadMemoryFunc *nvram_read[] = {$/;"	v	file:
nvram_read	.\m48t59.c	/^static CPUReadMemoryFunc *nvram_read[] = {$/;"	v	file:
nvram_read	.\mac_nvram.c	/^static CPUReadMemoryFunc *nvram_read[] = {$/;"	v	file:
nvram_read	.\ppc.c	/^static inline uint32_t nvram_read (nvram_t *nvram, uint32_t addr)$/;"	f	file:
nvram_read_t	.\nvram.h	/^typedef uint32_t (*nvram_read_t)(void *private, uint32_t addr);$/;"	t
nvram_readb	.\ds1225y.c	/^static uint32_t nvram_readb (void *opaque, target_phys_addr_t addr)$/;"	f	file:
nvram_readb	.\m48t59.c	/^static uint32_t nvram_readb (void *opaque, target_phys_addr_t addr)$/;"	f	file:
nvram_readl	.\m48t59.c	/^static uint32_t nvram_readl (void *opaque, target_phys_addr_t addr)$/;"	f	file:
nvram_readw	.\m48t59.c	/^static uint32_t nvram_readw (void *opaque, target_phys_addr_t addr)$/;"	f	file:
nvram_size	.\firmware_abi.h	/^    uint16_t nvram_size;$/;"	m	struct:ohwcfg_v3_t
nvram_size	.\sun4m.c	/^    long vram_size, nvram_size;$/;"	m	struct:hwdef	file:
nvram_size	.\sun4m.c	/^    unsigned long vram_size, nvram_size;$/;"	m	struct:sun4d_hwdef	file:
nvram_t	.\nvram.h	/^typedef struct nvram_t {$/;"	s
nvram_t	.\nvram.h	/^} nvram_t;$/;"	t	typeref:struct:nvram_t
nvram_write	.\ds1225y.c	/^static CPUWriteMemoryFunc *nvram_write[] = {$/;"	v	file:
nvram_write	.\m48t59.c	/^static CPUWriteMemoryFunc *nvram_write[] = {$/;"	v	file:
nvram_write	.\mac_nvram.c	/^static CPUWriteMemoryFunc *nvram_write[] = {$/;"	v	file:
nvram_write	.\ppc.c	/^static inline void nvram_write (nvram_t *nvram, uint32_t addr, uint32_t val)$/;"	f	file:
nvram_write_t	.\nvram.h	/^typedef void (*nvram_write_t)(void *private, uint32_t addr, uint32_t val);$/;"	t
nvram_writeb	.\ds1225y.c	/^static void nvram_writeb (void *opaque, target_phys_addr_t addr, uint32_t value)$/;"	f	file:
nvram_writeb	.\m48t59.c	/^static void nvram_writeb (void *opaque, target_phys_addr_t addr, uint32_t value)$/;"	f	file:
nvram_writel	.\m48t59.c	/^static void nvram_writel (void *opaque, target_phys_addr_t addr, uint32_t value)$/;"	f	file:
nvram_writew	.\m48t59.c	/^static void nvram_writew (void *opaque, target_phys_addr_t addr, uint32_t value)$/;"	f	file:
nzero	.\sb16.c	/^    int nzero;$/;"	m	struct:SB16State	file:
ocm_reset	.\ppc405_uc.c	/^static void ocm_reset (void *opaque)$/;"	f	file:
ocm_update_mappings	.\ppc405_uc.c	/^static void ocm_update_mappings (ppc405_ocm_t *ocm,$/;"	f	file:
ocr	.\sd.c	/^    uint32_t ocr;$/;"	m	struct:SDState	file:
odr	.\pl061.c	/^    uint8_t odr;$/;"	m	struct:__anon56	file:
odr	.\ppc405_uc.c	/^    uint32_t odr;$/;"	m	struct:ppc405_gpio_t	file:
oe	.\ppc405_uc.c	/^    uint32_t oe;$/;"	m	struct:ppc4xx_gpt_t	file:
off	.\pflash_cfi01.c	/^    ram_addr_t off;$/;"	m	struct:pflash_t	file:
off	.\pflash_cfi02.c	/^    ram_addr_t off;$/;"	m	struct:pflash_t	file:
offset	.\nand.c	/^    int offset;$/;"	m	struct:nand_flash_s	file:
offset	.\ppc405_uc.c	/^    target_ulong offset;$/;"	m	struct:ppc405_ocm_t	file:
offset	.\smbus_eeprom.c	/^    uint8_t offset;$/;"	m	struct:SMBusEEPROMDevice	file:
offset	.\tsc210x.c	/^    int state, page, offset, irq;$/;"	m	struct:tsc210x_state_s	file:
offset	.\usb-ohci.c	/^    uint16_t offset[8];$/;"	m	struct:ohci_iso_td	file:
ohci_async_complete_packet	.\usb-ohci.c	/^static void ohci_async_complete_packet(USBPacket *packet, void *opaque)$/;"	f	file:
ohci_attach	.\usb-ohci.c	/^static void ohci_attach(USBPort *port1, USBDevice *dev)$/;"	f	file:
ohci_bus_start	.\usb-ohci.c	/^static int ohci_bus_start(OHCIState *ohci)$/;"	f	file:
ohci_bus_stop	.\usb-ohci.c	/^static void ohci_bus_stop(OHCIState *ohci)$/;"	f	file:
ohci_copy_iso_td	.\usb-ohci.c	/^static void ohci_copy_iso_td(uint32_t start_addr, uint32_t end_addr,$/;"	f	file:
ohci_copy_td	.\usb-ohci.c	/^static void ohci_copy_td(struct ohci_td *td, uint8_t *buf, int len, int write)$/;"	f	file:
ohci_ed	.\usb-ohci.c	/^struct ohci_ed {$/;"	s	file:
ohci_frame_boundary	.\usb-ohci.c	/^static void ohci_frame_boundary(void *opaque)$/;"	f	file:
ohci_get_frame_remaining	.\usb-ohci.c	/^static uint32_t ohci_get_frame_remaining(OHCIState *ohci)$/;"	f	file:
ohci_hcca	.\usb-ohci.c	/^struct ohci_hcca {$/;"	s	file:
ohci_intr_update	.\usb-ohci.c	/^static inline void ohci_intr_update(OHCIState *ohci)$/;"	f	file:
ohci_iso_td	.\usb-ohci.c	/^struct ohci_iso_td {$/;"	s	file:
ohci_mapfunc	.\usb-ohci.c	/^static void ohci_mapfunc(PCIDevice *pci_dev, int i,$/;"	f	file:
ohci_mem_read	.\usb-ohci.c	/^static uint32_t ohci_mem_read(void *ptr, target_phys_addr_t addr)$/;"	f	file:
ohci_mem_write	.\usb-ohci.c	/^static void ohci_mem_write(void *ptr, target_phys_addr_t addr, uint32_t val)$/;"	f	file:
ohci_port_power	.\usb-ohci.c	/^static void ohci_port_power(OHCIState *ohci, int i, int p)$/;"	f	file:
ohci_port_set_if_connected	.\usb-ohci.c	/^static int ohci_port_set_if_connected(OHCIState *ohci, int i, uint32_t val)$/;"	f	file:
ohci_port_set_status	.\usb-ohci.c	/^static void ohci_port_set_status(OHCIState *ohci, int portnum, uint32_t val)$/;"	f	file:
ohci_process_lists	.\usb-ohci.c	/^static void ohci_process_lists(OHCIState *ohci, int completion)$/;"	f	file:
ohci_put_ed	.\usb-ohci.c	/^static inline int ohci_put_ed(uint32_t addr, struct ohci_ed *ed)$/;"	f	file:
ohci_put_iso_td	.\usb-ohci.c	/^static inline int ohci_put_iso_td(uint32_t addr, struct ohci_iso_td *td)$/;"	f	file:
ohci_put_td	.\usb-ohci.c	/^static inline int ohci_put_td(uint32_t addr, struct ohci_td *td)$/;"	f	file:
ohci_read_ed	.\usb-ohci.c	/^static inline int ohci_read_ed(uint32_t addr, struct ohci_ed *ed)$/;"	f	file:
ohci_read_iso_td	.\usb-ohci.c	/^static inline int ohci_read_iso_td(uint32_t addr, struct ohci_iso_td *td)$/;"	f	file:
ohci_read_td	.\usb-ohci.c	/^static inline int ohci_read_td(uint32_t addr, struct ohci_td *td)$/;"	f	file:
ohci_readfn	.\usb-ohci.c	/^static CPUReadMemoryFunc *ohci_readfn[3]={$/;"	v	file:
ohci_reset	.\usb-ohci.c	/^static void ohci_reset(void *opaque)$/;"	f	file:
ohci_service_ed_list	.\usb-ohci.c	/^static int ohci_service_ed_list(OHCIState *ohci, uint32_t head, int completion)$/;"	f	file:
ohci_service_iso_td	.\usb-ohci.c	/^static int ohci_service_iso_td(OHCIState *ohci, struct ohci_ed *ed,$/;"	f	file:
ohci_service_td	.\usb-ohci.c	/^static int ohci_service_td(OHCIState *ohci, struct ohci_ed *ed)$/;"	f	file:
ohci_set_ctl	.\usb-ohci.c	/^static void ohci_set_ctl(OHCIState *ohci, uint32_t val)$/;"	f	file:
ohci_set_frame_interval	.\usb-ohci.c	/^static void ohci_set_frame_interval(OHCIState *ohci, uint16_t val)$/;"	f	file:
ohci_set_hub_status	.\usb-ohci.c	/^static void ohci_set_hub_status(OHCIState *ohci, uint32_t val)$/;"	f	file:
ohci_set_interrupt	.\usb-ohci.c	/^static inline void ohci_set_interrupt(OHCIState *ohci, uint32_t intr)$/;"	f	file:
ohci_sof	.\usb-ohci.c	/^static void ohci_sof(OHCIState *ohci)$/;"	f	file:
ohci_td	.\usb-ohci.c	/^struct ohci_td {$/;"	s	file:
ohci_type	.\usb-ohci.c	/^enum ohci_type {$/;"	g	file:
ohci_writefn	.\usb-ohci.c	/^static CPUWriteMemoryFunc *ohci_writefn[3]={$/;"	v	file:
ohwcfg_v3_t	.\firmware_abi.h	/^struct ohwcfg_v3_t {$/;"	s
ohwcfg_v3_t	.\firmware_abi.h	/^typedef struct ohwcfg_v3_t ohwcfg_v3_t;$/;"	t	typeref:struct:ohwcfg_v3_t
ol	.\ppc405_uc.c	/^    uint32_t ol;$/;"	m	struct:ppc4xx_gpt_t	file:
old_ctl	.\usb-ohci.c	/^    uint32_t old_ctl;$/;"	m	struct:__anon123	file:
old_data	.\pl061.c	/^    uint8_t old_data;$/;"	m	struct:__anon56	file:
old_level	.\sh_timer.c	/^    int old_level;$/;"	m	struct:__anon97	file:
old_status	.\mpcore.c	/^    uint32_t old_status;$/;"	m	struct:__anon35	file:
oldclock	.\pxa2xx_timer.c	/^    int32_t oldclock;$/;"	m	struct:__anon86	file:
oldclock	.\pxa2xx_timer.c	/^    int32_t oldclock;$/;"	m	struct:pxa2xx_timer4_s	file:
olevel	.\pxa2xx_gpio.c	/^    uint32_t olevel[PXA2XX_GPIO_BANKS];$/;"	m	struct:pxa2xx_gpio_info_s	file:
omap1510	.\omap.h	/^        omap1510,$/;"	e	enum:omap_mpu_state_s::omap1_mpu_model
omap15xx_dsp_mm	.\omap.c	/^} omap15xx_dsp_mm[] = {$/;"	v	typeref:struct:omap_map_s	file:
omap1_mpu_model	.\omap.h	/^    enum omap1_mpu_model {$/;"	g	struct:omap_mpu_state_s
omap310	.\omap.h	/^        omap310,$/;"	e	enum:omap_mpu_state_s::omap1_mpu_model
omap310_mpu_init	.\omap.c	/^struct omap_mpu_state_s *omap310_mpu_init(unsigned long sdram_size,$/;"	f
omap_32khz_timer_s	.\omap.c	/^struct omap_32khz_timer_s {$/;"	s	file:
omap_3_1_compatible_disable	.\omap.c	/^    int omap_3_1_compatible_disable;$/;"	m	struct:omap_dma_channel_s	file:
omap_3_1_compatible_disable	.\omap.h	/^    unsigned char omap_3_1_compatible_disable;$/;"	m	struct:omap_dma_lcd_channel_s
omap_3_1_mapping_disabled	.\omap.c	/^    int omap_3_1_mapping_disabled;$/;"	m	struct:omap_dma_s	file:
omap_badwidth_read16	.\omap.c	/^uint32_t omap_badwidth_read16(void *opaque, target_phys_addr_t addr)$/;"	f
omap_badwidth_read32	.\omap.c	/^uint32_t omap_badwidth_read32(void *opaque, target_phys_addr_t addr)$/;"	f
omap_badwidth_read8	.\omap.c	/^uint32_t omap_badwidth_read8(void *opaque, target_phys_addr_t addr)$/;"	f
omap_badwidth_write16	.\omap.c	/^void omap_badwidth_write16(void *opaque, target_phys_addr_t addr,$/;"	f
omap_badwidth_write32	.\omap.c	/^void omap_badwidth_write32(void *opaque, target_phys_addr_t addr,$/;"	f
omap_badwidth_write8	.\omap.c	/^void omap_badwidth_write8(void *opaque, target_phys_addr_t addr,$/;"	f
omap_clk	.\omap.h	/^typedef struct clk *omap_clk;$/;"	t	typeref:struct:clk
omap_clk_adduser	.\omap1_clk.c	/^void omap_clk_adduser(struct clk *clk, qemu_irq user)$/;"	f
omap_clk_canidle	.\omap1_clk.c	/^void omap_clk_canidle(struct clk *clk, int can)$/;"	f
omap_clk_get	.\omap1_clk.c	/^void omap_clk_get(struct clk *clk)$/;"	f
omap_clk_getrate	.\omap1_clk.c	/^int64_t omap_clk_getrate(omap_clk clk)$/;"	f
omap_clk_init	.\omap1_clk.c	/^void omap_clk_init(struct omap_mpu_state_s *mpu)$/;"	f
omap_clk_is_idle	.\omap1_clk.c	/^int omap_clk_is_idle(struct clk *clk)$/;"	f
omap_clk_onoff	.\omap1_clk.c	/^void omap_clk_onoff(struct clk *clk, int on)$/;"	f
omap_clk_put	.\omap1_clk.c	/^void omap_clk_put(struct clk *clk)$/;"	f
omap_clk_rate_update	.\omap1_clk.c	/^static void omap_clk_rate_update(struct clk *clk)$/;"	f	file:
omap_clk_rate_update_full	.\omap1_clk.c	/^static void omap_clk_rate_update_full(struct clk *clk, unsigned long int rate,$/;"	f	file:
omap_clk_reparent	.\omap1_clk.c	/^void omap_clk_reparent(struct clk *clk, struct clk *parent)$/;"	f
omap_clk_setrate	.\omap1_clk.c	/^void omap_clk_setrate(struct clk *clk, int divide, int multiply)$/;"	f
omap_clk_update	.\omap1_clk.c	/^static void omap_clk_update(struct clk *clk)$/;"	f	file:
omap_clkdsp_idlect1_update	.\omap.c	/^static inline void omap_clkdsp_idlect1_update(struct omap_mpu_state_s *s,$/;"	f	file:
omap_clkdsp_idlect2_update	.\omap.c	/^static inline void omap_clkdsp_idlect2_update(struct omap_mpu_state_s *s,$/;"	f	file:
omap_clkdsp_read	.\omap.c	/^static uint32_t omap_clkdsp_read(void *opaque, target_phys_addr_t addr)$/;"	f	file:
omap_clkdsp_readfn	.\omap.c	/^static CPUReadMemoryFunc *omap_clkdsp_readfn[] = {$/;"	v	file:
omap_clkdsp_write	.\omap.c	/^static void omap_clkdsp_write(void *opaque, target_phys_addr_t addr,$/;"	f	file:
omap_clkdsp_writefn	.\omap.c	/^static CPUWriteMemoryFunc *omap_clkdsp_writefn[] = {$/;"	v	file:
omap_clkm_ckctl_update	.\omap.c	/^static inline void omap_clkm_ckctl_update(struct omap_mpu_state_s *s,$/;"	f	file:
omap_clkm_ckout1_update	.\omap.c	/^static inline void omap_clkm_ckout1_update(struct omap_mpu_state_s *s,$/;"	f	file:
omap_clkm_idlect1_update	.\omap.c	/^static inline void omap_clkm_idlect1_update(struct omap_mpu_state_s *s,$/;"	f	file:
omap_clkm_idlect2_update	.\omap.c	/^static inline void omap_clkm_idlect2_update(struct omap_mpu_state_s *s,$/;"	f	file:
omap_clkm_init	.\omap.c	/^static void omap_clkm_init(target_phys_addr_t mpu_base,$/;"	f	file:
omap_clkm_read	.\omap.c	/^static uint32_t omap_clkm_read(void *opaque, target_phys_addr_t addr)$/;"	f	file:
omap_clkm_readfn	.\omap.c	/^static CPUReadMemoryFunc *omap_clkm_readfn[] = {$/;"	v	file:
omap_clkm_reset	.\omap.c	/^static void omap_clkm_reset(struct omap_mpu_state_s *s)$/;"	f	file:
omap_clkm_write	.\omap.c	/^static void omap_clkm_write(void *opaque, target_phys_addr_t addr,$/;"	f	file:
omap_clkm_writefn	.\omap.c	/^static CPUWriteMemoryFunc *omap_clkm_writefn[] = {$/;"	v	file:
omap_dma_3_1	.\omap.h	/^    omap_dma_3_1 = 0,$/;"	e	enum:omap_dma_model
omap_dma_3_1_lcd_read	.\omap.c	/^static int omap_dma_3_1_lcd_read(struct omap_dma_lcd_channel_s *s, int offset,$/;"	f	file:
omap_dma_3_1_lcd_write	.\omap.c	/^static int omap_dma_3_1_lcd_write(struct omap_dma_lcd_channel_s *s, int offset,$/;"	f	file:
omap_dma_3_2	.\omap.h	/^    omap_dma_3_2$/;"	e	enum:omap_dma_model
omap_dma_3_2_lcd_read	.\omap.c	/^static int omap_dma_3_2_lcd_read(struct omap_dma_lcd_channel_s *s, int offset,$/;"	f	file:
omap_dma_3_2_lcd_write	.\omap.c	/^static int omap_dma_3_2_lcd_write(struct omap_dma_lcd_channel_s *s, int offset,$/;"	f	file:
omap_dma_activate_channel	.\omap.c	/^static void omap_dma_activate_channel(struct omap_dma_s *s,$/;"	f	file:
omap_dma_addressing_t	.\omap.h	/^} omap_dma_addressing_t;$/;"	t	typeref:enum:__anon37
omap_dma_ch_reg_read	.\omap.c	/^static int omap_dma_ch_reg_read(struct omap_dma_s *s,$/;"	f	file:
omap_dma_ch_reg_write	.\omap.c	/^static int omap_dma_ch_reg_write(struct omap_dma_s *s,$/;"	f	file:
omap_dma_channel_end_prog	.\omap.c	/^static void omap_dma_channel_end_prog(struct omap_dma_s *s,$/;"	f	file:
omap_dma_channel_load	.\omap.c	/^static void omap_dma_channel_load(struct omap_dma_s *s,$/;"	f	file:
omap_dma_channel_run	.\omap.c	/^static void omap_dma_channel_run(struct omap_dma_s *s)$/;"	f	file:
omap_dma_channel_s	.\omap.c	/^struct omap_dma_channel_s {$/;"	s	file:
omap_dma_clk_update	.\omap.c	/^static void omap_dma_clk_update(void *opaque, int line, int on)$/;"	f	file:
omap_dma_deactivate_channel	.\omap.c	/^static void omap_dma_deactivate_channel(struct omap_dma_s *s,$/;"	f	file:
omap_dma_disable_3_1_mapping	.\omap.c	/^static void omap_dma_disable_3_1_mapping(struct omap_dma_s *s)$/;"	f	file:
omap_dma_disable_channel	.\omap.c	/^static void omap_dma_disable_channel(struct omap_dma_s *s,$/;"	f	file:
omap_dma_enable_3_1_mapping	.\omap.c	/^static void omap_dma_enable_3_1_mapping(struct omap_dma_s *s)$/;"	f	file:
omap_dma_enable_channel	.\omap.c	/^static void omap_dma_enable_channel(struct omap_dma_s *s,$/;"	f	file:
omap_dma_init	.\omap.c	/^struct omap_dma_s *omap_dma_init(target_phys_addr_t base, qemu_irq *irqs,$/;"	f
omap_dma_interrupts_update	.\omap.c	/^static void omap_dma_interrupts_update(struct omap_dma_s *s)$/;"	f	file:
omap_dma_irq_map	.\omap.c	/^static const struct dma_irq_map omap_dma_irq_map[] = {$/;"	v	typeref:struct:dma_irq_map	file:
omap_dma_lcd_channel_s	.\omap.h	/^struct omap_dma_lcd_channel_s {$/;"	s
omap_dma_model	.\omap.h	/^enum omap_dma_model {$/;"	g
omap_dma_port	.\omap.h	/^enum omap_dma_port {$/;"	g
omap_dma_port_if_s	.\omap.h	/^    struct omap_dma_port_if_s {$/;"	s	struct:omap_mpu_state_s
omap_dma_port_last	.\omap.h	/^    omap_dma_port_last,$/;"	e	enum:omap_dma_port
omap_dma_process_request	.\omap.c	/^static void omap_dma_process_request(struct omap_dma_s *s, int request)$/;"	f	file:
omap_dma_read	.\omap.c	/^static uint32_t omap_dma_read(void *opaque, target_phys_addr_t addr)$/;"	f	file:
omap_dma_readfn	.\omap.c	/^static CPUReadMemoryFunc *omap_dma_readfn[] = {$/;"	v	file:
omap_dma_reg_set_s	.\omap.c	/^    struct omap_dma_reg_set_s {$/;"	s	struct:omap_dma_channel_s	file:
omap_dma_request	.\omap.c	/^static void omap_dma_request(void *opaque, int drq, int req)$/;"	f	file:
omap_dma_reset	.\omap.c	/^static void omap_dma_reset(struct omap_dma_s *s)$/;"	f	file:
omap_dma_s	.\omap.c	/^struct omap_dma_s {$/;"	s	file:
omap_dma_sys_read	.\omap.c	/^static int omap_dma_sys_read(struct omap_dma_s *s, int offset,$/;"	f	file:
omap_dma_sys_write	.\omap.c	/^static int omap_dma_sys_write(struct omap_dma_s *s, int offset, uint16_t value)$/;"	f	file:
omap_dma_write	.\omap.c	/^static void omap_dma_write(void *opaque, target_phys_addr_t addr,$/;"	f	file:
omap_dma_writefn	.\omap.c	/^static CPUWriteMemoryFunc *omap_dma_writefn[] = {$/;"	v	file:
omap_dpll_init	.\omap.c	/^static void omap_dpll_init(struct dpll_ctl_s *s, target_phys_addr_t base,$/;"	f	file:
omap_dpll_read	.\omap.c	/^static uint32_t omap_dpll_read(void *opaque, target_phys_addr_t addr)$/;"	f	file:
omap_dpll_readfn	.\omap.c	/^static CPUReadMemoryFunc *omap_dpll_readfn[] = {$/;"	v	file:
omap_dpll_reset	.\omap.c	/^static void omap_dpll_reset(struct dpll_ctl_s *s)$/;"	f	file:
omap_dpll_write	.\omap.c	/^static void omap_dpll_write(void *opaque, target_phys_addr_t addr,$/;"	f	file:
omap_dpll_writefn	.\omap.c	/^static CPUWriteMemoryFunc *omap_dpll_writefn[] = {$/;"	v	file:
omap_findclk	.\omap1_clk.c	/^struct clk *omap_findclk(struct omap_mpu_state_s *mpu, const char *name)$/;"	f
omap_gpio_in_get	.\omap.c	/^qemu_irq *omap_gpio_in_get(struct omap_gpio_s *s)$/;"	f
omap_gpio_init	.\omap.c	/^struct omap_gpio_s *omap_gpio_init(target_phys_addr_t base,$/;"	f
omap_gpio_out_set	.\omap.c	/^void omap_gpio_out_set(struct omap_gpio_s *s, int line, qemu_irq handler)$/;"	f
omap_gpio_read	.\omap.c	/^static uint32_t omap_gpio_read(void *opaque, target_phys_addr_t addr)$/;"	f	file:
omap_gpio_readfn	.\omap.c	/^static CPUReadMemoryFunc *omap_gpio_readfn[] = {$/;"	v	file:
omap_gpio_reset	.\omap.c	/^static void omap_gpio_reset(struct omap_gpio_s *s)$/;"	f	file:
omap_gpio_s	.\omap.c	/^struct omap_gpio_s {$/;"	s	file:
omap_gpio_set	.\omap.c	/^static void omap_gpio_set(void *opaque, int line, int level)$/;"	f	file:
omap_gpio_write	.\omap.c	/^static void omap_gpio_write(void *opaque, target_phys_addr_t addr,$/;"	f	file:
omap_gpio_writefn	.\omap.c	/^static CPUWriteMemoryFunc *omap_gpio_writefn[] = {$/;"	v	file:
omap_i2c_bus	.\omap_i2c.c	/^i2c_bus *omap_i2c_bus(struct omap_i2c_s *s)$/;"	f
omap_i2c_event	.\omap_i2c.c	/^static void omap_i2c_event(i2c_slave *i2c, enum i2c_event event)$/;"	f	file:
omap_i2c_fifo_run	.\omap_i2c.c	/^static void omap_i2c_fifo_run(struct omap_i2c_s *s)$/;"	f	file:
omap_i2c_init	.\omap_i2c.c	/^struct omap_i2c_s *omap_i2c_init(target_phys_addr_t base,$/;"	f
omap_i2c_interrupts_update	.\omap_i2c.c	/^static void omap_i2c_interrupts_update(struct omap_i2c_s *s)$/;"	f	file:
omap_i2c_read	.\omap_i2c.c	/^static uint32_t omap_i2c_read(void *opaque, target_phys_addr_t addr)$/;"	f	file:
omap_i2c_readfn	.\omap_i2c.c	/^static CPUReadMemoryFunc *omap_i2c_readfn[] = {$/;"	v	file:
omap_i2c_reset	.\omap_i2c.c	/^void omap_i2c_reset(struct omap_i2c_s *s)$/;"	f
omap_i2c_rx	.\omap_i2c.c	/^static int omap_i2c_rx(i2c_slave *i2c)$/;"	f	file:
omap_i2c_s	.\omap_i2c.c	/^struct omap_i2c_s {$/;"	s	file:
omap_i2c_tx	.\omap_i2c.c	/^static int omap_i2c_tx(i2c_slave *i2c, uint8_t data)$/;"	f	file:
omap_i2c_write	.\omap_i2c.c	/^static void omap_i2c_write(void *opaque, target_phys_addr_t addr,$/;"	f	file:
omap_i2c_writefn	.\omap_i2c.c	/^static CPUWriteMemoryFunc *omap_i2c_writefn[] = {$/;"	v	file:
omap_id_init	.\omap.c	/^static void omap_id_init(struct omap_mpu_state_s *mpu)$/;"	f	file:
omap_id_read	.\omap.c	/^static uint32_t omap_id_read(void *opaque, target_phys_addr_t addr)$/;"	f	file:
omap_id_readfn	.\omap.c	/^static CPUReadMemoryFunc *omap_id_readfn[] = {$/;"	v	file:
omap_id_write	.\omap.c	/^static void omap_id_write(void *opaque, target_phys_addr_t addr,$/;"	f	file:
omap_id_writefn	.\omap.c	/^static CPUWriteMemoryFunc *omap_id_writefn[] = {$/;"	v	file:
omap_inth_init	.\omap.c	/^struct omap_intr_handler_s *omap_inth_init(target_phys_addr_t base,$/;"	f
omap_inth_read	.\omap.c	/^static uint32_t omap_inth_read(void *opaque, target_phys_addr_t addr)$/;"	f	file:
omap_inth_readfn	.\omap.c	/^static CPUReadMemoryFunc *omap_inth_readfn[] = {$/;"	v	file:
omap_inth_reset	.\omap.c	/^void omap_inth_reset(struct omap_intr_handler_s *s)$/;"	f
omap_inth_sir_update	.\omap.c	/^static void omap_inth_sir_update(struct omap_intr_handler_s *s, int is_fiq)$/;"	f	file:
omap_inth_update	.\omap.c	/^static inline void omap_inth_update(struct omap_intr_handler_s *s, int is_fiq)$/;"	f	file:
omap_inth_write	.\omap.c	/^static void omap_inth_write(void *opaque, target_phys_addr_t addr,$/;"	f	file:
omap_inth_writefn	.\omap.c	/^static CPUWriteMemoryFunc *omap_inth_writefn[] = {$/;"	v	file:
omap_intr_handler_bank_s	.\omap.c	/^struct omap_intr_handler_bank_s {$/;"	s	file:
omap_intr_handler_s	.\omap.c	/^struct omap_intr_handler_s {$/;"	s	file:
omap_invalidate_display	.\omap_lcdc.c	/^static void omap_invalidate_display(void *opaque) {$/;"	f	file:
omap_lcd_interrupts	.\omap_lcdc.c	/^static void omap_lcd_interrupts(struct omap_lcd_panel_s *s)$/;"	f	file:
omap_lcd_panel_s	.\omap_lcdc.c	/^struct omap_lcd_panel_s {$/;"	s	file:
omap_lcd_update	.\omap_lcdc.c	/^static void omap_lcd_update(struct omap_lcd_panel_s *s) {$/;"	f	file:
omap_lcdc_init	.\omap_lcdc.c	/^struct omap_lcd_panel_s *omap_lcdc_init(target_phys_addr_t base, qemu_irq irq,$/;"	f
omap_lcdc_read	.\omap_lcdc.c	/^static uint32_t omap_lcdc_read(void *opaque, target_phys_addr_t addr)$/;"	f	file:
omap_lcdc_readfn	.\omap_lcdc.c	/^static CPUReadMemoryFunc *omap_lcdc_readfn[] = {$/;"	v	file:
omap_lcdc_reset	.\omap_lcdc.c	/^void omap_lcdc_reset(struct omap_lcd_panel_s *s)$/;"	f
omap_lcdc_write	.\omap_lcdc.c	/^static void omap_lcdc_write(void *opaque, target_phys_addr_t addr,$/;"	f	file:
omap_lcdc_writefn	.\omap_lcdc.c	/^static CPUWriteMemoryFunc *omap_lcdc_writefn[] = {$/;"	v	file:
omap_lpg_clk_update	.\omap.c	/^static void omap_lpg_clk_update(void *opaque, int line, int on)$/;"	f	file:
omap_lpg_init	.\omap.c	/^struct omap_lpg_s *omap_lpg_init(target_phys_addr_t base, omap_clk clk)$/;"	f
omap_lpg_read	.\omap.c	/^static uint32_t omap_lpg_read(void *opaque, target_phys_addr_t addr)$/;"	f	file:
omap_lpg_readfn	.\omap.c	/^static CPUReadMemoryFunc *omap_lpg_readfn[] = {$/;"	v	file:
omap_lpg_reset	.\omap.c	/^static void omap_lpg_reset(struct omap_lpg_s *s)$/;"	f	file:
omap_lpg_s	.\omap.c	/^struct omap_lpg_s {$/;"	s	file:
omap_lpg_tick	.\omap.c	/^static void omap_lpg_tick(void *opaque)$/;"	f	file:
omap_lpg_update	.\omap.c	/^static void omap_lpg_update(struct omap_lpg_s *s)$/;"	f	file:
omap_lpg_write	.\omap.c	/^static void omap_lpg_write(void *opaque, target_phys_addr_t addr,$/;"	f	file:
omap_lpg_writefn	.\omap.c	/^static CPUWriteMemoryFunc *omap_lpg_writefn[] = {$/;"	v	file:
omap_map_s	.\omap.c	/^static const struct omap_map_s {$/;"	s	file:
omap_mcbsp_i2s_attach	.\omap.c	/^void omap_mcbsp_i2s_attach(struct omap_mcbsp_s *s, struct i2s_codec_s *slave)$/;"	f
omap_mcbsp_i2s_start	.\omap.c	/^static void omap_mcbsp_i2s_start(void *opaque, int line, int level)$/;"	f	file:
omap_mcbsp_i2s_swallow	.\omap.c	/^static void omap_mcbsp_i2s_swallow(void *opaque, int line, int level)$/;"	f	file:
omap_mcbsp_init	.\omap.c	/^struct omap_mcbsp_s *omap_mcbsp_init(target_phys_addr_t base,$/;"	f
omap_mcbsp_intr_update	.\omap.c	/^static void omap_mcbsp_intr_update(struct omap_mcbsp_s *s)$/;"	f	file:
omap_mcbsp_read	.\omap.c	/^static uint32_t omap_mcbsp_read(void *opaque, target_phys_addr_t addr)$/;"	f	file:
omap_mcbsp_readfn	.\omap.c	/^static CPUReadMemoryFunc *omap_mcbsp_readfn[] = {$/;"	v	file:
omap_mcbsp_req_update	.\omap.c	/^static void omap_mcbsp_req_update(struct omap_mcbsp_s *s)$/;"	f	file:
omap_mcbsp_reset	.\omap.c	/^static void omap_mcbsp_reset(struct omap_mcbsp_s *s)$/;"	f	file:
omap_mcbsp_rx_done	.\omap.c	/^static void omap_mcbsp_rx_done(struct omap_mcbsp_s *s)$/;"	f	file:
omap_mcbsp_rx_newdata	.\omap.c	/^static void omap_mcbsp_rx_newdata(struct omap_mcbsp_s *s)$/;"	f	file:
omap_mcbsp_rx_start	.\omap.c	/^static void omap_mcbsp_rx_start(struct omap_mcbsp_s *s)$/;"	f	file:
omap_mcbsp_rx_stop	.\omap.c	/^static void omap_mcbsp_rx_stop(struct omap_mcbsp_s *s)$/;"	f	file:
omap_mcbsp_s	.\omap.c	/^struct omap_mcbsp_s {$/;"	s	file:
omap_mcbsp_sink_tick	.\omap.c	/^static void omap_mcbsp_sink_tick(void *opaque)$/;"	f	file:
omap_mcbsp_source_tick	.\omap.c	/^static void omap_mcbsp_source_tick(void *opaque)$/;"	f	file:
omap_mcbsp_tx_done	.\omap.c	/^static void omap_mcbsp_tx_done(struct omap_mcbsp_s *s)$/;"	f	file:
omap_mcbsp_tx_newdata	.\omap.c	/^static void omap_mcbsp_tx_newdata(struct omap_mcbsp_s *s)$/;"	f	file:
omap_mcbsp_tx_start	.\omap.c	/^static void omap_mcbsp_tx_start(struct omap_mcbsp_s *s)$/;"	f	file:
omap_mcbsp_tx_stop	.\omap.c	/^static void omap_mcbsp_tx_stop(struct omap_mcbsp_s *s)$/;"	f	file:
omap_mcbsp_writefn	.\omap.c	/^static CPUWriteMemoryFunc *omap_mcbsp_writefn[] = {$/;"	v	file:
omap_mcbsp_writeh	.\omap.c	/^static void omap_mcbsp_writeh(void *opaque, target_phys_addr_t addr,$/;"	f	file:
omap_mcbsp_writew	.\omap.c	/^static void omap_mcbsp_writew(void *opaque, target_phys_addr_t addr,$/;"	f	file:
omap_mmc_command	.\omap_mmc.c	/^static void omap_mmc_command(struct omap_mmc_s *host, int cmd, int dir,$/;"	f	file:
omap_mmc_fifolevel_update	.\omap_mmc.c	/^static void omap_mmc_fifolevel_update(struct omap_mmc_s *host)$/;"	f	file:
omap_mmc_handlers	.\omap_mmc.c	/^void omap_mmc_handlers(struct omap_mmc_s *s, qemu_irq ro, qemu_irq cover)$/;"	f
omap_mmc_init	.\omap_mmc.c	/^struct omap_mmc_s *omap_mmc_init(target_phys_addr_t base,$/;"	f
omap_mmc_interrupts_update	.\omap_mmc.c	/^static void omap_mmc_interrupts_update(struct omap_mmc_s *s)$/;"	f	file:
omap_mmc_read	.\omap_mmc.c	/^static uint32_t omap_mmc_read(void *opaque, target_phys_addr_t offset)$/;"	f	file:
omap_mmc_readfn	.\omap_mmc.c	/^static CPUReadMemoryFunc *omap_mmc_readfn[] = {$/;"	v	file:
omap_mmc_reset	.\omap_mmc.c	/^void omap_mmc_reset(struct omap_mmc_s *host)$/;"	f
omap_mmc_s	.\omap_mmc.c	/^struct omap_mmc_s {$/;"	s	file:
omap_mmc_transfer	.\omap_mmc.c	/^static void omap_mmc_transfer(struct omap_mmc_s *host)$/;"	f	file:
omap_mmc_update	.\omap_mmc.c	/^static void omap_mmc_update(void *opaque)$/;"	f	file:
omap_mmc_write	.\omap_mmc.c	/^static void omap_mmc_write(void *opaque, target_phys_addr_t offset,$/;"	f	file:
omap_mmc_writefn	.\omap_mmc.c	/^static CPUWriteMemoryFunc *omap_mmc_writefn[] = {$/;"	v	file:
omap_mpu_reset	.\omap.c	/^static void omap_mpu_reset(void *opaque)$/;"	f	file:
omap_mpu_state_s	.\omap.h	/^struct omap_mpu_state_s {$/;"	s
omap_mpu_timer_init	.\omap.c	/^struct omap_mpu_timer_s *omap_mpu_timer_init(target_phys_addr_t base,$/;"	f
omap_mpu_timer_read	.\omap.c	/^static uint32_t omap_mpu_timer_read(void *opaque, target_phys_addr_t addr)$/;"	f	file:
omap_mpu_timer_readfn	.\omap.c	/^static CPUReadMemoryFunc *omap_mpu_timer_readfn[] = {$/;"	v	file:
omap_mpu_timer_reset	.\omap.c	/^static void omap_mpu_timer_reset(struct omap_mpu_timer_s *s)$/;"	f	file:
omap_mpu_timer_s	.\omap.c	/^struct omap_mpu_timer_s {$/;"	s	file:
omap_mpu_timer_write	.\omap.c	/^static void omap_mpu_timer_write(void *opaque, target_phys_addr_t addr,$/;"	f	file:
omap_mpu_timer_writefn	.\omap.c	/^static CPUWriteMemoryFunc *omap_mpu_timer_writefn[] = {$/;"	v	file:
omap_mpu_wakeup	.\omap.c	/^static void omap_mpu_wakeup(void *opaque, int irq, int req)$/;"	f	file:
omap_mpui_init	.\omap.c	/^static void omap_mpui_init(target_phys_addr_t base,$/;"	f	file:
omap_mpui_io_read	.\omap.c	/^static uint32_t omap_mpui_io_read(void *opaque, target_phys_addr_t addr)$/;"	f	file:
omap_mpui_io_readfn	.\omap.c	/^static CPUReadMemoryFunc *omap_mpui_io_readfn[] = {$/;"	v	file:
omap_mpui_io_writefn	.\omap.c	/^static CPUWriteMemoryFunc *omap_mpui_io_writefn[] = {$/;"	v	file:
omap_mpui_read	.\omap.c	/^static uint32_t omap_mpui_read(void *opaque, target_phys_addr_t addr)$/;"	f	file:
omap_mpui_readfn	.\omap.c	/^static CPUReadMemoryFunc *omap_mpui_readfn[] = {$/;"	v	file:
omap_mpui_reset	.\omap.c	/^static void omap_mpui_reset(struct omap_mpu_state_s *s)$/;"	f	file:
omap_mpui_write	.\omap.c	/^static void omap_mpui_write(void *opaque, target_phys_addr_t addr,$/;"	f	file:
omap_mpui_writefn	.\omap.c	/^static CPUWriteMemoryFunc *omap_mpui_writefn[] = {$/;"	v	file:
omap_mpuio_in_get	.\omap.c	/^qemu_irq *omap_mpuio_in_get(struct omap_mpuio_s *s)$/;"	f
omap_mpuio_init	.\omap.c	/^struct omap_mpuio_s *omap_mpuio_init(target_phys_addr_t base,$/;"	f
omap_mpuio_kbd_update	.\omap.c	/^static void omap_mpuio_kbd_update(struct omap_mpuio_s *s)$/;"	f	file:
omap_mpuio_key	.\omap.c	/^void omap_mpuio_key(struct omap_mpuio_s *s, int row, int col, int down)$/;"	f
omap_mpuio_onoff	.\omap.c	/^static void omap_mpuio_onoff(void *opaque, int line, int on)$/;"	f	file:
omap_mpuio_out_set	.\omap.c	/^void omap_mpuio_out_set(struct omap_mpuio_s *s, int line, qemu_irq handler)$/;"	f
omap_mpuio_read	.\omap.c	/^static uint32_t omap_mpuio_read(void *opaque, target_phys_addr_t addr)$/;"	f	file:
omap_mpuio_readfn	.\omap.c	/^static CPUReadMemoryFunc *omap_mpuio_readfn[] = {$/;"	v	file:
omap_mpuio_reset	.\omap.c	/^static void omap_mpuio_reset(struct omap_mpuio_s *s)$/;"	f	file:
omap_mpuio_s	.\omap.c	/^struct omap_mpuio_s {$/;"	s	file:
omap_mpuio_set	.\omap.c	/^static void omap_mpuio_set(void *opaque, int line, int level)$/;"	f	file:
omap_mpuio_write	.\omap.c	/^static void omap_mpuio_write(void *opaque, target_phys_addr_t addr,$/;"	f	file:
omap_mpuio_writefn	.\omap.c	/^static CPUWriteMemoryFunc *omap_mpuio_writefn[] = {$/;"	v	file:
omap_os_timer_init	.\omap.c	/^struct omap_32khz_timer_s *omap_os_timer_init(target_phys_addr_t base,$/;"	f
omap_os_timer_read	.\omap.c	/^static uint32_t omap_os_timer_read(void *opaque, target_phys_addr_t addr)$/;"	f	file:
omap_os_timer_readfn	.\omap.c	/^static CPUReadMemoryFunc *omap_os_timer_readfn[] = {$/;"	v	file:
omap_os_timer_reset	.\omap.c	/^static void omap_os_timer_reset(struct omap_32khz_timer_s *s)$/;"	f	file:
omap_os_timer_write	.\omap.c	/^static void omap_os_timer_write(void *opaque, target_phys_addr_t addr,$/;"	f	file:
omap_os_timer_writefn	.\omap.c	/^static CPUWriteMemoryFunc *omap_os_timer_writefn[] = {$/;"	v	file:
omap_pin_cfg_init	.\omap.c	/^static void omap_pin_cfg_init(target_phys_addr_t base,$/;"	f	file:
omap_pin_cfg_read	.\omap.c	/^static uint32_t omap_pin_cfg_read(void *opaque, target_phys_addr_t addr)$/;"	f	file:
omap_pin_cfg_readfn	.\omap.c	/^static CPUReadMemoryFunc *omap_pin_cfg_readfn[] = {$/;"	v	file:
omap_pin_cfg_reset	.\omap.c	/^static void omap_pin_cfg_reset(struct omap_mpu_state_s *mpu)$/;"	f	file:
omap_pin_cfg_write	.\omap.c	/^static void omap_pin_cfg_write(void *opaque, target_phys_addr_t addr,$/;"	f	file:
omap_pin_cfg_writefn	.\omap.c	/^static CPUWriteMemoryFunc *omap_pin_cfg_writefn[] = {$/;"	v	file:
omap_pin_funcmux0_update	.\omap.c	/^static inline void omap_pin_funcmux0_update(struct omap_mpu_state_s *s,$/;"	f	file:
omap_pin_funcmux1_update	.\omap.c	/^static inline void omap_pin_funcmux1_update(struct omap_mpu_state_s *s,$/;"	f	file:
omap_pin_modconf1_update	.\omap.c	/^static inline void omap_pin_modconf1_update(struct omap_mpu_state_s *s,$/;"	f	file:
omap_pwl_clk_update	.\omap.c	/^static void omap_pwl_clk_update(void *opaque, int line, int on)$/;"	f	file:
omap_pwl_init	.\omap.c	/^static void omap_pwl_init(target_phys_addr_t base, struct omap_mpu_state_s *s,$/;"	f	file:
omap_pwl_read	.\omap.c	/^static uint32_t omap_pwl_read(void *opaque, target_phys_addr_t addr)$/;"	f	file:
omap_pwl_readfn	.\omap.c	/^static CPUReadMemoryFunc *omap_pwl_readfn[] = {$/;"	v	file:
omap_pwl_reset	.\omap.c	/^static void omap_pwl_reset(struct omap_mpu_state_s *s)$/;"	f	file:
omap_pwl_update	.\omap.c	/^static void omap_pwl_update(struct omap_mpu_state_s *s)$/;"	f	file:
omap_pwl_write	.\omap.c	/^static void omap_pwl_write(void *opaque, target_phys_addr_t addr,$/;"	f	file:
omap_pwl_writefn	.\omap.c	/^static CPUWriteMemoryFunc *omap_pwl_writefn[] = {$/;"	v	file:
omap_pwt_init	.\omap.c	/^static void omap_pwt_init(target_phys_addr_t base, struct omap_mpu_state_s *s,$/;"	f	file:
omap_pwt_read	.\omap.c	/^static uint32_t omap_pwt_read(void *opaque, target_phys_addr_t addr)$/;"	f	file:
omap_pwt_readfn	.\omap.c	/^static CPUReadMemoryFunc *omap_pwt_readfn[] = {$/;"	v	file:
omap_pwt_reset	.\omap.c	/^static void omap_pwt_reset(struct omap_mpu_state_s *s)$/;"	f	file:
omap_pwt_write	.\omap.c	/^static void omap_pwt_write(void *opaque, target_phys_addr_t addr,$/;"	f	file:
omap_pwt_writefn	.\omap.c	/^static CPUWriteMemoryFunc *omap_pwt_writefn[] = {$/;"	v	file:
omap_rtc_alarm_update	.\omap.c	/^static void omap_rtc_alarm_update(struct omap_rtc_s *s)$/;"	f	file:
omap_rtc_bcd	.\omap.c	/^static inline uint8_t omap_rtc_bcd(int num)$/;"	f	file:
omap_rtc_bin	.\omap.c	/^static inline int omap_rtc_bin(uint8_t num)$/;"	f	file:
omap_rtc_init	.\omap.c	/^struct omap_rtc_s *omap_rtc_init(target_phys_addr_t base,$/;"	f
omap_rtc_interrupts_update	.\omap.c	/^static void omap_rtc_interrupts_update(struct omap_rtc_s *s)$/;"	f	file:
omap_rtc_read	.\omap.c	/^static uint32_t omap_rtc_read(void *opaque, target_phys_addr_t addr)$/;"	f	file:
omap_rtc_readfn	.\omap.c	/^static CPUReadMemoryFunc *omap_rtc_readfn[] = {$/;"	v	file:
omap_rtc_reset	.\omap.c	/^static void omap_rtc_reset(struct omap_rtc_s *s)$/;"	f	file:
omap_rtc_s	.\omap.c	/^struct omap_rtc_s {$/;"	s	file:
omap_rtc_tick	.\omap.c	/^static void omap_rtc_tick(void *opaque)$/;"	f	file:
omap_rtc_write	.\omap.c	/^static void omap_rtc_write(void *opaque, target_phys_addr_t addr,$/;"	f	file:
omap_rtc_writefn	.\omap.c	/^static CPUWriteMemoryFunc *omap_rtc_writefn[] = {$/;"	v	file:
omap_screen_dump	.\omap_lcdc.c	/^static void omap_screen_dump(void *opaque, const char *filename) {$/;"	f	file:
omap_set_intr	.\omap.c	/^static void omap_set_intr(void *opaque, int irq, int req)$/;"	f	file:
omap_setup_dsp_mapping	.\omap.c	/^static void omap_setup_dsp_mapping(const struct omap_map_s *map)$/;"	f	file:
omap_setup_mpui_io	.\omap.c	/^static void omap_setup_mpui_io(struct omap_mpu_state_s *mpu)$/;"	f	file:
omap_tcmi_init	.\omap.c	/^static void omap_tcmi_init(target_phys_addr_t base,$/;"	f	file:
omap_tcmi_read	.\omap.c	/^static uint32_t omap_tcmi_read(void *opaque, target_phys_addr_t addr)$/;"	f	file:
omap_tcmi_readfn	.\omap.c	/^static CPUReadMemoryFunc *omap_tcmi_readfn[] = {$/;"	v	file:
omap_tcmi_reset	.\omap.c	/^static void omap_tcmi_reset(struct omap_mpu_state_s *mpu)$/;"	f	file:
omap_tcmi_write	.\omap.c	/^static void omap_tcmi_write(void *opaque, target_phys_addr_t addr,$/;"	f	file:
omap_tcmi_writefn	.\omap.c	/^static CPUWriteMemoryFunc *omap_tcmi_writefn[] = {$/;"	v	file:
omap_timer_clk_setup	.\omap.c	/^static void omap_timer_clk_setup(struct omap_mpu_timer_s *timer)$/;"	f	file:
omap_timer_clk_update	.\omap.c	/^static void omap_timer_clk_update(void *opaque, int line, int on)$/;"	f	file:
omap_timer_read	.\omap.c	/^static inline uint32_t omap_timer_read(struct omap_mpu_timer_s *timer)$/;"	f	file:
omap_timer_sync	.\omap.c	/^static inline void omap_timer_sync(struct omap_mpu_timer_s *timer)$/;"	f	file:
omap_timer_tick	.\omap.c	/^static void omap_timer_tick(void *opaque)$/;"	f	file:
omap_timer_update	.\omap.c	/^static inline void omap_timer_update(struct omap_mpu_timer_s *timer)$/;"	f	file:
omap_tipb_bridge_init	.\omap.c	/^struct omap_tipb_bridge_s *omap_tipb_bridge_init(target_phys_addr_t base,$/;"	f
omap_tipb_bridge_read	.\omap.c	/^static uint32_t omap_tipb_bridge_read(void *opaque, target_phys_addr_t addr)$/;"	f	file:
omap_tipb_bridge_readfn	.\omap.c	/^static CPUReadMemoryFunc *omap_tipb_bridge_readfn[] = {$/;"	v	file:
omap_tipb_bridge_reset	.\omap.c	/^static void omap_tipb_bridge_reset(struct omap_tipb_bridge_s *s)$/;"	f	file:
omap_tipb_bridge_s	.\omap.c	/^struct omap_tipb_bridge_s {$/;"	s	file:
omap_tipb_bridge_write	.\omap.c	/^static void omap_tipb_bridge_write(void *opaque, target_phys_addr_t addr,$/;"	f	file:
omap_tipb_bridge_writefn	.\omap.c	/^static CPUWriteMemoryFunc *omap_tipb_bridge_writefn[] = {$/;"	v	file:
omap_uart_init	.\omap.c	/^struct omap_uart_s *omap_uart_init(target_phys_addr_t base,$/;"	f
omap_uart_reset	.\omap.c	/^static void omap_uart_reset(struct omap_uart_s *s)$/;"	f	file:
omap_uart_s	.\omap.c	/^struct omap_uart_s {$/;"	s	file:
omap_ulpd_clk_update	.\omap.c	/^static inline void omap_ulpd_clk_update(struct omap_mpu_state_s *s,$/;"	f	file:
omap_ulpd_pm_init	.\omap.c	/^static void omap_ulpd_pm_init(target_phys_addr_t base,$/;"	f	file:
omap_ulpd_pm_read	.\omap.c	/^static uint32_t omap_ulpd_pm_read(void *opaque, target_phys_addr_t addr)$/;"	f	file:
omap_ulpd_pm_readfn	.\omap.c	/^static CPUReadMemoryFunc *omap_ulpd_pm_readfn[] = {$/;"	v	file:
omap_ulpd_pm_reset	.\omap.c	/^static void omap_ulpd_pm_reset(struct omap_mpu_state_s *mpu)$/;"	f	file:
omap_ulpd_pm_write	.\omap.c	/^static void omap_ulpd_pm_write(void *opaque, target_phys_addr_t addr,$/;"	f	file:
omap_ulpd_pm_writefn	.\omap.c	/^static CPUWriteMemoryFunc *omap_ulpd_pm_writefn[] = {$/;"	v	file:
omap_ulpd_req_update	.\omap.c	/^static inline void omap_ulpd_req_update(struct omap_mpu_state_s *s,$/;"	f	file:
omap_update_display	.\omap_lcdc.c	/^static void omap_update_display(void *opaque)$/;"	f	file:
omap_uwire_attach	.\omap.c	/^void omap_uwire_attach(struct omap_uwire_s *s,$/;"	f
omap_uwire_init	.\omap.c	/^struct omap_uwire_s *omap_uwire_init(target_phys_addr_t base,$/;"	f
omap_uwire_read	.\omap.c	/^static uint32_t omap_uwire_read(void *opaque, target_phys_addr_t addr)$/;"	f	file:
omap_uwire_readfn	.\omap.c	/^static CPUReadMemoryFunc *omap_uwire_readfn[] = {$/;"	v	file:
omap_uwire_reset	.\omap.c	/^static void omap_uwire_reset(struct omap_uwire_s *s)$/;"	f	file:
omap_uwire_s	.\omap.c	/^struct omap_uwire_s {$/;"	s	file:
omap_uwire_transfer_start	.\omap.c	/^static void omap_uwire_transfer_start(struct omap_uwire_s *s)$/;"	f	file:
omap_uwire_write	.\omap.c	/^static void omap_uwire_write(void *opaque, target_phys_addr_t addr,$/;"	f	file:
omap_uwire_writefn	.\omap.c	/^static CPUWriteMemoryFunc *omap_uwire_writefn[] = {$/;"	v	file:
omap_validate_emiff_addr	.\omap.c	/^static int omap_validate_emiff_addr(struct omap_mpu_state_s *s,$/;"	f	file:
omap_validate_emifs_addr	.\omap.c	/^static int omap_validate_emifs_addr(struct omap_mpu_state_s *s,$/;"	f	file:
omap_validate_imif_addr	.\omap.c	/^static int omap_validate_imif_addr(struct omap_mpu_state_s *s,$/;"	f	file:
omap_validate_local_addr	.\omap.c	/^static int omap_validate_local_addr(struct omap_mpu_state_s *s,$/;"	f	file:
omap_validate_tipb_addr	.\omap.c	/^static int omap_validate_tipb_addr(struct omap_mpu_state_s *s,$/;"	f	file:
omap_validate_tipb_mpui_addr	.\omap.c	/^static int omap_validate_tipb_mpui_addr(struct omap_mpu_state_s *s,$/;"	f	file:
omap_watchdog_timer_s	.\omap.c	/^struct omap_watchdog_timer_s {$/;"	s	file:
omap_wd_timer_init	.\omap.c	/^struct omap_watchdog_timer_s *omap_wd_timer_init(target_phys_addr_t base,$/;"	f
omap_wd_timer_read	.\omap.c	/^static uint32_t omap_wd_timer_read(void *opaque, target_phys_addr_t addr)$/;"	f	file:
omap_wd_timer_readfn	.\omap.c	/^static CPUReadMemoryFunc *omap_wd_timer_readfn[] = {$/;"	v	file:
omap_wd_timer_reset	.\omap.c	/^static void omap_wd_timer_reset(struct omap_watchdog_timer_s *s)$/;"	f	file:
omap_wd_timer_write	.\omap.c	/^static void omap_wd_timer_write(void *opaque, target_phys_addr_t addr,$/;"	f	file:
omap_wd_timer_writefn	.\omap.c	/^static CPUWriteMemoryFunc *omap_wd_timer_writefn[] = {$/;"	v	file:
on	.\omap.c	/^    int64_t on;$/;"	m	struct:omap_lpg_s	file:
on	.\vmware_vga.c	/^        int on;$/;"	m	struct:vmsvga_state_s::__anon127	file:
onchip_clks	.\omap1_clk.c	/^static struct clk *onchip_clks[] = {$/;"	v	typeref:struct:clk	file:
ones_complement_sum	.\rtl8139.c	/^static uint16_t ones_complement_sum(uint8_t *data, size_t len)$/;"	f	file:
oob_shift	.\nand.c	/^    int page_shift, oob_shift, erase_shift, addr_shift;$/;"	m	struct:nand_flash_s	file:
op1_out	.\fmopl.h	/^	INT32 op1_out[2];	\/* slot1 output for selfeedback        *\/$/;"	m	struct:fm_opl_channel
opaque	.\dma.c	/^    void *opaque;$/;"	m	struct:dma_regs	file:
opaque	.\irq.c	/^    void *opaque;$/;"	m	struct:IRQState	file:
opaque	.\nvram.h	/^    void *opaque;$/;"	m	struct:nvram_t
opaque	.\omap.h	/^    void *opaque;$/;"	m	struct:i2s_codec_s
opaque	.\omap.h	/^    void *opaque;$/;"	m	struct:io_fn
opaque	.\omap.h	/^    void *opaque;$/;"	m	struct:uwire_slave_s
opaque	.\pl022.c	/^    void *opaque;$/;"	m	struct:__anon53	file:
opaque	.\ppc.c	/^    void *opaque;$/;"	m	struct:ppc_dcrn_t	file:
opaque	.\ppc.c	/^    void *opaque;$/;"	m	struct:ppc_tb_t	file:
opaque	.\ppc.h	/^    void *opaque;$/;"	m	struct:clk_setup_t
opaque	.\ppc4xx_devs.c	/^    void *opaque[MMIO_AREA_NB];$/;"	m	struct:ppc4xx_mmio_t	file:
opaque	.\ppc_mac.h	/^    void *opaque;$/;"	m	struct:ADBDevice
opaque	.\pxa.h	/^    void *opaque;$/;"	m	struct:pxa2xx_i2s_s
opaque	.\pxa2xx.c	/^    void *opaque;$/;"	m	struct:pxa2xx_ssp_s	file:
opaque	.\scsi-disk.c	/^    void *opaque;$/;"	m	struct:SCSIDeviceState	file:
opaque	.\scsi-generic.c	/^    void *opaque;$/;"	m	struct:SCSIDeviceState	file:
opaque	.\stellaris.c	/^    struct gptm_state *opaque[2];$/;"	m	struct:gptm_state	typeref:struct:gptm_state::gptm_state	file:
opaque	.\stellaris.c	/^    void *opaque[2];$/;"	m	struct:__anon114	file:
opaque	.\usb.h	/^    void *opaque;$/;"	m	struct:USBDevice
opaque	.\usb.h	/^    void *opaque;$/;"	m	struct:USBPort
opaque	.\vmport.c	/^    void *opaque[VMPORT_ENTRIES];$/;"	m	struct:_VMPortState	file:
opaque	.\wm8750.c	/^    void *opaque;$/;"	m	struct:wm8750_s	file:
opba_read	.\ppc405_uc.c	/^static CPUReadMemoryFunc *opba_read[] = {$/;"	v	file:
opba_readb	.\ppc405_uc.c	/^static uint32_t opba_readb (void *opaque, target_phys_addr_t addr)$/;"	f	file:
opba_readl	.\ppc405_uc.c	/^static uint32_t opba_readl (void *opaque, target_phys_addr_t addr)$/;"	f	file:
opba_readw	.\ppc405_uc.c	/^static uint32_t opba_readw (void *opaque, target_phys_addr_t addr)$/;"	f	file:
opba_write	.\ppc405_uc.c	/^static CPUWriteMemoryFunc *opba_write[] = {$/;"	v	file:
opba_writeb	.\ppc405_uc.c	/^static void opba_writeb (void *opaque,$/;"	f	file:
opba_writel	.\ppc405_uc.c	/^static void opba_writel (void *opaque,$/;"	f	file:
opba_writew	.\ppc405_uc.c	/^static void opba_writew (void *opaque,$/;"	f	file:
open_mode	.\ds1225y.c	/^    nvram_open_mode open_mode;$/;"	m	struct:ds1225y_t	file:
openpic_buggy_read	.\openpic.c	/^static uint32_t openpic_buggy_read (void *opaque, target_phys_addr_t addr)$/;"	f	file:
openpic_buggy_write	.\openpic.c	/^static void openpic_buggy_write (void *opaque,$/;"	f	file:
openpic_cpu_read	.\openpic.c	/^static uint32_t openpic_cpu_read (void *opaque, uint32_t addr)$/;"	f	file:
openpic_cpu_write	.\openpic.c	/^static void openpic_cpu_write (void *opaque, uint32_t addr, uint32_t val)$/;"	f	file:
openpic_gbl_read	.\openpic.c	/^static uint32_t openpic_gbl_read (void *opaque, uint32_t addr)$/;"	f	file:
openpic_gbl_write	.\openpic.c	/^static void openpic_gbl_write (void *opaque, uint32_t addr, uint32_t val)$/;"	f	file:
openpic_init	.\openpic.c	/^qemu_irq *openpic_init (PCIBus *bus, int *pmem_index, int nb_cpus,$/;"	f
openpic_map	.\openpic.c	/^static void openpic_map(PCIDevice *pci_dev, int region_num,$/;"	f	file:
openpic_read	.\openpic.c	/^static CPUReadMemoryFunc *openpic_read[] = {$/;"	v	file:
openpic_readl	.\openpic.c	/^static uint32_t openpic_readl (void *opaque,target_phys_addr_t addr)$/;"	f	file:
openpic_reset	.\openpic.c	/^static void openpic_reset (openpic_t *opp)$/;"	f	file:
openpic_set_irq	.\openpic.c	/^static void openpic_set_irq(void *opaque, int n_IRQ, int level)$/;"	f	file:
openpic_src_read	.\openpic.c	/^static uint32_t openpic_src_read (void *opaque, uint32_t addr)$/;"	f	file:
openpic_src_write	.\openpic.c	/^static void openpic_src_write (void *opaque, uint32_t addr, uint32_t val)$/;"	f	file:
openpic_t	.\openpic.c	/^typedef struct openpic_t {$/;"	s	file:
openpic_t	.\openpic.c	/^} openpic_t;$/;"	t	typeref:struct:openpic_t	file:
openpic_timer_read	.\openpic.c	/^static uint32_t openpic_timer_read (void *opaque, uint32_t addr)$/;"	f	file:
openpic_timer_write	.\openpic.c	/^static void openpic_timer_write (void *opaque, uint32_t addr, uint32_t val)$/;"	f	file:
openpic_update_irq	.\openpic.c	/^static void openpic_update_irq(openpic_t *opp, int n_IRQ)$/;"	f	file:
openpic_write	.\openpic.c	/^static CPUWriteMemoryFunc *openpic_write[] = {$/;"	v	file:
openpic_writel	.\openpic.c	/^static void openpic_writel (void *opaque,$/;"	f	file:
opl	.\adlib.c	/^    FM_OPL *opl;$/;"	m	struct:__anon2	file:
opl_dbg_chip	.\fmopl.c	/^static int opl_dbg_maxchip,opl_dbg_chip;$/;"	v	file:
opl_dbg_fp	.\fmopl.c	/^static FILE *opl_dbg_fp = NULL;$/;"	v	file:
opl_dbg_maxchip	.\fmopl.c	/^static int opl_dbg_maxchip,opl_dbg_chip;$/;"	v	file:
opl_dbg_opl	.\fmopl.c	/^static FM_OPL *opl_dbg_opl[16];$/;"	v	file:
opstring	.\eeprom93xx.c	/^static const char *opstring[] = {$/;"	v	file:
opt	.\ide.c	/^    uint8_t opt;$/;"	m	struct:md_s	file:
options	.\nand.c	/^    uint32_t options;$/;"	m	struct:nand_info_s	file:
or	.\ppc405_uc.c	/^    uint32_t or;$/;"	m	struct:ppc405_gpio_t	file:
orientation	.\pxa2xx_lcd.c	/^    int orientation;$/;"	m	struct:pxa2xx_lcdc_s	file:
os_timer	.\omap.h	/^    struct omap_32khz_timer_s *os_timer;$/;"	m	struct:omap_mpu_state_s	typeref:struct:omap_mpu_state_s::omap_32khz_timer_s
osrh	.\ppc405_uc.c	/^    uint32_t osrh;$/;"	m	struct:ppc405_gpio_t	file:
osrl	.\ppc405_uc.c	/^    uint32_t osrl;$/;"	m	struct:ppc405_gpio_t	file:
ostat	.\stellaris.c	/^    uint32_t ostat;$/;"	m	struct:__anon112	file:
otherchn	.\slavio_serial.c	/^    struct ChannelState *otherchn;$/;"	m	struct:ChannelState	typeref:struct:ChannelState::ChannelState	file:
out	.\lsi53c895a.c	/^    int out;$/;"	m	struct:__anon24	file:
out	.\omap.h	/^    } in, out;$/;"	m	struct:i2s_codec_s	typeref:struct:i2s_codec_s::i2s_fifo_s
out	.\pl061.c	/^    qemu_irq out[8];$/;"	m	struct:__anon56	file:
out	.\wm8750.c	/^    SWVoiceOut **out[2];$/;"	m	struct:wm8750_s	file:
out_data	.\sb16.c	/^    uint8_t out_data[50];$/;"	m	struct:SB16State	file:
out_data_len	.\sb16.c	/^    int out_data_len;$/;"	m	struct:SB16State	file:
out_fifo	.\tsc210x.c	/^    uint8_t out_fifo[16384];$/;"	m	struct:tsc210x_state_s	file:
outd	.\fmopl.c	/^static INT32 outd[1];$/;"	v	file:
outmask	.\wm8750.c	/^    uint32_t inmask, outmask;$/;"	m	struct:wm8750_s	file:
outmute	.\wm8750.c	/^    uint8_t outvol[7], outmute[2];$/;"	m	struct:wm8750_s	file:
output	.\ads7846.c	/^    int output;$/;"	m	struct:ads7846_state_s	file:
output	.\omap.h	/^        uint8_t output;$/;"	m	struct:omap_mpu_state_s::__anon38
output	.\rtl8139.c	/^    uint16_t output;$/;"	m	struct:EEprom9346	file:
outputs	.\omap.c	/^    uint16_t outputs;$/;"	m	struct:omap_gpio_s	file:
outputs	.\omap.c	/^    uint16_t outputs;$/;"	m	struct:omap_mpuio_s	file:
outvol	.\wm8750.c	/^    uint8_t outvol[7], outmute[2];$/;"	m	struct:wm8750_s	file:
ovl1c	.\pxa2xx_lcd.c	/^    uint32_t ovl1c[2];$/;"	m	struct:pxa2xx_lcdc_s	file:
ovl2c	.\pxa2xx_lcd.c	/^    uint32_t ovl2c[2];$/;"	m	struct:pxa2xx_lcdc_s	file:
pack	.\omap.c	/^    int pack[2];$/;"	m	struct:omap_dma_channel_s	file:
pack_f1	.\omap.h	/^    unsigned char pack_f1;$/;"	m	struct:omap_dma_lcd_channel_s
pack_f2	.\omap.h	/^    unsigned char pack_f2;$/;"	m	struct:omap_dma_lcd_channel_s
packet	.\eepro100.c	/^    char packet[MAX_ETH_FRAME_SIZE + 4];$/;"	m	struct:__anon12	file:
packet	.\usb-msd.c	/^    USBPacket *packet;$/;"	m	struct:__anon122	file:
packet_num	.\smc91c111.c	/^    int packet_num;$/;"	m	struct:__anon103	file:
packet_transfer_size	.\ide.c	/^    int packet_transfer_size;$/;"	m	struct:IDEState	file:
pad	.\usb-ohci.c	/^    uint16_t frame, pad;$/;"	m	struct:ohci_hcca	file:
pad0	.\firmware_abi.h	/^    uint16_t pad0;$/;"	m	struct:ohwcfg_v3_t
pad1	.\firmware_abi.h	/^    uint8_t  pad1[0x02];$/;"	m	struct:ohwcfg_v3_t
pad2	.\firmware_abi.h	/^    uint8_t  pad2[8];$/;"	m	struct:ohwcfg_v3_t
pad3	.\firmware_abi.h	/^    uint8_t  pad3[5];$/;"	m	struct:ohwcfg_v3_t
pad4	.\firmware_abi.h	/^    uint8_t  pad4[0x1C]; \/* 28 *\/$/;"	m	struct:ohwcfg_v3_t
pad5	.\firmware_abi.h	/^    uint8_t  pad5[0x02];$/;"	m	struct:ohwcfg_v3_t
padding	.\usb-ohci.c	/^    uint16_t padding;$/;"	m	struct:__anon123	file:
padr	.\pcnet.c	/^    uint16_t padr[3];$/;"	m	struct:pcnet_initblk16	file:
padr	.\pcnet.c	/^    uint16_t padr[3];$/;"	m	struct:pcnet_initblk32	file:
padr_bcast	.\pcnet.c	/^static inline int padr_bcast(PCNetState *s, const uint8_t *buf, int size)$/;"	f	file:
padr_match	.\pcnet.c	/^static inline int padr_match(PCNetState *s, const uint8_t *buf, int size)$/;"	f	file:
padstr	.\ide.c	/^static void padstr(char *str, const char *src, int len)$/;"	f	file:
padstr8	.\ide.c	/^static void padstr8(uint8_t *buf, int buf_size, const char *src)$/;"	f	file:
page	.\dma.c	/^    uint8_t page;$/;"	m	struct:dma_regs	file:
page	.\tsc210x.c	/^    int state, page, offset, irq;$/;"	m	struct:tsc210x_state_s	file:
page_shift	.\nand.c	/^    int page_shift, oob_shift, erase_shift, addr_shift;$/;"	m	struct:nand_flash_s	file:
page_shift	.\nand.c	/^    int page_shift;$/;"	m	struct:nand_info_s	file:
pageh	.\dma.c	/^    uint8_t pageh;$/;"	m	struct:dma_regs	file:
pages	.\nand.c	/^    int size, pages;$/;"	m	struct:nand_flash_s	file:
pal_console_call	.\alpha_palcode.c	/^static void pal_console_call (CPUState *env, uint32_t palcode)$/;"	f	file:
pal_for	.\pxa2xx_lcd.c	/^    int pal_for;$/;"	m	struct:pxa2xx_lcdc_s	file:
pal_handlers	.\alpha_palcode.c	/^pal_handler_t pal_handlers[] = {$/;"	v
pal_init	.\alpha_palcode.c	/^void pal_init (CPUState *env)$/;"	f
pal_openvms_call	.\alpha_palcode.c	/^static void pal_openvms_call (CPUState *env, uint32_t palcode)$/;"	f	file:
pal_reset	.\alpha_palcode.c	/^static void pal_reset (CPUState *env)$/;"	f	file:
pal_unix_call	.\alpha_palcode.c	/^static void pal_unix_call (CPUState *env, uint32_t palcode)$/;"	f	file:
palette	.\omap_lcdc.c	/^    uint16_t palette[256];$/;"	m	struct:omap_lcd_panel_s	file:
palette	.\pxa2xx_lcd.c	/^        uint8_t palette[1024];$/;"	m	struct:pxa2xx_lcdc_s::__anon85	file:
palette	.\tcx.c	/^    uint32_t palette[256];$/;"	m	struct:TCXState	file:
palette_done	.\omap_lcdc.c	/^    int palette_done;$/;"	m	struct:omap_lcd_panel_s	file:
pallette	.\pl110.c	/^    uint32_t pallette[256];$/;"	m	struct:__anon59	file:
palmte_button_event	.\palm.c	/^static void palmte_button_event(void *opaque, int keycode)$/;"	f	file:
palmte_gpio_setup	.\palm.c	/^static void palmte_gpio_setup(struct omap_mpu_state_s *cpu)$/;"	f	file:
palmte_init	.\palm.c	/^static void palmte_init(int ram_size, int vga_ram_size,$/;"	f	file:
palmte_keymap	.\palm.c	/^} palmte_keymap[0x80] = {$/;"	v	typeref:struct:__anon47	file:
palmte_machine	.\palm.c	/^QEMUMachine palmte_machine = {$/;"	v
palmte_microwire_setup	.\palm.c	/^static void palmte_microwire_setup(struct omap_mpu_state_s *cpu)$/;"	f	file:
palmte_onoff_gpios	.\palm.c	/^static void palmte_onoff_gpios(void *opaque, int line, int level)$/;"	f	file:
par	.\mcf5206.c	/^    uint8_t par;$/;"	m	struct:__anon27	file:
parallel_init	.\parallel.c	/^ParallelState *parallel_init(int base, qemu_irq irq, CharDriverState *chr)$/;"	f
parallel_io	.\pc.c	/^static int parallel_io[MAX_PARALLEL_PORTS] = { 0x378, 0x278, 0x3bc };$/;"	v	file:
parallel_io	.\sun4u.c	/^static const int parallel_io[MAX_PARALLEL_PORTS] = { 0x378, 0x278, 0x3bc };$/;"	v	file:
parallel_ioport_ecp_read	.\parallel.c	/^static uint32_t parallel_ioport_ecp_read(void *opaque, uint32_t addr)$/;"	f	file:
parallel_ioport_ecp_write	.\parallel.c	/^static void parallel_ioport_ecp_write(void *opaque, uint32_t addr, uint32_t val)$/;"	f	file:
parallel_ioport_eppdata_read_hw2	.\parallel.c	/^parallel_ioport_eppdata_read_hw2(void *opaque, uint32_t addr)$/;"	f	file:
parallel_ioport_eppdata_read_hw4	.\parallel.c	/^parallel_ioport_eppdata_read_hw4(void *opaque, uint32_t addr)$/;"	f	file:
parallel_ioport_eppdata_write_hw2	.\parallel.c	/^parallel_ioport_eppdata_write_hw2(void *opaque, uint32_t addr, uint32_t val)$/;"	f	file:
parallel_ioport_eppdata_write_hw4	.\parallel.c	/^parallel_ioport_eppdata_write_hw4(void *opaque, uint32_t addr, uint32_t val)$/;"	f	file:
parallel_ioport_read_hw	.\parallel.c	/^static uint32_t parallel_ioport_read_hw(void *opaque, uint32_t addr)$/;"	f	file:
parallel_ioport_read_sw	.\parallel.c	/^static uint32_t parallel_ioport_read_sw(void *opaque, uint32_t addr)$/;"	f	file:
parallel_ioport_write_hw	.\parallel.c	/^static void parallel_ioport_write_hw(void *opaque, uint32_t addr, uint32_t val)$/;"	f	file:
parallel_ioport_write_sw	.\parallel.c	/^parallel_ioport_write_sw(void *opaque, uint32_t addr, uint32_t val)$/;"	f	file:
parallel_irq	.\pc.c	/^static int parallel_irq[MAX_PARALLEL_PORTS] = { 7, 7, 7 };$/;"	v	file:
parallel_irq	.\sun4u.c	/^static const int parallel_irq[MAX_PARALLEL_PORTS] = { 7, 7, 7 };$/;"	v	file:
parallel_mm_init	.\parallel.c	/^ParallelState *parallel_mm_init(target_phys_addr_t base, int it_shift, qemu_irq irq, CharDriverState *chr)$/;"	f
parallel_mm_read_sw	.\parallel.c	/^static CPUReadMemoryFunc *parallel_mm_read_sw[] = {$/;"	v	file:
parallel_mm_readb	.\parallel.c	/^static uint32_t parallel_mm_readb (void *opaque, target_phys_addr_t addr)$/;"	f	file:
parallel_mm_readl	.\parallel.c	/^static uint32_t parallel_mm_readl (void *opaque, target_phys_addr_t addr)$/;"	f	file:
parallel_mm_readw	.\parallel.c	/^static uint32_t parallel_mm_readw (void *opaque, target_phys_addr_t addr)$/;"	f	file:
parallel_mm_write_sw	.\parallel.c	/^static CPUWriteMemoryFunc *parallel_mm_write_sw[] = {$/;"	v	file:
parallel_mm_writeb	.\parallel.c	/^static void parallel_mm_writeb (void *opaque,$/;"	f	file:
parallel_mm_writel	.\parallel.c	/^static void parallel_mm_writel (void *opaque,$/;"	f	file:
parallel_mm_writew	.\parallel.c	/^static void parallel_mm_writew (void *opaque,$/;"	f	file:
parallel_reset	.\parallel.c	/^static void parallel_reset(ParallelState *s, qemu_irq irq, CharDriverState *chr)$/;"	f	file:
parallel_update_irq	.\parallel.c	/^static void parallel_update_irq(ParallelState *s)$/;"	f	file:
parent	.\mst_fpga.c	/^	qemu_irq *parent;$/;"	m	struct:mst_irq_state	file:
parent	.\omap1_clk.c	/^    struct clk *parent;$/;"	m	struct:clk	typeref:struct:clk::clk	file:
parent	.\sh_intc.h	/^    struct intc_desc *parent;$/;"	m	struct:intc_source	typeref:struct:intc_source::intc_desc
parent	.\versatilepb.c	/^  qemu_irq *parent;$/;"	m	struct:vpb_sic_state	file:
parent_dev	.\pci.c	/^    PCIDevice *parent_dev;$/;"	m	struct:PCIBus	file:
parent_esp_reset	.\esp.c	/^static void parent_esp_reset(void *opaque, int irq, int level)$/;"	f	file:
parent_fiq	.\integratorcp.c	/^  qemu_irq parent_fiq;$/;"	m	struct:icp_pic_state	file:
parent_intr	.\omap.c	/^    qemu_irq parent_intr[2];$/;"	m	struct:omap_intr_handler_s	file:
parent_irq	.\arm_gic.c	/^    qemu_irq parent_irq[NCPU];$/;"	m	struct:gic_state	file:
parent_irq	.\i8259.c	/^    qemu_irq parent_irq;$/;"	m	struct:PicState2	file:
parent_irq	.\integratorcp.c	/^  qemu_irq parent_irq;$/;"	m	struct:icp_pic_state	file:
parent_lance_reset	.\pcnet.c	/^static void parent_lance_reset(void *opaque, int irq, int level)$/;"	f	file:
partition	.\ide.c	/^struct partition {$/;"	s	file:
path	.\wm8750.c	/^    uint8_t path[4], mpath[2], power, format;$/;"	m	struct:wm8750_s	file:
pborctl	.\stellaris.c	/^    uint32_t pborctl;$/;"	m	struct:__anon110	file:
pbuffer	.\pxa2xx_lcd.c	/^        uint8_t pbuffer[1024];$/;"	m	struct:pxa2xx_lcdc_s::__anon85	file:
pc_init1	.\pc.c	/^static void pc_init1(int ram_size, int vga_ram_size,$/;"	f	file:
pc_init_isa	.\pc.c	/^static void pc_init_isa(int ram_size, int vga_ram_size,$/;"	f	file:
pc_init_ne2k_isa	.\pc.c	/^static void pc_init_ne2k_isa(NICInfo *nd, qemu_irq *pic)$/;"	f	file:
pc_init_pci	.\pc.c	/^static void pc_init_pci(int ram_size, int vga_ram_size,$/;"	f	file:
pc_machine	.\pc.c	/^QEMUMachine pc_machine = {$/;"	v
pc_to_adb_keycode	.\adb.c	/^static const uint8_t pc_to_adb_keycode[256] = {$/;"	v	file:
pci	.\gt64xxx.c	/^    GT64120PCIState *pci;$/;"	m	struct:GT64120State	file:
pci	.\ppc405_uc.c	/^    uint32_t pci;$/;"	m	struct:ppc405ep_cpc_t	file:
pci_addr_t	.\apb_pci.c	/^typedef target_phys_addr_t pci_addr_t;$/;"	t	file:
pci_addr_t	.\grackle_pci.c	/^typedef target_phys_addr_t pci_addr_t;$/;"	t	file:
pci_addr_t	.\gt64xxx.c	/^typedef target_phys_addr_t pci_addr_t;$/;"	t	file:
pci_addr_t	.\piix_pci.c	/^typedef uint32_t pci_addr_t;$/;"	t	file:
pci_addr_t	.\prep_pci.c	/^typedef uint32_t pci_addr_t;$/;"	t	file:
pci_addr_t	.\unin_pci.c	/^typedef target_phys_addr_t pci_addr_t;$/;"	t	file:
pci_apb_config_read	.\apb_pci.c	/^static CPUReadMemoryFunc *pci_apb_config_read[] = {$/;"	v	file:
pci_apb_config_readl	.\apb_pci.c	/^static uint32_t pci_apb_config_readl (void *opaque,$/;"	f	file:
pci_apb_config_write	.\apb_pci.c	/^static CPUWriteMemoryFunc *pci_apb_config_write[] = {$/;"	v	file:
pci_apb_config_writel	.\apb_pci.c	/^static void pci_apb_config_writel (void *opaque, target_phys_addr_t addr,$/;"	f	file:
pci_apb_init	.\apb_pci.c	/^PCIBus *pci_apb_init(target_phys_addr_t special_base,$/;"	f
pci_apb_ioread	.\apb_pci.c	/^static CPUReadMemoryFunc *pci_apb_ioread[] = {$/;"	v	file:
pci_apb_ioreadb	.\apb_pci.c	/^static uint32_t pci_apb_ioreadb (void *opaque, target_phys_addr_t addr)$/;"	f	file:
pci_apb_ioreadl	.\apb_pci.c	/^static uint32_t pci_apb_ioreadl (void *opaque, target_phys_addr_t addr)$/;"	f	file:
pci_apb_ioreadw	.\apb_pci.c	/^static uint32_t pci_apb_ioreadw (void *opaque, target_phys_addr_t addr)$/;"	f	file:
pci_apb_iowrite	.\apb_pci.c	/^static CPUWriteMemoryFunc *pci_apb_iowrite[] = {$/;"	v	file:
pci_apb_iowriteb	.\apb_pci.c	/^static void pci_apb_iowriteb (void *opaque, target_phys_addr_t addr,$/;"	f	file:
pci_apb_iowritel	.\apb_pci.c	/^static void pci_apb_iowritel (void *opaque, target_phys_addr_t addr,$/;"	f	file:
pci_apb_iowritew	.\apb_pci.c	/^static void pci_apb_iowritew (void *opaque, target_phys_addr_t addr,$/;"	f	file:
pci_apb_map_irq	.\apb_pci.c	/^static int pci_apb_map_irq(PCIDevice *pci_dev, int irq_num)$/;"	f	file:
pci_apb_read	.\apb_pci.c	/^static CPUReadMemoryFunc *pci_apb_read[] = {$/;"	v	file:
pci_apb_set_irq	.\apb_pci.c	/^static void pci_apb_set_irq(qemu_irq *pic, int irq_num, int level)$/;"	f	file:
pci_apb_write	.\apb_pci.c	/^static CPUWriteMemoryFunc *pci_apb_write[] = {$/;"	v	file:
pci_bridge_init	.\pci.c	/^PCIBus *pci_bridge_init(PCIBus *bus, int devfn, uint32_t id,$/;"	f
pci_bridge_write_config	.\pci.c	/^static void pci_bridge_write_config(PCIDevice *d,$/;"	f	file:
pci_bus_num	.\pci.c	/^int pci_bus_num(PCIBus *s)$/;"	f
pci_cirrus_vga_init	.\cirrus_vga.c	/^void pci_cirrus_vga_init(PCIBus *bus, DisplayState *ds, uint8_t *vga_ram_base,$/;"	f
pci_class_desc	.\pci.c	/^} pci_class_desc;$/;"	t	typeref:struct:__anon48	file:
pci_class_descriptions	.\pci.c	/^static pci_class_desc pci_class_descriptions[] =$/;"	v	file:
pci_cmd646_ide_init	.\ide.c	/^void pci_cmd646_ide_init(PCIBus *bus, BlockDriverState **hd_table,$/;"	f
pci_data_read	.\pci.c	/^uint32_t pci_data_read(void *opaque, uint32_t addr, int len)$/;"	f
pci_data_write	.\pci.c	/^void pci_data_write(void *opaque, uint32_t addr, uint32_t val, int len)$/;"	f
pci_default_read_config	.\pci.c	/^uint32_t pci_default_read_config(PCIDevice *d,$/;"	f
pci_default_write_config	.\pci.c	/^void pci_default_write_config(PCIDevice *d,$/;"	f
pci_dev	.\eepro100.c	/^    PCIDevice *pci_dev;$/;"	m	struct:__anon16	file:
pci_dev	.\es1370.c	/^    PCIDevice *pci_dev;$/;"	m	struct:ES1370State	file:
pci_dev	.\ide.c	/^    PCIDevice *pci_dev;$/;"	m	struct:IDEState	file:
pci_dev	.\ide.c	/^    struct PCIIDEState *pci_dev;$/;"	m	struct:BMDMAState	typeref:struct:BMDMAState::PCIIDEState	file:
pci_dev	.\lsi53c895a.c	/^    PCIDevice pci_dev;$/;"	m	struct:__anon25	file:
pci_dev	.\ne2000.c	/^    PCIDevice *pci_dev;$/;"	m	struct:NE2000State	file:
pci_dev	.\openpic.c	/^    PCIDevice pci_dev;$/;"	m	struct:openpic_t	file:
pci_dev	.\pcnet.c	/^    PCIDevice *pci_dev;$/;"	m	struct:PCNetState_st	file:
pci_dev	.\rtl8139.c	/^    PCIDevice *pci_dev;$/;"	m	struct:RTL8139State	file:
pci_dev	.\usb-ohci.c	/^    PCIDevice pci_dev;$/;"	m	struct:__anon124	file:
pci_device_load	.\pci.c	/^int pci_device_load(PCIDevice *s, QEMUFile *f)$/;"	f
pci_device_save	.\pci.c	/^void pci_device_save(PCIDevice *s, QEMUFile *f)$/;"	f
pci_for_each_device	.\pci.c	/^void pci_for_each_device(int bus_num, void (*fn)(PCIDevice *d))$/;"	f
pci_grackle_config_read	.\grackle_pci.c	/^static CPUReadMemoryFunc *pci_grackle_config_read[] = {$/;"	v	file:
pci_grackle_config_readl	.\grackle_pci.c	/^static uint32_t pci_grackle_config_readl (void *opaque, target_phys_addr_t addr)$/;"	f	file:
pci_grackle_config_write	.\grackle_pci.c	/^static CPUWriteMemoryFunc *pci_grackle_config_write[] = {$/;"	v	file:
pci_grackle_config_writel	.\grackle_pci.c	/^static void pci_grackle_config_writel (void *opaque, target_phys_addr_t addr,$/;"	f	file:
pci_grackle_init	.\grackle_pci.c	/^PCIBus *pci_grackle_init(uint32_t base, qemu_irq *pic)$/;"	f
pci_grackle_map_irq	.\grackle_pci.c	/^static int pci_grackle_map_irq(PCIDevice *pci_dev, int irq_num)$/;"	f	file:
pci_grackle_read	.\grackle_pci.c	/^static CPUReadMemoryFunc *pci_grackle_read[] = {$/;"	v	file:
pci_grackle_set_irq	.\grackle_pci.c	/^static void pci_grackle_set_irq(qemu_irq *pic, int irq_num, int level)$/;"	f	file:
pci_grackle_write	.\grackle_pci.c	/^static CPUWriteMemoryFunc *pci_grackle_write[] = {$/;"	v	file:
pci_gt64120_init	.\gt64xxx.c	/^PCIBus *pci_gt64120_init(qemu_irq *pic)$/;"	f
pci_gt64120_map_irq	.\gt64xxx.c	/^static int pci_gt64120_map_irq(PCIDevice *pci_dev, int irq_num)$/;"	f	file:
pci_gt64120_set_irq	.\gt64xxx.c	/^static void pci_gt64120_set_irq(qemu_irq *pic, int irq_num, int level)$/;"	f	file:
pci_host_data_readb	.\pci_host.h	/^static uint32_t pci_host_data_readb(void* opaque, pci_addr_t addr)$/;"	f
pci_host_data_readl	.\pci_host.h	/^static uint32_t pci_host_data_readl(void* opaque, pci_addr_t addr)$/;"	f
pci_host_data_readw	.\pci_host.h	/^static uint32_t pci_host_data_readw(void* opaque, pci_addr_t addr)$/;"	f
pci_host_data_writeb	.\pci_host.h	/^static void pci_host_data_writeb(void* opaque, pci_addr_t addr, uint32_t val)$/;"	f
pci_host_data_writel	.\pci_host.h	/^static void pci_host_data_writel(void* opaque, pci_addr_t addr, uint32_t val)$/;"	f
pci_host_data_writew	.\pci_host.h	/^static void pci_host_data_writew(void* opaque, pci_addr_t addr, uint32_t val)$/;"	f
pci_i82551_init	.\eepro100.c	/^void pci_i82551_init(PCIBus * bus, NICInfo * nd, int devfn)$/;"	f
pci_i82557b_init	.\eepro100.c	/^void pci_i82557b_init(PCIBus * bus, NICInfo * nd, int devfn)$/;"	f
pci_i82559er_init	.\eepro100.c	/^void pci_i82559er_init(PCIBus * bus, NICInfo * nd, int devfn)$/;"	f
pci_ide_load	.\ide.c	/^static int pci_ide_load(QEMUFile* f, void *opaque, int version_id)$/;"	f	file:
pci_ide_save	.\ide.c	/^static void pci_ide_save(QEMUFile* f, void *opaque)$/;"	f	file:
pci_info	.\pci.c	/^void pci_info(void)$/;"	f
pci_info_device	.\pci.c	/^static void pci_info_device(PCIDevice *d)$/;"	f	file:
pci_irq_index	.\pci.c	/^static int pci_irq_index;$/;"	v	file:
pci_irq_levels	.\gt64xxx.c	/^static int pci_irq_levels[4];$/;"	v	file:
pci_irq_levels	.\piix_pci.c	/^static int pci_irq_levels[4];$/;"	v	file:
pci_map	.\eepro100.c	/^static void pci_map(PCIDevice * pci_dev, int region_num,$/;"	f	file:
pci_map_irq_fn	.\pci.h	/^typedef int (*pci_map_irq_fn)(PCIDevice *pci_dev, int irq_num);$/;"	t
pci_mem_base	.\pci.c	/^target_phys_addr_t pci_mem_base;$/;"	v
pci_mmio_map	.\eepro100.c	/^static void pci_mmio_map(PCIDevice * pci_dev, int region_num,$/;"	f	file:
pci_mmio_read	.\eepro100.c	/^static CPUReadMemoryFunc *pci_mmio_read[] = {$/;"	v	file:
pci_mmio_readb	.\eepro100.c	/^static uint32_t pci_mmio_readb(void *opaque, target_phys_addr_t addr)$/;"	f	file:
pci_mmio_readl	.\eepro100.c	/^static uint32_t pci_mmio_readl(void *opaque, target_phys_addr_t addr)$/;"	f	file:
pci_mmio_readw	.\eepro100.c	/^static uint32_t pci_mmio_readw(void *opaque, target_phys_addr_t addr)$/;"	f	file:
pci_mmio_write	.\eepro100.c	/^static CPUWriteMemoryFunc *pci_mmio_write[] = {$/;"	v	file:
pci_mmio_writeb	.\eepro100.c	/^static void pci_mmio_writeb(void *opaque, target_phys_addr_t addr, uint32_t val)$/;"	f	file:
pci_mmio_writel	.\eepro100.c	/^static void pci_mmio_writel(void *opaque, target_phys_addr_t addr, uint32_t val)$/;"	f	file:
pci_mmio_writew	.\eepro100.c	/^static void pci_mmio_writew(void *opaque, target_phys_addr_t addr, uint32_t val)$/;"	f	file:
pci_ne2000_init	.\ne2000.c	/^void pci_ne2000_init(PCIBus *bus, NICInfo *nd, int devfn)$/;"	f
pci_nic_init	.\pci.c	/^void pci_nic_init(PCIBus *bus, NICInfo *nd, int devfn)$/;"	f
pci_pbm_map_irq	.\apb_pci.c	/^static int pci_pbm_map_irq(PCIDevice *pci_dev, int irq_num)$/;"	f	file:
pci_pcnet_init	.\pcnet.c	/^void pci_pcnet_init(PCIBus *bus, NICInfo *nd, int devfn)$/;"	f
pci_physical_memory_read	.\pcnet.c	/^static void pci_physical_memory_read(void *dma_opaque, target_phys_addr_t addr,$/;"	f	file:
pci_physical_memory_write	.\pcnet.c	/^static void pci_physical_memory_write(void *dma_opaque, target_phys_addr_t addr,$/;"	f	file:
pci_piix3_ide_init	.\ide.c	/^void pci_piix3_ide_init(PCIBus *bus, BlockDriverState **hd_table, int devfn,$/;"	f
pci_piix4_ide_init	.\ide.c	/^void pci_piix4_ide_init(PCIBus *bus, BlockDriverState **hd_table, int devfn,$/;"	f
pci_pmac_init	.\unin_pci.c	/^PCIBus *pci_pmac_init(qemu_irq *pic)$/;"	f
pci_prep_addr_readl	.\prep_pci.c	/^static uint32_t pci_prep_addr_readl(void* opaque, uint32_t addr)$/;"	f	file:
pci_prep_addr_writel	.\prep_pci.c	/^static void pci_prep_addr_writel(void* opaque, uint32_t addr, uint32_t val)$/;"	f	file:
pci_prep_init	.\prep_pci.c	/^PCIBus *pci_prep_init(qemu_irq *pic)$/;"	f
pci_register_bus	.\pci.c	/^PCIBus *pci_register_bus(pci_set_irq_fn set_irq, pci_map_irq_fn map_irq,$/;"	f
pci_register_device	.\pci.c	/^PCIDevice *pci_register_device(PCIBus *bus, const char *name,$/;"	f
pci_register_io_region	.\pci.c	/^void pci_register_io_region(PCIDevice *pci_dev, int region_num,$/;"	f
pci_register_secondary_bus	.\pci.c	/^static PCIBus *pci_register_secondary_bus(PCIDevice *dev, pci_map_irq_fn map_irq)$/;"	f	file:
pci_reset	.\eepro100.c	/^static void pci_reset(EEPRO100State * s)$/;"	f	file:
pci_rtl8139_init	.\rtl8139.c	/^void pci_rtl8139_init(PCIBus *bus, NICInfo *nd, int devfn)$/;"	f
pci_set_irq	.\pci.c	/^static void pci_set_irq(void *opaque, int irq_num, int level)$/;"	f	file:
pci_set_irq_fn	.\pci.h	/^typedef void (*pci_set_irq_fn)(qemu_irq *pic, int irq_num, int level);$/;"	t
pci_slot_get_pirq	.\piix_pci.c	/^static int pci_slot_get_pirq(PCIDevice *pci_dev, int irq_num)$/;"	f	file:
pci_to_cpu_addr	.\pci.c	/^static target_phys_addr_t pci_to_cpu_addr(target_phys_addr_t addr)$/;"	f	file:
pci_unin_main_config_read	.\unin_pci.c	/^static CPUReadMemoryFunc *pci_unin_main_config_read[] = {$/;"	v	file:
pci_unin_main_config_readl	.\unin_pci.c	/^static uint32_t pci_unin_main_config_readl (void *opaque,$/;"	f	file:
pci_unin_main_config_write	.\unin_pci.c	/^static CPUWriteMemoryFunc *pci_unin_main_config_write[] = {$/;"	v	file:
pci_unin_main_config_writel	.\unin_pci.c	/^static void pci_unin_main_config_writel (void *opaque, target_phys_addr_t addr,$/;"	f	file:
pci_unin_main_read	.\unin_pci.c	/^static CPUReadMemoryFunc *pci_unin_main_read[] = {$/;"	v	file:
pci_unin_main_write	.\unin_pci.c	/^static CPUWriteMemoryFunc *pci_unin_main_write[] = {$/;"	v	file:
pci_unin_map_irq	.\unin_pci.c	/^static int pci_unin_map_irq(PCIDevice *pci_dev, int irq_num)$/;"	f	file:
pci_unin_set_irq	.\unin_pci.c	/^static void pci_unin_set_irq(qemu_irq *pic, int irq_num, int level)$/;"	f	file:
pci_update_mappings	.\pci.c	/^static void pci_update_mappings(PCIDevice *d)$/;"	f	file:
pci_vga_init	.\vga.c	/^int pci_vga_init(PCIBus *bus, DisplayState *ds, uint8_t *vga_ram_base,$/;"	f
pci_vmsvga_init	.\vmware_vga.c	/^void pci_vmsvga_init(PCIBus *bus, DisplayState *ds, uint8_t *vga_ram_base,$/;"	f
pci_vmsvga_load	.\vmware_vga.c	/^static int pci_vmsvga_load(QEMUFile *f, void *opaque, int version_id)$/;"	f	file:
pci_vmsvga_save	.\vmware_vga.c	/^static void pci_vmsvga_save(QEMUFile *f, void *opaque)$/;"	f	file:
pci_vmsvga_state_s	.\vmware_vga.c	/^struct pci_vmsvga_state_s {$/;"	s	file:
pci_vpb_config_read	.\versatile_pci.c	/^static CPUReadMemoryFunc *pci_vpb_config_read[] = {$/;"	v	file:
pci_vpb_config_readb	.\versatile_pci.c	/^static uint32_t pci_vpb_config_readb (void *opaque, target_phys_addr_t addr)$/;"	f	file:
pci_vpb_config_readl	.\versatile_pci.c	/^static uint32_t pci_vpb_config_readl (void *opaque, target_phys_addr_t addr)$/;"	f	file:
pci_vpb_config_readw	.\versatile_pci.c	/^static uint32_t pci_vpb_config_readw (void *opaque, target_phys_addr_t addr)$/;"	f	file:
pci_vpb_config_write	.\versatile_pci.c	/^static CPUWriteMemoryFunc *pci_vpb_config_write[] = {$/;"	v	file:
pci_vpb_config_writeb	.\versatile_pci.c	/^static void pci_vpb_config_writeb (void *opaque, target_phys_addr_t addr,$/;"	f	file:
pci_vpb_config_writel	.\versatile_pci.c	/^static void pci_vpb_config_writel (void *opaque, target_phys_addr_t addr,$/;"	f	file:
pci_vpb_config_writew	.\versatile_pci.c	/^static void pci_vpb_config_writew (void *opaque, target_phys_addr_t addr,$/;"	f	file:
pci_vpb_init	.\versatile_pci.c	/^PCIBus *pci_vpb_init(qemu_irq *pic, int irq, int realview)$/;"	f
pci_vpb_irq	.\versatile_pci.c	/^static int pci_vpb_irq;$/;"	v	file:
pci_vpb_map_irq	.\versatile_pci.c	/^static int pci_vpb_map_irq(PCIDevice *d, int irq_num)$/;"	f	file:
pci_vpb_set_irq	.\versatile_pci.c	/^static void pci_vpb_set_irq(qemu_irq *pic, int irq_num, int level)$/;"	f	file:
pcibus_load	.\pci.c	/^static int  pcibus_load(QEMUFile *f, void *opaque, int version_id)$/;"	f	file:
pcibus_save	.\pci.c	/^static void pcibus_save(QEMUFile *f, void *opaque)$/;"	f	file:
pcmcia	.\pxa.h	/^    struct pxa2xx_pcmcia_s *pcmcia[2];$/;"	m	struct:pxa2xx_state_s	typeref:struct:pxa2xx_state_s::pxa2xx_pcmcia_s
pcmcia0	.\mst_fpga.c	/^	uint32_t pcmcia0;$/;"	m	struct:mst_irq_state	file:
pcmcia1	.\mst_fpga.c	/^	uint32_t pcmcia1;$/;"	m	struct:mst_irq_state	file:
pcmcia_card_s	.\pcmcia.h	/^struct pcmcia_card_s {$/;"	s
pcmcia_socket_s	.\pcmcia.h	/^struct pcmcia_socket_s {$/;"	s
pcnet_RMD	.\pcnet.c	/^struct pcnet_RMD {$/;"	s	file:
pcnet_TMD	.\pcnet.c	/^struct pcnet_TMD {$/;"	s	file:
pcnet_aprom_readb	.\pcnet.c	/^static uint32_t pcnet_aprom_readb(void *opaque, uint32_t addr)$/;"	f	file:
pcnet_aprom_writeb	.\pcnet.c	/^static void pcnet_aprom_writeb(void *opaque, uint32_t addr, uint32_t val)$/;"	f	file:
pcnet_bcr_readw	.\pcnet.c	/^static uint32_t pcnet_bcr_readw(PCNetState *s, uint32_t rap)$/;"	f	file:
pcnet_bcr_writew	.\pcnet.c	/^static void pcnet_bcr_writew(PCNetState *s, uint32_t rap, uint32_t val)$/;"	f	file:
pcnet_can_receive	.\pcnet.c	/^static int pcnet_can_receive(void *opaque)$/;"	f	file:
pcnet_common_init	.\pcnet.c	/^static void pcnet_common_init(PCNetState *d, NICInfo *nd, const char *info_str)$/;"	f	file:
pcnet_csr_readw	.\pcnet.c	/^static uint32_t pcnet_csr_readw(PCNetState *s, uint32_t rap)$/;"	f	file:
pcnet_csr_writew	.\pcnet.c	/^static void pcnet_csr_writew(PCNetState *s, uint32_t rap, uint32_t new_value)$/;"	f	file:
pcnet_get_next_poll_time	.\pcnet.c	/^static inline int64_t pcnet_get_next_poll_time(PCNetState *s, int64_t current_time)$/;"	f	file:
pcnet_h_reset	.\pcnet.c	/^static void pcnet_h_reset(void *opaque)$/;"	f	file:
pcnet_init	.\pcnet.c	/^static void pcnet_init(PCNetState *s)$/;"	f	file:
pcnet_initblk16	.\pcnet.c	/^struct pcnet_initblk16 {$/;"	s	file:
pcnet_initblk32	.\pcnet.c	/^struct pcnet_initblk32 {$/;"	s	file:
pcnet_ioport_map	.\pcnet.c	/^static void pcnet_ioport_map(PCIDevice *pci_dev, int region_num,$/;"	f	file:
pcnet_ioport_readl	.\pcnet.c	/^static uint32_t pcnet_ioport_readl(void *opaque, uint32_t addr)$/;"	f	file:
pcnet_ioport_readw	.\pcnet.c	/^static uint32_t pcnet_ioport_readw(void *opaque, uint32_t addr)$/;"	f	file:
pcnet_ioport_writel	.\pcnet.c	/^static void pcnet_ioport_writel(void *opaque, uint32_t addr, uint32_t val)$/;"	f	file:
pcnet_ioport_writew	.\pcnet.c	/^static void pcnet_ioport_writew(void *opaque, uint32_t addr, uint32_t val)$/;"	f	file:
pcnet_load	.\pcnet.c	/^static int pcnet_load(QEMUFile *f, void *opaque, int version_id)$/;"	f	file:
pcnet_mmio_map	.\pcnet.c	/^static void pcnet_mmio_map(PCIDevice *pci_dev, int region_num,$/;"	f	file:
pcnet_mmio_read	.\pcnet.c	/^static CPUReadMemoryFunc *pcnet_mmio_read[] = {$/;"	v	file:
pcnet_mmio_readb	.\pcnet.c	/^static uint32_t pcnet_mmio_readb(void *opaque, target_phys_addr_t addr)$/;"	f	file:
pcnet_mmio_readl	.\pcnet.c	/^static uint32_t pcnet_mmio_readl(void *opaque, target_phys_addr_t addr)$/;"	f	file:
pcnet_mmio_readw	.\pcnet.c	/^static uint32_t pcnet_mmio_readw(void *opaque, target_phys_addr_t addr)$/;"	f	file:
pcnet_mmio_write	.\pcnet.c	/^static CPUWriteMemoryFunc *pcnet_mmio_write[] = {$/;"	v	file:
pcnet_mmio_writeb	.\pcnet.c	/^static void pcnet_mmio_writeb(void *opaque, target_phys_addr_t addr, uint32_t val)$/;"	f	file:
pcnet_mmio_writel	.\pcnet.c	/^static void pcnet_mmio_writel(void *opaque, target_phys_addr_t addr, uint32_t val)$/;"	f	file:
pcnet_mmio_writew	.\pcnet.c	/^static void pcnet_mmio_writew(void *opaque, target_phys_addr_t addr, uint32_t val)$/;"	f	file:
pcnet_poll	.\pcnet.c	/^static void pcnet_poll(PCNetState *s)$/;"	f	file:
pcnet_poll_timer	.\pcnet.c	/^static void pcnet_poll_timer(void *opaque)$/;"	f	file:
pcnet_rdra_addr	.\pcnet.c	/^static inline target_phys_addr_t pcnet_rdra_addr(PCNetState *s, int idx)$/;"	f	file:
pcnet_rdte_poll	.\pcnet.c	/^static void pcnet_rdte_poll(PCNetState *s)$/;"	f	file:
pcnet_receive	.\pcnet.c	/^static void pcnet_receive(void *opaque, const uint8_t *buf, int size)$/;"	f	file:
pcnet_rmd_load	.\pcnet.c	/^static inline void pcnet_rmd_load(PCNetState *s, struct pcnet_RMD *rmd,$/;"	f	file:
pcnet_rmd_store	.\pcnet.c	/^static inline void pcnet_rmd_store(PCNetState *s, struct pcnet_RMD *rmd,$/;"	f	file:
pcnet_s_reset	.\pcnet.c	/^static void pcnet_s_reset(PCNetState *s)$/;"	f	file:
pcnet_save	.\pcnet.c	/^static void pcnet_save(QEMUFile *f, void *opaque)$/;"	f	file:
pcnet_start	.\pcnet.c	/^static void pcnet_start(PCNetState *s)$/;"	f	file:
pcnet_stop	.\pcnet.c	/^static void pcnet_stop(PCNetState *s)$/;"	f	file:
pcnet_tdte_poll	.\pcnet.c	/^static int pcnet_tdte_poll(PCNetState *s)$/;"	f	file:
pcnet_tmd_load	.\pcnet.c	/^static inline void pcnet_tmd_load(PCNetState *s, struct pcnet_TMD *tmd,$/;"	f	file:
pcnet_tmd_store	.\pcnet.c	/^static inline void pcnet_tmd_store(PCNetState *s, const struct pcnet_TMD *tmd,$/;"	f	file:
pcnet_transmit	.\pcnet.c	/^static void pcnet_transmit(PCNetState *s)$/;"	f	file:
pcnet_update_irq	.\pcnet.c	/^static void pcnet_update_irq(PCNetState *s)$/;"	f	file:
pcntr	.\mcf5208.c	/^    uint16_t pcntr;$/;"	m	struct:__anon28	file:
pcr	.\cuda.c	/^    uint8_t pcr;    \/* Peripheral control register *\/$/;"	m	struct:CUDAState	file:
pcr	.\omap.c	/^    uint16_t pcr;$/;"	m	struct:omap_mcbsp_s	file:
pcspk_audio_init	.\pcspk.c	/^int pcspk_audio_init(AudioState *audio, qemu_irq *pic)$/;"	f
pcspk_callback	.\pcspk.c	/^static void pcspk_callback(void *opaque, int free)$/;"	f	file:
pcspk_init	.\pcspk.c	/^void pcspk_init(PITState *pit)$/;"	f
pcspk_ioport_read	.\pcspk.c	/^static uint32_t pcspk_ioport_read(void *opaque, uint32_t addr)$/;"	f	file:
pcspk_ioport_write	.\pcspk.c	/^static void pcspk_ioport_write(void *opaque, uint32_t addr, uint32_t val)$/;"	f	file:
pcspk_state	.\pcspk.c	/^static PCSpkState pcspk_state;$/;"	v	file:
pcsr	.\mcf5208.c	/^    uint16_t pcsr;$/;"	m	struct:__anon28	file:
pcsr	.\openpic.c	/^    uint32_t pcsr; \/* CPU sensitivity register *\/$/;"	m	struct:IRQ_dst_t	file:
pctp	.\openpic.c	/^    uint32_t pctp; \/* CPU current task priority *\/$/;"	m	struct:IRQ_dst_t	file:
pctra	.\sh7750.c	/^    uint32_t pctra;$/;"	m	struct:SH7750State	file:
pctrb	.\sh7750.c	/^    uint32_t pctrb;$/;"	m	struct:SH7750State	file:
pdebug	.\parallel.c	33;"	d	file:
pdebug	.\parallel.c	35;"	d	file:
pdr	.\pl061.c	/^    uint8_t pdr;$/;"	m	struct:__anon56	file:
pdtra	.\sh7750.c	/^    uint16_t pdtra;$/;"	m	struct:SH7750State	file:
pdtrb	.\sh7750.c	/^    uint16_t pdtrb;$/;"	m	struct:SH7750State	file:
pending	.\arm_gic.c	/^    unsigned pending:NCPU;$/;"	m	struct:gic_irq_state	file:
pending	.\lsi53c895a.c	/^    uint32_t pending;$/;"	m	struct:__anon24	file:
pending	.\openpic.c	/^    int pending;    \/* TRUE if IRQ is pending *\/$/;"	m	struct:IRQ_src_t	file:
pending	.\pckbd.c	/^    uint8_t pending;$/;"	m	struct:KBDState	file:
pending	.\pl050.c	/^    int pending;$/;"	m	struct:__anon55	file:
pending	.\sh_intc.h	/^    int pending; \/* emulates the result of signal and masking *\/$/;"	m	struct:intc_source
pending	.\sh_intc.h	/^    int pending; \/* number of interrupt sources that has pending set *\/$/;"	m	struct:intc_desc
pending	.\sun4c_intctl.c	/^    uint8_t pending;$/;"	m	struct:Sun4c_INTCTLState	file:
pending_int_mask	.\usb-uhci.c	/^    uint32_t pending_int_mask;$/;"	m	struct:UHCIState	file:
pending_request	.\omap.c	/^    int pending_request;$/;"	m	struct:omap_dma_channel_s	file:
per_cur	.\usb-ohci.c	/^    uint32_t per_cur;$/;"	m	struct:__anon123	file:
period	.\omap.c	/^    int64_t period;$/;"	m	struct:omap_lpg_s	file:
period	.\ptimer.c	/^    int64_t period;$/;"	m	struct:ptimer_state	file:
period_frac	.\ptimer.c	/^    uint32_t period_frac;$/;"	m	struct:ptimer_state	file:
periodic_timer	.\mc146818rtc.c	/^    QEMUTimer *periodic_timer;$/;"	m	struct:RTCState	file:
periph_freq	.\sh7750.c	/^    uint32_t periph_freq;$/;"	m	struct:SH7750State	file:
periph_pdtra	.\sh7750.c	/^    uint16_t periph_pdtra;	\/* Imposed by the peripherals *\/$/;"	m	struct:SH7750State	file:
periph_pdtrb	.\sh7750.c	/^    uint16_t periph_pdtrb;	\/* Imposed by the peripherals *\/$/;"	m	struct:SH7750State	file:
periph_portdira	.\sh7750.c	/^    uint16_t periph_portdira;	\/* Direction seen from the peripherals *\/$/;"	m	struct:SH7750State	file:
periph_portdirb	.\sh7750.c	/^    uint16_t periph_portdirb;	\/* Direction seen from the peripherals *\/$/;"	m	struct:SH7750State	file:
peripherals	.\stellaris.c	/^    uint32_t peripherals;$/;"	m	struct:__anon109	file:
perpendicular	.\fdc.c	/^    uint8_t perpendicular;    \/* 2.88 MB access mode    *\/$/;"	m	struct:fdrive_t	file:
pflash_cfi01_register	.\pflash_cfi01.c	/^pflash_t *pflash_cfi01_register(target_phys_addr_t base, ram_addr_t off,$/;"	f
pflash_cfi02_register	.\pflash_cfi02.c	/^pflash_t *pflash_cfi02_register(target_phys_addr_t base, ram_addr_t off,$/;"	f
pflash_read	.\pflash_cfi01.c	/^static uint32_t pflash_read (pflash_t *pfl, target_ulong offset, int width)$/;"	f	file:
pflash_read	.\pflash_cfi02.c	/^static uint32_t pflash_read (pflash_t *pfl, uint32_t offset, int width)$/;"	f	file:
pflash_read_ops	.\pflash_cfi01.c	/^static CPUReadMemoryFunc *pflash_read_ops[] = {$/;"	v	file:
pflash_read_ops	.\pflash_cfi02.c	/^static CPUReadMemoryFunc *pflash_read_ops[] = {$/;"	v	file:
pflash_readb	.\pflash_cfi01.c	/^static uint32_t pflash_readb (void *opaque, target_phys_addr_t addr)$/;"	f	file:
pflash_readb	.\pflash_cfi02.c	/^static uint32_t pflash_readb (void *opaque, target_phys_addr_t addr)$/;"	f	file:
pflash_readl	.\pflash_cfi01.c	/^static uint32_t pflash_readl (void *opaque, target_phys_addr_t addr)$/;"	f	file:
pflash_readl	.\pflash_cfi02.c	/^static uint32_t pflash_readl (void *opaque, target_phys_addr_t addr)$/;"	f	file:
pflash_readw	.\pflash_cfi01.c	/^static uint32_t pflash_readw (void *opaque, target_phys_addr_t addr)$/;"	f	file:
pflash_readw	.\pflash_cfi02.c	/^static uint32_t pflash_readw (void *opaque, target_phys_addr_t addr)$/;"	f	file:
pflash_t	.\flash.h	/^typedef struct pflash_t pflash_t;$/;"	t	typeref:struct:pflash_t
pflash_t	.\pflash_cfi01.c	/^struct pflash_t {$/;"	s	file:
pflash_t	.\pflash_cfi02.c	/^struct pflash_t {$/;"	s	file:
pflash_timer	.\pflash_cfi01.c	/^static void pflash_timer (void *opaque)$/;"	f	file:
pflash_timer	.\pflash_cfi02.c	/^static void pflash_timer (void *opaque)$/;"	f	file:
pflash_update	.\pflash_cfi01.c	/^static void pflash_update(pflash_t *pfl, int offset,$/;"	f	file:
pflash_update	.\pflash_cfi02.c	/^static void pflash_update(pflash_t *pfl, int offset,$/;"	f	file:
pflash_write	.\pflash_cfi01.c	/^static void pflash_write (pflash_t *pfl, target_ulong offset, uint32_t value,$/;"	f	file:
pflash_write	.\pflash_cfi02.c	/^static void pflash_write (pflash_t *pfl, uint32_t offset, uint32_t value,$/;"	f	file:
pflash_write_ops	.\pflash_cfi01.c	/^static CPUWriteMemoryFunc *pflash_write_ops[] = {$/;"	v	file:
pflash_write_ops	.\pflash_cfi02.c	/^static CPUWriteMemoryFunc *pflash_write_ops[] = {$/;"	v	file:
pflash_writeb	.\pflash_cfi01.c	/^static void pflash_writeb (void *opaque, target_phys_addr_t addr,$/;"	f	file:
pflash_writeb	.\pflash_cfi02.c	/^static void pflash_writeb (void *opaque, target_phys_addr_t addr,$/;"	f	file:
pflash_writel	.\pflash_cfi01.c	/^static void pflash_writel (void *opaque, target_phys_addr_t addr,$/;"	f	file:
pflash_writel	.\pflash_cfi02.c	/^static void pflash_writel (void *opaque, target_phys_addr_t addr,$/;"	f	file:
pflash_writew	.\pflash_cfi01.c	/^static void pflash_writew (void *opaque, target_phys_addr_t addr,$/;"	f	file:
pflash_writew	.\pflash_cfi02.c	/^static void pflash_writew (void *opaque, target_phys_addr_t addr,$/;"	f	file:
phad_keyword	.\spitz.c	/^    uint32_t phad_keyword;$/;"	m	struct:sl_param_info	file:
phadadj	.\spitz.c	/^    int32_t phadadj;$/;"	m	struct:sl_param_info	file:
phys	.\eepro100.c	/^    uint8_t phys[6];            \/* mac address *\/$/;"	m	struct:__anon16	file:
phys	.\ne2000.c	/^    uint8_t phys[6]; \/* mac address *\/$/;"	m	struct:NE2000State	file:
phys	.\rtl8139.c	/^    uint8_t phys[8]; \/* mac address *\/$/;"	m	struct:RTL8139State	file:
phys_dsp	.\omap.c	/^    target_phys_addr_t phys_dsp;$/;"	m	struct:omap_map_s	file:
phys_framebuffer	.\omap.h	/^    ram_addr_t phys_framebuffer[2];$/;"	m	struct:omap_dma_lcd_channel_s
phys_mem_read	.\pcnet.c	/^    void (*phys_mem_read)(void *dma_opaque, target_phys_addr_t addr,$/;"	m	struct:PCNetState_st	file:
phys_mem_write	.\pcnet.c	/^    void (*phys_mem_write)(void *dma_opaque, target_phys_addr_t addr,$/;"	m	struct:PCNetState_st	file:
phys_mpu	.\omap.c	/^    target_phys_addr_t phys_mpu;$/;"	m	struct:omap_map_s	file:
piar	.\pxa.h	/^    uint32_t piar;$/;"	m	struct:pxa2xx_state_s
pic	.\pxa.h	/^    qemu_irq *pic;$/;"	m	struct:pxa2xx_state_s
pic	.\pxa2xx_gpio.c	/^    qemu_irq *pic;$/;"	m	struct:pxa2xx_gpio_info_s	file:
pic	.\sb16.c	/^    qemu_irq *pic;$/;"	m	struct:SB16State	file:
pic_enable	.\versatilepb.c	/^  uint32_t pic_enable;$/;"	m	struct:vpb_sic_state	file:
pic_get_irq	.\i8259.c	/^static int pic_get_irq(PicState *s)$/;"	f	file:
pic_info	.\an5206.c	/^void pic_info(void)$/;"	f
pic_info	.\arm_pic.c	/^void pic_info(void)$/;"	f
pic_info	.\etraxfs.c	/^void pic_info()$/;"	f
pic_info	.\i8259.c	/^void pic_info(void)$/;"	f
pic_info	.\shix.c	/^void pic_info()$/;"	f
pic_info	.\sun4m.c	/^void pic_info()$/;"	f
pic_info	.\sun4u.c	/^void pic_info()$/;"	f
pic_init1	.\i8259.c	/^static void pic_init1(int io_addr, int elcr_addr, PicState *s)$/;"	f	file:
pic_intack	.\i8259.c	/^static inline void pic_intack(PicState *s, int irq)$/;"	f	file:
pic_intack_read	.\i8259.c	/^uint32_t pic_intack_read(PicState2 *s)$/;"	f
pic_ioport_read	.\i8259.c	/^static uint32_t pic_ioport_read(void *opaque, uint32_t addr1)$/;"	f	file:
pic_ioport_write	.\i8259.c	/^static void pic_ioport_write(void *opaque, uint32_t addr, uint32_t val)$/;"	f	file:
pic_irq_request	.\pc.c	/^static void pic_irq_request(void *opaque, int irq, int level)$/;"	f	file:
pic_load	.\i8259.c	/^static int pic_load(QEMUFile *f, void *opaque, int version_id)$/;"	f	file:
pic_mem_index	.\macio.c	/^    int pic_mem_index;$/;"	m	struct:macio_state_t	file:
pic_poll_read	.\i8259.c	/^static uint32_t pic_poll_read (PicState *s, uint32_t addr1)$/;"	f	file:
pic_read	.\heathrow_pic.c	/^static CPUReadMemoryFunc *pic_read[] = {$/;"	v	file:
pic_read_irq	.\i8259.c	/^int pic_read_irq(PicState2 *s)$/;"	f
pic_readl	.\heathrow_pic.c	/^static uint32_t pic_readl (void *opaque, target_phys_addr_t addr)$/;"	f	file:
pic_reset	.\i8259.c	/^static void pic_reset(void *opaque)$/;"	f	file:
pic_save	.\i8259.c	/^static void pic_save(QEMUFile *f, void *opaque)$/;"	f	file:
pic_set_alt_irq_func	.\i8259.c	/^void pic_set_alt_irq_func(PicState2 *s, SetIRQFunc *alt_irq_func,$/;"	f
pic_set_irq1	.\i8259.c	/^static inline void pic_set_irq1(PicState *s, int irq, int level)$/;"	f	file:
pic_update_irq	.\i8259.c	/^void pic_update_irq(PicState2 *s)$/;"	f
pic_write	.\heathrow_pic.c	/^static CPUWriteMemoryFunc *pic_write[] = {$/;"	v	file:
pic_writel	.\heathrow_pic.c	/^static void pic_writel (void *opaque, target_phys_addr_t addr, uint32_t value)$/;"	f	file:
pics	.\heathrow_pic.c	/^    HeathrowPIC pics[2];$/;"	m	struct:HeathrowPICS	file:
pics	.\i8259.c	/^    PicState pics[2];$/;"	m	struct:PicState2	file:
pics_state	.\i8259.c	/^    PicState2 *pics_state;$/;"	m	struct:PicState	file:
pid	.\usb.h	/^    int pid;$/;"	m	struct:USBPacket
piix3_dev	.\piix_pci.c	/^PCIDevice *piix3_dev;$/;"	v
piix3_init	.\piix_pci.c	/^int piix3_init(PCIBus *bus, int devfn)$/;"	f
piix3_reset	.\ide.c	/^static void piix3_reset(PCIIDEState *d)$/;"	f	file:
piix3_reset	.\piix_pci.c	/^static void piix3_reset(PCIDevice *d)$/;"	f	file:
piix3_set_irq	.\piix_pci.c	/^static void piix3_set_irq(qemu_irq *pic, int irq_num, int level)$/;"	f	file:
piix4_dev	.\piix_pci.c	/^PCIDevice *piix4_dev;$/;"	v
piix4_init	.\piix_pci.c	/^int piix4_init(PCIBus *bus, int devfn)$/;"	f
piix4_pm_init	.\acpi.c	/^i2c_bus *piix4_pm_init(PCIBus *bus, int devfn, uint32_t smb_io_base)$/;"	f
piix4_reset	.\piix_pci.c	/^static void piix4_reset(PCIDevice *d)$/;"	f	file:
piix_load	.\piix_pci.c	/^static int piix_load(QEMUFile* f, void *opaque, int version_id)$/;"	f	file:
piix_save	.\piix_pci.c	/^static void piix_save(QEMUFile* f, void *opaque)$/;"	f	file:
pil_out	.\sbi.c	/^    uint32_t pil_out[MAX_CPUS];$/;"	m	struct:SBIState	file:
pil_out	.\slavio_intctl.c	/^    uint32_t pil_out[MAX_CPUS];$/;"	m	struct:SLAVIO_INTCTLState	file:
pil_out	.\sun4c_intctl.c	/^    uint32_t pil_out;$/;"	m	struct:Sun4c_INTCTLState	file:
pin_cfg_base	.\omap.h	/^    target_phys_addr_t pin_cfg_base;$/;"	m	struct:omap_mpu_state_s
pin_func	.\tsc210x.c	/^    int pin_func;$/;"	m	struct:tsc210x_state_s	file:
pins	.\ide.c	/^    uint8_t pins;$/;"	m	struct:md_s	file:
pins	.\mst_fpga.c	/^	qemu_irq *pins;$/;"	m	struct:mst_irq_state	file:
pins	.\omap.c	/^    qemu_irq *pins;$/;"	m	struct:omap_intr_handler_s	file:
pins	.\omap.c	/^    uint16_t pins;$/;"	m	struct:omap_gpio_s	file:
pint	.\openpic.c	/^    uint32_t pint; \/* Processor initialization register *\/$/;"	m	struct:openpic_t	file:
pint	.\tsc210x.c	/^    qemu_irq pint;$/;"	m	struct:tsc210x_state_s	file:
pio	.\pxa2xx_dma.c	/^    uint32_t pio;$/;"	m	struct:pxa2xx_dma_state_s	file:
pit	.\mips_malta.c	/^static PITState *pit;$/;"	v	file:
pit	.\mips_r4k.c	/^static PITState *pit; \/* PIT i8254 *\/$/;"	v	file:
pit	.\pc.c	/^static PITState *pit;$/;"	v	file:
pit	.\pcspk.c	/^    PITState *pit;$/;"	m	struct:__anon51	file:
pit_count	.\pcspk.c	/^    unsigned int pit_count;$/;"	m	struct:__anon51	file:
pit_get_count	.\i8254.c	/^static int pit_get_count(PITChannelState *s)$/;"	f	file:
pit_get_gate	.\i8254.c	/^int pit_get_gate(PITState *pit, int channel)$/;"	f
pit_get_initial_count	.\i8254.c	/^int pit_get_initial_count(PITState *pit, int channel)$/;"	f
pit_get_mode	.\i8254.c	/^int pit_get_mode(PITState *pit, int channel)$/;"	f
pit_get_next_transition_time	.\i8254.c	/^static int64_t pit_get_next_transition_time(PITChannelState *s,$/;"	f	file:
pit_get_out	.\i8254.c	/^int pit_get_out(PITState *pit, int channel, int64_t current_time)$/;"	f
pit_get_out1	.\i8254.c	/^static int pit_get_out1(PITChannelState *s, int64_t current_time)$/;"	f	file:
pit_init	.\i8254.c	/^PITState *pit_init(int base, qemu_irq irq)$/;"	f
pit_ioport_read	.\i8254.c	/^static uint32_t pit_ioport_read(void *opaque, uint32_t addr)$/;"	f	file:
pit_ioport_write	.\i8254.c	/^static void pit_ioport_write(void *opaque, uint32_t addr, uint32_t val)$/;"	f	file:
pit_irq_timer	.\i8254.c	/^static void pit_irq_timer(void *opaque)$/;"	f	file:
pit_irq_timer_update	.\i8254.c	/^static void pit_irq_timer_update(PITChannelState *s, int64_t current_time)$/;"	f	file:
pit_latch_count	.\i8254.c	/^static void pit_latch_count(PITChannelState *s)$/;"	f	file:
pit_load	.\i8254.c	/^static int pit_load(QEMUFile *f, void *opaque, int version_id)$/;"	f	file:
pit_load_count	.\i8254.c	/^static inline void pit_load_count(PITChannelState *s, int val)$/;"	f	file:
pit_reload	.\ppc.c	/^    uint64_t pit_reload;  \/* PIT auto-reload value        *\/$/;"	m	struct:ppcemb_timer_t	file:
pit_reset	.\i8254.c	/^static void pit_reset(void *opaque)$/;"	f	file:
pit_save	.\i8254.c	/^static void pit_save(QEMUFile *f, void *opaque)$/;"	f	file:
pit_set_gate	.\i8254.c	/^void pit_set_gate(PITState *pit, int channel, int val)$/;"	f
pit_state	.\i8254.c	/^static PITState pit_state;$/;"	v	file:
pl011_can_receive	.\pl011.c	/^static int pl011_can_receive(void *opaque)$/;"	f	file:
pl011_event	.\pl011.c	/^static void pl011_event(void *opaque, int event)$/;"	f	file:
pl011_id	.\pl011.c	/^static const unsigned char pl011_id[2][8] = {$/;"	v	file:
pl011_init	.\pl011.c	/^void pl011_init(uint32_t base, qemu_irq irq,$/;"	f
pl011_read	.\pl011.c	/^static uint32_t pl011_read(void *opaque, target_phys_addr_t offset)$/;"	f	file:
pl011_readfn	.\pl011.c	/^static CPUReadMemoryFunc *pl011_readfn[] = {$/;"	v	file:
pl011_receive	.\pl011.c	/^static void pl011_receive(void *opaque, const uint8_t *buf, int size)$/;"	f	file:
pl011_set_read_trigger	.\pl011.c	/^static void pl011_set_read_trigger(pl011_state *s)$/;"	f	file:
pl011_state	.\pl011.c	/^} pl011_state;$/;"	t	typeref:struct:__anon52	file:
pl011_type	.\primecell.h	/^enum pl011_type {$/;"	g
pl011_update	.\pl011.c	/^static void pl011_update(pl011_state *s)$/;"	f	file:
pl011_write	.\pl011.c	/^static void pl011_write(void *opaque, target_phys_addr_t offset,$/;"	f	file:
pl011_writefn	.\pl011.c	/^static CPUWriteMemoryFunc *pl011_writefn[] = {$/;"	v	file:
pl022_id	.\pl022.c	/^static const unsigned char pl022_id[8] =$/;"	v	file:
pl022_init	.\pl022.c	/^void pl022_init(uint32_t base, qemu_irq irq, int (*xfer_cb)(void *, int),$/;"	f
pl022_read	.\pl022.c	/^static uint32_t pl022_read(void *opaque, target_phys_addr_t offset)$/;"	f	file:
pl022_readfn	.\pl022.c	/^static CPUReadMemoryFunc *pl022_readfn[] = {$/;"	v	file:
pl022_reset	.\pl022.c	/^static void pl022_reset(pl022_state *s)$/;"	f	file:
pl022_state	.\pl022.c	/^} pl022_state;$/;"	t	typeref:struct:__anon53	file:
pl022_update	.\pl022.c	/^static void pl022_update(pl022_state *s)$/;"	f	file:
pl022_write	.\pl022.c	/^static void pl022_write(void *opaque, target_phys_addr_t offset,$/;"	f	file:
pl022_writefn	.\pl022.c	/^static CPUWriteMemoryFunc *pl022_writefn[] = {$/;"	v	file:
pl022_xfer	.\pl022.c	/^static void pl022_xfer(pl022_state *s)$/;"	f	file:
pl031_get_count	.\pl031.c	/^static uint32_t pl031_get_count(pl031_state *s)$/;"	f	file:
pl031_id	.\pl031.c	/^static const unsigned char pl031_id[] = {$/;"	v	file:
pl031_init	.\pl031.c	/^void pl031_init(uint32_t base, qemu_irq irq)$/;"	f
pl031_interrupt	.\pl031.c	/^static void pl031_interrupt(void * opaque)$/;"	f	file:
pl031_read	.\pl031.c	/^static uint32_t pl031_read(void *opaque, target_phys_addr_t offset)$/;"	f	file:
pl031_readfn	.\pl031.c	/^static CPUReadMemoryFunc * pl031_readfn[] = {$/;"	v	file:
pl031_set_alarm	.\pl031.c	/^static void pl031_set_alarm(pl031_state *s)$/;"	f	file:
pl031_state	.\pl031.c	/^} pl031_state;$/;"	t	typeref:struct:__anon54	file:
pl031_update	.\pl031.c	/^static void pl031_update(pl031_state *s)$/;"	f	file:
pl031_write	.\pl031.c	/^static void pl031_write(void * opaque, target_phys_addr_t offset,$/;"	f	file:
pl031_writefn	.\pl031.c	/^static CPUWriteMemoryFunc * pl031_writefn[] = {$/;"	v	file:
pl050_id	.\pl050.c	/^static const unsigned char pl050_id[] =$/;"	v	file:
pl050_init	.\pl050.c	/^void pl050_init(uint32_t base, qemu_irq irq, int is_mouse)$/;"	f
pl050_read	.\pl050.c	/^static uint32_t pl050_read(void *opaque, target_phys_addr_t offset)$/;"	f	file:
pl050_readfn	.\pl050.c	/^static CPUReadMemoryFunc *pl050_readfn[] = {$/;"	v	file:
pl050_state	.\pl050.c	/^} pl050_state;$/;"	t	typeref:struct:__anon55	file:
pl050_update	.\pl050.c	/^static void pl050_update(void *opaque, int level)$/;"	f	file:
pl050_write	.\pl050.c	/^static void pl050_write(void *opaque, target_phys_addr_t offset,$/;"	f	file:
pl050_writefn	.\pl050.c	/^static CPUWriteMemoryFunc *pl050_writefn[] = {$/;"	v	file:
pl061_id	.\pl061.c	/^static const uint8_t pl061_id[12] =$/;"	v	file:
pl061_init	.\pl061.c	/^qemu_irq *pl061_init(uint32_t base, qemu_irq irq, qemu_irq **out)$/;"	f
pl061_read	.\pl061.c	/^static uint32_t pl061_read(void *opaque, target_phys_addr_t offset)$/;"	f	file:
pl061_readfn	.\pl061.c	/^static CPUReadMemoryFunc *pl061_readfn[] = {$/;"	v	file:
pl061_reset	.\pl061.c	/^static void pl061_reset(pl061_state *s)$/;"	f	file:
pl061_set_irq	.\pl061.c	/^static void pl061_set_irq(void * opaque, int irq, int level)$/;"	f	file:
pl061_state	.\pl061.c	/^} pl061_state;$/;"	t	typeref:struct:__anon56	file:
pl061_update	.\pl061.c	/^static void pl061_update(pl061_state *s)$/;"	f	file:
pl061_write	.\pl061.c	/^static void pl061_write(void *opaque, target_phys_addr_t offset,$/;"	f	file:
pl061_writefn	.\pl061.c	/^static CPUWriteMemoryFunc *pl061_writefn[] = {$/;"	v	file:
pl080_channel	.\pl080.c	/^} pl080_channel;$/;"	t	typeref:struct:__anon57	file:
pl080_id	.\pl080.c	/^static const unsigned char pl080_id[] =$/;"	v	file:
pl080_init	.\pl080.c	/^void *pl080_init(uint32_t base, qemu_irq irq, int nchannels)$/;"	f
pl080_read	.\pl080.c	/^static uint32_t pl080_read(void *opaque, target_phys_addr_t offset)$/;"	f	file:
pl080_readfn	.\pl080.c	/^static CPUReadMemoryFunc *pl080_readfn[] = {$/;"	v	file:
pl080_run	.\pl080.c	/^static void pl080_run(pl080_state *s)$/;"	f	file:
pl080_state	.\pl080.c	/^} pl080_state;$/;"	t	typeref:struct:__anon58	file:
pl080_update	.\pl080.c	/^static void pl080_update(pl080_state *s)$/;"	f	file:
pl080_write	.\pl080.c	/^static void pl080_write(void *opaque, target_phys_addr_t offset,$/;"	f	file:
pl080_writefn	.\pl080.c	/^static CPUWriteMemoryFunc *pl080_writefn[] = {$/;"	v	file:
pl081_id	.\pl080.c	/^static const unsigned char pl081_id[] =$/;"	v	file:
pl110_bppmode	.\pl110.c	/^enum pl110_bppmode$/;"	g	file:
pl110_enabled	.\pl110.c	/^static int pl110_enabled(pl110_state *s)$/;"	f	file:
pl110_id	.\pl110.c	/^static const unsigned char pl110_id[] =$/;"	v	file:
pl110_init	.\pl110.c	/^void *pl110_init(DisplayState *ds, uint32_t base, qemu_irq irq,$/;"	f
pl110_invalidate_display	.\pl110.c	/^static void pl110_invalidate_display(void * opaque)$/;"	f	file:
pl110_read	.\pl110.c	/^static uint32_t pl110_read(void *opaque, target_phys_addr_t offset)$/;"	f	file:
pl110_readfn	.\pl110.c	/^static CPUReadMemoryFunc *pl110_readfn[] = {$/;"	v	file:
pl110_resize	.\pl110.c	/^static void pl110_resize(pl110_state *s, int width, int height)$/;"	f	file:
pl110_state	.\pl110.c	/^} pl110_state;$/;"	t	typeref:struct:__anon59	file:
pl110_update	.\pl110.c	/^static void pl110_update(pl110_state *s)$/;"	f	file:
pl110_update_display	.\pl110.c	/^static void pl110_update_display(void *opaque)$/;"	f	file:
pl110_update_pallette	.\pl110.c	/^static void pl110_update_pallette(pl110_state *s, int n)$/;"	f	file:
pl110_versatile_id	.\pl110.c	59;"	d	file:
pl110_write	.\pl110.c	/^static void pl110_write(void *opaque, target_phys_addr_t offset,$/;"	f	file:
pl110_writefn	.\pl110.c	/^static CPUWriteMemoryFunc *pl110_writefn[] = {$/;"	v	file:
pl181_fifo_pop	.\pl181.c	/^static uint32_t pl181_fifo_pop(pl181_state *s)$/;"	f	file:
pl181_fifo_push	.\pl181.c	/^static void pl181_fifo_push(pl181_state *s, uint32_t value)$/;"	f	file:
pl181_fifo_run	.\pl181.c	/^static void pl181_fifo_run(pl181_state *s)$/;"	f	file:
pl181_id	.\pl181.c	/^static const unsigned char pl181_id[] =$/;"	v	file:
pl181_init	.\pl181.c	/^void pl181_init(uint32_t base, BlockDriverState *bd,$/;"	f
pl181_read	.\pl181.c	/^static uint32_t pl181_read(void *opaque, target_phys_addr_t offset)$/;"	f	file:
pl181_readfn	.\pl181.c	/^static CPUReadMemoryFunc *pl181_readfn[] = {$/;"	v	file:
pl181_reset	.\pl181.c	/^static void pl181_reset(void *opaque)$/;"	f	file:
pl181_send_command	.\pl181.c	/^static void pl181_send_command(pl181_state *s)$/;"	f	file:
pl181_state	.\pl181.c	/^} pl181_state;$/;"	t	typeref:struct:__anon60	file:
pl181_update	.\pl181.c	/^static void pl181_update(pl181_state *s)$/;"	f	file:
pl181_write	.\pl181.c	/^static void pl181_write(void *opaque, target_phys_addr_t offset,$/;"	f	file:
pl181_writefn	.\pl181.c	/^static CPUWriteMemoryFunc *pl181_writefn[] = {$/;"	v	file:
pl190_id	.\pl190.c	/^static const unsigned char pl190_id[] =$/;"	v	file:
pl190_init	.\pl190.c	/^qemu_irq *pl190_init(uint32_t base, qemu_irq irq, qemu_irq fiq)$/;"	f
pl190_irq_level	.\pl190.c	/^static inline uint32_t pl190_irq_level(pl190_state *s)$/;"	f	file:
pl190_read	.\pl190.c	/^static uint32_t pl190_read(void *opaque, target_phys_addr_t offset)$/;"	f	file:
pl190_readfn	.\pl190.c	/^static CPUReadMemoryFunc *pl190_readfn[] = {$/;"	v	file:
pl190_reset	.\pl190.c	/^static void pl190_reset(pl190_state *s)$/;"	f	file:
pl190_set_irq	.\pl190.c	/^static void pl190_set_irq(void *opaque, int irq, int level)$/;"	f	file:
pl190_state	.\pl190.c	/^} pl190_state;$/;"	t	typeref:struct:__anon61	file:
pl190_update	.\pl190.c	/^static void pl190_update(pl190_state *s)$/;"	f	file:
pl190_update_vectors	.\pl190.c	/^static void pl190_update_vectors(pl190_state *s)$/;"	f	file:
pl190_write	.\pl190.c	/^static void pl190_write(void *opaque, target_phys_addr_t offset, uint32_t val)$/;"	f	file:
pl190_writefn	.\pl190.c	/^static CPUWriteMemoryFunc *pl190_writefn[] = {$/;"	v	file:
play_pos	.\pcspk.c	/^    unsigned int play_pos;$/;"	m	struct:__anon51	file:
pll	.\tsc210x.c	/^    uint16_t pll[2];$/;"	m	struct:tsc210x_state_s	file:
pllcfg_fury	.\stellaris.c	/^static uint32_t pllcfg_fury[16] = {$/;"	v	file:
pllcfg_sandstorm	.\stellaris.c	/^static uint32_t pllcfg_sandstorm[16] = {$/;"	v	file:
pllmr	.\ppc405_uc.c	/^    uint32_t pllmr;$/;"	m	struct:ppc405cr_cpc_t	file:
pllmr	.\ppc405_uc.c	/^    uint32_t pllmr[2];$/;"	m	struct:ppc405ep_cpc_t	file:
plm	.\omap_lcdc.c	/^    int plm;$/;"	m	struct:omap_lcd_panel_s	file:
pm_am	.\omap.c	/^    int pm_am;$/;"	m	struct:omap_rtc_s	file:
pm_base	.\pxa.h	/^    target_phys_addr_t pm_base;$/;"	m	struct:pxa2xx_state_s
pm_io_space_update	.\acpi.c	/^static void pm_io_space_update(PIIX4PMState *s)$/;"	f	file:
pm_ioport_readl	.\acpi.c	/^static uint32_t pm_ioport_readl(void *opaque, uint32_t addr)$/;"	f	file:
pm_ioport_readw	.\acpi.c	/^static uint32_t pm_ioport_readw(void *opaque, uint32_t addr)$/;"	f	file:
pm_ioport_writel	.\acpi.c	/^static void pm_ioport_writel(void *opaque, uint32_t addr, uint32_t val)$/;"	f	file:
pm_ioport_writew	.\acpi.c	/^static void pm_ioport_writew(void *opaque, uint32_t addr, uint32_t val)$/;"	f	file:
pm_load	.\acpi.c	/^static int pm_load(QEMUFile* f,void* opaque,int version_id)$/;"	f	file:
pm_regs	.\pxa.h	/^    uint32_t pm_regs[0x40];$/;"	m	struct:pxa2xx_state_s
pm_save	.\acpi.c	/^static void pm_save(QEMUFile* f,void *opaque)$/;"	f	file:
pm_smi_readb	.\acpi.c	/^static uint32_t pm_smi_readb(void *opaque, uint32_t addr)$/;"	f	file:
pm_smi_writeb	.\acpi.c	/^static void pm_smi_writeb(void *opaque, uint32_t addr, uint32_t val)$/;"	f	file:
pm_tmr_timer	.\acpi.c	/^static void pm_tmr_timer(void *opaque)$/;"	f	file:
pm_update_sci	.\acpi.c	/^static void pm_update_sci(PIIX4PMState *s)$/;"	f	file:
pm_write_config	.\acpi.c	/^static void pm_write_config(PCIDevice *d,$/;"	f	file:
pmac_format_nvram_partition	.\mac_nvram.c	/^void pmac_format_nvram_partition (MacIONVRAMState *nvr, int len)$/;"	f
pmac_ide_init	.\ide.c	/^int pmac_ide_init (BlockDriverState **hd_table, qemu_irq irq)$/;"	f
pmac_ide_read	.\ide.c	/^static CPUReadMemoryFunc *pmac_ide_read[] = {$/;"	v	file:
pmac_ide_readb	.\ide.c	/^static uint32_t pmac_ide_readb (void *opaque,target_phys_addr_t addr)$/;"	f	file:
pmac_ide_readl	.\ide.c	/^static uint32_t pmac_ide_readl (void *opaque,target_phys_addr_t addr)$/;"	f	file:
pmac_ide_readw	.\ide.c	/^static uint32_t pmac_ide_readw (void *opaque,target_phys_addr_t addr)$/;"	f	file:
pmac_ide_write	.\ide.c	/^static CPUWriteMemoryFunc *pmac_ide_write[] = {$/;"	v	file:
pmac_ide_writeb	.\ide.c	/^static void pmac_ide_writeb (void *opaque,$/;"	f	file:
pmac_ide_writel	.\ide.c	/^static void pmac_ide_writel (void *opaque,$/;"	f	file:
pmac_ide_writew	.\ide.c	/^static void pmac_ide_writew (void *opaque,$/;"	f	file:
pmcntrl	.\acpi.c	/^    uint16_t pmcntrl;$/;"	m	struct:PIIX4PMState	file:
pmen	.\acpi.c	/^    uint16_t pmen;$/;"	m	struct:PIIX4PMState	file:
pmit	.\ppc405_uc.c	/^    uint32_t pmit;$/;"	m	struct:ppc4xx_sdram_t	file:
pmjad1	.\lsi53c895a.c	/^    uint32_t pmjad1;$/;"	m	struct:__anon25	file:
pmjad2	.\lsi53c895a.c	/^    uint32_t pmjad2;$/;"	m	struct:__anon25	file:
pmnc	.\pxa.h	/^    uint32_t pmnc;$/;"	m	struct:pxa2xx_state_s
pmr	.\mcf5208.c	/^    uint16_t pmr;$/;"	m	struct:__anon28	file:
pmsts	.\acpi.c	/^    uint16_t pmsts;$/;"	m	struct:PIIX4PMState	file:
pointer	.\eepro100.c	/^    uint32_t pointer;$/;"	m	struct:__anon16	file:
pol	.\ppc405_uc.c	/^    uint32_t pol;$/;"	m	struct:ppc405_dma_t	file:
pol	.\wm8750.c	/^    uint8_t diff[2], pol, ds, monomix[2], alc, mute;$/;"	m	struct:wm8750_s	file:
polarity	.\max7310.c	/^    uint8_t polarity;$/;"	m	struct:max7310_s	file:
poll	.\i8259.c	/^    uint8_t poll;$/;"	m	struct:PicState	file:
poll_index	.\ppc_mac.h	/^    int poll_index;$/;"	m	struct:ADBBusState
poll_timer	.\pcnet.c	/^    QEMUTimer *poll_timer;$/;"	m	struct:PCNetState_st	file:
port	.\adlib.c	/^    int port;$/;"	m	struct:__anon1	file:
port	.\omap.c	/^    enum omap_dma_port port[2];$/;"	m	struct:omap_dma_channel_s	typeref:enum:omap_dma_channel_s::omap_dma_port	file:
port	.\omap.h	/^    } port[omap_dma_port_last];$/;"	m	struct:omap_mpu_state_s	typeref:struct:omap_mpu_state_s::omap_dma_port_if_s
port	.\sb16.c	/^    int port;$/;"	m	struct:SB16State	file:
port	.\sb16.c	/^    int port;$/;"	m	struct:__anon88	file:
port	.\usb-hub.c	/^    USBPort port;$/;"	m	struct:USBHubPort	file:
port	.\usb-ohci.c	/^    USBPort port;$/;"	m	struct:OHCIPort	file:
port	.\usb-uhci.c	/^    USBPort port;$/;"	m	struct:UHCIPort	file:
portDirection	.\fmopl.h	/^	UINT8 portDirection;$/;"	m	struct:fm_opl_f
portLatch	.\fmopl.h	/^	UINT8 portLatch;$/;"	m	struct:fm_opl_f
port_change_cb	.\sh.h	/^    int (*port_change_cb) (uint16_t porta, uint16_t portb,$/;"	m	struct:__anon93
port_param	.\fmopl.h	/^	int port_param;$/;"	m	struct:fm_opl_f
port_state	.\vmport.c	/^static VMPortState port_state;$/;"	v	file:
porta_changed	.\sh7750.c	/^static void porta_changed(SH7750State * s, uint16_t prev)$/;"	f	file:
porta_lines	.\sh7750.c	/^static uint16_t porta_lines(SH7750State * s)$/;"	f	file:
portamask_trigger	.\sh.h	/^    uint16_t portamask_trigger;$/;"	m	struct:__anon93
portb_changed	.\sh7750.c	/^static void portb_changed(SH7750State * s, uint16_t prev)$/;"	f	file:
portb_lines	.\sh7750.c	/^static uint16_t portb_lines(SH7750State * s)$/;"	f	file:
portbmask_trigger	.\sh.h	/^    uint16_t portbmask_trigger;$/;"	m	struct:__anon93
portdir	.\sh7750.c	/^static uint16_t portdir(uint32_t v)$/;"	f	file:
portdira	.\sh7750.c	/^    uint16_t portdira;		\/* Cached *\/$/;"	m	struct:SH7750State	file:
portdirb	.\sh7750.c	/^    uint16_t portdirb;		\/* Cached *\/$/;"	m	struct:SH7750State	file:
porthandler_r	.\fmopl.h	/^	OPL_PORTHANDLER_R porthandler_r;$/;"	m	struct:fm_opl_f
porthandler_w	.\fmopl.h	/^	OPL_PORTHANDLER_W porthandler_w;$/;"	m	struct:fm_opl_f
portpullup	.\sh7750.c	/^static uint16_t portpullup(uint32_t v)$/;"	f	file:
portpullupa	.\sh7750.c	/^    uint16_t portpullupa;	\/* Cached *\/$/;"	m	struct:SH7750State	file:
portpullupb	.\sh7750.c	/^    uint16_t portpullupb;	\/* Cached *\/$/;"	m	struct:SH7750State	file:
ports	.\usb-hub.c	/^    USBHubPort ports[MAX_PORTS];$/;"	m	struct:USBHubState	file:
ports	.\usb-uhci.c	/^    UHCIPort ports[NB_PORTS];$/;"	m	struct:UHCIState	file:
pos	.\adlib.c	/^    int left, pos, samples;$/;"	m	struct:__anon2	file:
post_incremented	.\omap.h	/^    post_incremented,$/;"	e	enum:__anon37
power	.\omap.c	/^    uint8_t power;$/;"	m	struct:omap_lpg_s	file:
power	.\pl181.c	/^    uint32_t power;$/;"	m	struct:__anon60	file:
power	.\spitz.c	/^    uint16_t power;$/;"	m	struct:scoop_info_s	file:
power	.\wm8750.c	/^    uint8_t path[4], mpath[2], power, format;$/;"	m	struct:wm8750_s	file:
power_base	.\slavio_misc.c	/^    target_phys_addr_t power_base;$/;"	m	struct:MiscState	file:
power_base	.\sun4m.c	/^    target_phys_addr_t tcx_base, cs_base, power_base;$/;"	m	struct:hwdef	file:
powerdown	.\tsc210x.c	/^    int64_t powerdown;$/;"	m	struct:tsc210x_state_s	file:
ppc405_dma_init	.\ppc405_uc.c	/^void ppc405_dma_init (CPUState *env, qemu_irq irqs[4])$/;"	f
ppc405_dma_reset	.\ppc405_uc.c	/^static void ppc405_dma_reset (void *opaque)$/;"	f	file:
ppc405_dma_t	.\ppc405_uc.c	/^struct ppc405_dma_t {$/;"	s	file:
ppc405_dma_t	.\ppc405_uc.c	/^typedef struct ppc405_dma_t ppc405_dma_t;$/;"	t	typeref:struct:ppc405_dma_t	file:
ppc405_ebc_init	.\ppc405_uc.c	/^void ppc405_ebc_init (CPUState *env)$/;"	f
ppc405_gpio_init	.\ppc405_uc.c	/^void ppc405_gpio_init (CPUState *env, ppc4xx_mmio_t *mmio,$/;"	f
ppc405_gpio_read	.\ppc405_uc.c	/^static CPUReadMemoryFunc *ppc405_gpio_read[] = {$/;"	v	file:
ppc405_gpio_readb	.\ppc405_uc.c	/^static uint32_t ppc405_gpio_readb (void *opaque, target_phys_addr_t addr)$/;"	f	file:
ppc405_gpio_readl	.\ppc405_uc.c	/^static uint32_t ppc405_gpio_readl (void *opaque, target_phys_addr_t addr)$/;"	f	file:
ppc405_gpio_readw	.\ppc405_uc.c	/^static uint32_t ppc405_gpio_readw (void *opaque, target_phys_addr_t addr)$/;"	f	file:
ppc405_gpio_reset	.\ppc405_uc.c	/^static void ppc405_gpio_reset (void *opaque)$/;"	f	file:
ppc405_gpio_t	.\ppc405_uc.c	/^struct ppc405_gpio_t {$/;"	s	file:
ppc405_gpio_t	.\ppc405_uc.c	/^typedef struct ppc405_gpio_t ppc405_gpio_t;$/;"	t	typeref:struct:ppc405_gpio_t	file:
ppc405_gpio_write	.\ppc405_uc.c	/^static CPUWriteMemoryFunc *ppc405_gpio_write[] = {$/;"	v	file:
ppc405_gpio_writeb	.\ppc405_uc.c	/^static void ppc405_gpio_writeb (void *opaque,$/;"	f	file:
ppc405_gpio_writel	.\ppc405_uc.c	/^static void ppc405_gpio_writel (void *opaque,$/;"	f	file:
ppc405_gpio_writew	.\ppc405_uc.c	/^static void ppc405_gpio_writew (void *opaque,$/;"	f	file:
ppc405_i2c_init	.\ppc405_uc.c	/^void ppc405_i2c_init (CPUState *env, ppc4xx_mmio_t *mmio,$/;"	f
ppc405_mal_init	.\ppc405_uc.c	/^void ppc405_mal_init (CPUState *env, qemu_irq irqs[4])$/;"	f
ppc405_ocm_init	.\ppc405_uc.c	/^void ppc405_ocm_init (CPUState *env, unsigned long offset)$/;"	f
ppc405_ocm_t	.\ppc405_uc.c	/^struct ppc405_ocm_t {$/;"	s	file:
ppc405_ocm_t	.\ppc405_uc.c	/^typedef struct ppc405_ocm_t ppc405_ocm_t;$/;"	t	typeref:struct:ppc405_ocm_t	file:
ppc405_sdram_init	.\ppc405_uc.c	/^void ppc405_sdram_init (CPUState *env, qemu_irq irq, int nbanks,$/;"	f
ppc405_serial_init	.\ppc405_uc.c	/^void ppc405_serial_init (CPUState *env, ppc4xx_mmio_t *mmio,$/;"	f
ppc405_set_bootinfo	.\ppc405_uc.c	/^ram_addr_t ppc405_set_bootinfo (CPUState *env, ppc4xx_bd_info_t *bd,$/;"	f
ppc405cr_clk_init	.\ppc405_uc.c	/^static void ppc405cr_clk_init (ppc405cr_cpc_t *cpc)$/;"	f	file:
ppc405cr_clk_setup	.\ppc405_uc.c	/^static void ppc405cr_clk_setup (ppc405cr_cpc_t *cpc)$/;"	f	file:
ppc405cr_cpc_init	.\ppc405_uc.c	/^static void ppc405cr_cpc_init (CPUState *env, clk_setup_t clk_setup[7],$/;"	f	file:
ppc405cr_cpc_reset	.\ppc405_uc.c	/^static void ppc405cr_cpc_reset (void *opaque)$/;"	f	file:
ppc405cr_cpc_t	.\ppc405_uc.c	/^struct ppc405cr_cpc_t {$/;"	s	file:
ppc405cr_cpc_t	.\ppc405_uc.c	/^typedef struct ppc405cr_cpc_t ppc405cr_cpc_t;$/;"	t	typeref:struct:ppc405cr_cpc_t	file:
ppc405cr_init	.\ppc405_uc.c	/^CPUState *ppc405cr_init (target_phys_addr_t ram_bases[4],$/;"	f
ppc405ep_compute_clocks	.\ppc405_uc.c	/^static void ppc405ep_compute_clocks (ppc405ep_cpc_t *cpc)$/;"	f	file:
ppc405ep_cpc_init	.\ppc405_uc.c	/^static void ppc405ep_cpc_init (CPUState *env, clk_setup_t clk_setup[8],$/;"	f	file:
ppc405ep_cpc_reset	.\ppc405_uc.c	/^static void ppc405ep_cpc_reset (void *opaque)$/;"	f	file:
ppc405ep_cpc_t	.\ppc405_uc.c	/^struct ppc405ep_cpc_t {$/;"	s	file:
ppc405ep_cpc_t	.\ppc405_uc.c	/^typedef struct ppc405ep_cpc_t ppc405ep_cpc_t;$/;"	t	typeref:struct:ppc405ep_cpc_t	file:
ppc405ep_init	.\ppc405_uc.c	/^CPUState *ppc405ep_init (target_phys_addr_t ram_bases[2],$/;"	f
ppc40x_chip_reset	.\ppc405_uc.c	/^void ppc40x_chip_reset (CPUState *env)$/;"	f
ppc40x_core_reset	.\ppc405_uc.c	/^void ppc40x_core_reset (CPUState *env)$/;"	f
ppc40x_irq_init	.\ppc.c	/^void ppc40x_irq_init (CPUState *env)$/;"	f
ppc40x_mal_reset	.\ppc405_uc.c	/^static void ppc40x_mal_reset (void *opaque)$/;"	f	file:
ppc40x_mal_t	.\ppc405_uc.c	/^struct ppc40x_mal_t {$/;"	s	file:
ppc40x_mal_t	.\ppc405_uc.c	/^typedef struct ppc40x_mal_t ppc40x_mal_t;$/;"	t	typeref:struct:ppc40x_mal_t	file:
ppc40x_set_irq	.\ppc.c	/^static void ppc40x_set_irq (void *opaque, int pin, int level)$/;"	f	file:
ppc40x_system_reset	.\ppc405_uc.c	/^void ppc40x_system_reset (CPUState *env)$/;"	f
ppc4xx_bd_info_t	.\ppc405.h	/^struct ppc4xx_bd_info_t {$/;"	s
ppc4xx_bd_info_t	.\ppc405.h	/^typedef struct ppc4xx_bd_info_t ppc4xx_bd_info_t;$/;"	t	typeref:struct:ppc4xx_bd_info_t
ppc4xx_ebc_t	.\ppc405_uc.c	/^struct ppc4xx_ebc_t {$/;"	s	file:
ppc4xx_ebc_t	.\ppc405_uc.c	/^typedef struct ppc4xx_ebc_t ppc4xx_ebc_t;$/;"	t	typeref:struct:ppc4xx_ebc_t	file:
ppc4xx_gpt_cb	.\ppc405_uc.c	/^static void ppc4xx_gpt_cb (void *opaque)$/;"	f	file:
ppc4xx_gpt_compare	.\ppc405_uc.c	/^static int ppc4xx_gpt_compare (ppc4xx_gpt_t *gpt, int n)$/;"	f	file:
ppc4xx_gpt_compute_timer	.\ppc405_uc.c	/^static void ppc4xx_gpt_compute_timer (ppc4xx_gpt_t *gpt)$/;"	f	file:
ppc4xx_gpt_init	.\ppc405_uc.c	/^void ppc4xx_gpt_init (CPUState *env, ppc4xx_mmio_t *mmio,$/;"	f
ppc4xx_gpt_readb	.\ppc405_uc.c	/^static uint32_t ppc4xx_gpt_readb (void *opaque, target_phys_addr_t addr)$/;"	f	file:
ppc4xx_gpt_readl	.\ppc405_uc.c	/^static uint32_t ppc4xx_gpt_readl (void *opaque, target_phys_addr_t addr)$/;"	f	file:
ppc4xx_gpt_readw	.\ppc405_uc.c	/^static uint32_t ppc4xx_gpt_readw (void *opaque, target_phys_addr_t addr)$/;"	f	file:
ppc4xx_gpt_reset	.\ppc405_uc.c	/^static void ppc4xx_gpt_reset (void *opaque)$/;"	f	file:
ppc4xx_gpt_set_irqs	.\ppc405_uc.c	/^static void ppc4xx_gpt_set_irqs (ppc4xx_gpt_t *gpt)$/;"	f	file:
ppc4xx_gpt_set_output	.\ppc405_uc.c	/^static void ppc4xx_gpt_set_output (ppc4xx_gpt_t *gpt, int n, int level)$/;"	f	file:
ppc4xx_gpt_set_outputs	.\ppc405_uc.c	/^static void ppc4xx_gpt_set_outputs (ppc4xx_gpt_t *gpt)$/;"	f	file:
ppc4xx_gpt_t	.\ppc405_uc.c	/^struct ppc4xx_gpt_t {$/;"	s	file:
ppc4xx_gpt_t	.\ppc405_uc.c	/^typedef struct ppc4xx_gpt_t ppc4xx_gpt_t;$/;"	t	typeref:struct:ppc4xx_gpt_t	file:
ppc4xx_gpt_writeb	.\ppc405_uc.c	/^static void ppc4xx_gpt_writeb (void *opaque,$/;"	f	file:
ppc4xx_gpt_writel	.\ppc405_uc.c	/^static void ppc4xx_gpt_writel (void *opaque,$/;"	f	file:
ppc4xx_gpt_writew	.\ppc405_uc.c	/^static void ppc4xx_gpt_writew (void *opaque,$/;"	f	file:
ppc4xx_i2c_readb	.\ppc405_uc.c	/^static uint32_t ppc4xx_i2c_readb (void *opaque, target_phys_addr_t addr)$/;"	f	file:
ppc4xx_i2c_readl	.\ppc405_uc.c	/^static uint32_t ppc4xx_i2c_readl (void *opaque, target_phys_addr_t addr)$/;"	f	file:
ppc4xx_i2c_readw	.\ppc405_uc.c	/^static uint32_t ppc4xx_i2c_readw (void *opaque, target_phys_addr_t addr)$/;"	f	file:
ppc4xx_i2c_reset	.\ppc405_uc.c	/^static void ppc4xx_i2c_reset (void *opaque)$/;"	f	file:
ppc4xx_i2c_t	.\ppc405_uc.c	/^struct ppc4xx_i2c_t {$/;"	s	file:
ppc4xx_i2c_t	.\ppc405_uc.c	/^typedef struct ppc4xx_i2c_t ppc4xx_i2c_t;$/;"	t	typeref:struct:ppc4xx_i2c_t	file:
ppc4xx_i2c_writeb	.\ppc405_uc.c	/^static void ppc4xx_i2c_writeb (void *opaque,$/;"	f	file:
ppc4xx_i2c_writel	.\ppc405_uc.c	/^static void ppc4xx_i2c_writel (void *opaque,$/;"	f	file:
ppc4xx_i2c_writew	.\ppc405_uc.c	/^static void ppc4xx_i2c_writew (void *opaque,$/;"	f	file:
ppc4xx_init	.\ppc4xx_devs.c	/^CPUState *ppc4xx_init (const unsigned char *cpu_model,$/;"	f
ppc4xx_mmio_init	.\ppc4xx_devs.c	/^ppc4xx_mmio_t *ppc4xx_mmio_init (CPUState *env, target_phys_addr_t base)$/;"	f
ppc4xx_mmio_register	.\ppc4xx_devs.c	/^int ppc4xx_mmio_register (CPUState *env, ppc4xx_mmio_t *mmio,$/;"	f
ppc4xx_mmio_t	.\ppc4xx.h	/^typedef struct ppc4xx_mmio_t ppc4xx_mmio_t;$/;"	t	typeref:struct:ppc4xx_mmio_t
ppc4xx_mmio_t	.\ppc4xx_devs.c	/^struct ppc4xx_mmio_t {$/;"	s	file:
ppc4xx_opba_init	.\ppc405_uc.c	/^void ppc4xx_opba_init (CPUState *env, ppc4xx_mmio_t *mmio,$/;"	f
ppc4xx_opba_reset	.\ppc405_uc.c	/^static void ppc4xx_opba_reset (void *opaque)$/;"	f	file:
ppc4xx_opba_t	.\ppc405_uc.c	/^struct ppc4xx_opba_t {$/;"	s	file:
ppc4xx_opba_t	.\ppc405_uc.c	/^typedef struct ppc4xx_opba_t ppc4xx_opba_t;$/;"	t	typeref:struct:ppc4xx_opba_t	file:
ppc4xx_plb_init	.\ppc405_uc.c	/^void ppc4xx_plb_init (CPUState *env)$/;"	f
ppc4xx_plb_reset	.\ppc405_uc.c	/^static void ppc4xx_plb_reset (void *opaque)$/;"	f	file:
ppc4xx_plb_t	.\ppc405_uc.c	/^struct ppc4xx_plb_t {$/;"	s	file:
ppc4xx_plb_t	.\ppc405_uc.c	/^typedef struct ppc4xx_plb_t ppc4xx_plb_t;$/;"	t	typeref:struct:ppc4xx_plb_t	file:
ppc4xx_pob_init	.\ppc405_uc.c	/^void ppc4xx_pob_init (CPUState *env)$/;"	f
ppc4xx_pob_reset	.\ppc405_uc.c	/^static void ppc4xx_pob_reset (void *opaque)$/;"	f	file:
ppc4xx_pob_t	.\ppc405_uc.c	/^struct ppc4xx_pob_t {$/;"	s	file:
ppc4xx_pob_t	.\ppc405_uc.c	/^typedef struct ppc4xx_pob_t ppc4xx_pob_t;$/;"	t	typeref:struct:ppc4xx_pob_t	file:
ppc4xx_sdram_t	.\ppc405_uc.c	/^struct ppc4xx_sdram_t {$/;"	s	file:
ppc4xx_sdram_t	.\ppc405_uc.c	/^typedef struct ppc4xx_sdram_t ppc4xx_sdram_t;$/;"	t	typeref:struct:ppc4xx_sdram_t	file:
ppc6xx_irq_init	.\ppc.c	/^void ppc6xx_irq_init (CPUState *env)$/;"	f
ppc6xx_set_irq	.\ppc.c	/^static void ppc6xx_set_irq (void *opaque, int pin, int level)$/;"	f	file:
ppc970_irq_init	.\ppc.c	/^void ppc970_irq_init (CPUState *env)$/;"	f
ppc970_set_irq	.\ppc.c	/^static void ppc970_set_irq (void *opaque, int pin, int level)$/;"	f	file:
ppc_core99_init	.\ppc_chrp.c	/^static void ppc_core99_init (int ram_size, int vga_ram_size,$/;"	f	file:
ppc_dcr_init	.\ppc.c	/^int ppc_dcr_init (CPUState *env, int (*read_error)(int dcrn),$/;"	f
ppc_dcr_read	.\ppc.c	/^int ppc_dcr_read (ppc_dcr_t *dcr_env, int dcrn, target_ulong *valp)$/;"	f
ppc_dcr_register	.\ppc.c	/^int ppc_dcr_register (CPUState *env, int dcrn, void *opaque,$/;"	f
ppc_dcr_t	.\ppc.c	/^struct ppc_dcr_t {$/;"	s	file:
ppc_dcr_write	.\ppc.c	/^int ppc_dcr_write (ppc_dcr_t *dcr_env, int dcrn, target_ulong val)$/;"	f
ppc_dcrn_t	.\ppc.c	/^struct ppc_dcrn_t {$/;"	s	file:
ppc_dcrn_t	.\ppc.c	/^typedef struct ppc_dcrn_t ppc_dcrn_t;$/;"	t	typeref:struct:ppc_dcrn_t	file:
ppc_emb_set_tb_clk	.\ppc.c	/^static void ppc_emb_set_tb_clk (void *opaque, uint32_t freq)$/;"	f	file:
ppc_emb_timers_init	.\ppc.c	/^clk_setup_cb ppc_emb_timers_init (CPUState *env, uint32_t freq)$/;"	f
ppc_heathrow_init	.\ppc_oldworld.c	/^static void ppc_heathrow_init (int ram_size, int vga_ram_size,$/;"	f	file:
ppc_prep_init	.\ppc_prep.c	/^static void ppc_prep_init (int ram_size, int vga_ram_size,$/;"	f	file:
ppc_set_irq	.\ppc.c	/^static void ppc_set_irq (CPUState *env, int n_IRQ, int level)$/;"	f	file:
ppc_tb_t	.\ppc.c	/^struct ppc_tb_t {$/;"	s	file:
ppcemb_timer_t	.\ppc.c	/^struct ppcemb_timer_t {$/;"	s	file:
ppcemb_timer_t	.\ppc.c	/^typedef struct ppcemb_timer_t ppcemb_timer_t;$/;"	t	typeref:struct:ppcemb_timer_t	file:
ppcuic_init	.\ppc4xx_devs.c	/^qemu_irq *ppcuic_init (CPUState *env, qemu_irq *irqs,$/;"	f
ppcuic_reset	.\ppc4xx_devs.c	/^static void ppcuic_reset (void *opaque)$/;"	f	file:
ppcuic_set_irq	.\ppc4xx_devs.c	/^static void ppcuic_set_irq (void *opaque, int irq_num, int level)$/;"	f	file:
ppcuic_t	.\ppc4xx_devs.c	/^struct ppcuic_t {$/;"	s	file:
ppcuic_t	.\ppc4xx_devs.c	/^typedef struct ppcuic_t ppcuic_t;$/;"	t	typeref:struct:ppcuic_t	file:
ppcuic_trigger_irq	.\ppc4xx_devs.c	/^static void ppcuic_trigger_irq (ppcuic_t *uic)$/;"	f	file:
ppm_save	.\omap_lcdc.c	/^static int ppm_save(const char *filename, uint8_t *data,$/;"	f	file:
ppm_save	.\vga.c	/^int ppm_save(const char *filename, uint8_t *data,$/;"	f
pr	.\ppc405_uc.c	/^    uint8_t pr;$/;"	m	struct:ppc4xx_opba_t	file:
pre_map	.\spitz.c	/^    uint16_t pre_map[0x100];$/;"	m	struct:spitz_keyboard_s	file:
precision	.\tsc210x.c	/^    int precision;$/;"	m	struct:tsc210x_state_s	file:
precomp_trk	.\fdc.c	/^    uint8_t precomp_trk;$/;"	m	struct:fdctrl_t	file:
prep_IO_address	.\ppc_prep.c	/^static always_inline target_phys_addr_t prep_IO_address (sysctrl_t *sysctrl,$/;"	f	file:
prep_machine	.\ppc_prep.c	/^QEMUMachine prep_machine = {$/;"	v
prep_map_irq	.\prep_pci.c	/^static int prep_map_irq(PCIDevice *pci_dev, int irq_num)$/;"	f	file:
prep_set_irq	.\prep_pci.c	/^static void prep_set_irq(qemu_irq *pic, int irq_num, int level)$/;"	f	file:
prescale	.\stellaris.c	/^    uint32_t prescale[2];$/;"	m	struct:gptm_state	file:
pressed	.\stellaris_input.c	/^    int pressed;$/;"	m	struct:__anon117	file:
pressure	.\ads7846.c	/^    int pressure;$/;"	m	struct:ads7846_state_s	file:
pressure	.\tsc210x.c	/^    int pressure;$/;"	m	struct:tsc210x_state_s	file:
prev_level	.\mst_fpga.c	/^	uint32_t prev_level;$/;"	m	struct:mst_irq_state	file:
prev_level	.\pxa2xx_gpio.c	/^    uint32_t prev_level[PXA2XX_GPIO_BANKS];$/;"	m	struct:pxa2xx_gpio_info_s	file:
prev_level	.\spitz.c	/^    uint32_t prev_level;$/;"	m	struct:scoop_info_s	file:
prev_prio	.\pl190.c	/^    int prev_prio[PL190_NUM_PRIO];$/;"	m	struct:__anon61	file:
print_ctl	.\es1370.c	/^static void print_ctl (uint32_t val)$/;"	f	file:
print_ctl	.\es1370.c	244;"	d	file:
print_sctl	.\es1370.c	/^static void print_sctl (uint32_t val)$/;"	f	file:
print_sctl	.\es1370.c	245;"	d	file:
prio_mask	.\pl190.c	/^    uint32_t prio_mask[PL190_NUM_PRIO + 1];$/;"	m	struct:__anon61	file:
prio_registers	.\sh7750.c	/^static struct intc_prio_reg prio_registers[] = {$/;"	v	typeref:struct:intc_prio_reg	file:
prio_regs	.\sh_intc.h	/^    struct intc_prio_reg *prio_regs;$/;"	m	struct:intc_desc	typeref:struct:intc_desc::intc_prio_reg
priority	.\omap.c	/^    int priority;$/;"	m	struct:omap_dma_channel_s	file:
priority	.\omap.c	/^    unsigned char priority[32];$/;"	m	struct:omap_intr_handler_bank_s	file:
priority	.\omap.h	/^    unsigned char priority;$/;"	m	struct:omap_dma_lcd_channel_s
priority	.\openpic.c	/^    int priority;$/;"	m	struct:IRQ_queue_t	file:
priority	.\pl190.c	/^    int priority;$/;"	m	struct:__anon61	file:
priority	.\pxa2xx_pic.c	/^    uint32_t priority[PXA2XX_PIC_SRCS];$/;"	m	struct:pxa2xx_pic_state_s	file:
priority1	.\arm_gic.c	/^    int priority1[32][NCPU];$/;"	m	struct:gic_state	file:
priority2	.\arm_gic.c	/^    int priority2[GIC_NIRQ - 32];$/;"	m	struct:gic_state	file:
priority_add	.\i8259.c	/^    uint8_t priority_add; \/* highest irq priority *\/$/;"	m	struct:PicState	file:
priority_mask	.\arm_gic.c	/^    int priority_mask[NCPU];$/;"	m	struct:gic_state	file:
private_tipb	.\omap.h	/^    struct omap_tipb_bridge_s *private_tipb;$/;"	m	struct:omap_mpu_state_s	typeref:struct:omap_mpu_state_s::omap_tipb_bridge_s
prom	.\pcnet.c	/^    uint8_t prom[16];$/;"	m	struct:PCNetState_st	file:
prom9346_decode_command	.\rtl8139.c	/^static void prom9346_decode_command(EEprom9346 *eeprom, uint8_t command)$/;"	f	file:
prom9346_get_wire	.\rtl8139.c	/^static int prom9346_get_wire(RTL8139State *s)$/;"	f	file:
prom9346_set_wire	.\rtl8139.c	/^static void prom9346_set_wire(RTL8139State *s, int eecs, int eesk, int eedi)$/;"	f	file:
prom9346_shift_clock	.\rtl8139.c	/^static void prom9346_shift_clock(EEprom9346 *eeprom)$/;"	f	file:
prom_set	.\mips_malta.c	/^static void prom_set(int index, const char *string, ...)$/;"	f	file:
protected	.\pl190.c	/^    int protected;$/;"	m	struct:__anon61	file:
protocol	.\usb-hid.c	/^    int protocol;$/;"	m	struct:USBHIDState	file:
ps2_common_load	.\ps2.c	/^static void ps2_common_load (QEMUFile *f, PS2State *s)$/;"	f	file:
ps2_common_save	.\ps2.c	/^static void ps2_common_save (QEMUFile *f, PS2State *s)$/;"	f	file:
ps2_kbd_init	.\ps2.c	/^void *ps2_kbd_init(void (*update_irq)(void *, int), void *update_arg)$/;"	f
ps2_kbd_load	.\ps2.c	/^static int ps2_kbd_load(QEMUFile* f, void* opaque, int version_id)$/;"	f	file:
ps2_kbd_save	.\ps2.c	/^static void ps2_kbd_save(QEMUFile* f, void* opaque)$/;"	f	file:
ps2_keyboard_set_translation	.\ps2.c	/^void ps2_keyboard_set_translation(void *opaque, int mode)$/;"	f
ps2_mouse	.\vmmouse.c	/^    void *ps2_mouse;$/;"	m	struct:_VMMouseState	file:
ps2_mouse_event	.\ps2.c	/^static void ps2_mouse_event(void *opaque,$/;"	f	file:
ps2_mouse_fake_event	.\ps2.c	/^void ps2_mouse_fake_event(void *opaque)$/;"	f
ps2_mouse_init	.\ps2.c	/^void *ps2_mouse_init(void (*update_irq)(void *, int), void *update_arg)$/;"	f
ps2_mouse_load	.\ps2.c	/^static int ps2_mouse_load(QEMUFile* f, void* opaque, int version_id)$/;"	f	file:
ps2_mouse_save	.\ps2.c	/^static void ps2_mouse_save(QEMUFile* f, void* opaque)$/;"	f	file:
ps2_mouse_send_packet	.\ps2.c	/^static void ps2_mouse_send_packet(PS2MouseState *s)$/;"	f	file:
ps2_put_keycode	.\ps2.c	/^static void ps2_put_keycode(void *opaque, int keycode)$/;"	f	file:
ps2_queue	.\ps2.c	/^void ps2_queue(void *opaque, int b)$/;"	f
ps2_raw_keycode	.\ps2.c	/^static const unsigned char ps2_raw_keycode[128] = {$/;"	v	file:
ps2_read_data	.\ps2.c	/^uint32_t ps2_read_data(void *opaque)$/;"	f
ps2_reset	.\ps2.c	/^static void ps2_reset(void *opaque)$/;"	f	file:
ps2_reset_keyboard	.\ps2.c	/^static void ps2_reset_keyboard(PS2KbdState *s)$/;"	f	file:
ps2_write_keyboard	.\ps2.c	/^void ps2_write_keyboard(void *opaque, int val)$/;"	f
ps2_write_mouse	.\ps2.c	/^void ps2_write_mouse(void *opaque, int val)$/;"	f
psr	.\ppc405_uc.c	/^    uint32_t psr;$/;"	m	struct:ppc405cr_cpc_t	file:
pstart	.\usb-ohci.c	/^    uint32_t pstart;$/;"	m	struct:__anon123	file:
ptimer	.\etraxfs_timer.c	/^	ptimer_state *ptimer;$/;"	m	struct:fs_timer_t	file:
ptimer_get_count	.\ptimer.c	/^uint64_t ptimer_get_count(ptimer_state *s)$/;"	f
ptimer_init	.\ptimer.c	/^ptimer_state *ptimer_init(QEMUBH *bh)$/;"	f
ptimer_reload	.\ptimer.c	/^static void ptimer_reload(ptimer_state *s)$/;"	f	file:
ptimer_run	.\ptimer.c	/^void ptimer_run(ptimer_state *s, int oneshot)$/;"	f
ptimer_set_count	.\ptimer.c	/^void ptimer_set_count(ptimer_state *s, uint64_t count)$/;"	f
ptimer_set_freq	.\ptimer.c	/^void ptimer_set_freq(ptimer_state *s, uint32_t freq)$/;"	f
ptimer_set_limit	.\ptimer.c	/^void ptimer_set_limit(ptimer_state *s, uint64_t limit, int reload)$/;"	f
ptimer_set_period	.\ptimer.c	/^void ptimer_set_period(ptimer_state *s, int64_t period)$/;"	f
ptimer_state	.\ptimer.c	/^struct ptimer_state$/;"	s	file:
ptimer_stop	.\ptimer.c	/^void ptimer_stop(ptimer_state *s)$/;"	f
ptimer_tick	.\ptimer.c	/^static void ptimer_tick(void *opaque)$/;"	f	file:
ptimer_trigger	.\ptimer.c	/^static void ptimer_trigger(ptimer_state *s)$/;"	f	file:
ptr	.\smc91c111.c	/^    uint16_t ptr;$/;"	m	struct:__anon103	file:
ptr	.\usb-hid.c	/^        USBMouseState ptr;$/;"	m	union:USBHIDState::__anon121	file:
ptv	.\omap.c	/^    int ptv;$/;"	m	struct:omap_mpu_timer_s	file:
public_tipb	.\omap.h	/^    struct omap_tipb_bridge_s *public_tipb;$/;"	m	struct:omap_mpu_state_s	typeref:struct:omap_mpu_state_s::omap_tipb_bridge_s
pull_dwn_ctrl	.\omap.h	/^    uint32_t pull_dwn_ctrl[4];$/;"	m	struct:omap_mpu_state_s
pur	.\pl061.c	/^    uint8_t pur;$/;"	m	struct:__anon56	file:
purr_load	.\ppc.c	/^    uint64_t purr_load;$/;"	m	struct:ppc_tb_t	file:
purr_start	.\ppc.c	/^    uint64_t purr_start;$/;"	m	struct:ppc_tb_t	file:
put_dwords	.\usb-ohci.c	/^static inline int put_dwords(uint32_t addr, uint32_t *buf, int num)$/;"	f	file:
put_le16	.\ide.c	/^static void put_le16(uint16_t *p, unsigned int v)$/;"	f	file:
put_queue	.\slavio_serial.c	/^static void put_queue(void *opaque, int b)$/;"	f	file:
put_words	.\usb-ohci.c	/^static inline int put_words(uint32_t addr, uint16_t *buf, int num)$/;"	f	file:
pwd	.\sd.c	/^    uint8_t pwd[16];$/;"	m	struct:SDState	file:
pwd_len	.\sd.c	/^    int pwd_len;$/;"	m	struct:SDState	file:
pwl	.\omap.h	/^    } pwl;$/;"	m	struct:omap_mpu_state_s	typeref:struct:omap_mpu_state_s::__anon38
pwrd	.\fdc.c	/^    uint8_t pwrd;$/;"	m	struct:fdctrl_t	file:
pwt	.\omap.h	/^    } pwt;$/;"	m	struct:omap_mpu_state_s	typeref:struct:omap_mpu_state_s::__anon39
pxa255_dma_init	.\pxa2xx_dma.c	/^struct pxa2xx_dma_state_s *pxa255_dma_init(target_phys_addr_t base,$/;"	f
pxa255_init	.\pxa2xx.c	/^struct pxa2xx_state_s *pxa255_init(unsigned int sdram_size,$/;"	f
pxa255_serial	.\pxa2xx.c	/^} pxa255_serial[] = {$/;"	v	typeref:struct:__anon81	file:
pxa255_ssp	.\pxa2xx.c	/^static PXASSPDef pxa255_ssp[] = {$/;"	v	file:
pxa25x_timer_init	.\pxa2xx_timer.c	/^void pxa25x_timer_init(target_phys_addr_t base, qemu_irq *irqs)$/;"	f
pxa270_init	.\pxa2xx.c	/^struct pxa2xx_state_s *pxa270_init(unsigned int sdram_size,$/;"	f
pxa270_serial	.\pxa2xx.c	/^}, pxa270_serial[] = {$/;"	v	typeref:struct:__anon81	file:
pxa27x_dma_init	.\pxa2xx_dma.c	/^struct pxa2xx_dma_state_s *pxa27x_dma_init(target_phys_addr_t base,$/;"	f
pxa27x_keyboard_event	.\pxa2xx_keypad.c	/^static void pxa27x_keyboard_event (struct  pxa2xx_keypad_s *kp, int keycode)$/;"	f	file:
pxa27x_keypad_init	.\pxa2xx_keypad.c	/^struct pxa2xx_keypad_s *pxa27x_keypad_init(target_phys_addr_t base,$/;"	f
pxa27x_register_keypad	.\pxa2xx_keypad.c	/^void pxa27x_register_keypad(struct pxa2xx_keypad_s *kp, struct keymap *map,$/;"	f
pxa27x_ssp	.\pxa2xx.c	/^static PXASSPDef pxa27x_ssp[] = {$/;"	v	file:
pxa27x_timer_init	.\pxa2xx_timer.c	/^void pxa27x_timer_init(target_phys_addr_t base,$/;"	f
pxa2xx_clkpwr_read	.\pxa2xx.c	/^static uint32_t pxa2xx_clkpwr_read(void *opaque, int op2, int reg, int crm)$/;"	f	file:
pxa2xx_clkpwr_write	.\pxa2xx.c	/^static void pxa2xx_clkpwr_write(void *opaque, int op2, int reg, int crm,$/;"	f	file:
pxa2xx_cm_load	.\pxa2xx.c	/^static int pxa2xx_cm_load(QEMUFile *f, void *opaque, int version_id)$/;"	f	file:
pxa2xx_cm_read	.\pxa2xx.c	/^static uint32_t pxa2xx_cm_read(void *opaque, target_phys_addr_t addr)$/;"	f	file:
pxa2xx_cm_readfn	.\pxa2xx.c	/^static CPUReadMemoryFunc *pxa2xx_cm_readfn[] = {$/;"	v	file:
pxa2xx_cm_save	.\pxa2xx.c	/^static void pxa2xx_cm_save(QEMUFile *f, void *opaque)$/;"	f	file:
pxa2xx_cm_write	.\pxa2xx.c	/^static void pxa2xx_cm_write(void *opaque, target_phys_addr_t addr,$/;"	f	file:
pxa2xx_cm_writefn	.\pxa2xx.c	/^static CPUWriteMemoryFunc *pxa2xx_cm_writefn[] = {$/;"	v	file:
pxa2xx_cp14_read	.\pxa2xx.c	/^static uint32_t pxa2xx_cp14_read(void *opaque, int op2, int reg, int crm)$/;"	f	file:
pxa2xx_cp14_write	.\pxa2xx.c	/^static void pxa2xx_cp14_write(void *opaque, int op2, int reg, int crm,$/;"	f	file:
pxa2xx_cp_reg_map	.\pxa2xx_pic.c	/^static const int pxa2xx_cp_reg_map[0x10] = {$/;"	v	file:
pxa2xx_descriptor_load	.\pxa2xx_lcd.c	/^static void pxa2xx_descriptor_load(struct pxa2xx_lcdc_s *s)$/;"	f	file:
pxa2xx_dma_ber_set	.\pxa2xx_lcd.c	/^static inline void pxa2xx_dma_ber_set(struct pxa2xx_lcdc_s *s, int ch)$/;"	f	file:
pxa2xx_dma_bs_set	.\pxa2xx_lcd.c	/^static inline void pxa2xx_dma_bs_set(struct pxa2xx_lcdc_s *s, int ch)$/;"	f	file:
pxa2xx_dma_channel_s	.\pxa2xx_dma.c	/^struct pxa2xx_dma_channel_s {$/;"	s	file:
pxa2xx_dma_descriptor_fetch	.\pxa2xx_dma.c	/^static inline void pxa2xx_dma_descriptor_fetch($/;"	f	file:
pxa2xx_dma_eof_set	.\pxa2xx_lcd.c	/^static inline void pxa2xx_dma_eof_set(struct pxa2xx_lcdc_s *s, int ch)$/;"	f	file:
pxa2xx_dma_handler_t	.\pxa2xx_dma.c	/^typedef void (*pxa2xx_dma_handler_t)(void *opaque, int irq, int level);$/;"	t	file:
pxa2xx_dma_init	.\pxa2xx_dma.c	/^static struct pxa2xx_dma_state_s *pxa2xx_dma_init(target_phys_addr_t base,$/;"	f	file:
pxa2xx_dma_load	.\pxa2xx_dma.c	/^static int pxa2xx_dma_load(QEMUFile *f, void *opaque, int version_id)$/;"	f	file:
pxa2xx_dma_rdst_set	.\pxa2xx_lcd.c	/^static inline void pxa2xx_dma_rdst_set(struct pxa2xx_lcdc_s *s)$/;"	f	file:
pxa2xx_dma_read	.\pxa2xx_dma.c	/^static uint32_t pxa2xx_dma_read(void *opaque, target_phys_addr_t offset)$/;"	f	file:
pxa2xx_dma_readbad	.\pxa2xx_dma.c	/^static uint32_t pxa2xx_dma_readbad(void *opaque, target_phys_addr_t offset)$/;"	f	file:
pxa2xx_dma_readfn	.\pxa2xx_dma.c	/^static CPUReadMemoryFunc *pxa2xx_dma_readfn[] = {$/;"	v	file:
pxa2xx_dma_request	.\pxa2xx_dma.c	/^void pxa2xx_dma_request(struct pxa2xx_dma_state_s *s, int req_num, int on)$/;"	f
pxa2xx_dma_run	.\pxa2xx_dma.c	/^static void pxa2xx_dma_run(struct pxa2xx_dma_state_s *s)$/;"	f	file:
pxa2xx_dma_save	.\pxa2xx_dma.c	/^static void pxa2xx_dma_save(QEMUFile *f, void *opaque)$/;"	f	file:
pxa2xx_dma_sof_set	.\pxa2xx_lcd.c	/^static inline void pxa2xx_dma_sof_set(struct pxa2xx_lcdc_s *s, int ch)$/;"	f	file:
pxa2xx_dma_state_s	.\pxa2xx_dma.c	/^struct pxa2xx_dma_state_s {$/;"	s	file:
pxa2xx_dma_update	.\pxa2xx_dma.c	/^static inline void pxa2xx_dma_update(struct pxa2xx_dma_state_s *s, int ch)$/;"	f	file:
pxa2xx_dma_write	.\pxa2xx_dma.c	/^static void pxa2xx_dma_write(void *opaque,$/;"	f	file:
pxa2xx_dma_writebad	.\pxa2xx_dma.c	/^static void pxa2xx_dma_writebad(void *opaque,$/;"	f	file:
pxa2xx_dma_writefn	.\pxa2xx_dma.c	/^static CPUWriteMemoryFunc *pxa2xx_dma_writefn[] = {$/;"	v	file:
pxa2xx_fir_event	.\pxa2xx.c	/^static void pxa2xx_fir_event(void *opaque, int event)$/;"	f	file:
pxa2xx_fir_init	.\pxa2xx.c	/^static struct pxa2xx_fir_s *pxa2xx_fir_init(target_phys_addr_t base,$/;"	f	file:
pxa2xx_fir_is_empty	.\pxa2xx.c	/^static int pxa2xx_fir_is_empty(void *opaque)$/;"	f	file:
pxa2xx_fir_load	.\pxa2xx.c	/^static int pxa2xx_fir_load(QEMUFile *f, void *opaque, int version_id)$/;"	f	file:
pxa2xx_fir_read	.\pxa2xx.c	/^static uint32_t pxa2xx_fir_read(void *opaque, target_phys_addr_t addr)$/;"	f	file:
pxa2xx_fir_readfn	.\pxa2xx.c	/^static CPUReadMemoryFunc *pxa2xx_fir_readfn[] = {$/;"	v	file:
pxa2xx_fir_reset	.\pxa2xx.c	/^static void pxa2xx_fir_reset(struct pxa2xx_fir_s *s)$/;"	f	file:
pxa2xx_fir_rx	.\pxa2xx.c	/^static void pxa2xx_fir_rx(void *opaque, const uint8_t *buf, int size)$/;"	f	file:
pxa2xx_fir_s	.\pxa2xx.c	/^struct pxa2xx_fir_s {$/;"	s	file:
pxa2xx_fir_save	.\pxa2xx.c	/^static void pxa2xx_fir_save(QEMUFile *f, void *opaque)$/;"	f	file:
pxa2xx_fir_update	.\pxa2xx.c	/^static inline void pxa2xx_fir_update(struct pxa2xx_fir_s *s)$/;"	f	file:
pxa2xx_fir_write	.\pxa2xx.c	/^static void pxa2xx_fir_write(void *opaque, target_phys_addr_t addr,$/;"	f	file:
pxa2xx_fir_writefn	.\pxa2xx.c	/^static CPUWriteMemoryFunc *pxa2xx_fir_writefn[] = {$/;"	v	file:
pxa2xx_gpio_handler_update	.\pxa2xx_gpio.c	/^static void pxa2xx_gpio_handler_update(struct pxa2xx_gpio_info_s *s) {$/;"	f	file:
pxa2xx_gpio_in_get	.\pxa2xx_gpio.c	/^qemu_irq *pxa2xx_gpio_in_get(struct pxa2xx_gpio_info_s *s)$/;"	f
pxa2xx_gpio_info_s	.\pxa2xx_gpio.c	/^struct pxa2xx_gpio_info_s {$/;"	s	file:
pxa2xx_gpio_init	.\pxa2xx_gpio.c	/^struct pxa2xx_gpio_info_s *pxa2xx_gpio_init(target_phys_addr_t base,$/;"	f
pxa2xx_gpio_irq_update	.\pxa2xx_gpio.c	/^static void pxa2xx_gpio_irq_update(struct pxa2xx_gpio_info_s *s)$/;"	f	file:
pxa2xx_gpio_load	.\pxa2xx_gpio.c	/^static int pxa2xx_gpio_load(QEMUFile *f, void *opaque, int version_id)$/;"	f	file:
pxa2xx_gpio_out_set	.\pxa2xx_gpio.c	/^void pxa2xx_gpio_out_set(struct pxa2xx_gpio_info_s *s,$/;"	f
pxa2xx_gpio_read	.\pxa2xx_gpio.c	/^static uint32_t pxa2xx_gpio_read(void *opaque, target_phys_addr_t offset)$/;"	f	file:
pxa2xx_gpio_read_notifier	.\pxa2xx_gpio.c	/^void pxa2xx_gpio_read_notifier(struct pxa2xx_gpio_info_s *s, qemu_irq handler)$/;"	f
pxa2xx_gpio_readfn	.\pxa2xx_gpio.c	/^static CPUReadMemoryFunc *pxa2xx_gpio_readfn[] = {$/;"	v	file:
pxa2xx_gpio_regs	.\pxa2xx_gpio.c	/^} pxa2xx_gpio_regs[0x200] = {$/;"	v	typeref:struct:__anon82	file:
pxa2xx_gpio_save	.\pxa2xx_gpio.c	/^static void pxa2xx_gpio_save(QEMUFile *f, void *opaque)$/;"	f	file:
pxa2xx_gpio_set	.\pxa2xx_gpio.c	/^static void pxa2xx_gpio_set(void *opaque, int line, int level)$/;"	f	file:
pxa2xx_gpio_wake	.\pxa2xx_gpio.c	/^static const int pxa2xx_gpio_wake[PXA2XX_GPIO_BANKS] = {$/;"	v	file:
pxa2xx_gpio_write	.\pxa2xx_gpio.c	/^static void pxa2xx_gpio_write(void *opaque,$/;"	f	file:
pxa2xx_gpio_writefn	.\pxa2xx_gpio.c	/^static CPUWriteMemoryFunc *pxa2xx_gpio_writefn[] = {$/;"	v	file:
pxa2xx_i2c_bus	.\pxa2xx.c	/^i2c_bus *pxa2xx_i2c_bus(struct pxa2xx_i2c_s *s)$/;"	f
pxa2xx_i2c_event	.\pxa2xx.c	/^static void pxa2xx_i2c_event(i2c_slave *i2c, enum i2c_event event)$/;"	f	file:
pxa2xx_i2c_init	.\pxa2xx.c	/^struct pxa2xx_i2c_s *pxa2xx_i2c_init(target_phys_addr_t base,$/;"	f
pxa2xx_i2c_load	.\pxa2xx.c	/^static int pxa2xx_i2c_load(QEMUFile *f, void *opaque, int version_id)$/;"	f	file:
pxa2xx_i2c_read	.\pxa2xx.c	/^static uint32_t pxa2xx_i2c_read(void *opaque, target_phys_addr_t addr)$/;"	f	file:
pxa2xx_i2c_readfn	.\pxa2xx.c	/^static CPUReadMemoryFunc *pxa2xx_i2c_readfn[] = {$/;"	v	file:
pxa2xx_i2c_rx	.\pxa2xx.c	/^static int pxa2xx_i2c_rx(i2c_slave *i2c)$/;"	f	file:
pxa2xx_i2c_s	.\pxa2xx.c	/^struct pxa2xx_i2c_s {$/;"	s	file:
pxa2xx_i2c_save	.\pxa2xx.c	/^static void pxa2xx_i2c_save(QEMUFile *f, void *opaque)$/;"	f	file:
pxa2xx_i2c_tx	.\pxa2xx.c	/^static int pxa2xx_i2c_tx(i2c_slave *i2c, uint8_t data)$/;"	f	file:
pxa2xx_i2c_update	.\pxa2xx.c	/^static void pxa2xx_i2c_update(struct pxa2xx_i2c_s *s)$/;"	f	file:
pxa2xx_i2c_write	.\pxa2xx.c	/^static void pxa2xx_i2c_write(void *opaque, target_phys_addr_t addr,$/;"	f	file:
pxa2xx_i2c_writefn	.\pxa2xx.c	/^static CPUWriteMemoryFunc *pxa2xx_i2c_writefn[] = {$/;"	v	file:
pxa2xx_i2s_data_req	.\pxa2xx.c	/^static void pxa2xx_i2s_data_req(void *opaque, int tx, int rx)$/;"	f	file:
pxa2xx_i2s_init	.\pxa2xx.c	/^static struct pxa2xx_i2s_s *pxa2xx_i2s_init(target_phys_addr_t base,$/;"	f	file:
pxa2xx_i2s_load	.\pxa2xx.c	/^static int pxa2xx_i2s_load(QEMUFile *f, void *opaque, int version_id)$/;"	f	file:
pxa2xx_i2s_read	.\pxa2xx.c	/^static uint32_t pxa2xx_i2s_read(void *opaque, target_phys_addr_t addr)$/;"	f	file:
pxa2xx_i2s_readfn	.\pxa2xx.c	/^static CPUReadMemoryFunc *pxa2xx_i2s_readfn[] = {$/;"	v	file:
pxa2xx_i2s_reset	.\pxa2xx.c	/^static void pxa2xx_i2s_reset(struct pxa2xx_i2s_s *i2s)$/;"	f	file:
pxa2xx_i2s_s	.\pxa.h	/^struct pxa2xx_i2s_s {$/;"	s
pxa2xx_i2s_save	.\pxa2xx.c	/^static void pxa2xx_i2s_save(QEMUFile *f, void *opaque)$/;"	f	file:
pxa2xx_i2s_update	.\pxa2xx.c	/^static inline void pxa2xx_i2s_update(struct pxa2xx_i2s_s *i2s)$/;"	f	file:
pxa2xx_i2s_write	.\pxa2xx.c	/^static void pxa2xx_i2s_write(void *opaque, target_phys_addr_t addr,$/;"	f	file:
pxa2xx_i2s_writefn	.\pxa2xx.c	/^static CPUWriteMemoryFunc *pxa2xx_i2s_writefn[] = {$/;"	v	file:
pxa2xx_invalidate_display	.\pxa2xx_lcd.c	/^static void pxa2xx_invalidate_display(void *opaque)$/;"	f	file:
pxa2xx_keypad_load	.\pxa2xx_keypad.c	/^static int pxa2xx_keypad_load(QEMUFile *f, void *opaque, int version_id)$/;"	f	file:
pxa2xx_keypad_read	.\pxa2xx_keypad.c	/^static uint32_t pxa2xx_keypad_read(void *opaque, target_phys_addr_t offset)$/;"	f	file:
pxa2xx_keypad_readfn	.\pxa2xx_keypad.c	/^static CPUReadMemoryFunc *pxa2xx_keypad_readfn[] = {$/;"	v	file:
pxa2xx_keypad_s	.\pxa2xx_keypad.c	/^struct pxa2xx_keypad_s{$/;"	s	file:
pxa2xx_keypad_save	.\pxa2xx_keypad.c	/^static void pxa2xx_keypad_save(QEMUFile *f, void *opaque)$/;"	f	file:
pxa2xx_keypad_write	.\pxa2xx_keypad.c	/^static void pxa2xx_keypad_write(void *opaque,$/;"	f	file:
pxa2xx_keypad_writefn	.\pxa2xx_keypad.c	/^static CPUWriteMemoryFunc *pxa2xx_keypad_writefn[] = {$/;"	v	file:
pxa2xx_lcd_vsync_notifier	.\pxa2xx_lcd.c	/^void pxa2xx_lcd_vsync_notifier(struct pxa2xx_lcdc_s *s, qemu_irq handler)$/;"	f
pxa2xx_lcdc_dma0_redraw_horiz	.\pxa2xx_lcd.c	/^static void pxa2xx_lcdc_dma0_redraw_horiz(struct pxa2xx_lcdc_s *s,$/;"	f	file:
pxa2xx_lcdc_dma0_redraw_vert	.\pxa2xx_lcd.c	/^static void pxa2xx_lcdc_dma0_redraw_vert(struct pxa2xx_lcdc_s *s,$/;"	f	file:
pxa2xx_lcdc_init	.\pxa2xx_lcd.c	/^struct pxa2xx_lcdc_s *pxa2xx_lcdc_init(target_phys_addr_t base, qemu_irq irq,$/;"	f
pxa2xx_lcdc_int_update	.\pxa2xx_lcd.c	/^static void pxa2xx_lcdc_int_update(struct pxa2xx_lcdc_s *s)$/;"	f	file:
pxa2xx_lcdc_load	.\pxa2xx_lcd.c	/^static int pxa2xx_lcdc_load(QEMUFile *f, void *opaque, int version_id)$/;"	f	file:
pxa2xx_lcdc_orientation	.\pxa2xx_lcd.c	/^static void pxa2xx_lcdc_orientation(void *opaque, int angle)$/;"	f	file:
pxa2xx_lcdc_read	.\pxa2xx_lcd.c	/^static uint32_t pxa2xx_lcdc_read(void *opaque, target_phys_addr_t offset)$/;"	f	file:
pxa2xx_lcdc_readfn	.\pxa2xx_lcd.c	/^static CPUReadMemoryFunc *pxa2xx_lcdc_readfn[] = {$/;"	v	file:
pxa2xx_lcdc_resize	.\pxa2xx_lcd.c	/^static void pxa2xx_lcdc_resize(struct pxa2xx_lcdc_s *s)$/;"	f	file:
pxa2xx_lcdc_s	.\pxa2xx_lcd.c	/^struct pxa2xx_lcdc_s {$/;"	s	file:
pxa2xx_lcdc_save	.\pxa2xx_lcd.c	/^static void pxa2xx_lcdc_save(QEMUFile *f, void *opaque)$/;"	f	file:
pxa2xx_lcdc_write	.\pxa2xx_lcd.c	/^static void pxa2xx_lcdc_write(void *opaque,$/;"	f	file:
pxa2xx_lcdc_writefn	.\pxa2xx_lcd.c	/^static CPUWriteMemoryFunc *pxa2xx_lcdc_writefn[] = {$/;"	v	file:
pxa2xx_mm_load	.\pxa2xx.c	/^static int pxa2xx_mm_load(QEMUFile *f, void *opaque, int version_id)$/;"	f	file:
pxa2xx_mm_read	.\pxa2xx.c	/^static uint32_t pxa2xx_mm_read(void *opaque, target_phys_addr_t addr)$/;"	f	file:
pxa2xx_mm_readfn	.\pxa2xx.c	/^static CPUReadMemoryFunc *pxa2xx_mm_readfn[] = {$/;"	v	file:
pxa2xx_mm_save	.\pxa2xx.c	/^static void pxa2xx_mm_save(QEMUFile *f, void *opaque)$/;"	f	file:
pxa2xx_mm_write	.\pxa2xx.c	/^static void pxa2xx_mm_write(void *opaque, target_phys_addr_t addr,$/;"	f	file:
pxa2xx_mm_writefn	.\pxa2xx.c	/^static CPUWriteMemoryFunc *pxa2xx_mm_writefn[] = {$/;"	v	file:
pxa2xx_mmci_fifo_update	.\pxa2xx_mmci.c	/^static void pxa2xx_mmci_fifo_update(struct pxa2xx_mmci_s *s)$/;"	f	file:
pxa2xx_mmci_handlers	.\pxa2xx_mmci.c	/^void pxa2xx_mmci_handlers(struct pxa2xx_mmci_s *s, qemu_irq readonly,$/;"	f
pxa2xx_mmci_init	.\pxa2xx_mmci.c	/^struct pxa2xx_mmci_s *pxa2xx_mmci_init(target_phys_addr_t base,$/;"	f
pxa2xx_mmci_int_update	.\pxa2xx_mmci.c	/^static void pxa2xx_mmci_int_update(struct pxa2xx_mmci_s *s)$/;"	f	file:
pxa2xx_mmci_load	.\pxa2xx_mmci.c	/^static int pxa2xx_mmci_load(QEMUFile *f, void *opaque, int version_id)$/;"	f	file:
pxa2xx_mmci_read	.\pxa2xx_mmci.c	/^static uint32_t pxa2xx_mmci_read(void *opaque, target_phys_addr_t offset)$/;"	f	file:
pxa2xx_mmci_readb	.\pxa2xx_mmci.c	/^static uint32_t pxa2xx_mmci_readb(void *opaque, target_phys_addr_t offset)$/;"	f	file:
pxa2xx_mmci_readfn	.\pxa2xx_mmci.c	/^static CPUReadMemoryFunc *pxa2xx_mmci_readfn[] = {$/;"	v	file:
pxa2xx_mmci_readh	.\pxa2xx_mmci.c	/^static uint32_t pxa2xx_mmci_readh(void *opaque, target_phys_addr_t offset)$/;"	f	file:
pxa2xx_mmci_readw	.\pxa2xx_mmci.c	/^static uint32_t pxa2xx_mmci_readw(void *opaque, target_phys_addr_t offset)$/;"	f	file:
pxa2xx_mmci_s	.\pxa2xx_mmci.c	/^struct pxa2xx_mmci_s {$/;"	s	file:
pxa2xx_mmci_save	.\pxa2xx_mmci.c	/^static void pxa2xx_mmci_save(QEMUFile *f, void *opaque)$/;"	f	file:
pxa2xx_mmci_wakequeues	.\pxa2xx_mmci.c	/^static void pxa2xx_mmci_wakequeues(struct pxa2xx_mmci_s *s)$/;"	f	file:
pxa2xx_mmci_write	.\pxa2xx_mmci.c	/^static void pxa2xx_mmci_write(void *opaque,$/;"	f	file:
pxa2xx_mmci_writeb	.\pxa2xx_mmci.c	/^static void pxa2xx_mmci_writeb(void *opaque,$/;"	f	file:
pxa2xx_mmci_writefn	.\pxa2xx_mmci.c	/^static CPUWriteMemoryFunc *pxa2xx_mmci_writefn[] = {$/;"	v	file:
pxa2xx_mmci_writeh	.\pxa2xx_mmci.c	/^static void pxa2xx_mmci_writeh(void *opaque,$/;"	f	file:
pxa2xx_mmci_writew	.\pxa2xx_mmci.c	/^static void pxa2xx_mmci_writew(void *opaque,$/;"	f	file:
pxa2xx_palette_parse	.\pxa2xx_lcd.c	/^static void pxa2xx_palette_parse(struct pxa2xx_lcdc_s *s, int ch, int bpp)$/;"	f	file:
pxa2xx_pcmcia_attach	.\pxa2xx_pcmcia.c	/^int pxa2xx_pcmcia_attach(void *opaque, struct pcmcia_card_s *card)$/;"	f
pxa2xx_pcmcia_attr_read	.\pxa2xx_pcmcia.c	/^static uint32_t pxa2xx_pcmcia_attr_read(void *opaque,$/;"	f	file:
pxa2xx_pcmcia_attr_readfn	.\pxa2xx_pcmcia.c	/^static CPUReadMemoryFunc *pxa2xx_pcmcia_attr_readfn[] = {$/;"	v	file:
pxa2xx_pcmcia_attr_write	.\pxa2xx_pcmcia.c	/^static void pxa2xx_pcmcia_attr_write(void *opaque,$/;"	f	file:
pxa2xx_pcmcia_attr_writefn	.\pxa2xx_pcmcia.c	/^static CPUWriteMemoryFunc *pxa2xx_pcmcia_attr_writefn[] = {$/;"	v	file:
pxa2xx_pcmcia_common_read	.\pxa2xx_pcmcia.c	/^static uint32_t pxa2xx_pcmcia_common_read(void *opaque,$/;"	f	file:
pxa2xx_pcmcia_common_readfn	.\pxa2xx_pcmcia.c	/^static CPUReadMemoryFunc *pxa2xx_pcmcia_common_readfn[] = {$/;"	v	file:
pxa2xx_pcmcia_common_write	.\pxa2xx_pcmcia.c	/^static void pxa2xx_pcmcia_common_write(void *opaque,$/;"	f	file:
pxa2xx_pcmcia_common_writefn	.\pxa2xx_pcmcia.c	/^static CPUWriteMemoryFunc *pxa2xx_pcmcia_common_writefn[] = {$/;"	v	file:
pxa2xx_pcmcia_dettach	.\pxa2xx_pcmcia.c	/^int pxa2xx_pcmcia_dettach(void *opaque)$/;"	f
pxa2xx_pcmcia_init	.\pxa2xx_pcmcia.c	/^struct pxa2xx_pcmcia_s *pxa2xx_pcmcia_init(target_phys_addr_t base)$/;"	f
pxa2xx_pcmcia_io_read	.\pxa2xx_pcmcia.c	/^static uint32_t pxa2xx_pcmcia_io_read(void *opaque,$/;"	f	file:
pxa2xx_pcmcia_io_readfn	.\pxa2xx_pcmcia.c	/^static CPUReadMemoryFunc *pxa2xx_pcmcia_io_readfn[] = {$/;"	v	file:
pxa2xx_pcmcia_io_write	.\pxa2xx_pcmcia.c	/^static void pxa2xx_pcmcia_io_write(void *opaque,$/;"	f	file:
pxa2xx_pcmcia_io_writefn	.\pxa2xx_pcmcia.c	/^static CPUWriteMemoryFunc *pxa2xx_pcmcia_io_writefn[] = {$/;"	v	file:
pxa2xx_pcmcia_s	.\pxa2xx_pcmcia.c	/^struct pxa2xx_pcmcia_s {$/;"	s	file:
pxa2xx_pcmcia_set_irq	.\pxa2xx_pcmcia.c	/^static void pxa2xx_pcmcia_set_irq(void *opaque, int line, int level)$/;"	f	file:
pxa2xx_pcmcia_set_irq_cb	.\pxa2xx_pcmcia.c	/^void pxa2xx_pcmcia_set_irq_cb(void *opaque, qemu_irq irq, qemu_irq cd_irq)$/;"	f
pxa2xx_perf_read	.\pxa2xx.c	/^static uint32_t pxa2xx_perf_read(void *opaque, int op2, int reg, int crm)$/;"	f	file:
pxa2xx_perf_write	.\pxa2xx.c	/^static void pxa2xx_perf_write(void *opaque, int op2, int reg, int crm,$/;"	f	file:
pxa2xx_pic_cp_read	.\pxa2xx_pic.c	/^static uint32_t pxa2xx_pic_cp_read(void *opaque, int op2, int reg, int crm)$/;"	f	file:
pxa2xx_pic_cp_write	.\pxa2xx_pic.c	/^static void pxa2xx_pic_cp_write(void *opaque, int op2, int reg, int crm,$/;"	f	file:
pxa2xx_pic_highest	.\pxa2xx_pic.c	/^static inline uint32_t pxa2xx_pic_highest(struct pxa2xx_pic_state_s *s) {$/;"	f	file:
pxa2xx_pic_init	.\pxa2xx_pic.c	/^qemu_irq *pxa2xx_pic_init(target_phys_addr_t base, CPUState *env)$/;"	f
pxa2xx_pic_load	.\pxa2xx_pic.c	/^static int pxa2xx_pic_load(QEMUFile *f, void *opaque, int version_id)$/;"	f	file:
pxa2xx_pic_mem_read	.\pxa2xx_pic.c	/^static uint32_t pxa2xx_pic_mem_read(void *opaque, target_phys_addr_t offset)$/;"	f	file:
pxa2xx_pic_mem_write	.\pxa2xx_pic.c	/^static void pxa2xx_pic_mem_write(void *opaque, target_phys_addr_t offset,$/;"	f	file:
pxa2xx_pic_readfn	.\pxa2xx_pic.c	/^static CPUReadMemoryFunc *pxa2xx_pic_readfn[] = {$/;"	v	file:
pxa2xx_pic_save	.\pxa2xx_pic.c	/^static void pxa2xx_pic_save(QEMUFile *f, void *opaque)$/;"	f	file:
pxa2xx_pic_set_irq	.\pxa2xx_pic.c	/^static void pxa2xx_pic_set_irq(void *opaque, int irq, int level)$/;"	f	file:
pxa2xx_pic_state_s	.\pxa2xx_pic.c	/^struct pxa2xx_pic_state_s {$/;"	s	file:
pxa2xx_pic_update	.\pxa2xx_pic.c	/^static void pxa2xx_pic_update(void *opaque)$/;"	f	file:
pxa2xx_pic_writefn	.\pxa2xx_pic.c	/^static CPUWriteMemoryFunc *pxa2xx_pic_writefn[] = {$/;"	v	file:
pxa2xx_pm_load	.\pxa2xx.c	/^static int pxa2xx_pm_load(QEMUFile *f, void *opaque, int version_id)$/;"	f	file:
pxa2xx_pm_read	.\pxa2xx.c	/^static uint32_t pxa2xx_pm_read(void *opaque, target_phys_addr_t addr)$/;"	f	file:
pxa2xx_pm_readfn	.\pxa2xx.c	/^static CPUReadMemoryFunc *pxa2xx_pm_readfn[] = {$/;"	v	file:
pxa2xx_pm_save	.\pxa2xx.c	/^static void pxa2xx_pm_save(QEMUFile *f, void *opaque)$/;"	f	file:
pxa2xx_pm_write	.\pxa2xx.c	/^static void pxa2xx_pm_write(void *opaque, target_phys_addr_t addr,$/;"	f	file:
pxa2xx_pm_writefn	.\pxa2xx.c	/^static CPUWriteMemoryFunc *pxa2xx_pm_writefn[] = {$/;"	v	file:
pxa2xx_reset	.\pxa2xx.c	/^static void pxa2xx_reset(void *opaque, int line, int level)$/;"	f	file:
pxa2xx_rtc_alarm_update	.\pxa2xx.c	/^static inline void pxa2xx_rtc_alarm_update(struct pxa2xx_state_s *s,$/;"	f	file:
pxa2xx_rtc_hz_tick	.\pxa2xx.c	/^static inline void pxa2xx_rtc_hz_tick(void *opaque)$/;"	f	file:
pxa2xx_rtc_hzupdate	.\pxa2xx.c	/^static void pxa2xx_rtc_hzupdate(struct pxa2xx_state_s *s)$/;"	f	file:
pxa2xx_rtc_init	.\pxa2xx.c	/^static void pxa2xx_rtc_init(struct pxa2xx_state_s *s)$/;"	f	file:
pxa2xx_rtc_int_update	.\pxa2xx.c	/^static inline void pxa2xx_rtc_int_update(struct pxa2xx_state_s *s)$/;"	f	file:
pxa2xx_rtc_load	.\pxa2xx.c	/^static int pxa2xx_rtc_load(QEMUFile *f, void *opaque, int version_id)$/;"	f	file:
pxa2xx_rtc_pi_tick	.\pxa2xx.c	/^static inline void pxa2xx_rtc_pi_tick(void *opaque)$/;"	f	file:
pxa2xx_rtc_piupdate	.\pxa2xx.c	/^static void pxa2xx_rtc_piupdate(struct pxa2xx_state_s *s)$/;"	f	file:
pxa2xx_rtc_rdal1_tick	.\pxa2xx.c	/^static inline void pxa2xx_rtc_rdal1_tick(void *opaque)$/;"	f	file:
pxa2xx_rtc_rdal2_tick	.\pxa2xx.c	/^static inline void pxa2xx_rtc_rdal2_tick(void *opaque)$/;"	f	file:
pxa2xx_rtc_read	.\pxa2xx.c	/^static uint32_t pxa2xx_rtc_read(void *opaque, target_phys_addr_t addr)$/;"	f	file:
pxa2xx_rtc_readfn	.\pxa2xx.c	/^static CPUReadMemoryFunc *pxa2xx_rtc_readfn[] = {$/;"	v	file:
pxa2xx_rtc_save	.\pxa2xx.c	/^static void pxa2xx_rtc_save(QEMUFile *f, void *opaque)$/;"	f	file:
pxa2xx_rtc_swal1_tick	.\pxa2xx.c	/^static inline void pxa2xx_rtc_swal1_tick(void *opaque)$/;"	f	file:
pxa2xx_rtc_swal2_tick	.\pxa2xx.c	/^static inline void pxa2xx_rtc_swal2_tick(void *opaque)$/;"	f	file:
pxa2xx_rtc_swupdate	.\pxa2xx.c	/^static void pxa2xx_rtc_swupdate(struct pxa2xx_state_s *s)$/;"	f	file:
pxa2xx_rtc_write	.\pxa2xx.c	/^static void pxa2xx_rtc_write(void *opaque, target_phys_addr_t addr,$/;"	f	file:
pxa2xx_rtc_writefn	.\pxa2xx.c	/^static CPUWriteMemoryFunc *pxa2xx_rtc_writefn[] = {$/;"	v	file:
pxa2xx_screen_dump	.\pxa2xx_lcd.c	/^static void pxa2xx_screen_dump(void *opaque, const char *filename)$/;"	f	file:
pxa2xx_ssp_attach	.\pxa2xx.c	/^void pxa2xx_ssp_attach(struct pxa2xx_ssp_s *port,$/;"	f
pxa2xx_ssp_fifo_update	.\pxa2xx.c	/^static void pxa2xx_ssp_fifo_update(struct pxa2xx_ssp_s *s)$/;"	f	file:
pxa2xx_ssp_int_update	.\pxa2xx.c	/^static void pxa2xx_ssp_int_update(struct pxa2xx_ssp_s *s)$/;"	f	file:
pxa2xx_ssp_load	.\pxa2xx.c	/^static int pxa2xx_ssp_load(QEMUFile *f, void *opaque, int version_id)$/;"	f	file:
pxa2xx_ssp_read	.\pxa2xx.c	/^static uint32_t pxa2xx_ssp_read(void *opaque, target_phys_addr_t addr)$/;"	f	file:
pxa2xx_ssp_readfn	.\pxa2xx.c	/^static CPUReadMemoryFunc *pxa2xx_ssp_readfn[] = {$/;"	v	file:
pxa2xx_ssp_s	.\pxa2xx.c	/^struct pxa2xx_ssp_s {$/;"	s	file:
pxa2xx_ssp_save	.\pxa2xx.c	/^static void pxa2xx_ssp_save(QEMUFile *f, void *opaque)$/;"	f	file:
pxa2xx_ssp_write	.\pxa2xx.c	/^static void pxa2xx_ssp_write(void *opaque, target_phys_addr_t addr,$/;"	f	file:
pxa2xx_ssp_writefn	.\pxa2xx.c	/^static CPUWriteMemoryFunc *pxa2xx_ssp_writefn[] = {$/;"	v	file:
pxa2xx_state_s	.\pxa.h	/^struct pxa2xx_state_s {$/;"	s
pxa2xx_timer0_s	.\pxa2xx_timer.c	/^struct pxa2xx_timer0_s {$/;"	s	file:
pxa2xx_timer4_freq	.\pxa2xx_timer.c	/^static int pxa2xx_timer4_freq[8] = {$/;"	v	file:
pxa2xx_timer4_s	.\pxa2xx_timer.c	/^struct pxa2xx_timer4_s {$/;"	s	file:
pxa2xx_timer_info	.\pxa2xx_timer.c	/^} pxa2xx_timer_info;$/;"	t	typeref:struct:__anon86	file:
pxa2xx_timer_init	.\pxa2xx_timer.c	/^static pxa2xx_timer_info *pxa2xx_timer_init(target_phys_addr_t base,$/;"	f	file:
pxa2xx_timer_load	.\pxa2xx_timer.c	/^static int pxa2xx_timer_load(QEMUFile *f, void *opaque, int version_id)$/;"	f	file:
pxa2xx_timer_read	.\pxa2xx_timer.c	/^static uint32_t pxa2xx_timer_read(void *opaque, target_phys_addr_t offset)$/;"	f	file:
pxa2xx_timer_readfn	.\pxa2xx_timer.c	/^static CPUReadMemoryFunc *pxa2xx_timer_readfn[] = {$/;"	v	file:
pxa2xx_timer_save	.\pxa2xx_timer.c	/^static void pxa2xx_timer_save(QEMUFile *f, void *opaque)$/;"	f	file:
pxa2xx_timer_tick	.\pxa2xx_timer.c	/^static void pxa2xx_timer_tick(void *opaque)$/;"	f	file:
pxa2xx_timer_tick4	.\pxa2xx_timer.c	/^static void pxa2xx_timer_tick4(void *opaque)$/;"	f	file:
pxa2xx_timer_update	.\pxa2xx_timer.c	/^static void pxa2xx_timer_update(void *opaque, uint64_t now_qemu)$/;"	f	file:
pxa2xx_timer_update4	.\pxa2xx_timer.c	/^static void pxa2xx_timer_update4(void *opaque, uint64_t now_qemu, int n)$/;"	f	file:
pxa2xx_timer_write	.\pxa2xx_timer.c	/^static void pxa2xx_timer_write(void *opaque, target_phys_addr_t offset,$/;"	f	file:
pxa2xx_timer_writefn	.\pxa2xx_timer.c	/^static CPUWriteMemoryFunc *pxa2xx_timer_writefn[] = {$/;"	v	file:
pxa2xx_update_display	.\pxa2xx_lcd.c	/^static void pxa2xx_update_display(void *opaque)$/;"	f	file:
pxa_frame_descriptor_s	.\pxa2xx_lcd.c	/^struct __attribute__ ((__packed__)) pxa_frame_descriptor_s {$/;"	s	file:
pxa_lcdc_16bpp	.\pxa2xx_lcd.c	/^        pxa_lcdc_16bpp = 4,$/;"	e	enum:pxa2xx_lcdc_s::__anon84	file:
pxa_lcdc_18bpp	.\pxa2xx_lcd.c	/^        pxa_lcdc_18bpp = 5,$/;"	e	enum:pxa2xx_lcdc_s::__anon84	file:
pxa_lcdc_18pbpp	.\pxa2xx_lcd.c	/^        pxa_lcdc_18pbpp = 6,$/;"	e	enum:pxa2xx_lcdc_s::__anon84	file:
pxa_lcdc_19bpp	.\pxa2xx_lcd.c	/^        pxa_lcdc_19bpp = 7,$/;"	e	enum:pxa2xx_lcdc_s::__anon84	file:
pxa_lcdc_19pbpp	.\pxa2xx_lcd.c	/^        pxa_lcdc_19pbpp = 8,$/;"	e	enum:pxa2xx_lcdc_s::__anon84	file:
pxa_lcdc_24bpp	.\pxa2xx_lcd.c	/^        pxa_lcdc_24bpp = 9,$/;"	e	enum:pxa2xx_lcdc_s::__anon84	file:
pxa_lcdc_25bpp	.\pxa2xx_lcd.c	/^        pxa_lcdc_25bpp = 10,$/;"	e	enum:pxa2xx_lcdc_s::__anon84	file:
pxa_lcdc_2bpp	.\pxa2xx_lcd.c	/^        pxa_lcdc_2bpp = 1,$/;"	e	enum:pxa2xx_lcdc_s::__anon84	file:
pxa_lcdc_4bpp	.\pxa2xx_lcd.c	/^        pxa_lcdc_4bpp = 2,$/;"	e	enum:pxa2xx_lcdc_s::__anon84	file:
pxa_lcdc_8bpp	.\pxa2xx_lcd.c	/^        pxa_lcdc_8bpp = 3,$/;"	e	enum:pxa2xx_lcdc_s::__anon84	file:
qemu_MIN	.\cirrus_vga.c	51;"	d	file:
qemu_allocate_irqs	.\irq.c	/^qemu_irq *qemu_allocate_irqs(qemu_irq_handler handler, void *opaque, int n)$/;"	f
qemu_ether_header	.\pcnet.c	/^struct qemu_ether_header {$/;"	s	file:
qemu_get_8s	.\hw.h	/^static inline void qemu_get_8s(QEMUFile *f, uint8_t *pv)$/;"	f
qemu_get_be16s	.\hw.h	/^static inline void qemu_get_be16s(QEMUFile *f, uint16_t *pv)$/;"	f
qemu_get_be32s	.\hw.h	/^static inline void qemu_get_be32s(QEMUFile *f, uint32_t *pv)$/;"	f
qemu_get_be64s	.\hw.h	/^static inline void qemu_get_be64s(QEMUFile *f, uint64_t *pv)$/;"	f
qemu_get_betl	.\hw.h	67;"	d
qemu_get_betl	.\hw.h	72;"	d
qemu_get_betls	.\hw.h	69;"	d
qemu_get_betls	.\hw.h	74;"	d
qemu_get_ptimer	.\ptimer.c	/^void qemu_get_ptimer(QEMUFile *f, ptimer_state *s)$/;"	f
qemu_hub_config_descriptor	.\usb-hub.c	/^static const uint8_t qemu_hub_config_descriptor[] = {$/;"	v	file:
qemu_hub_dev_descriptor	.\usb-hub.c	/^static const uint8_t qemu_hub_dev_descriptor[] = {$/;"	v	file:
qemu_hub_hub_descriptor	.\usb-hub.c	/^static const uint8_t qemu_hub_hub_descriptor[] =$/;"	v	file:
qemu_irq_handler	.\irq.h	/^typedef void (*qemu_irq_handler)(void *opaque, int n, int level);$/;"	t
qemu_irq_invert	.\irq.c	/^qemu_irq qemu_irq_invert(qemu_irq irq)$/;"	f
qemu_irq_lower	.\irq.h	/^static inline void qemu_irq_lower(qemu_irq irq)$/;"	f
qemu_irq_pulse	.\irq.h	/^static inline void qemu_irq_pulse(qemu_irq irq)$/;"	f
qemu_irq_raise	.\irq.h	/^static inline void qemu_irq_raise(qemu_irq irq)$/;"	f
qemu_keyboard_config_descriptor	.\usb-hid.c	/^static const uint8_t qemu_keyboard_config_descriptor[] = {$/;"	v	file:
qemu_keyboard_hid_report_descriptor	.\usb-hid.c	/^static const uint8_t qemu_keyboard_hid_report_descriptor[] = {$/;"	v	file:
qemu_mouse_config_descriptor	.\usb-hid.c	/^static const uint8_t qemu_mouse_config_descriptor[] = {$/;"	v	file:
qemu_mouse_dev_descriptor	.\usb-hid.c	/^static const uint8_t qemu_mouse_dev_descriptor[] = {$/;"	v	file:
qemu_mouse_hid_report_descriptor	.\usb-hid.c	/^static const uint8_t qemu_mouse_hid_report_descriptor[] = {$/;"	v	file:
qemu_msd_config_descriptor	.\usb-msd.c	/^static const uint8_t qemu_msd_config_descriptor[] = {$/;"	v	file:
qemu_msd_dev_descriptor	.\usb-msd.c	/^static const uint8_t qemu_msd_dev_descriptor[] = {$/;"	v	file:
qemu_notirq	.\irq.c	/^static void qemu_notirq(void *opaque, int line, int level)$/;"	f	file:
qemu_put_8s	.\hw.h	/^static inline void qemu_put_8s(QEMUFile *f, const uint8_t *pv)$/;"	f
qemu_put_be16s	.\hw.h	/^static inline void qemu_put_be16s(QEMUFile *f, const uint16_t *pv)$/;"	f
qemu_put_be32s	.\hw.h	/^static inline void qemu_put_be32s(QEMUFile *f, const uint32_t *pv)$/;"	f
qemu_put_be64s	.\hw.h	/^static inline void qemu_put_be64s(QEMUFile *f, const uint64_t *pv)$/;"	f
qemu_put_betl	.\hw.h	66;"	d
qemu_put_betl	.\hw.h	71;"	d
qemu_put_betls	.\hw.h	68;"	d
qemu_put_betls	.\hw.h	73;"	d
qemu_put_ptimer	.\ptimer.c	/^void qemu_put_ptimer(QEMUFile *f, ptimer_state *s)$/;"	f
qemu_set_irq	.\irq.c	/^void qemu_set_irq(qemu_irq irq, int level)$/;"	f
qemu_system_powerdown	.\sun4m.c	/^void qemu_system_powerdown(void)$/;"	f
qemu_system_powerdown	.\sun4u.c	/^void qemu_system_powerdown(void)$/;"	f
qemu_tablet_config_descriptor	.\usb-hid.c	/^static const uint8_t qemu_tablet_config_descriptor[] = {$/;"	v	file:
qemu_tablet_hid_report_descriptor	.\usb-hid.c	/^static const uint8_t qemu_tablet_hid_report_descriptor[] = {$/;"	v	file:
qemu_wacom_config_descriptor	.\usb-wacom.c	/^static const uint8_t qemu_wacom_config_descriptor[] = {$/;"	v	file:
qemu_wacom_dev_descriptor	.\usb-wacom.c	/^static const uint8_t qemu_wacom_dev_descriptor[] = {$/;"	v	file:
qtimer	.\pxa2xx_timer.c	/^    QEMUTimer *qtimer;$/;"	m	struct:pxa2xx_timer0_s	file:
queue	.\lsi53c895a.c	/^    lsi_queue *queue;$/;"	m	struct:__anon25	file:
queue	.\openpic.c	/^    uint32_t queue[BF_WIDTH(MAX_IRQ)];$/;"	m	struct:IRQ_queue_t	file:
queue	.\ps2.c	/^    PS2Queue queue;$/;"	m	struct:__anon78	file:
queue	.\slavio_serial.c	/^    SERIOQueue queue;$/;"	m	struct:ChannelState	file:
queue	.\vmmouse.c	/^    uint32_t queue[VMMOUSE_QUEUE_SIZE];$/;"	m	struct:_VMMouseState	file:
queue_len	.\lsi53c895a.c	/^    int queue_len;$/;"	m	struct:__anon25	file:
quick_cmd	.\smbus.h	/^    void (*quick_cmd)(SMBusDevice *dev, uint8_t read);$/;"	m	struct:SMBusDevice
r	.\tcx.c	/^    uint8_t r[256], g[256], b[256];$/;"	m	struct:TCXState	file:
r2d_init	.\r2d.c	/^static void r2d_init(int ram_size, int vga_ram_size,$/;"	f	file:
r2d_machine	.\r2d.c	/^QEMUMachine r2d_machine = {$/;"	v
r_intr	.\etraxfs_timer.c	/^uint32_t r_intr;$/;"	v
raised	.\openpic.c	/^    IRQ_queue_t raised;$/;"	m	struct:IRQ_dst_t	file:
ram_bases	.\ppc405_uc.c	/^    target_phys_addr_t ram_bases[4];$/;"	m	struct:ppc4xx_sdram_t	file:
ram_io_addr	.\lsi53c895a.c	/^    int ram_io_addr;$/;"	m	struct:__anon25	file:
ram_size	.\mips_malta.c	/^    int ram_size;$/;"	m	struct:_loaderparams	file:
ram_size	.\mips_mipssim.c	/^    int ram_size;$/;"	m	struct:_loaderparams	file:
ram_size	.\mips_r4k.c	/^    int ram_size;$/;"	m	struct:_loaderparams	file:
ram_sizes	.\ppc405_uc.c	/^    target_phys_addr_t ram_sizes[4];$/;"	m	struct:ppc4xx_sdram_t	file:
rap	.\pcnet.c	/^    int mmio_index, rap, isr, lnkst;$/;"	m	struct:PCNetState_st	file:
rasintr	.\pxa2xx_dma.c	/^    uint32_t rasintr;$/;"	m	struct:pxa2xx_dma_state_s	file:
rate	.\fmopl.h	/^	int rate;			\/* sampling rate (Hz)                *\/$/;"	m	struct:fm_opl_f
rate	.\omap.c	/^    int64_t rate;$/;"	m	struct:omap_mpu_timer_s	file:
rate	.\omap1_clk.c	/^    unsigned long rate;		\/* Current rate (if .running) *\/$/;"	m	struct:clk	file:
rate	.\tsc210x.c	/^    int rate;$/;"	m	struct:tsc210x_rate_info_s	file:
rate	.\wm8750.c	/^    const struct wm_rate_s *rate;$/;"	m	struct:wm8750_s	typeref:struct:wm8750_s::wm_rate_s	file:
raw_pallette	.\pl110.c	/^    uint32_t raw_pallette[128];$/;"	m	struct:__anon59	file:
rb2	.\max111x.c	/^    uint8_t tb1, rb2, rb3;$/;"	m	struct:max111x_s	file:
rb3	.\max111x.c	/^    uint8_t tb1, rb2, rb3;$/;"	m	struct:max111x_s	file:
rbadr	.\pcnet.c	/^    uint32_t rbadr;$/;"	m	struct:pcnet_RMD	file:
rbc	.\lsi53c895a.c	/^    uint32_t rbc;$/;"	m	struct:__anon25	file:
rbr	.\serial.c	/^    uint8_t rbr; \/* receive register *\/$/;"	m	struct:SerialState	file:
rca	.\sd.c	/^    uint16_t rca;$/;"	m	struct:SDState	file:
rcbs	.\ppc405_uc.c	/^    uint32_t rcbs[2];$/;"	m	struct:ppc40x_mal_t	file:
rcc	.\stellaris.c	/^    uint32_t rcc;$/;"	m	struct:__anon110	file:
rcer	.\omap.c	/^    uint16_t rcer[8];$/;"	m	struct:omap_mcbsp_s	file:
rcgc	.\stellaris.c	/^    uint32_t rcgc[3];$/;"	m	struct:__anon110	file:
rcnt	.\eepro100.c	/^    uint16_t rcnt;$/;"	m	struct:__anon16	file:
rcnt	.\ne2000.c	/^    uint16_t rcnt;$/;"	m	struct:NE2000State	file:
rcr	.\mcf_fec.c	/^    uint32_t rcr;$/;"	m	struct:__anon30	file:
rcr	.\omap.c	/^    uint16_t rcr[2];$/;"	m	struct:omap_mcbsp_s	file:
rcr	.\smc91c111.c	/^    uint16_t rcr;$/;"	m	struct:__anon103	file:
rctl	.\stellaris_enet.c	/^    uint32_t rctl;$/;"	m	struct:__anon115	file:
rcv_tco_frames	.\eepro100.c	/^    uint16_t xmt_tco_frames, rcv_tco_frames;$/;"	m	struct:__anon13	file:
rdar1	.\pxa.h	/^    uint32_t rdar1;$/;"	m	struct:pxa2xx_state_s
rdar2	.\pxa.h	/^    uint32_t rdar2;$/;"	m	struct:pxa2xx_state_s
rdra	.\pcnet.c	/^    uint32_t rdra, tdra;$/;"	m	struct:PCNetState_st	file:
rdra	.\pcnet.c	/^    uint32_t rdra;$/;"	m	struct:pcnet_initblk16	file:
rdra	.\pcnet.c	/^    uint32_t rdra;$/;"	m	struct:pcnet_initblk32	file:
reached	.\slavio_timer.c	/^    uint32_t count, counthigh, reached;$/;"	m	struct:SLAVIO_TIMERState	file:
read	.\omap.h	/^        uint32_t (*read[3])(struct omap_mpu_state_s *s,$/;"	m	struct:omap_mpu_state_s::omap_dma_port_if_s
read_IRQreg	.\openpic.c	/^static inline uint32_t read_IRQreg (openpic_t *opp, int n_IRQ, uint32_t reg)$/;"	f	file:
read_chan	.\dma.c	/^static uint32_t read_chan (void *opaque, uint32_t nport)$/;"	f	file:
read_cont	.\dma.c	/^static uint32_t read_cont (void *opaque, uint32_t nport)$/;"	f	file:
read_count	.\pl011.c	/^    int read_count;$/;"	m	struct:__anon52	file:
read_data	.\scsi-disk.h	/^    void (*read_data)(SCSIDevice *s, uint32_t tag);$/;"	m	struct:SCSIDevice
read_data	.\smbus.h	/^    uint8_t (*read_data)(SMBusDevice *dev, uint8_t cmd, int n);$/;"	m	struct:SMBusDevice
read_dword	.\lsi53c895a.c	/^static inline uint32_t read_dword(LSIState *s, uint32_t addr)$/;"	f	file:
read_error	.\ppc.c	/^    int (*read_error)(int dcrn);$/;"	m	struct:ppc_dcr_t	file:
read_fifo	.\pl011.c	/^    uint32_t read_fifo[16];$/;"	m	struct:__anon52	file:
read_fn	.\nvram.h	/^    nvram_read_t read_fn;$/;"	m	struct:nvram_t
read_notify	.\pxa2xx_gpio.c	/^    qemu_irq read_notify;$/;"	m	struct:pxa2xx_gpio_info_s	file:
read_page	.\dma.c	/^static uint32_t read_page (void *opaque, uint32_t nport)$/;"	f	file:
read_pageh	.\dma.c	/^static uint32_t read_pageh (void *opaque, uint32_t nport)$/;"	f	file:
read_pos	.\pl011.c	/^    int read_pos;$/;"	m	struct:__anon52	file:
read_reg_select	.\i8259.c	/^    uint8_t read_reg_select;$/;"	m	struct:PicState	file:
read_state	.\i8254.c	/^    uint8_t read_state;$/;"	m	struct:PITChannelState	file:
read_tout	.\pxa2xx_mmci.c	/^    uint32_t read_tout;$/;"	m	struct:pxa2xx_mmci_s	file:
read_trigger	.\pl011.c	/^    int read_trigger;$/;"	m	struct:__anon52	file:
readbuff	.\pl011.c	/^    uint32_t readbuff;$/;"	m	struct:__anon52	file:
readfn	.\pxa2xx.c	/^    uint32_t (*readfn)(void *opaque);$/;"	m	struct:pxa2xx_ssp_s	file:
readmode	.\ds1225y.c	/^    readmode,$/;"	e	enum:__anon10	file:
readonly_cb	.\sd.c	/^    qemu_irq readonly_cb;$/;"	m	struct:SDState	file:
real_vram_size	.\cirrus_vga.c	/^    int real_vram_size; \/* XXX: suppress that *\/$/;"	m	struct:CirrusVGAState	file:
realview_gic_cpu_read	.\realview_gic.c	/^static uint32_t realview_gic_cpu_read(void *opaque, target_phys_addr_t offset)$/;"	f	file:
realview_gic_cpu_readfn	.\realview_gic.c	/^static CPUReadMemoryFunc *realview_gic_cpu_readfn[] = {$/;"	v	file:
realview_gic_cpu_write	.\realview_gic.c	/^static void realview_gic_cpu_write(void *opaque, target_phys_addr_t offset,$/;"	f	file:
realview_gic_cpu_writefn	.\realview_gic.c	/^static CPUWriteMemoryFunc *realview_gic_cpu_writefn[] = {$/;"	v	file:
realview_gic_init	.\realview_gic.c	/^qemu_irq *realview_gic_init(uint32_t base, qemu_irq parent_irq)$/;"	f
realview_init	.\realview.c	/^static void realview_init(int ram_size, int vga_ram_size,$/;"	f	file:
realview_machine	.\realview.c	/^QEMUMachine realview_machine = {$/;"	v
receive	.\omap.h	/^    uint16_t (*receive)(void *opaque);$/;"	m	struct:uwire_slave_s
receive_byte	.\smbus.h	/^    uint8_t (*receive_byte)(SMBusDevice *dev);$/;"	m	struct:SMBusDevice
recv	.\i2c.h	/^    i2c_recv_cb recv;$/;"	m	struct:i2c_slave
recv_pos	.\pcnet.c	/^    int xmit_pos, recv_pos;$/;"	m	struct:PCNetState_st	file:
redraw	.\pxa2xx_lcd.c	/^        void (*redraw)(struct pxa2xx_lcdc_s *s, uint8_t *fb,$/;"	m	struct:pxa2xx_lcdc_s::__anon85	file:
redraw	.\ssd0303.c	/^    int redraw;$/;"	m	struct:__anon105	file:
redraw	.\ssd0323.c	/^    int redraw;$/;"	m	struct:__anon106	file:
redraw_fifo	.\vmware_vga.c	/^    } redraw_fifo[REDRAW_FIFO_LEN];$/;"	m	struct:vmsvga_state_s	typeref:struct:vmsvga_state_s::vmsvga_rect_s	file:
redraw_fifo_first	.\vmware_vga.c	/^    int redraw_fifo_first, redraw_fifo_last;$/;"	m	struct:vmsvga_state_s	file:
redraw_fifo_last	.\vmware_vga.c	/^    int redraw_fifo_first, redraw_fifo_last;$/;"	m	struct:vmsvga_state_s	file:
ref	.\tsc210x.c	/^    int ref;$/;"	m	struct:tsc210x_state_s	file:
ref405ep_fpga_init	.\ppc405_boards.c	/^static void ref405ep_fpga_init (uint32_t base)$/;"	f	file:
ref405ep_fpga_read	.\ppc405_boards.c	/^static CPUReadMemoryFunc *ref405ep_fpga_read[] = {$/;"	v	file:
ref405ep_fpga_readb	.\ppc405_boards.c	/^static uint32_t ref405ep_fpga_readb (void *opaque, target_phys_addr_t addr)$/;"	f	file:
ref405ep_fpga_readl	.\ppc405_boards.c	/^static uint32_t ref405ep_fpga_readl (void *opaque, target_phys_addr_t addr)$/;"	f	file:
ref405ep_fpga_readw	.\ppc405_boards.c	/^static uint32_t ref405ep_fpga_readw (void *opaque, target_phys_addr_t addr)$/;"	f	file:
ref405ep_fpga_reset	.\ppc405_boards.c	/^static void ref405ep_fpga_reset (void *opaque)$/;"	f	file:
ref405ep_fpga_t	.\ppc405_boards.c	/^struct ref405ep_fpga_t {$/;"	s	file:
ref405ep_fpga_t	.\ppc405_boards.c	/^typedef struct ref405ep_fpga_t ref405ep_fpga_t;$/;"	t	typeref:struct:ref405ep_fpga_t	file:
ref405ep_fpga_write	.\ppc405_boards.c	/^static CPUWriteMemoryFunc *ref405ep_fpga_write[] = {$/;"	v	file:
ref405ep_fpga_writeb	.\ppc405_boards.c	/^static void ref405ep_fpga_writeb (void *opaque,$/;"	f	file:
ref405ep_fpga_writel	.\ppc405_boards.c	/^static void ref405ep_fpga_writel (void *opaque,$/;"	f	file:
ref405ep_fpga_writew	.\ppc405_boards.c	/^static void ref405ep_fpga_writew (void *opaque,$/;"	f	file:
ref405ep_init	.\ppc405_boards.c	/^static void ref405ep_init (int ram_size, int vga_ram_size,$/;"	f	file:
ref405ep_machine	.\ppc405_boards.c	/^QEMUMachine ref405ep_machine = {$/;"	v
reg	.\eepro100.c	/^static const char *reg[PCI_IO_SIZE \/ 4] = {$/;"	v	file:
reg	.\pxa2xx_gpio.c	/^    } reg;$/;"	m	struct:__anon82	typeref:enum:__anon82::__anon83	file:
reg	.\slavio_serial.c	/^    int reg;$/;"	m	struct:ChannelState	file:
reg	.\sun4c_intctl.c	/^    uint8_t reg;$/;"	m	struct:Sun4c_INTCTLState	file:
reg0	.\ppc405_boards.c	/^    uint8_t reg0;$/;"	m	struct:ref405ep_fpga_t	file:
reg0	.\ppc405_boards.c	/^    uint8_t reg0;$/;"	m	struct:taihu_cpld_t	file:
reg1	.\ppc405_boards.c	/^    uint8_t reg1;$/;"	m	struct:ref405ep_fpga_t	file:
reg1	.\ppc405_boards.c	/^    uint8_t reg1;$/;"	m	struct:taihu_cpld_t	file:
reg_width	.\sh_intc.h	/^    unsigned long set_reg, clr_reg, reg_width, field_width;$/;"	m	struct:intc_prio_reg
reg_width	.\sh_intc.h	/^    unsigned long set_reg, clr_reg, reg_width;$/;"	m	struct:intc_mask_reg
regaddr	.\sh7750_regnames.c	/^    uint32_t regaddr;$/;"	m	struct:__anon95	file:
region	.\eepro100.c	/^    uint32_t region[3];         \/* PCI region addresses *\/$/;"	m	struct:__anon16	file:
regname	.\eepro100.c	/^static char *regname(uint32_t addr)$/;"	f	file:
regname	.\sh7750_regnames.c	/^    const char *regname;$/;"	m	struct:__anon95	file:
regname	.\sh7750_regnames.c	/^const char *regname(uint32_t addr)$/;"	f
regname_t	.\sh7750_regnames.c	/^} regname_t;$/;"	t	typeref:struct:__anon95	file:
regnames	.\sh7750_regnames.c	/^static regname_t regnames[] = {$/;"	v	file:
regs	.\cs4231.c	/^    uint32_t regs[CS_REGS];$/;"	m	struct:CSState	file:
regs	.\dma.c	/^    struct dma_regs regs[4];$/;"	m	struct:dma_cont	typeref:struct:dma_cont::dma_regs	file:
regs	.\eccmemctl.c	/^    uint32_t regs[ECC_NREGS];$/;"	m	struct:ECCState	file:
regs	.\gt64xxx.c	/^    uint32_t regs[GT_REGS];$/;"	m	struct:GT64120State	file:
regs	.\iommu.c	/^    uint32_t regs[IOMMU_NREGS];$/;"	m	struct:IOMMUState	file:
regs	.\sbi.c	/^    uint32_t regs[SBI_NREGS];$/;"	m	struct:SBIState	file:
reload	.\armv7m_nvic.c	/^        uint32_t reload;$/;"	m	struct:__anon3::__anon4	file:
remap	.\ssd0323.c	/^    int remap;$/;"	m	struct:__anon106	file:
remote_wakeup	.\usb.h	/^    int remote_wakeup;$/;"	m	struct:USBDevice
repeat	.\omap.c	/^    int repeat;$/;"	m	struct:omap_dma_channel_s	file:
repeat	.\omap.h	/^    unsigned char repeat;$/;"	m	struct:omap_dma_lcd_channel_s
req	.\pxa2xx_dma.c	/^    uint8_t *req;$/;"	m	struct:pxa2xx_dma_state_s	file:
req_burst	.\pl080.c	/^    uint32_t req_burst;$/;"	m	struct:__anon58	file:
req_in	.\wm8750.c	/^    int idx_in, req_in;$/;"	m	struct:wm8750_s	file:
req_nb_sectors	.\ide.c	/^    int req_nb_sectors; \/* number of sectors per interrupt *\/$/;"	m	struct:IDEState	file:
req_out	.\wm8750.c	/^    int idx_out, req_out;$/;"	m	struct:wm8750_s	file:
req_single	.\pl080.c	/^    uint32_t req_single;$/;"	m	struct:__anon58	file:
request	.\pxa2xx_dma.c	/^    int request;$/;"	m	struct:pxa2xx_dma_channel_s	file:
requests	.\scsi-disk.c	/^    SCSIRequest *requests;$/;"	m	struct:SCSIDeviceState	file:
requests	.\scsi-generic.c	/^    SCSIRequest *requests;$/;"	m	struct:SCSIDeviceState	file:
res	.\pcnet.c	/^    uint32_t res;$/;"	m	struct:pcnet_RMD	file:
res	.\pcnet.c	/^    uint32_t res;$/;"	m	struct:pcnet_TMD	file:
resc	.\stellaris.c	/^    uint32_t resc;$/;"	m	struct:__anon110	file:
reset	.\omap.c	/^    int reset;$/;"	m	struct:omap_watchdog_timer_s	file:
reset	.\pxa.h	/^    qemu_irq reset;$/;"	m	struct:pxa2xx_state_s
reset	.\sb16.c	/^static void reset (SB16State *s)$/;"	f	file:
reset3	.\pxa2xx_timer.c	/^    uint32_t reset3;$/;"	m	struct:__anon86	file:
reset_bit	.\apic.c	/^static inline void reset_bit(uint32_t *tab, int index)$/;"	f	file:
reset_bit	.\openpic.c	/^static inline void reset_bit (uint32_t *field, int bit)$/;"	f	file:
reset_dirty	.\tcx.c	/^static inline void reset_dirty(TCXState *ts, ram_addr_t page_min,$/;"	f	file:
reset_irq	.\ppc_prep.c	/^    qemu_irq reset_irq;$/;"	m	struct:sysctrl_t	file:
reset_mixer	.\sb16.c	/^static void reset_mixer (SB16State *s)$/;"	f	file:
reset_val	.\omap.c	/^    uint32_t reset_val;$/;"	m	struct:omap_mpu_timer_s	file:
resetlevel	.\arm_sysctl.c	/^    uint32_t resetlevel;$/;"	m	struct:__anon5	file:
residue	.\usb-msd.c	/^    uint32_t residue;$/;"	m	struct:__anon122	file:
residue	.\usb-msd.c	/^    uint32_t residue;$/;"	m	struct:usb_msd_csw	file:
resolution	.\tsc210x.c	/^static const int resolution[4] = { 12, 8, 10, 12 };$/;"	v	file:
resp_fifo	.\pxa2xx_mmci.c	/^    uint16_t resp_fifo[9];$/;"	m	struct:pxa2xx_mmci_s	file:
resp_len	.\pxa2xx_mmci.c	/^    int resp_len;$/;"	m	struct:pxa2xx_mmci_s	file:
resp_tout	.\pxa2xx_mmci.c	/^    uint32_t resp_tout;$/;"	m	struct:pxa2xx_mmci_s	file:
respcmd	.\pl181.c	/^    uint32_t respcmd;$/;"	m	struct:__anon60	file:
respid0	.\lsi53c895a.c	/^    uint8_t respid0;$/;"	m	struct:__anon25	file:
respid1	.\lsi53c895a.c	/^    uint8_t respid1;$/;"	m	struct:__anon25	file:
response	.\pl181.c	/^    uint32_t response[4];$/;"	m	struct:__anon60	file:
response	.\ssi-sd.c	/^    uint8_t response[5];$/;"	m	struct:__anon108	file:
response_pos	.\ssi-sd.c	/^    int response_pos;$/;"	m	struct:__anon108	file:
result	.\usb-msd.c	/^    int result;$/;"	m	struct:__anon122	file:
result_timer	.\fdc.c	/^    QEMUTimer *result_timer;$/;"	m	struct:fdctrl_t	file:
rfcr	.\sh7750.c	/^    uint16_t rfcr;$/;"	m	struct:SH7750State	file:
rfsr	.\mcf_fec.c	/^    uint32_t rfsr;$/;"	m	struct:__anon30	file:
rgb_to_pixel15	.\pixel_ops.h	/^static inline unsigned int rgb_to_pixel15(unsigned int r, unsigned int g,$/;"	f
rgb_to_pixel15	.\pl110.c	/^static inline uint32_t rgb_to_pixel15(unsigned int r, unsigned int g, unsigned b)$/;"	f	file:
rgb_to_pixel15_dup	.\vga.c	/^static unsigned int rgb_to_pixel15_dup(unsigned int r, unsigned int g, unsigned b)$/;"	f	file:
rgb_to_pixel15bgr	.\pixel_ops.h	/^static inline unsigned int rgb_to_pixel15bgr(unsigned int r, unsigned int g,$/;"	f
rgb_to_pixel15bgr_dup	.\vga.c	/^static unsigned int rgb_to_pixel15bgr_dup(unsigned int r, unsigned int g,$/;"	f	file:
rgb_to_pixel16	.\pixel_ops.h	/^static inline unsigned int rgb_to_pixel16(unsigned int r, unsigned int g,$/;"	f
rgb_to_pixel16	.\pl110.c	/^static inline uint32_t rgb_to_pixel16(unsigned int r, unsigned int g, unsigned b)$/;"	f	file:
rgb_to_pixel16_dup	.\vga.c	/^static unsigned int rgb_to_pixel16_dup(unsigned int r, unsigned int g, unsigned b)$/;"	f	file:
rgb_to_pixel16bgr	.\pixel_ops.h	/^static inline unsigned int rgb_to_pixel16bgr(unsigned int r, unsigned int g,$/;"	f
rgb_to_pixel16bgr_dup	.\vga.c	/^static unsigned int rgb_to_pixel16bgr_dup(unsigned int r, unsigned int g,$/;"	f	file:
rgb_to_pixel24	.\pixel_ops.h	/^static inline unsigned int rgb_to_pixel24(unsigned int r, unsigned int g,$/;"	f
rgb_to_pixel24	.\pl110.c	/^static inline uint32_t rgb_to_pixel24(unsigned int r, unsigned int g, unsigned b)$/;"	f	file:
rgb_to_pixel24bgr	.\pixel_ops.h	/^static inline unsigned int rgb_to_pixel24bgr(unsigned int r, unsigned int g,$/;"	f
rgb_to_pixel32	.\pixel_ops.h	/^static inline unsigned int rgb_to_pixel32(unsigned int r, unsigned int g,$/;"	f
rgb_to_pixel32	.\pl110.c	/^static inline uint32_t rgb_to_pixel32(unsigned int r, unsigned int g, unsigned b)$/;"	f	file:
rgb_to_pixel32_dup	.\vga.c	/^static unsigned int rgb_to_pixel32_dup(unsigned int r, unsigned int g, unsigned b)$/;"	f	file:
rgb_to_pixel32bgr	.\pixel_ops.h	/^static inline unsigned int rgb_to_pixel32bgr(unsigned int r, unsigned int g,$/;"	f
rgb_to_pixel32bgr_dup	.\vga.c	/^static unsigned int rgb_to_pixel32bgr_dup(unsigned int r, unsigned int g, unsigned b)$/;"	f	file:
rgb_to_pixel8	.\pixel_ops.h	/^static inline unsigned int rgb_to_pixel8(unsigned int r, unsigned int g,$/;"	f
rgb_to_pixel8	.\pl110.c	/^static inline uint32_t rgb_to_pixel8(unsigned int r, unsigned int g, unsigned b)$/;"	f	file:
rgb_to_pixel8_dup	.\vga.c	/^static unsigned int rgb_to_pixel8_dup(unsigned int r, unsigned int g, unsigned b)$/;"	f	file:
rgb_to_pixel_dup_func	.\vga.c	/^typedef unsigned int rgb_to_pixel_dup_func(unsigned int r, unsigned int g, unsigned b);$/;"	t	file:
rgb_to_pixel_dup_table	.\vga.c	/^static rgb_to_pixel_dup_func *rgb_to_pixel_dup_table[NB_DEPTHS] = {$/;"	v	file:
rhdesc_a	.\usb-ohci.c	/^    uint32_t rhdesc_a, rhdesc_b;$/;"	m	struct:__anon123	file:
rhdesc_b	.\usb-ohci.c	/^    uint32_t rhdesc_a, rhdesc_b;$/;"	m	struct:__anon123	file:
rhea1_ck	.\omap1_clk.c	/^static struct clk rhea1_ck = {$/;"	v	typeref:struct:clk	file:
rhea2_ck	.\omap1_clk.c	/^static struct clk rhea2_ck = {$/;"	v	typeref:struct:clk	file:
rhport	.\usb-ohci.c	/^    OHCIPort rhport[OHCI_MAX_PORTS];$/;"	m	struct:__anon123	file:
rhstatus	.\usb-ohci.c	/^    uint32_t rhstatus;$/;"	m	struct:__anon123	file:
ris	.\stellaris.c	/^    uint32_t ris;$/;"	m	struct:__anon112	file:
ris	.\stellaris_enet.c	/^    uint32_t ris;$/;"	m	struct:__anon115	file:
rising	.\pxa2xx_gpio.c	/^    uint32_t rising[PXA2XX_GPIO_BANKS];$/;"	m	struct:pxa2xx_gpio_info_s	file:
rlen	.\pcnet.c	/^    uint8_t rlen;$/;"	m	struct:pcnet_initblk32	file:
ro	.\fdc.c	/^    uint8_t ro;               \/* Is read-only           *\/$/;"	m	struct:fdrive_t	file:
ro	.\pflash_cfi01.c	/^    int ro;$/;"	m	struct:pflash_t	file:
ro	.\pflash_cfi02.c	/^    int ro;$/;"	m	struct:pflash_t	file:
rop_to_index	.\cirrus_vga.c	/^static uint8_t rop_to_index[256];$/;"	v	file:
rotate_on_auto_eoi	.\i8259.c	/^    uint8_t rotate_on_auto_eoi;$/;"	m	struct:PicState	file:
round	.\omap.c	/^    int round;$/;"	m	struct:omap_rtc_s	file:
row	.\palm.c	/^    int row;$/;"	m	struct:__anon47	file:
row	.\pxa.h	/^    int row;$/;"	m	struct:keymap
row	.\ssd0303.c	/^    int row;$/;"	m	struct:__anon105	file:
row	.\ssd0323.c	/^    int row;$/;"	m	struct:__anon106	file:
row_end	.\ssd0323.c	/^    int row_end;$/;"	m	struct:__anon106	file:
row_latch	.\omap.c	/^    uint8_t row_latch;$/;"	m	struct:omap_mpuio_s	file:
row_start	.\ssd0323.c	/^    int row_start;$/;"	m	struct:__anon106	file:
rows	.\pl110.c	/^    int rows;$/;"	m	struct:__anon59	file:
rptr	.\adb.c	/^    int rptr, wptr, count;$/;"	m	struct:KBDState	file:
rptr	.\ps2.c	/^    int rptr, wptr, count;$/;"	m	struct:__anon77	file:
rptr	.\slavio_serial.c	/^    int rptr, wptr, count;$/;"	m	struct:__anon101	file:
rr1	.\ppc405_uc.c	/^    uint32_t rr1;$/;"	m	struct:ppc405_gpio_t	file:
rregs	.\esp.c	/^    uint8_t rregs[ESP_REGS];$/;"	m	struct:ESPState	file:
rregs	.\slavio_serial.c	/^    uint8_t rx, tx, wregs[SERIAL_REGS], rregs[SERIAL_REGS];$/;"	m	struct:ChannelState	file:
rsar	.\eepro100.c	/^    uint32_t rsar;$/;"	m	struct:__anon16	file:
rsar	.\ne2000.c	/^    uint32_t rsar;$/;"	m	struct:NE2000State	file:
rsp	.\omap_mmc.c	/^    uint16_t rsp[8];$/;"	m	struct:omap_mmc_s	file:
rsr	.\eepro100.c	/^    uint8_t rsr;$/;"	m	struct:__anon16	file:
rsr	.\mcf5206.c	/^    uint8_t rsr;$/;"	m	struct:__anon27	file:
rsr	.\ne2000.c	/^    uint8_t rsr;$/;"	m	struct:NE2000State	file:
rtar	.\pxa.h	/^    uint32_t rtar;$/;"	m	struct:pxa2xx_state_s
rtc	.\omap.h	/^    struct omap_rtc_s *rtc;$/;"	m	struct:omap_mpu_state_s	typeref:struct:omap_mpu_state_s::omap_rtc_s
rtc	.\stellaris.c	/^    uint32_t rtc;$/;"	m	struct:gptm_state	file:
rtc_base	.\pxa.h	/^    target_phys_addr_t rtc_base;$/;"	m	struct:pxa2xx_state_s
rtc_copy_date	.\mc146818rtc.c	/^static void rtc_copy_date(RTCState *s)$/;"	f	file:
rtc_hz	.\pxa.h	/^    QEMUTimer *rtc_hz;$/;"	m	struct:pxa2xx_state_s
rtc_init	.\mc146818rtc.c	/^RTCState *rtc_init(int base, qemu_irq irq)$/;"	f
rtc_load	.\mc146818rtc.c	/^static int rtc_load(QEMUFile *f, void *opaque, int version_id)$/;"	f	file:
rtc_mm_init	.\mc146818rtc.c	/^RTCState *rtc_mm_init(target_phys_addr_t base, int it_shift, qemu_irq irq)$/;"	f
rtc_mm_read	.\mc146818rtc.c	/^static CPUReadMemoryFunc *rtc_mm_read[] = {$/;"	v	file:
rtc_mm_write	.\mc146818rtc.c	/^static CPUWriteMemoryFunc *rtc_mm_write[] = {$/;"	v	file:
rtc_next_second	.\mc146818rtc.c	/^static void rtc_next_second(struct tm *tm)$/;"	f	file:
rtc_periodic_timer	.\mc146818rtc.c	/^static void rtc_periodic_timer(void *opaque)$/;"	f	file:
rtc_pi	.\pxa.h	/^    QEMUTimer *rtc_pi;$/;"	m	struct:pxa2xx_state_s
rtc_rdal1	.\pxa.h	/^    QEMUTimer *rtc_rdal1;$/;"	m	struct:pxa2xx_state_s
rtc_rdal2	.\pxa.h	/^    QEMUTimer *rtc_rdal2;$/;"	m	struct:pxa2xx_state_s
rtc_save	.\mc146818rtc.c	/^static void rtc_save(QEMUFile *f, void *opaque)$/;"	f	file:
rtc_set_date	.\mc146818rtc.c	/^void rtc_set_date(RTCState *s, const struct tm *tm)$/;"	f
rtc_set_date_from_host	.\mc146818rtc.c	/^static void rtc_set_date_from_host(RTCState *s)$/;"	f	file:
rtc_set_memory	.\mc146818rtc.c	/^void rtc_set_memory(RTCState *s, int addr, int val)$/;"	f
rtc_set_time	.\mc146818rtc.c	/^static void rtc_set_time(RTCState *s)$/;"	f	file:
rtc_state	.\pc.c	/^static RTCState *rtc_state;$/;"	v	file:
rtc_swal1	.\pxa.h	/^    QEMUTimer *rtc_swal1;$/;"	m	struct:pxa2xx_state_s
rtc_swal2	.\pxa.h	/^    QEMUTimer *rtc_swal2;$/;"	m	struct:pxa2xx_state_s
rtc_timer_update	.\mc146818rtc.c	/^static void rtc_timer_update(RTCState *s, int64_t current_time)$/;"	f	file:
rtc_update_second	.\mc146818rtc.c	/^static void rtc_update_second(void *opaque)$/;"	f	file:
rtc_update_second2	.\mc146818rtc.c	/^static void rtc_update_second2(void *opaque)$/;"	f	file:
rtl8139	.\rtl8139.c	/^    RTL8139State rtl8139;$/;"	m	struct:PCIRTL8139State	file:
rtl8139_BasicModeCtrl_read	.\rtl8139.c	/^static uint32_t rtl8139_BasicModeCtrl_read(RTL8139State *s)$/;"	f	file:
rtl8139_BasicModeCtrl_write	.\rtl8139.c	/^static void rtl8139_BasicModeCtrl_write(RTL8139State *s, uint32_t val)$/;"	f	file:
rtl8139_BasicModeStatus_read	.\rtl8139.c	/^static uint32_t rtl8139_BasicModeStatus_read(RTL8139State *s)$/;"	f	file:
rtl8139_BasicModeStatus_write	.\rtl8139.c	/^static void rtl8139_BasicModeStatus_write(RTL8139State *s, uint32_t val)$/;"	f	file:
rtl8139_CSCR_read	.\rtl8139.c	/^static uint16_t rtl8139_CSCR_read(RTL8139State *s)$/;"	f	file:
rtl8139_Cfg9346_read	.\rtl8139.c	/^static uint32_t rtl8139_Cfg9346_read(RTL8139State *s)$/;"	f	file:
rtl8139_Cfg9346_write	.\rtl8139.c	/^static void rtl8139_Cfg9346_write(RTL8139State *s, uint32_t val)$/;"	f	file:
rtl8139_ChipCmd_read	.\rtl8139.c	/^static uint32_t rtl8139_ChipCmd_read(RTL8139State *s)$/;"	f	file:
rtl8139_ChipCmd_write	.\rtl8139.c	/^static void rtl8139_ChipCmd_write(RTL8139State *s, uint32_t val)$/;"	f	file:
rtl8139_Config0_read	.\rtl8139.c	/^static uint32_t rtl8139_Config0_read(RTL8139State *s)$/;"	f	file:
rtl8139_Config0_write	.\rtl8139.c	/^static void rtl8139_Config0_write(RTL8139State *s, uint32_t val)$/;"	f	file:
rtl8139_Config1_read	.\rtl8139.c	/^static uint32_t rtl8139_Config1_read(RTL8139State *s)$/;"	f	file:
rtl8139_Config1_write	.\rtl8139.c	/^static void rtl8139_Config1_write(RTL8139State *s, uint32_t val)$/;"	f	file:
rtl8139_Config3_read	.\rtl8139.c	/^static uint32_t rtl8139_Config3_read(RTL8139State *s)$/;"	f	file:
rtl8139_Config3_write	.\rtl8139.c	/^static void rtl8139_Config3_write(RTL8139State *s, uint32_t val)$/;"	f	file:
rtl8139_Config4_read	.\rtl8139.c	/^static uint32_t rtl8139_Config4_read(RTL8139State *s)$/;"	f	file:
rtl8139_Config4_write	.\rtl8139.c	/^static void rtl8139_Config4_write(RTL8139State *s, uint32_t val)$/;"	f	file:
rtl8139_Config5_read	.\rtl8139.c	/^static uint32_t rtl8139_Config5_read(RTL8139State *s)$/;"	f	file:
rtl8139_Config5_write	.\rtl8139.c	/^static void rtl8139_Config5_write(RTL8139State *s, uint32_t val)$/;"	f	file:
rtl8139_CpCmd_read	.\rtl8139.c	/^static uint32_t rtl8139_CpCmd_read(RTL8139State *s)$/;"	f	file:
rtl8139_CpCmd_write	.\rtl8139.c	/^static void rtl8139_CpCmd_write(RTL8139State *s, uint32_t val)$/;"	f	file:
rtl8139_IntrMask_read	.\rtl8139.c	/^static uint32_t rtl8139_IntrMask_read(RTL8139State *s)$/;"	f	file:
rtl8139_IntrMask_write	.\rtl8139.c	/^static void rtl8139_IntrMask_write(RTL8139State *s, uint32_t val)$/;"	f	file:
rtl8139_IntrMitigate_read	.\rtl8139.c	/^static uint32_t rtl8139_IntrMitigate_read(RTL8139State *s)$/;"	f	file:
rtl8139_IntrMitigate_write	.\rtl8139.c	/^static void rtl8139_IntrMitigate_write(RTL8139State *s, uint32_t val)$/;"	f	file:
rtl8139_IntrStatus_read	.\rtl8139.c	/^static uint32_t rtl8139_IntrStatus_read(RTL8139State *s)$/;"	f	file:
rtl8139_IntrStatus_write	.\rtl8139.c	/^static void rtl8139_IntrStatus_write(RTL8139State *s, uint32_t val)$/;"	f	file:
rtl8139_MultiIntr_read	.\rtl8139.c	/^static uint32_t rtl8139_MultiIntr_read(RTL8139State *s)$/;"	f	file:
rtl8139_MultiIntr_write	.\rtl8139.c	/^static void rtl8139_MultiIntr_write(RTL8139State *s, uint32_t val)$/;"	f	file:
rtl8139_RxBufAddr_read	.\rtl8139.c	/^static uint32_t rtl8139_RxBufAddr_read(RTL8139State *s)$/;"	f	file:
rtl8139_RxBufPtr_read	.\rtl8139.c	/^static uint32_t rtl8139_RxBufPtr_read(RTL8139State *s)$/;"	f	file:
rtl8139_RxBufPtr_write	.\rtl8139.c	/^static void rtl8139_RxBufPtr_write(RTL8139State *s, uint32_t val)$/;"	f	file:
rtl8139_RxBuf_read	.\rtl8139.c	/^static uint32_t rtl8139_RxBuf_read(RTL8139State *s)$/;"	f	file:
rtl8139_RxBuf_write	.\rtl8139.c	/^static void rtl8139_RxBuf_write(RTL8139State *s, uint32_t val)$/;"	f	file:
rtl8139_RxBufferEmpty	.\rtl8139.c	/^static int rtl8139_RxBufferEmpty(RTL8139State *s)$/;"	f	file:
rtl8139_RxConfig_read	.\rtl8139.c	/^static uint32_t rtl8139_RxConfig_read(RTL8139State *s)$/;"	f	file:
rtl8139_RxConfig_write	.\rtl8139.c	/^static void rtl8139_RxConfig_write(RTL8139State *s, uint32_t val)$/;"	f	file:
rtl8139_RxWrap	.\rtl8139.c	/^static int rtl8139_RxWrap(RTL8139State *s)$/;"	f	file:
rtl8139_TSAD_read	.\rtl8139.c	/^static uint16_t rtl8139_TSAD_read(RTL8139State *s)$/;"	f	file:
rtl8139_TxAddr_read	.\rtl8139.c	/^static uint32_t rtl8139_TxAddr_read(RTL8139State *s, uint32_t txAddrOffset)$/;"	f	file:
rtl8139_TxAddr_write	.\rtl8139.c	/^static void rtl8139_TxAddr_write(RTL8139State *s, uint32_t txAddrOffset, uint32_t val)$/;"	f	file:
rtl8139_TxConfig_read	.\rtl8139.c	/^static uint32_t rtl8139_TxConfig_read(RTL8139State *s)$/;"	f	file:
rtl8139_TxConfig_write	.\rtl8139.c	/^static void rtl8139_TxConfig_write(RTL8139State *s, uint32_t val)$/;"	f	file:
rtl8139_TxConfig_writeb	.\rtl8139.c	/^static void rtl8139_TxConfig_writeb(RTL8139State *s, uint32_t val)$/;"	f	file:
rtl8139_TxStatus_read	.\rtl8139.c	/^static uint32_t rtl8139_TxStatus_read(RTL8139State *s, uint32_t txRegOffset)$/;"	f	file:
rtl8139_TxStatus_write	.\rtl8139.c	/^static void rtl8139_TxStatus_write(RTL8139State *s, uint32_t txRegOffset, uint32_t val)$/;"	f	file:
rtl8139_addr64	.\rtl8139.c	/^static inline target_phys_addr_t rtl8139_addr64(uint32_t low, uint32_t high)$/;"	f	file:
rtl8139_can_receive	.\rtl8139.c	/^static int rtl8139_can_receive(void *opaque)$/;"	f	file:
rtl8139_config_writeable	.\rtl8139.c	/^static int rtl8139_config_writeable(RTL8139State *s)$/;"	f	file:
rtl8139_cp_receiver_enabled	.\rtl8139.c	/^static int rtl8139_cp_receiver_enabled(RTL8139State *s)$/;"	f	file:
rtl8139_cp_transmitter_enabled	.\rtl8139.c	/^static int rtl8139_cp_transmitter_enabled(RTL8139State *s)$/;"	f	file:
rtl8139_cplus_transmit	.\rtl8139.c	/^static void rtl8139_cplus_transmit(RTL8139State *s)$/;"	f	file:
rtl8139_cplus_transmit_one	.\rtl8139.c	/^static int rtl8139_cplus_transmit_one(RTL8139State *s)$/;"	f	file:
rtl8139_do_receive	.\rtl8139.c	/^static void rtl8139_do_receive(void *opaque, const uint8_t *buf, int size, int do_interrupt)$/;"	f	file:
rtl8139_get_next_tctr_time	.\rtl8139.c	/^static inline int64_t rtl8139_get_next_tctr_time(RTL8139State *s, int64_t current_time)$/;"	f	file:
rtl8139_io_readb	.\rtl8139.c	/^static uint32_t rtl8139_io_readb(void *opaque, uint8_t addr)$/;"	f	file:
rtl8139_io_readl	.\rtl8139.c	/^static uint32_t rtl8139_io_readl(void *opaque, uint8_t addr)$/;"	f	file:
rtl8139_io_readw	.\rtl8139.c	/^static uint32_t rtl8139_io_readw(void *opaque, uint8_t addr)$/;"	f	file:
rtl8139_io_writeb	.\rtl8139.c	/^static void rtl8139_io_writeb(void *opaque, uint8_t addr, uint32_t val)$/;"	f	file:
rtl8139_io_writel	.\rtl8139.c	/^static void rtl8139_io_writel(void *opaque, uint8_t addr, uint32_t val)$/;"	f	file:
rtl8139_io_writew	.\rtl8139.c	/^static void rtl8139_io_writew(void *opaque, uint8_t addr, uint32_t val)$/;"	f	file:
rtl8139_ioport_map	.\rtl8139.c	/^static void rtl8139_ioport_map(PCIDevice *pci_dev, int region_num,$/;"	f	file:
rtl8139_ioport_readb	.\rtl8139.c	/^static uint32_t rtl8139_ioport_readb(void *opaque, uint32_t addr)$/;"	f	file:
rtl8139_ioport_readl	.\rtl8139.c	/^static uint32_t rtl8139_ioport_readl(void *opaque, uint32_t addr)$/;"	f	file:
rtl8139_ioport_readw	.\rtl8139.c	/^static uint32_t rtl8139_ioport_readw(void *opaque, uint32_t addr)$/;"	f	file:
rtl8139_ioport_writeb	.\rtl8139.c	/^static void rtl8139_ioport_writeb(void *opaque, uint32_t addr, uint32_t val)$/;"	f	file:
rtl8139_ioport_writel	.\rtl8139.c	/^static void rtl8139_ioport_writel(void *opaque, uint32_t addr, uint32_t val)$/;"	f	file:
rtl8139_ioport_writew	.\rtl8139.c	/^static void rtl8139_ioport_writew(void *opaque, uint32_t addr, uint32_t val)$/;"	f	file:
rtl8139_load	.\rtl8139.c	/^static int rtl8139_load(QEMUFile* f,void* opaque,int version_id)$/;"	f	file:
rtl8139_mmio_io_addr	.\rtl8139.c	/^    int rtl8139_mmio_io_addr;$/;"	m	struct:RTL8139State	file:
rtl8139_mmio_map	.\rtl8139.c	/^static void rtl8139_mmio_map(PCIDevice *pci_dev, int region_num,$/;"	f	file:
rtl8139_mmio_read	.\rtl8139.c	/^static CPUReadMemoryFunc *rtl8139_mmio_read[3] = {$/;"	v	file:
rtl8139_mmio_readb	.\rtl8139.c	/^static uint32_t rtl8139_mmio_readb(void *opaque, target_phys_addr_t addr)$/;"	f	file:
rtl8139_mmio_readl	.\rtl8139.c	/^static uint32_t rtl8139_mmio_readl(void *opaque, target_phys_addr_t addr)$/;"	f	file:
rtl8139_mmio_readw	.\rtl8139.c	/^static uint32_t rtl8139_mmio_readw(void *opaque, target_phys_addr_t addr)$/;"	f	file:
rtl8139_mmio_write	.\rtl8139.c	/^static CPUWriteMemoryFunc *rtl8139_mmio_write[3] = {$/;"	v	file:
rtl8139_mmio_writeb	.\rtl8139.c	/^static void rtl8139_mmio_writeb(void *opaque, target_phys_addr_t addr, uint32_t val)$/;"	f	file:
rtl8139_mmio_writel	.\rtl8139.c	/^static void rtl8139_mmio_writel(void *opaque, target_phys_addr_t addr, uint32_t val)$/;"	f	file:
rtl8139_mmio_writew	.\rtl8139.c	/^static void rtl8139_mmio_writew(void *opaque, target_phys_addr_t addr, uint32_t val)$/;"	f	file:
rtl8139_receive	.\rtl8139.c	/^static void rtl8139_receive(void *opaque, const uint8_t *buf, int size)$/;"	f	file:
rtl8139_receiver_enabled	.\rtl8139.c	/^static int rtl8139_receiver_enabled(RTL8139State *s)$/;"	f	file:
rtl8139_reset	.\rtl8139.c	/^static void rtl8139_reset(RTL8139State *s)$/;"	f	file:
rtl8139_reset_rxring	.\rtl8139.c	/^static void rtl8139_reset_rxring(RTL8139State *s, uint32_t bufferSize)$/;"	f	file:
rtl8139_save	.\rtl8139.c	/^static void rtl8139_save(QEMUFile* f,void* opaque)$/;"	f	file:
rtl8139_timer	.\rtl8139.c	/^static void rtl8139_timer(void *opaque)$/;"	f	file:
rtl8139_transfer_frame	.\rtl8139.c	/^static void rtl8139_transfer_frame(RTL8139State *s, const uint8_t *buf, int size, int do_interrupt)$/;"	f	file:
rtl8139_transmit	.\rtl8139.c	/^static void rtl8139_transmit(RTL8139State *s)$/;"	f	file:
rtl8139_transmit_one	.\rtl8139.c	/^static int rtl8139_transmit_one(RTL8139State *s, int descriptor)$/;"	f	file:
rtl8139_transmitter_enabled	.\rtl8139.c	/^static int rtl8139_transmitter_enabled(RTL8139State *s)$/;"	f	file:
rtl8139_update_irq	.\rtl8139.c	/^static void rtl8139_update_irq(RTL8139State *s)$/;"	f	file:
rtl8139_write_buffer	.\rtl8139.c	/^static void rtl8139_write_buffer(RTL8139State *s, const void *buf, int size)$/;"	f	file:
rtr	.\ppc405_uc.c	/^    uint32_t rtr;$/;"	m	struct:ppc4xx_sdram_t	file:
rts	.\omap.h	/^    int rts;$/;"	m	struct:i2s_codec_s
rtsr	.\pxa.h	/^    uint32_t rtsr;$/;"	m	struct:pxa2xx_state_s
rttr	.\pxa.h	/^    uint32_t rttr;$/;"	m	struct:pxa2xx_state_s
ru_base	.\eepro100.c	/^    uint32_t ru_base;           \/* RU base address *\/$/;"	m	struct:__anon16	file:
ru_idle	.\eepro100.c	/^    ru_idle = 0,$/;"	e	enum:__anon15	file:
ru_no_resources	.\eepro100.c	/^    ru_no_resources = 2,$/;"	e	enum:__anon15	file:
ru_offset	.\eepro100.c	/^    uint32_t ru_offset;         \/* RU address offset *\/$/;"	m	struct:__anon16	file:
ru_ready	.\eepro100.c	/^    ru_ready = 4$/;"	e	enum:__anon15	file:
ru_state_t	.\eepro100.c	/^} ru_state_t;$/;"	t	typeref:enum:__anon15	file:
ru_suspended	.\eepro100.c	/^    ru_suspended = 1,$/;"	e	enum:__anon15	file:
run_count	.\omap.c	/^    int run_count;$/;"	m	struct:omap_dma_s	file:
running	.\omap.c	/^    int running;$/;"	m	struct:omap_rtc_s	file:
running	.\omap.h	/^    unsigned char running;$/;"	m	struct:omap_dma_lcd_channel_s
running	.\omap1_clk.c	/^    int running;		\/* Is currently ticking *\/$/;"	m	struct:clk	file:
running	.\pl080.c	/^    int running;$/;"	m	struct:__anon58	file:
running	.\pxa2xx_dma.c	/^    int running;$/;"	m	struct:pxa2xx_dma_state_s	file:
running	.\slavio_timer.c	/^    int running;$/;"	m	struct:SLAVIO_TIMERState	file:
running_irq	.\arm_gic.c	/^    int running_irq[NCPU];$/;"	m	struct:gic_state	file:
running_priority	.\arm_gic.c	/^    int running_priority[NCPU];$/;"	m	struct:gic_state	file:
rvic	.\mpcore.c	/^    qemu_irq *rvic[4];$/;"	m	struct:__anon36	file:
rw	.\fdc.c	/^    uint8_t rw;               \/* Read\/write             *\/$/;"	m	struct:fdrive_t	file:
rw_ack_intr	.\etraxfs_timer.c	/^uint32_t rw_ack_intr;$/;"	v
rw_intr_mask	.\etraxfs_timer.c	/^uint32_t rw_intr_mask;$/;"	v
rw_mode	.\i8254.c	/^    uint8_t rw_mode;$/;"	m	struct:PITChannelState	file:
rx	.\slavio_serial.c	/^    uint8_t rx, tx, wregs[SERIAL_REGS], rregs[SERIAL_REGS];$/;"	m	struct:ChannelState	file:
rx	.\stellaris_enet.c	/^    } rx[31];$/;"	m	struct:__anon115	typeref:struct:__anon115::__anon116	file:
rx_alignment_errors	.\eepro100.c	/^    uint32_t rx_good_frames, rx_crc_errors, rx_alignment_errors,$/;"	m	struct:__anon13	file:
rx_buf_addr	.\eepro100.c	/^    uint32_t rx_buf_addr;       \/* void * *\/$/;"	m	struct:__anon12	file:
rx_buffer	.\mipsnet.c	/^    uint8_t rx_buffer[MAX_ETH_FRAME_SIZE];$/;"	m	struct:MIPSnetState	file:
rx_cdt_errors	.\eepro100.c	/^        rx_resource_errors, rx_overrun_errors, rx_cdt_errors,$/;"	m	struct:__anon13	file:
rx_cnt	.\sh_serial.c	/^    uint8_t rx_cnt;$/;"	m	struct:__anon96	file:
rx_count	.\mipsnet.c	/^    uint32_t rx_count;$/;"	m	struct:MIPSnetState	file:
rx_crc_errors	.\eepro100.c	/^    uint32_t rx_good_frames, rx_crc_errors, rx_alignment_errors,$/;"	m	struct:__anon13	file:
rx_descriptor	.\mcf_fec.c	/^    uint32_t rx_descriptor;$/;"	m	struct:__anon30	file:
rx_dma	.\omap_mmc.c	/^    int rx_dma;$/;"	m	struct:omap_mmc_s	file:
rx_enabled	.\mcf_fec.c	/^    int rx_enabled;$/;"	m	struct:__anon30	file:
rx_enabled	.\mcf_uart.c	/^    int rx_enabled;$/;"	m	struct:__anon33	file:
rx_fifo	.\pl022.c	/^    uint16_t rx_fifo[8];$/;"	m	struct:__anon53	file:
rx_fifo	.\pxa2xx.c	/^    uint32_t rx_fifo[16];$/;"	m	struct:pxa2xx_ssp_s	file:
rx_fifo	.\pxa2xx.c	/^    uint8_t rx_fifo[64];$/;"	m	struct:pxa2xx_fir_s	file:
rx_fifo	.\pxa2xx_mmci.c	/^    uint8_t rx_fifo[32];$/;"	m	struct:pxa2xx_mmci_s	file:
rx_fifo	.\sh_serial.c	/^    uint8_t rx_fifo[16]; \/* frdr \/ rdr *\/$/;"	m	struct:__anon96	file:
rx_fifo	.\smc91c111.c	/^    int rx_fifo[NUM_PACKETS];$/;"	m	struct:__anon103	file:
rx_fifo	.\stellaris_enet.c	/^    uint8_t *rx_fifo;$/;"	m	struct:__anon115	file:
rx_fifo_head	.\pl022.c	/^    int rx_fifo_head;$/;"	m	struct:__anon53	file:
rx_fifo_len	.\pl022.c	/^    int rx_fifo_len;$/;"	m	struct:__anon53	file:
rx_fifo_len	.\smc91c111.c	/^    int rx_fifo_len;$/;"	m	struct:__anon103	file:
rx_fifo_len	.\stellaris_enet.c	/^    int rx_fifo_len;$/;"	m	struct:__anon115	file:
rx_good_frames	.\eepro100.c	/^    uint32_t rx_good_frames, rx_crc_errors, rx_alignment_errors,$/;"	m	struct:__anon13	file:
rx_len	.\pxa.h	/^    int rx_len;$/;"	m	struct:pxa2xx_i2s_s
rx_len	.\pxa2xx.c	/^    int rx_len;$/;"	m	struct:pxa2xx_fir_s	file:
rx_len	.\pxa2xx_mmci.c	/^    int rx_len;$/;"	m	struct:pxa2xx_mmci_s	file:
rx_level	.\pxa2xx.c	/^    int rx_level;$/;"	m	struct:pxa2xx_ssp_s	file:
rx_mode_bits	.\rtl8139.c	/^enum rx_mode_bits {$/;"	g	file:
rx_overrun_errors	.\eepro100.c	/^        rx_resource_errors, rx_overrun_errors, rx_cdt_errors,$/;"	m	struct:__anon13	file:
rx_rate	.\omap.c	/^    int rx_rate;$/;"	m	struct:omap_mcbsp_s	file:
rx_rate	.\omap.h	/^    int rx_rate;$/;"	m	struct:i2s_codec_s
rx_read	.\mipsnet.c	/^    uint32_t rx_read;$/;"	m	struct:MIPSnetState	file:
rx_req	.\omap.c	/^    int rx_req;$/;"	m	struct:omap_mcbsp_s	file:
rx_resource_errors	.\eepro100.c	/^        rx_resource_errors, rx_overrun_errors, rx_cdt_errors,$/;"	m	struct:__anon13	file:
rx_short_frame_errors	.\eepro100.c	/^        rx_short_frame_errors;$/;"	m	struct:__anon13	file:
rx_start	.\pxa2xx.c	/^    int rx_start;$/;"	m	struct:pxa2xx_fir_s	file:
rx_start	.\pxa2xx.c	/^    int rx_start;$/;"	m	struct:pxa2xx_ssp_s	file:
rx_start	.\pxa2xx_mmci.c	/^    int rx_start;$/;"	m	struct:pxa2xx_mmci_s	file:
rx_swallow	.\omap.h	/^    qemu_irq rx_swallow;$/;"	m	struct:i2s_codec_s
rxbuf	.\omap.c	/^    uint16_t rxbuf;$/;"	m	struct:omap_uwire_s	file:
rxcarr	.\ppc405_uc.c	/^    uint32_t rxcarr;$/;"	m	struct:ppc40x_mal_t	file:
rxcasr	.\ppc405_uc.c	/^    uint32_t rxcasr;$/;"	m	struct:ppc40x_mal_t	file:
rxcr	.\eepro100.c	/^    uint8_t rxcr;$/;"	m	struct:__anon16	file:
rxcr	.\ne2000.c	/^    uint8_t rxcr;$/;"	m	struct:NE2000State	file:
rxctpr	.\ppc405_uc.c	/^    uint32_t rxctpr[2];$/;"	m	struct:ppc40x_mal_t	file:
rxdeir	.\ppc405_uc.c	/^    uint32_t rxdeir;$/;"	m	struct:ppc40x_mal_t	file:
rxdrq	.\omap.c	/^    qemu_irq rxdrq;$/;"	m	struct:omap_mcbsp_s	file:
rxeobisr	.\ppc405_uc.c	/^    uint32_t rxeobisr;$/;"	m	struct:ppc40x_mal_t	file:
rxint	.\slavio_serial.c	/^    int rxint, txint, rxint_under_svc, txint_under_svc;$/;"	m	struct:ChannelState	file:
rxint_under_svc	.\slavio_serial.c	/^    int rxint, txint, rxint_under_svc, txint_under_svc;$/;"	m	struct:ChannelState	file:
rxirq	.\omap.c	/^    qemu_irq rxirq;$/;"	m	struct:omap_mcbsp_s	file:
rxirq	.\omap.c	/^    qemu_irq rxirq;$/;"	m	struct:omap_uwire_s	file:
rxlen	.\omap_i2c.c	/^    int rxlen;$/;"	m	struct:omap_i2c_s	file:
ryar1	.\pxa.h	/^    uint32_t ryar1;$/;"	m	struct:pxa2xx_state_s
ryar2	.\pxa.h	/^    uint32_t ryar2;$/;"	m	struct:pxa2xx_state_s
rythm	.\fmopl.h	/^	UINT8 rythm;		\/* Rythm mode , key flag *\/$/;"	m	struct:fm_opl_f
s_spk	.\pcspk.c	/^static const char *s_spk = "pcspk";$/;"	v	file:
sa	.\ppc405_uc.c	/^    uint32_t sa[4];$/;"	m	struct:ppc405_dma_t	file:
sac	.\stellaris.c	/^    uint32_t sac;$/;"	m	struct:__anon112	file:
sample_buf	.\pcspk.c	/^    uint8_t sample_buf[PCSPK_BUF_LEN];$/;"	m	struct:__anon51	file:
samples	.\adlib.c	/^    int left, pos, samples;$/;"	m	struct:__anon2	file:
samples	.\pcspk.c	/^    unsigned int samples;$/;"	m	struct:__anon51	file:
sbc	.\lsi53c895a.c	/^    uint32_t sbc;$/;"	m	struct:__anon25	file:
sbi_base	.\sun4m.c	/^    target_phys_addr_t sbi_base;$/;"	m	struct:sun4d_hwdef	file:
sbi_check_interrupts	.\sbi.c	/^static void sbi_check_interrupts(void *opaque)$/;"	f	file:
sbi_init	.\sbi.c	/^void *sbi_init(target_phys_addr_t addr, qemu_irq **irq, qemu_irq **cpu_irq,$/;"	f
sbi_load	.\sbi.c	/^static int sbi_load(QEMUFile *f, void *opaque, int version_id)$/;"	f	file:
sbi_mem_read	.\sbi.c	/^static CPUReadMemoryFunc *sbi_mem_read[3] = {$/;"	v	file:
sbi_mem_readl	.\sbi.c	/^static uint32_t sbi_mem_readl(void *opaque, target_phys_addr_t addr)$/;"	f	file:
sbi_mem_write	.\sbi.c	/^static CPUWriteMemoryFunc *sbi_mem_write[3] = {$/;"	v	file:
sbi_mem_writel	.\sbi.c	/^static void sbi_mem_writel(void *opaque, target_phys_addr_t addr, uint32_t val)$/;"	f	file:
sbi_reset	.\sbi.c	/^static void sbi_reset(void *opaque)$/;"	f	file:
sbi_save	.\sbi.c	/^static void sbi_save(QEMUFile *f, void *opaque)$/;"	f	file:
sbi_set_irq	.\sbi.c	/^static void sbi_set_irq(void *opaque, int irq, int level)$/;"	f	file:
sbi_set_timer_irq_cpu	.\sbi.c	/^static void sbi_set_timer_irq_cpu(void *opaque, int cpu, int level)$/;"	f	file:
sbms	.\lsi53c895a.c	/^    uint32_t sbms;$/;"	m	struct:__anon25	file:
scale	.\etraxfs_timer.c	/^	int scale;$/;"	m	struct:fs_timer_t	file:
scan_enabled	.\ps2.c	/^    int scan_enabled;$/;"	m	struct:__anon79	file:
scb_stat	.\eepro100.c	/^    uint8_t scb_stat;           \/* SCB stat\/ack byte *\/$/;"	m	struct:__anon16	file:
scb_stat_ack	.\eepro100.c	/^enum scb_stat_ack {$/;"	g	file:
scgc	.\stellaris.c	/^    uint32_t scgc[3];$/;"	m	struct:__anon110	file:
scid	.\lsi53c895a.c	/^    uint8_t scid;$/;"	m	struct:__anon25	file:
scl	.\mips_malta.c	/^  uint8_t scl;$/;"	m	struct:_eeprom24c0x_t	file:
scntl0	.\lsi53c895a.c	/^    uint8_t scntl0;$/;"	m	struct:__anon25	file:
scntl1	.\lsi53c895a.c	/^    uint8_t scntl1;$/;"	m	struct:__anon25	file:
scntl2	.\lsi53c895a.c	/^    uint8_t scntl2;$/;"	m	struct:__anon25	file:
scntl3	.\lsi53c895a.c	/^    uint8_t scntl3;$/;"	m	struct:__anon25	file:
scoop_gpio_handler_update	.\spitz.c	/^static inline void scoop_gpio_handler_update(struct scoop_info_s *s) {$/;"	f	file:
scoop_gpio_in_get	.\spitz.c	/^static inline qemu_irq *scoop_gpio_in_get(struct scoop_info_s *s)$/;"	f	file:
scoop_gpio_out_set	.\spitz.c	/^static inline void scoop_gpio_out_set(struct scoop_info_s *s, int line,$/;"	f	file:
scoop_gpio_set	.\spitz.c	/^static void scoop_gpio_set(void *opaque, int line, int level)$/;"	f	file:
scoop_info_s	.\spitz.c	/^struct scoop_info_s {$/;"	s	file:
scoop_load	.\spitz.c	/^static int scoop_load(QEMUFile *f, void *opaque, int version_id)$/;"	f	file:
scoop_readb	.\spitz.c	/^static uint32_t scoop_readb(void *opaque, target_phys_addr_t addr)$/;"	f	file:
scoop_readfn	.\spitz.c	/^CPUReadMemoryFunc *scoop_readfn[] = {$/;"	v
scoop_save	.\spitz.c	/^static void scoop_save(QEMUFile *f, void *opaque)$/;"	f	file:
scoop_writeb	.\spitz.c	/^static void scoop_writeb(void *opaque, target_phys_addr_t addr, uint32_t value)$/;"	f	file:
scoop_writefn	.\spitz.c	/^CPUWriteMemoryFunc *scoop_writefn[] = {$/;"	v
scount	.\es1370.c	/^    uint32_t scount;$/;"	m	struct:chan	file:
scr	.\mcf5206.c	/^    uint8_t scr;$/;"	m	struct:__anon27	file:
scr	.\sd.c	/^    uint8_t scr[8];$/;"	m	struct:SDState	file:
scr	.\serial.c	/^    uint8_t scr;$/;"	m	struct:SerialState	file:
scr	.\sh_serial.c	/^    uint8_t scr;$/;"	m	struct:__anon96	file:
scratch	.\lsi53c895a.c	/^    uint32_t scratch[18]; \/* SCRATCHA-SCRATCHR *\/$/;"	m	struct:__anon25	file:
scratch	.\vmware_vga.c	/^    uint32_t *scratch;$/;"	m	struct:vmsvga_state_s	file:
scratch_size	.\vmware_vga.c	/^    int scratch_size;$/;"	m	struct:vmsvga_state_s	file:
screen_state_t	.\jazz_led.c	/^} screen_state_t;$/;"	t	typeref:enum:__anon23	file:
script_ram	.\lsi53c895a.c	/^    uint32_t script_ram[2048];$/;"	m	struct:__anon25	file:
script_ram_base	.\lsi53c895a.c	/^    uint32_t script_ram_base;$/;"	m	struct:__anon25	file:
scsi_buf	.\usb-msd.c	/^    uint8_t *scsi_buf;$/;"	m	struct:__anon122	file:
scsi_cancel_io	.\scsi-disk.c	/^static void scsi_cancel_io(SCSIDevice *d, uint32_t tag)$/;"	f	file:
scsi_cancel_io	.\scsi-generic.c	/^static void scsi_cancel_io(SCSIDevice *d, uint32_t tag)$/;"	f	file:
scsi_command_complete	.\scsi-disk.c	/^static void scsi_command_complete(SCSIRequest *r, int sense)$/;"	f	file:
scsi_command_complete	.\scsi-generic.c	/^static void scsi_command_complete(void *opaque, int ret)$/;"	f	file:
scsi_completionfn	.\scsi-disk.h	/^typedef void (*scsi_completionfn)(void *opaque, int reason, uint32_t tag,$/;"	t
scsi_destroy	.\scsi-disk.c	/^static void scsi_destroy(SCSIDevice *d)$/;"	f	file:
scsi_destroy	.\scsi-generic.c	/^static void scsi_destroy(SCSIDevice *d)$/;"	f	file:
scsi_dev	.\esp.c	/^    SCSIDevice *scsi_dev[ESP_MAX_DEVS];$/;"	m	struct:ESPState	file:
scsi_dev	.\lsi53c895a.c	/^    SCSIDevice *scsi_dev[LSI_MAX_DEVS];$/;"	m	struct:__anon25	file:
scsi_dev	.\usb-msd.c	/^    SCSIDevice *scsi_dev;$/;"	m	struct:__anon122	file:
scsi_disk_init	.\scsi-disk.c	/^SCSIDevice *scsi_disk_init(BlockDriverState *bdrv, int tcq,$/;"	f
scsi_find_request	.\scsi-disk.c	/^static SCSIRequest *scsi_find_request(SCSIDeviceState *s, uint32_t tag)$/;"	f	file:
scsi_find_request	.\scsi-generic.c	/^static SCSIRequest *scsi_find_request(SCSIDeviceState *s, uint32_t tag)$/;"	f	file:
scsi_generic_init	.\scsi-generic.c	/^SCSIDevice *scsi_generic_init(BlockDriverState *bdrv, int tcq,$/;"	f
scsi_get_buf	.\scsi-disk.c	/^static uint8_t *scsi_get_buf(SCSIDevice *d, uint32_t tag)$/;"	f	file:
scsi_get_buf	.\scsi-generic.c	/^static uint8_t *scsi_get_buf(SCSIDevice *d, uint32_t tag)$/;"	f	file:
scsi_len	.\usb-msd.c	/^    uint32_t scsi_len;$/;"	m	struct:__anon122	file:
scsi_length	.\scsi-generic.c	/^static int scsi_length(uint8_t *cmd, int blocksize, int *cmdlen, uint32_t *len)$/;"	f	file:
scsi_new_request	.\scsi-disk.c	/^static SCSIRequest *scsi_new_request(SCSIDeviceState *s, uint32_t tag)$/;"	f	file:
scsi_new_request	.\scsi-generic.c	/^static SCSIRequest *scsi_new_request(SCSIDeviceState *s, uint32_t tag)$/;"	f	file:
scsi_read_complete	.\scsi-disk.c	/^static void scsi_read_complete(void * opaque, int ret)$/;"	f	file:
scsi_read_complete	.\scsi-generic.c	/^static void scsi_read_complete(void * opaque, int ret)$/;"	f	file:
scsi_read_data	.\scsi-disk.c	/^static void scsi_read_data(SCSIDevice *d, uint32_t tag)$/;"	f	file:
scsi_read_data	.\scsi-generic.c	/^static void scsi_read_data(SCSIDevice *d, uint32_t tag)$/;"	f	file:
scsi_reason	.\scsi-disk.h	/^enum scsi_reason {$/;"	g
scsi_remove_request	.\scsi-disk.c	/^static void scsi_remove_request(SCSIRequest *r)$/;"	f	file:
scsi_remove_request	.\scsi-generic.c	/^static void scsi_remove_request(SCSIRequest *r)$/;"	f	file:
scsi_send_command	.\scsi-disk.c	/^static int32_t scsi_send_command(SCSIDevice *d, uint32_t tag,$/;"	f	file:
scsi_send_command	.\scsi-generic.c	/^static int32_t scsi_send_command(SCSIDevice *d, uint32_t tag,$/;"	f	file:
scsi_write_complete	.\scsi-disk.c	/^static void scsi_write_complete(void * opaque, int ret)$/;"	f	file:
scsi_write_complete	.\scsi-generic.c	/^static void scsi_write_complete(void * opaque, int ret)$/;"	f	file:
scsi_write_data	.\scsi-disk.c	/^static int scsi_write_data(SCSIDevice *d, uint32_t tag)$/;"	f	file:
scsi_write_data	.\scsi-generic.c	/^static int scsi_write_data(SCSIDevice *d, uint32_t tag)$/;"	f	file:
sctl	.\es1370.c	/^    uint32_t sctl;$/;"	m	struct:ES1370State	file:
sctl_fmt	.\es1370.c	/^    uint32_t sctl_fmt;$/;"	m	struct:chan_bits	file:
sctl_inten	.\es1370.c	/^    uint32_t sctl_inten;$/;"	m	struct:chan_bits	file:
sctl_loopsel	.\es1370.c	/^    uint32_t sctl_loopsel;$/;"	m	struct:chan_bits	file:
sctl_pause	.\es1370.c	/^    uint32_t sctl_pause;$/;"	m	struct:chan_bits	file:
sctl_sh_fmt	.\es1370.c	/^    uint32_t sctl_sh_fmt;$/;"	m	struct:chan_bits	file:
scu_control	.\mpcore.c	/^    uint32_t scu_control;$/;"	m	struct:mpcore_priv_state	file:
sd	.\ssi-sd.c	/^    SDState *sd;$/;"	m	struct:__anon108	file:
sd_ac	.\sd.h	/^    sd_ac,	\/* addressed -- no data transfer *\/$/;"	e	enum:__anon92
sd_acmd_type	.\sd.c	/^static const sd_cmd_type_t sd_acmd_type[64] = {$/;"	v	file:
sd_adtc	.\sd.h	/^    sd_adtc,	\/* addressed with data transfer *\/$/;"	e	enum:__anon92
sd_app_command	.\sd.c	/^static sd_rsp_type_t sd_app_command(SDState *sd,$/;"	f	file:
sd_bc	.\sd.h	/^    sd_bc = 0,	\/* broadcast -- no response *\/$/;"	e	enum:__anon92
sd_bcr	.\sd.h	/^    sd_bcr,	\/* broadcast with response *\/$/;"	e	enum:__anon92
sd_blk_read	.\sd.c	/^static void sd_blk_read(SDState *sd, uint32_t addr, uint32_t len)$/;"	f	file:
sd_blk_write	.\sd.c	/^static void sd_blk_write(SDState *sd, uint32_t addr, uint32_t len)$/;"	f	file:
sd_card_identification_mode	.\sd.c	/^        sd_card_identification_mode,$/;"	e	enum:SDState::__anon90	file:
sd_cardchange	.\sd.c	/^static void sd_cardchange(void *opaque)$/;"	f	file:
sd_cmd_class	.\sd.c	/^static const int sd_cmd_class[64] = {$/;"	v	file:
sd_cmd_type	.\sd.c	/^static const sd_cmd_type_t sd_cmd_type[64] = {$/;"	v	file:
sd_cmd_type_t	.\sd.h	/^} sd_cmd_type_t;$/;"	t	typeref:enum:__anon92
sd_crc16	.\sd.c	/^static uint16_t sd_crc16(void *message, size_t width)$/;"	f	file:
sd_crc7	.\sd.c	/^static uint8_t sd_crc7(void *message, size_t width)$/;"	f	file:
sd_csd_rw_mask	.\sd.c	/^static const uint8_t sd_csd_rw_mask[16] = {$/;"	v	file:
sd_data_ready	.\sd.c	/^int sd_data_ready(SDState *sd)$/;"	f
sd_data_transfer_mode	.\sd.c	/^        sd_data_transfer_mode,$/;"	e	enum:SDState::__anon90	file:
sd_disconnect_state	.\sd.c	/^        sd_disconnect_state,$/;"	e	enum:SDState::__anon91	file:
sd_do_command	.\sd.c	/^int sd_do_command(SDState *sd, struct sd_request_s *req,$/;"	f
sd_erase	.\sd.c	/^static void sd_erase(SDState *sd)$/;"	f	file:
sd_function_switch	.\sd.c	/^static void sd_function_switch(SDState *sd, uint32_t arg)$/;"	f	file:
sd_identification_state	.\sd.c	/^        sd_identification_state,$/;"	e	enum:SDState::__anon91	file:
sd_idle_state	.\sd.c	/^        sd_idle_state = 0,$/;"	e	enum:SDState::__anon91	file:
sd_inactive	.\sd.c	/^        sd_inactive,$/;"	e	enum:SDState::__anon90	file:
sd_inactive_state	.\sd.c	/^        sd_inactive_state = -1,$/;"	e	enum:SDState::__anon91	file:
sd_init	.\sd.c	/^SDState *sd_init(BlockDriverState *bs, int is_spi)$/;"	f
sd_lock_command	.\sd.c	/^static void sd_lock_command(SDState *sd)$/;"	f	file:
sd_none	.\sd.h	/^    sd_none = -1,$/;"	e	enum:__anon92
sd_nore	.\omap_mmc.c	/^    sd_nore = 0,	\/* no response *\/$/;"	e	enum:__anon41	file:
sd_normal_command	.\sd.c	/^static sd_rsp_type_t sd_normal_command(SDState *sd,$/;"	f	file:
sd_programming_state	.\sd.c	/^        sd_programming_state,$/;"	e	enum:SDState::__anon91	file:
sd_r0	.\sd.c	/^    sd_r0 = 0,    \/* no response *\/$/;"	e	enum:__anon89	file:
sd_r1	.\omap_mmc.c	/^    sd_r1,		\/* normal response command *\/$/;"	e	enum:__anon41	file:
sd_r1	.\sd.c	/^    sd_r1,        \/* normal response command *\/$/;"	e	enum:__anon89	file:
sd_r1b	.\omap_mmc.c	/^    sd_r1b = -1,$/;"	e	enum:__anon41	file:
sd_r1b	.\sd.c	/^    sd_r1b = -1,$/;"	e	enum:__anon89	file:
sd_r2	.\omap_mmc.c	/^    sd_r2,		\/* CID, CSD registers *\/$/;"	e	enum:__anon41	file:
sd_r2_i	.\sd.c	/^    sd_r2_i,      \/* CID register *\/$/;"	e	enum:__anon89	file:
sd_r2_s	.\sd.c	/^    sd_r2_s,      \/* CSD register *\/$/;"	e	enum:__anon89	file:
sd_r3	.\omap_mmc.c	/^    sd_r3,		\/* OCR register *\/$/;"	e	enum:__anon41	file:
sd_r3	.\sd.c	/^    sd_r3,        \/* OCR register *\/$/;"	e	enum:__anon89	file:
sd_r6	.\omap_mmc.c	/^    sd_r6 = 6,		\/* Published RCA response *\/$/;"	e	enum:__anon41	file:
sd_r6	.\sd.c	/^    sd_r6 = 6,    \/* Published RCA response *\/$/;"	e	enum:__anon89	file:
sd_r7	.\sd.c	/^    sd_r7,        \/* Operating voltage *\/$/;"	e	enum:__anon89	file:
sd_read_data	.\sd.c	/^uint8_t sd_read_data(SDState *sd)$/;"	f
sd_ready_state	.\sd.c	/^        sd_ready_state,$/;"	e	enum:SDState::__anon91	file:
sd_receivingdata_state	.\sd.c	/^        sd_receivingdata_state,$/;"	e	enum:SDState::__anon91	file:
sd_req_crc_validate	.\sd.c	/^static int sd_req_crc_validate(struct sd_request_s *req)$/;"	f	file:
sd_request_s	.\sd.h	/^struct sd_request_s {$/;"	s
sd_reset	.\sd.c	/^static void sd_reset(SDState *sd, BlockDriverState *bdrv)$/;"	f	file:
sd_response_r1_make	.\sd.c	/^static void sd_response_r1_make(SDState *sd,$/;"	f	file:
sd_response_r3_make	.\sd.c	/^static void sd_response_r3_make(SDState *sd, uint8_t *response)$/;"	f	file:
sd_response_r6_make	.\sd.c	/^static void sd_response_r6_make(SDState *sd, uint8_t *response)$/;"	f	file:
sd_response_r7_make	.\sd.c	/^static void sd_response_r7_make(SDState *sd, uint8_t *response)$/;"	f	file:
sd_rsp_type_t	.\omap_mmc.c	/^} sd_rsp_type_t;$/;"	t	typeref:enum:__anon41	file:
sd_rsp_type_t	.\sd.c	/^} sd_rsp_type_t;$/;"	t	typeref:enum:__anon89	file:
sd_sendingdata_state	.\sd.c	/^        sd_sendingdata_state,$/;"	e	enum:SDState::__anon91	file:
sd_set_cardstatus	.\sd.c	/^static void sd_set_cardstatus(SDState *sd)$/;"	f	file:
sd_set_cb	.\sd.c	/^void sd_set_cb(SDState *sd, qemu_irq readonly, qemu_irq insert)$/;"	f
sd_set_cid	.\sd.c	/^static void sd_set_cid(SDState *sd)$/;"	f	file:
sd_set_csd	.\sd.c	/^static void sd_set_csd(SDState *sd, uint32_t size)$/;"	f	file:
sd_set_ocr	.\sd.c	/^static void sd_set_ocr(SDState *sd)$/;"	f	file:
sd_set_rca	.\sd.c	/^static void sd_set_rca(SDState *sd)$/;"	f	file:
sd_set_scr	.\sd.c	/^static void sd_set_scr(SDState *sd)$/;"	f	file:
sd_set_sdstatus	.\sd.c	/^static void sd_set_sdstatus(SDState *sd)$/;"	f	file:
sd_set_status	.\sd.c	/^static void sd_set_status(SDState *sd)$/;"	f	file:
sd_standby_state	.\sd.c	/^        sd_standby_state,$/;"	e	enum:SDState::__anon91	file:
sd_status	.\sd.c	/^    uint8_t sd_status[64];$/;"	m	struct:SDState	file:
sd_transfer_state	.\sd.c	/^        sd_transfer_state,$/;"	e	enum:SDState::__anon91	file:
sd_wp_addr	.\sd.c	/^static inline int sd_wp_addr(SDState *sd, uint32_t addr)$/;"	f	file:
sd_wpbits	.\sd.c	/^static uint32_t sd_wpbits(SDState *sd, uint32_t addr)$/;"	f	file:
sd_write_data	.\sd.c	/^void sd_write_data(SDState *sd, uint8_t value)$/;"	f
sda	.\mips_malta.c	/^  uint8_t sda;$/;"	m	struct:_eeprom24c0x_t	file:
sdata	.\ppc405_uc.c	/^    uint8_t sdata;$/;"	m	struct:ppc4xx_i2c_t	file:
sdid	.\lsi53c895a.c	/^    uint8_t sdid;$/;"	m	struct:__anon25	file:
sdio	.\omap_mmc.c	/^    uint16_t sdio;$/;"	m	struct:omap_mmc_s	file:
sdram_base	.\ppc405_uc.c	/^static always_inline target_phys_addr_t sdram_base (uint32_t bcr)$/;"	f	file:
sdram_bcr	.\ppc405_uc.c	/^static uint32_t sdram_bcr (target_phys_addr_t ram_base,$/;"	f	file:
sdram_map_bcr	.\ppc405_uc.c	/^static void sdram_map_bcr (ppc4xx_sdram_t *sdram)$/;"	f	file:
sdram_reset	.\ppc405_uc.c	/^static void sdram_reset (void *opaque)$/;"	f	file:
sdram_set_bcr	.\ppc405_uc.c	/^static void sdram_set_bcr (uint32_t *bcrp, uint32_t bcr, int enabled)$/;"	f	file:
sdram_size	.\omap.h	/^    unsigned long sdram_size;$/;"	m	struct:omap_mpu_state_s
sdram_size	.\ppc405_uc.c	/^static target_ulong sdram_size (uint32_t bcr)$/;"	f	file:
sdram_unmap_bcr	.\ppc405_uc.c	/^static void sdram_unmap_bcr (ppc4xx_sdram_t *sdram)$/;"	f	file:
second_timer	.\mc146818rtc.c	/^    QEMUTimer *second_timer;$/;"	m	struct:RTCState	file:
second_timer2	.\mc146818rtc.c	/^    QEMUTimer *second_timer2;$/;"	m	struct:RTCState	file:
secondary_cpu_reset	.\sun4m.c	/^static void secondary_cpu_reset(void *opaque)$/;"	f	file:
sect	.\fdc.c	/^    uint8_t sect;$/;"	m	struct:fdrive_t	file:
sector	.\ide.c	/^	uint8_t sector;		\/* starting sector *\/$/;"	m	struct:partition	file:
sector	.\ide.c	/^    uint8_t sector;$/;"	m	struct:IDEState	file:
sector	.\scsi-disk.c	/^    int sector;$/;"	m	struct:SCSIRequest	file:
sector_count	.\scsi-disk.c	/^    int sector_count;$/;"	m	struct:SCSIRequest	file:
sector_len	.\gumstix.c	/^static const int sector_len = 128 * 1024;$/;"	v	file:
sector_len	.\pflash_cfi01.c	/^    target_ulong sector_len;$/;"	m	struct:pflash_t	file:
sector_len	.\pflash_cfi02.c	/^    uint32_t sector_len;$/;"	m	struct:pflash_t	file:
sector_write_timer	.\ide.c	/^    QEMUTimer *sector_write_timer; \/* only used for win2k install hack *\/$/;"	m	struct:IDEState	file:
sectors	.\ide.c	/^    int cylinders, heads, sectors;$/;"	m	struct:IDEState	file:
segments	.\jazz_led.c	/^    uint8_t segments;$/;"	m	struct:LedState	file:
select	.\ide.c	/^    uint8_t select;$/;"	m	struct:IDEState	file:
send	.\i2c.h	/^    i2c_send_cb send;$/;"	m	struct:i2c_slave
send	.\omap.h	/^    void (*send)(void *opaque, uint16_t data);$/;"	m	struct:uwire_slave_s
send_byte	.\smbus.h	/^    void (*send_byte)(SMBusDevice *dev, uint8_t val);$/;"	m	struct:SMBusDevice
send_command	.\scsi-disk.h	/^    int32_t (*send_command)(SCSIDevice *s, uint32_t tag, uint8_t *buf,$/;"	m	struct:SCSIDevice
sens_edge	.\omap.c	/^    uint32_t sens_edge;$/;"	m	struct:omap_intr_handler_bank_s	file:
sense	.\esp.c	/^    int sense;$/;"	m	struct:ESPState	file:
sense	.\lsi53c895a.c	/^    int sense;$/;"	m	struct:__anon25	file:
sense	.\scsi-disk.c	/^    int sense;$/;"	m	struct:SCSIDeviceState	file:
sense	.\spitz.c	/^    qemu_irq sense[SPITZ_KEY_SENSE_NUM];$/;"	m	struct:spitz_keyboard_s	file:
sense_key	.\ide.c	/^    uint8_t sense_key;$/;"	m	struct:IDEState	file:
sense_state	.\spitz.c	/^    uint16_t sense_state;$/;"	m	struct:spitz_keyboard_s	file:
sensebuf	.\scsi-generic.c	/^    uint8_t sensebuf[SCSI_SENSE_BUF_SIZE];$/;"	m	struct:SCSIDeviceState	file:
ser	.\slavio_serial.c	/^    ser, kbd, mouse,$/;"	e	enum:__anon100	file:
ser_irq	.\sun4m.c	/^    int ser_irq, ms_kb_irq, fd_irq, me_irq, cs_irq;$/;"	m	struct:hwdef	file:
ser_irq	.\sun4m.c	/^    int ser_irq, ms_kb_irq, me_irq;$/;"	m	struct:sun4d_hwdef	file:
ser_read	.\etraxfs_ser.c	/^static CPUReadMemoryFunc *ser_read[] = {$/;"	v	file:
ser_readb	.\etraxfs_ser.c	/^static uint32_t ser_readb (void *opaque, target_phys_addr_t addr)$/;"	f	file:
ser_readl	.\etraxfs_ser.c	/^static uint32_t ser_readl (void *opaque, target_phys_addr_t addr)$/;"	f	file:
ser_readw	.\etraxfs_ser.c	/^static uint32_t ser_readw (void *opaque, target_phys_addr_t addr)$/;"	f	file:
ser_write	.\etraxfs_ser.c	/^static CPUWriteMemoryFunc *ser_write[] = {$/;"	v	file:
ser_writeb	.\etraxfs_ser.c	/^ser_writeb (void *opaque, target_phys_addr_t addr, uint32_t value)$/;"	f	file:
ser_writel	.\etraxfs_ser.c	/^ser_writel (void *opaque, target_phys_addr_t addr, uint32_t value)$/;"	f	file:
ser_writew	.\etraxfs_ser.c	/^ser_writew (void *opaque, target_phys_addr_t addr, uint32_t value)$/;"	f	file:
serial	.\omap.c	/^    SerialState *serial; \/* TODO *\/$/;"	m	struct:omap_uart_s	file:
serial_base	.\mips_pica61.c	/^static uint32_t serial_base[MAX_SERIAL_PORTS] = { 0x80006000, 0x80007000 };$/;"	v	file:
serial_base	.\sun4m.c	/^    target_phys_addr_t serial_base, fd_base;$/;"	m	struct:hwdef	file:
serial_base	.\sun4m.c	/^    target_phys_addr_t serial_base;$/;"	m	struct:sun4d_hwdef	file:
serial_can_receive	.\serial.c	/^static int serial_can_receive(SerialState *s)$/;"	f	file:
serial_can_receive	.\slavio_serial.c	/^static int serial_can_receive(void *opaque)$/;"	f	file:
serial_can_receive1	.\serial.c	/^static int serial_can_receive1(void *opaque)$/;"	f	file:
serial_event	.\serial.c	/^static void serial_event(void *opaque, int event)$/;"	f	file:
serial_event	.\slavio_serial.c	/^static void serial_event(void *opaque, int event)$/;"	f	file:
serial_init	.\serial.c	/^SerialState *serial_init(int base, qemu_irq irq, CharDriverState *chr)$/;"	f
serial_io	.\mips_r4k.c	/^static int serial_io[MAX_SERIAL_PORTS] = { 0x3f8, 0x2f8, 0x3e8, 0x2e8 };$/;"	v	file:
serial_io	.\pc.c	/^static int serial_io[MAX_SERIAL_PORTS] = { 0x3f8, 0x2f8, 0x3e8, 0x2e8 };$/;"	v	file:
serial_io	.\sun4u.c	/^static const int serial_io[MAX_SERIAL_PORTS] = { 0x3f8, 0x2f8, 0x3e8, 0x2e8 };$/;"	v	file:
serial_ioport_read	.\serial.c	/^static uint32_t serial_ioport_read(void *opaque, uint32_t addr)$/;"	f	file:
serial_ioport_write	.\serial.c	/^static void serial_ioport_write(void *opaque, uint32_t addr, uint32_t val)$/;"	f	file:
serial_irq	.\mips_pica61.c	/^static int serial_irq[MAX_SERIAL_PORTS] = { 8, 9 };$/;"	v	file:
serial_irq	.\mips_r4k.c	/^static int serial_irq[MAX_SERIAL_PORTS] = { 4, 3, 4, 3 };$/;"	v	file:
serial_irq	.\pc.c	/^static int serial_irq[MAX_SERIAL_PORTS] = { 4, 3, 4, 3 };$/;"	v	file:
serial_irq	.\sun4u.c	/^static const int serial_irq[MAX_SERIAL_PORTS] = { 4, 3, 4, 3 };$/;"	v	file:
serial_load	.\serial.c	/^static int serial_load(QEMUFile *f, void *opaque, int version_id)$/;"	f	file:
serial_mm_init	.\serial.c	/^SerialState *serial_mm_init (target_phys_addr_t base, int it_shift,$/;"	f
serial_mm_read	.\ppc405_uc.c	/^static CPUReadMemoryFunc *serial_mm_read[] = {$/;"	v	file:
serial_mm_read	.\serial.c	/^static CPUReadMemoryFunc *serial_mm_read[] = {$/;"	v	file:
serial_mm_readb	.\serial.c	/^uint32_t serial_mm_readb (void *opaque, target_phys_addr_t addr)$/;"	f
serial_mm_readl	.\serial.c	/^uint32_t serial_mm_readl (void *opaque, target_phys_addr_t addr)$/;"	f
serial_mm_readw	.\serial.c	/^uint32_t serial_mm_readw (void *opaque, target_phys_addr_t addr)$/;"	f
serial_mm_write	.\ppc405_uc.c	/^static CPUWriteMemoryFunc *serial_mm_write[] = {$/;"	v	file:
serial_mm_write	.\serial.c	/^static CPUWriteMemoryFunc *serial_mm_write[] = {$/;"	v	file:
serial_mm_writeb	.\serial.c	/^void serial_mm_writeb (void *opaque,$/;"	f
serial_mm_writel	.\serial.c	/^void serial_mm_writel (void *opaque,$/;"	f
serial_mm_writew	.\serial.c	/^void serial_mm_writew (void *opaque,$/;"	f
serial_receive1	.\serial.c	/^static void serial_receive1(void *opaque, const uint8_t *buf, int size)$/;"	f	file:
serial_receive1	.\slavio_serial.c	/^static void serial_receive1(void *opaque, const uint8_t *buf, int size)$/;"	f	file:
serial_receive_break	.\serial.c	/^static void serial_receive_break(SerialState *s)$/;"	f	file:
serial_receive_break	.\slavio_serial.c	/^static void serial_receive_break(ChannelState *s)$/;"	f	file:
serial_receive_byte	.\serial.c	/^static void serial_receive_byte(SerialState *s, int ch)$/;"	f	file:
serial_receive_byte	.\slavio_serial.c	/^static void serial_receive_byte(ChannelState *s, int ch)$/;"	f	file:
serial_save	.\serial.c	/^static void serial_save(QEMUFile *f, void *opaque)$/;"	f	file:
serial_update_irq	.\serial.c	/^static void serial_update_irq(SerialState *s)$/;"	f	file:
serial_update_parameters	.\serial.c	/^static void serial_update_parameters(SerialState *s)$/;"	f	file:
servicing	.\openpic.c	/^    IRQ_queue_t servicing;$/;"	m	struct:IRQ_dst_t	file:
set_alarm	.\m48t59.c	/^static void set_alarm (m48t59_t *NVRAM, struct tm *tm)$/;"	f	file:
set_algorythm	.\fmopl.c	/^static void set_algorythm( OPL_CH *CH)$/;"	f	file:
set_ar_dr	.\fmopl.c	/^INLINE void set_ar_dr(FM_OPL *OPL,int slot,int v)$/;"	f
set_bit	.\apic.c	/^static inline void set_bit(uint32_t *tab, int index)$/;"	f	file:
set_bit	.\openpic.c	/^static inline void set_bit (uint32_t *field, int bit)$/;"	f	file:
set_counter	.\cuda.c	/^static void set_counter(CUDAState *s, CUDATimer *ti, unsigned int val)$/;"	f	file:
set_cu_state	.\eepro100.c	/^static void set_cu_state(EEPRO100State * s, cu_state_t state)$/;"	f	file:
set_irq	.\pci.c	/^    pci_set_irq_fn set_irq;$/;"	m	struct:PCIBus	file:
set_kernel_args	.\arm_boot.c	/^static void set_kernel_args(uint32_t ram_size, int initrd_size,$/;"	f	file:
set_kernel_args_old	.\arm_boot.c	/^static void set_kernel_args_old(uint32_t ram_size, int initrd_size,$/;"	f	file:
set_ksl_tl	.\fmopl.c	/^INLINE void set_ksl_tl(FM_OPL *OPL,int slot,int v)$/;"	f
set_mul	.\fmopl.c	/^INLINE void set_mul(FM_OPL *OPL,int slot,int v)$/;"	f
set_rate	.\omap.h	/^    void (*set_rate)(void *opaque, int in, int out);$/;"	m	struct:i2s_codec_s
set_reg	.\sh_intc.h	/^    unsigned long set_reg, clr_reg, reg_width, field_width;$/;"	m	struct:intc_prio_reg
set_reg	.\sh_intc.h	/^    unsigned long set_reg, clr_reg, reg_width;$/;"	m	struct:intc_mask_reg
set_ru_state	.\eepro100.c	/^static void set_ru_state(EEPRO100State * s, ru_state_t state)$/;"	f	file:
set_rxint	.\slavio_serial.c	/^static inline void set_rxint(ChannelState *s)$/;"	f	file:
set_sl_rr	.\fmopl.c	/^INLINE void set_sl_rr(FM_OPL *OPL,int slot,int v)$/;"	f
set_time	.\m48t59.c	/^static void set_time (m48t59_t *NVRAM, struct tm *tm)$/;"	f	file:
set_txint	.\slavio_serial.c	/^static inline void set_txint(ChannelState *s)$/;"	f	file:
set_up_watchdog	.\m48t59.c	/^static void set_up_watchdog (m48t59_t *NVRAM, uint8_t value)$/;"	f	file:
set_usb_string	.\usb.c	/^int set_usb_string(uint8_t *buf, const char *str)$/;"	f
setup	.\omap.c	/^    uint16_t setup[5];$/;"	m	struct:omap_uwire_s	file:
setup_buf	.\usb.h	/^    uint8_t setup_buf[8];$/;"	m	struct:USBDevice
setup_index	.\usb.h	/^    int setup_index;$/;"	m	struct:USBDevice
setup_len	.\usb.h	/^    int setup_len;$/;"	m	struct:USBDevice
setup_state	.\usb.h	/^    int setup_state;$/;"	m	struct:USBDevice
sfbr	.\lsi53c895a.c	/^    uint8_t sfbr;$/;"	m	struct:__anon25	file:
sfs	.\lsi53c895a.c	/^    uint32_t sfs;$/;"	m	struct:__anon25	file:
sg	.\ppc405_uc.c	/^    uint32_t sg[4];$/;"	m	struct:ppc405_dma_t	file:
sgc	.\ppc405_uc.c	/^    uint32_t sgc;$/;"	m	struct:ppc405_dma_t	file:
sh7750_init	.\sh7750.c	/^SH7750State *sh7750_init(CPUSH4State * cpu)$/;"	f
sh7750_io_device	.\sh.h	/^} sh7750_io_device;$/;"	t	typeref:struct:__anon93
sh7750_mem_read	.\sh7750.c	/^static CPUReadMemoryFunc *sh7750_mem_read[] = {$/;"	v	file:
sh7750_mem_readb	.\sh7750.c	/^static uint32_t sh7750_mem_readb(void *opaque, target_phys_addr_t addr)$/;"	f	file:
sh7750_mem_readl	.\sh7750.c	/^static uint32_t sh7750_mem_readl(void *opaque, target_phys_addr_t addr)$/;"	f	file:
sh7750_mem_readw	.\sh7750.c	/^static uint32_t sh7750_mem_readw(void *opaque, target_phys_addr_t addr)$/;"	f	file:
sh7750_mem_write	.\sh7750.c	/^static CPUWriteMemoryFunc *sh7750_mem_write[] = {$/;"	v	file:
sh7750_mem_writeb	.\sh7750.c	/^static void sh7750_mem_writeb(void *opaque, target_phys_addr_t addr,$/;"	f	file:
sh7750_mem_writel	.\sh7750.c	/^static void sh7750_mem_writel(void *opaque, target_phys_addr_t addr,$/;"	f	file:
sh7750_mem_writew	.\sh7750.c	/^static void sh7750_mem_writew(void *opaque, target_phys_addr_t addr,$/;"	f	file:
sh7750_register_io_device	.\sh7750.c	/^int sh7750_register_io_device(SH7750State * s, sh7750_io_device * device)$/;"	f
sh_intc_get_pending_vector	.\sh_intc.c	/^int sh_intc_get_pending_vector(struct intc_desc *desc, int imask)$/;"	f
sh_intc_init	.\sh_intc.c	/^int sh_intc_init(struct intc_desc *desc,$/;"	f
sh_intc_locate	.\sh_intc.c	/^static void sh_intc_locate(struct intc_desc *desc,$/;"	f	file:
sh_intc_mode	.\sh_intc.c	/^static unsigned int sh_intc_mode(unsigned long address,$/;"	f	file:
sh_intc_read	.\sh_intc.c	/^static uint32_t sh_intc_read(void *opaque, target_phys_addr_t offset)$/;"	f	file:
sh_intc_readfn	.\sh_intc.c	/^static CPUReadMemoryFunc *sh_intc_readfn[] = {$/;"	v	file:
sh_intc_register	.\sh_intc.c	/^static void sh_intc_register(struct intc_desc *desc, $/;"	f	file:
sh_intc_register_source	.\sh_intc.c	/^static void sh_intc_register_source(struct intc_desc *desc,$/;"	f	file:
sh_intc_register_sources	.\sh_intc.c	/^void sh_intc_register_sources(struct intc_desc *desc,$/;"	f
sh_intc_source	.\sh_intc.c	/^struct intc_source *sh_intc_source(struct intc_desc *desc, intc_enum id)$/;"	f
sh_intc_toggle_mask	.\sh_intc.c	/^static void sh_intc_toggle_mask(struct intc_desc *desc, intc_enum id,$/;"	f	file:
sh_intc_toggle_source	.\sh_intc.c	/^void sh_intc_toggle_source(struct intc_source *source,$/;"	f
sh_intc_write	.\sh_intc.c	/^static void sh_intc_write(void *opaque, target_phys_addr_t offset,$/;"	f	file:
sh_intc_writefn	.\sh_intc.c	/^static CPUWriteMemoryFunc *sh_intc_writefn[] = {$/;"	v	file:
sh_serial_can_receive	.\sh_serial.c	/^static int sh_serial_can_receive(sh_serial_state *s)$/;"	f	file:
sh_serial_can_receive1	.\sh_serial.c	/^static int sh_serial_can_receive1(void *opaque)$/;"	f	file:
sh_serial_event	.\sh_serial.c	/^static void sh_serial_event(void *opaque, int event)$/;"	f	file:
sh_serial_init	.\sh_serial.c	/^void sh_serial_init (target_phys_addr_t base, int feat,$/;"	f
sh_serial_ioport_read	.\sh_serial.c	/^static uint32_t sh_serial_ioport_read(void *opaque, uint32_t offs)$/;"	f	file:
sh_serial_ioport_write	.\sh_serial.c	/^static void sh_serial_ioport_write(void *opaque, uint32_t offs, uint32_t val)$/;"	f	file:
sh_serial_read	.\sh_serial.c	/^static uint32_t sh_serial_read (void *opaque, target_phys_addr_t addr)$/;"	f	file:
sh_serial_readfn	.\sh_serial.c	/^static CPUReadMemoryFunc *sh_serial_readfn[] = {$/;"	v	file:
sh_serial_receive1	.\sh_serial.c	/^static void sh_serial_receive1(void *opaque, const uint8_t *buf, int size)$/;"	f	file:
sh_serial_receive_break	.\sh_serial.c	/^static void sh_serial_receive_break(sh_serial_state *s)$/;"	f	file:
sh_serial_receive_byte	.\sh_serial.c	/^static void sh_serial_receive_byte(sh_serial_state *s, int ch)$/;"	f	file:
sh_serial_state	.\sh_serial.c	/^} sh_serial_state;$/;"	t	typeref:struct:__anon96	file:
sh_serial_write	.\sh_serial.c	/^static void sh_serial_write (void *opaque,$/;"	f	file:
sh_serial_writefn	.\sh_serial.c	/^static CPUWriteMemoryFunc *sh_serial_writefn[] = {$/;"	v	file:
sh_timer_init	.\sh_timer.c	/^static void *sh_timer_init(uint32_t freq, int feat, struct intc_source *irq)$/;"	f	file:
sh_timer_read	.\sh_timer.c	/^static uint32_t sh_timer_read(void *opaque, target_phys_addr_t offset)$/;"	f	file:
sh_timer_start_stop	.\sh_timer.c	/^static void sh_timer_start_stop(void *opaque, int enable)$/;"	f	file:
sh_timer_state	.\sh_timer.c	/^} sh_timer_state;$/;"	t	typeref:struct:__anon97	file:
sh_timer_tick	.\sh_timer.c	/^static void sh_timer_tick(void *opaque)$/;"	f	file:
sh_timer_update	.\sh_timer.c	/^static void sh_timer_update(sh_timer_state *s)$/;"	f	file:
sh_timer_write	.\sh_timer.c	/^static void sh_timer_write(void *opaque, target_phys_addr_t offset,$/;"	f	file:
shift	.\es1370.c	/^    uint32_t shift;$/;"	m	struct:chan	file:
shix_init	.\shix.c	/^static void shix_init(int ram_size, int vga_ram_size,$/;"	f	file:
shix_machine	.\shix.c	/^QEMUMachine shix_machine = {$/;"	v
sibling	.\omap.c	/^    struct omap_dma_channel_s *sibling;$/;"	m	struct:omap_dma_channel_s	typeref:struct:omap_dma_channel_s::omap_dma_channel_s	file:
sibling	.\omap1_clk.c	/^    struct clk *sibling;$/;"	m	struct:clk	typeref:struct:clk::clk	file:
sidl	.\lsi53c895a.c	/^    uint8_t sidl;$/;"	m	struct:__anon25	file:
sien0	.\lsi53c895a.c	/^    uint8_t sien0;$/;"	m	struct:__anon25	file:
sien1	.\lsi53c895a.c	/^    uint8_t sien1;$/;"	m	struct:__anon25	file:
sig	.\usb-msd.c	/^    uint32_t sig;$/;"	m	struct:usb_msd_cbw	file:
sig	.\usb-msd.c	/^    uint32_t sig;$/;"	m	struct:usb_msd_csw	file:
signature	.\firmware_abi.h	/^    uint8_t signature;$/;"	m	struct:OpenBIOS_nvpart_v1
single_index	.\omap.h	/^    single_index,$/;"	e	enum:__anon37
single_mode	.\i8259.c	/^    uint8_t single_mode; \/* true if slave pic is not initialized *\/$/;"	m	struct:PicState	file:
sink_timer	.\omap.c	/^    QEMUTimer *sink_timer;$/;"	m	struct:omap_mcbsp_s	file:
sir_intr	.\omap.c	/^    int sir_intr[2];$/;"	m	struct:omap_intr_handler_s	file:
sist0	.\lsi53c895a.c	/^    uint8_t sist0;$/;"	m	struct:__anon25	file:
sist1	.\lsi53c895a.c	/^    uint8_t sist1;$/;"	m	struct:__anon25	file:
size	.\eepro100.c	/^    uint16_t size;$/;"	m	struct:__anon12	file:
size	.\eeprom93xx.c	/^    uint8_t  size;$/;"	m	struct:_eeprom_t	file:
size	.\m48t59.c	/^    uint16_t size;$/;"	m	struct:m48t59_t	file:
size	.\mac_nvram.c	/^    target_phys_addr_t size;$/;"	m	struct:MacIONVRAMState	file:
size	.\nand.c	/^    int size, pages;$/;"	m	struct:nand_flash_s	file:
size	.\nand.c	/^    int size;$/;"	m	struct:nand_info_s	file:
size	.\omap.c	/^    uint32_t size;$/;"	m	struct:omap_map_s	file:
size	.\omap.h	/^        int size;$/;"	m	struct:i2s_codec_s::i2s_fifo_s
size	.\pci.h	/^    uint32_t size;$/;"	m	struct:PCIIORegion
size	.\sd.c	/^    uint32_t size;$/;"	m	struct:SDState	file:
sl_bootparam_write	.\spitz.c	/^static void sl_bootparam_write(uint32_t ptr)$/;"	f	file:
sl_flash_register	.\spitz.c	/^static void sl_flash_register(struct pxa2xx_state_s *cpu, int size)$/;"	f	file:
sl_load	.\spitz.c	/^static int sl_load(QEMUFile *f, void *opaque, int version_id)$/;"	f	file:
sl_nand_s	.\spitz.c	/^struct sl_nand_s {$/;"	s	file:
sl_param_info	.\spitz.c	/^struct __attribute__ ((__packed__)) sl_param_info {$/;"	s	file:
sl_readb	.\spitz.c	/^static uint32_t sl_readb(void *opaque, target_phys_addr_t addr)$/;"	f	file:
sl_readl	.\spitz.c	/^static uint32_t sl_readl(void *opaque, target_phys_addr_t addr)$/;"	f	file:
sl_save	.\spitz.c	/^static void sl_save(QEMUFile *f, void *opaque)$/;"	f	file:
sl_writeb	.\spitz.c	/^static void sl_writeb(void *opaque, target_phys_addr_t addr,$/;"	f	file:
slave	.\omap_i2c.c	/^    i2c_slave slave;$/;"	m	struct:omap_i2c_s	file:
slave	.\pxa2xx.c	/^    i2c_slave slave;$/;"	m	struct:pxa2xx_i2c_s	file:
slave	.\slavio_timer.c	/^    struct SLAVIO_TIMERState *slave[MAX_CPUS];$/;"	m	struct:SLAVIO_TIMERState	typeref:struct:SLAVIO_TIMERState::SLAVIO_TIMERState	file:
slave_index	.\slavio_timer.c	/^    int slave_index;$/;"	m	struct:SLAVIO_TIMERState	file:
slave_mode	.\slavio_timer.c	/^    uint32_t slave_mode;$/;"	m	struct:SLAVIO_TIMERState	file:
slavio_base	.\sun4m.c	/^    target_phys_addr_t iommu_base, slavio_base;$/;"	m	struct:hwdef	file:
slavio_base	.\sun4m.c	/^    target_phys_addr_t iounit_bases[MAX_IOUNITS], slavio_base;$/;"	m	struct:sun4d_hwdef	file:
slavio_check_interrupts	.\slavio_intctl.c	/^static void slavio_check_interrupts(void *opaque)$/;"	f	file:
slavio_intctl	.\sun4m.c	/^static void *slavio_intctl;$/;"	v	file:
slavio_intctl_init	.\slavio_intctl.c	/^void *slavio_intctl_init(target_phys_addr_t addr, target_phys_addr_t addrg,$/;"	f
slavio_intctl_load	.\slavio_intctl.c	/^static int slavio_intctl_load(QEMUFile *f, void *opaque, int version_id)$/;"	f	file:
slavio_intctl_mem_read	.\slavio_intctl.c	/^static CPUReadMemoryFunc *slavio_intctl_mem_read[3] = {$/;"	v	file:
slavio_intctl_mem_readl	.\slavio_intctl.c	/^static uint32_t slavio_intctl_mem_readl(void *opaque, target_phys_addr_t addr)$/;"	f	file:
slavio_intctl_mem_write	.\slavio_intctl.c	/^static CPUWriteMemoryFunc *slavio_intctl_mem_write[3] = {$/;"	v	file:
slavio_intctl_mem_writel	.\slavio_intctl.c	/^static void slavio_intctl_mem_writel(void *opaque, target_phys_addr_t addr, uint32_t val)$/;"	f	file:
slavio_intctl_reset	.\slavio_intctl.c	/^static void slavio_intctl_reset(void *opaque)$/;"	f	file:
slavio_intctl_save	.\slavio_intctl.c	/^static void slavio_intctl_save(QEMUFile *f, void *opaque)$/;"	f	file:
slavio_intctlm_mem_read	.\slavio_intctl.c	/^static CPUReadMemoryFunc *slavio_intctlm_mem_read[3] = {$/;"	v	file:
slavio_intctlm_mem_readl	.\slavio_intctl.c	/^static uint32_t slavio_intctlm_mem_readl(void *opaque, target_phys_addr_t addr)$/;"	f	file:
slavio_intctlm_mem_write	.\slavio_intctl.c	/^static CPUWriteMemoryFunc *slavio_intctlm_mem_write[3] = {$/;"	v	file:
slavio_intctlm_mem_writel	.\slavio_intctl.c	/^static void slavio_intctlm_mem_writel(void *opaque, target_phys_addr_t addr, uint32_t val)$/;"	f	file:
slavio_irq_info	.\slavio_intctl.c	/^void slavio_irq_info(void *opaque)$/;"	f
slavio_led_mem_read	.\slavio_misc.c	/^static CPUReadMemoryFunc *slavio_led_mem_read[3] = {$/;"	v	file:
slavio_led_mem_readw	.\slavio_misc.c	/^static uint32_t slavio_led_mem_readw(void *opaque, target_phys_addr_t addr)$/;"	f	file:
slavio_led_mem_write	.\slavio_misc.c	/^static CPUWriteMemoryFunc *slavio_led_mem_write[3] = {$/;"	v	file:
slavio_led_mem_writew	.\slavio_misc.c	/^static void slavio_led_mem_writew(void *opaque, target_phys_addr_t addr,$/;"	f	file:
slavio_misc	.\sun4m.c	/^static void *slavio_misc;$/;"	v	file:
slavio_misc_init	.\slavio_misc.c	/^void *slavio_misc_init(target_phys_addr_t base, target_phys_addr_t power_base,$/;"	f
slavio_misc_load	.\slavio_misc.c	/^static int slavio_misc_load(QEMUFile *f, void *opaque, int version_id)$/;"	f	file:
slavio_misc_mem_read	.\slavio_misc.c	/^static CPUReadMemoryFunc *slavio_misc_mem_read[3] = {$/;"	v	file:
slavio_misc_mem_readb	.\slavio_misc.c	/^static uint32_t slavio_misc_mem_readb(void *opaque, target_phys_addr_t addr)$/;"	f	file:
slavio_misc_mem_write	.\slavio_misc.c	/^static CPUWriteMemoryFunc *slavio_misc_mem_write[3] = {$/;"	v	file:
slavio_misc_mem_writeb	.\slavio_misc.c	/^static void slavio_misc_mem_writeb(void *opaque, target_phys_addr_t addr,$/;"	f	file:
slavio_misc_reset	.\slavio_misc.c	/^static void slavio_misc_reset(void *opaque)$/;"	f	file:
slavio_misc_save	.\slavio_misc.c	/^static void slavio_misc_save(QEMUFile *f, void *opaque)$/;"	f	file:
slavio_misc_update_irq	.\slavio_misc.c	/^static void slavio_misc_update_irq(void *opaque)$/;"	f	file:
slavio_pic_info	.\slavio_intctl.c	/^void slavio_pic_info(void *opaque)$/;"	f
slavio_serial_init	.\slavio_serial.c	/^SerialState *slavio_serial_init(target_phys_addr_t base, qemu_irq irq,$/;"	f
slavio_serial_load	.\slavio_serial.c	/^static int slavio_serial_load(QEMUFile *f, void *opaque, int version_id)$/;"	f	file:
slavio_serial_load_chn	.\slavio_serial.c	/^static int slavio_serial_load_chn(QEMUFile *f, ChannelState *s, int version_id)$/;"	f	file:
slavio_serial_mem_read	.\slavio_serial.c	/^static CPUReadMemoryFunc *slavio_serial_mem_read[3] = {$/;"	v	file:
slavio_serial_mem_readb	.\slavio_serial.c	/^static uint32_t slavio_serial_mem_readb(void *opaque, target_phys_addr_t addr)$/;"	f	file:
slavio_serial_mem_write	.\slavio_serial.c	/^static CPUWriteMemoryFunc *slavio_serial_mem_write[3] = {$/;"	v	file:
slavio_serial_mem_writeb	.\slavio_serial.c	/^static void slavio_serial_mem_writeb(void *opaque, target_phys_addr_t addr,$/;"	f	file:
slavio_serial_ms_kbd_init	.\slavio_serial.c	/^void slavio_serial_ms_kbd_init(target_phys_addr_t base, qemu_irq irq,$/;"	f
slavio_serial_reset	.\slavio_serial.c	/^static void slavio_serial_reset(void *opaque)$/;"	f	file:
slavio_serial_reset_chn	.\slavio_serial.c	/^static void slavio_serial_reset_chn(ChannelState *s)$/;"	f	file:
slavio_serial_save	.\slavio_serial.c	/^static void slavio_serial_save(QEMUFile *f, void *opaque)$/;"	f	file:
slavio_serial_save_chn	.\slavio_serial.c	/^static void slavio_serial_save_chn(QEMUFile *f, ChannelState *s)$/;"	f	file:
slavio_serial_update_irq	.\slavio_serial.c	/^static void slavio_serial_update_irq(ChannelState *s)$/;"	f	file:
slavio_serial_update_irq_chn	.\slavio_serial.c	/^static int slavio_serial_update_irq_chn(ChannelState *s)$/;"	f	file:
slavio_serial_update_parameters	.\slavio_serial.c	/^static void slavio_serial_update_parameters(ChannelState *s)$/;"	f	file:
slavio_set_irq	.\slavio_intctl.c	/^static void slavio_set_irq(void *opaque, int irq, int level)$/;"	f	file:
slavio_set_power_fail	.\slavio_misc.c	/^void slavio_set_power_fail(void *opaque, int power_failing)$/;"	f
slavio_set_timer_irq_cpu	.\slavio_intctl.c	/^static void slavio_set_timer_irq_cpu(void *opaque, int cpu, int level)$/;"	f	file:
slavio_sysctrl_mem_read	.\slavio_misc.c	/^static CPUReadMemoryFunc *slavio_sysctrl_mem_read[3] = {$/;"	v	file:
slavio_sysctrl_mem_readl	.\slavio_misc.c	/^static uint32_t slavio_sysctrl_mem_readl(void *opaque, target_phys_addr_t addr)$/;"	f	file:
slavio_sysctrl_mem_write	.\slavio_misc.c	/^static CPUWriteMemoryFunc *slavio_sysctrl_mem_write[3] = {$/;"	v	file:
slavio_sysctrl_mem_writel	.\slavio_misc.c	/^static void slavio_sysctrl_mem_writel(void *opaque, target_phys_addr_t addr,$/;"	f	file:
slavio_timer_get_out	.\slavio_timer.c	/^static void slavio_timer_get_out(SLAVIO_TIMERState *s)$/;"	f	file:
slavio_timer_init	.\slavio_timer.c	/^static SLAVIO_TIMERState *slavio_timer_init(target_phys_addr_t addr,$/;"	f	file:
slavio_timer_init_all	.\slavio_timer.c	/^void slavio_timer_init_all(target_phys_addr_t base, qemu_irq master_irq,$/;"	f
slavio_timer_irq	.\slavio_timer.c	/^static void slavio_timer_irq(void *opaque)$/;"	f	file:
slavio_timer_is_user	.\slavio_timer.c	/^static int slavio_timer_is_user(SLAVIO_TIMERState *s)$/;"	f	file:
slavio_timer_load	.\slavio_timer.c	/^static int slavio_timer_load(QEMUFile *f, void *opaque, int version_id)$/;"	f	file:
slavio_timer_mem_read	.\slavio_timer.c	/^static CPUReadMemoryFunc *slavio_timer_mem_read[3] = {$/;"	v	file:
slavio_timer_mem_readl	.\slavio_timer.c	/^static uint32_t slavio_timer_mem_readl(void *opaque, target_phys_addr_t addr)$/;"	f	file:
slavio_timer_mem_write	.\slavio_timer.c	/^static CPUWriteMemoryFunc *slavio_timer_mem_write[3] = {$/;"	v	file:
slavio_timer_mem_writel	.\slavio_timer.c	/^static void slavio_timer_mem_writel(void *opaque, target_phys_addr_t addr,$/;"	f	file:
slavio_timer_reset	.\slavio_timer.c	/^static void slavio_timer_reset(void *opaque)$/;"	f	file:
slavio_timer_save	.\slavio_timer.c	/^static void slavio_timer_save(QEMUFile *f, void *opaque)$/;"	f	file:
slot	.\pcmcia.h	/^    struct pcmcia_socket_s *slot;$/;"	m	struct:pcmcia_card_s	typeref:struct:pcmcia_card_s::pcmcia_socket_s
slot	.\pxa2xx_pcmcia.c	/^    struct pcmcia_socket_s slot;$/;"	m	struct:pxa2xx_pcmcia_s	typeref:struct:pxa2xx_pcmcia_s::pcmcia_socket_s	file:
slot_array	.\fmopl.c	/^static const int slot_array[32]=$/;"	v	file:
slot_string	.\pcmcia.h	/^    const char *slot_string;$/;"	m	struct:pcmcia_socket_s
slp	.\ppc405_uc.c	/^    uint32_t slp;$/;"	m	struct:ppc405_dma_t	file:
slr	.\pl061.c	/^    uint8_t slr;$/;"	m	struct:__anon56	file:
smb_addr	.\acpi.c	/^    uint8_t smb_addr;$/;"	m	struct:PIIX4PMState	file:
smb_cmd	.\acpi.c	/^    uint8_t smb_cmd;$/;"	m	struct:PIIX4PMState	file:
smb_ctl	.\acpi.c	/^    uint8_t smb_ctl;$/;"	m	struct:PIIX4PMState	file:
smb_data	.\acpi.c	/^    uint8_t smb_data[32];$/;"	m	struct:PIIX4PMState	file:
smb_data0	.\acpi.c	/^    uint8_t smb_data0;$/;"	m	struct:PIIX4PMState	file:
smb_data1	.\acpi.c	/^    uint8_t smb_data1;$/;"	m	struct:PIIX4PMState	file:
smb_index	.\acpi.c	/^    uint8_t smb_index;$/;"	m	struct:PIIX4PMState	file:
smb_ioport_readb	.\acpi.c	/^static uint32_t smb_ioport_readb(void *opaque, uint32_t addr)$/;"	f	file:
smb_ioport_writeb	.\acpi.c	/^static void smb_ioport_writeb(void *opaque, uint32_t addr, uint32_t val)$/;"	f	file:
smb_stat	.\acpi.c	/^    uint8_t smb_stat;$/;"	m	struct:PIIX4PMState	file:
smb_transaction	.\acpi.c	/^static void smb_transaction(PIIX4PMState *s)$/;"	f	file:
smbus	.\acpi.c	/^    i2c_bus *smbus;$/;"	m	struct:PIIX4PMState	file:
smbus_device_init	.\smbus.c	/^SMBusDevice *smbus_device_init(i2c_bus *bus, int address, int size)$/;"	f
smbus_do_quick_cmd	.\smbus.c	/^static void smbus_do_quick_cmd(SMBusDevice *dev, int recv)$/;"	f	file:
smbus_do_write	.\smbus.c	/^static void smbus_do_write(SMBusDevice *dev)$/;"	f	file:
smbus_eeprom_device_init	.\smbus_eeprom.c	/^void smbus_eeprom_device_init(i2c_bus *bus, uint8_t addr, uint8_t *buf)$/;"	f
smbus_i2c_event	.\smbus.c	/^static void smbus_i2c_event(i2c_slave *s, enum i2c_event event)$/;"	f	file:
smbus_i2c_recv	.\smbus.c	/^static int smbus_i2c_recv(i2c_slave *s)$/;"	f	file:
smbus_i2c_send	.\smbus.c	/^static int smbus_i2c_send(i2c_slave *s, uint8_t data)$/;"	f	file:
smbus_quick_command	.\smbus.c	/^void smbus_quick_command(i2c_bus *bus, int addr, int read)$/;"	f
smbus_read_block	.\smbus.c	/^int smbus_read_block(i2c_bus *bus, int addr, uint8_t command, uint8_t *data)$/;"	f
smbus_read_byte	.\smbus.c	/^uint8_t smbus_read_byte(i2c_bus *bus, int addr, uint8_t command)$/;"	f
smbus_read_word	.\smbus.c	/^uint16_t smbus_read_word(i2c_bus *bus, int addr, uint8_t command)$/;"	f
smbus_receive_byte	.\smbus.c	/^uint8_t smbus_receive_byte(i2c_bus *bus, int addr)$/;"	f
smbus_send_byte	.\smbus.c	/^void smbus_send_byte(i2c_bus *bus, int addr, uint8_t data)$/;"	f
smbus_write_block	.\smbus.c	/^void smbus_write_block(i2c_bus *bus, int addr, uint8_t command, uint8_t *data,$/;"	f
smbus_write_byte	.\smbus.c	/^void smbus_write_byte(i2c_bus *bus, int addr, uint8_t command, uint8_t data)$/;"	f
smbus_write_word	.\smbus.c	/^void smbus_write_word(i2c_bus *bus, int addr, uint8_t command, uint16_t data)$/;"	f
smc91c111_allocate_packet	.\smc91c111.c	/^static int smc91c111_allocate_packet(smc91c111_state *s)$/;"	f	file:
smc91c111_can_receive	.\smc91c111.c	/^static int smc91c111_can_receive(void *opaque)$/;"	f	file:
smc91c111_do_tx	.\smc91c111.c	/^static void smc91c111_do_tx(smc91c111_state *s)$/;"	f	file:
smc91c111_init	.\smc91c111.c	/^void smc91c111_init(NICInfo *nd, uint32_t base, qemu_irq irq)$/;"	f
smc91c111_pop_rx_fifo	.\smc91c111.c	/^static void smc91c111_pop_rx_fifo(smc91c111_state *s)$/;"	f	file:
smc91c111_pop_tx_fifo_done	.\smc91c111.c	/^static void smc91c111_pop_tx_fifo_done(smc91c111_state *s)$/;"	f	file:
smc91c111_queue_tx	.\smc91c111.c	/^static void smc91c111_queue_tx(smc91c111_state *s, int packet)$/;"	f	file:
smc91c111_readb	.\smc91c111.c	/^static uint32_t smc91c111_readb(void *opaque, target_phys_addr_t offset)$/;"	f	file:
smc91c111_readfn	.\smc91c111.c	/^static CPUReadMemoryFunc *smc91c111_readfn[] = {$/;"	v	file:
smc91c111_readl	.\smc91c111.c	/^static uint32_t smc91c111_readl(void *opaque, target_phys_addr_t offset)$/;"	f	file:
smc91c111_readw	.\smc91c111.c	/^static uint32_t smc91c111_readw(void *opaque, target_phys_addr_t offset)$/;"	f	file:
smc91c111_receive	.\smc91c111.c	/^static void smc91c111_receive(void *opaque, const uint8_t *buf, int size)$/;"	f	file:
smc91c111_release_packet	.\smc91c111.c	/^static void smc91c111_release_packet(smc91c111_state *s, int packet)$/;"	f	file:
smc91c111_reset	.\smc91c111.c	/^static void smc91c111_reset(smc91c111_state *s)$/;"	f	file:
smc91c111_state	.\smc91c111.c	/^} smc91c111_state;$/;"	t	typeref:struct:__anon103	file:
smc91c111_tx_alloc	.\smc91c111.c	/^static void smc91c111_tx_alloc(smc91c111_state *s)$/;"	f	file:
smc91c111_update	.\smc91c111.c	/^static void smc91c111_update(smc91c111_state *s)$/;"	f	file:
smc91c111_writeb	.\smc91c111.c	/^static void smc91c111_writeb(void *opaque, target_phys_addr_t offset,$/;"	f	file:
smc91c111_writefn	.\smc91c111.c	/^static CPUWriteMemoryFunc *smc91c111_writefn[] = {$/;"	v	file:
smc91c111_writel	.\smc91c111.c	/^static void smc91c111_writel(void *opaque, target_phys_addr_t offset,$/;"	f	file:
smc91c111_writew	.\smc91c111.c	/^static void smc91c111_writew(void *opaque, target_phys_addr_t offset,$/;"	f	file:
smm_enabled	.\piix_pci.c	/^static uint8_t smm_enabled;$/;"	v	file:
smp_ctx	.\firmware_abi.h	/^    uint32_t smp_ctx;$/;"	m	struct:sparc_arch_cfg
smp_ctxtbl	.\firmware_abi.h	/^    uint32_t smp_ctxtbl;$/;"	m	struct:sparc_arch_cfg
smp_entry	.\firmware_abi.h	/^    uint32_t smp_entry;$/;"	m	struct:sparc_arch_cfg
smpboot	.\arm_boot.c	/^static uint32_t smpboot[] = {$/;"	v	file:
smr	.\sh_serial.c	/^    uint8_t smr;$/;"	m	struct:__anon96	file:
snapshot	.\pxa2xx_timer.c	/^    uint32_t snapshot;$/;"	m	struct:__anon86	file:
socl	.\lsi53c895a.c	/^    uint8_t socl;$/;"	m	struct:__anon25	file:
sof_time	.\usb-ohci.c	/^    int64_t sof_time;$/;"	m	struct:__anon123	file:
sof_timing	.\usb-uhci.c	/^    uint8_t sof_timing;$/;"	m	struct:UHCIState	file:
soft_level	.\pl190.c	/^    uint32_t soft_level;$/;"	m	struct:__anon61	file:
softstep	.\tsc210x.c	/^    int softstep;$/;"	m	struct:tsc210x_state_s	file:
sossi_ck	.\omap1_clk.c	/^static struct clk sossi_ck = {$/;"	v	typeref:struct:clk	file:
source	.\pxa2xx_lcd.c	/^        target_phys_addr_t source;$/;"	m	struct:pxa2xx_lcdc_s::__anon85	file:
source_timer	.\omap.c	/^    QEMUTimer *source_timer;$/;"	m	struct:omap_mcbsp_s	file:
sources	.\sh_intc.h	/^    struct intc_source *sources;$/;"	m	struct:intc_desc	typeref:struct:intc_desc::intc_source
sp804_init	.\arm_timer.c	/^void sp804_init(uint32_t base, qemu_irq irq)$/;"	f
sp804_read	.\arm_timer.c	/^static uint32_t sp804_read(void *opaque, target_phys_addr_t offset)$/;"	f	file:
sp804_readfn	.\arm_timer.c	/^static CPUReadMemoryFunc *sp804_readfn[] = {$/;"	v	file:
sp804_set_irq	.\arm_timer.c	/^static void sp804_set_irq(void *opaque, int irq, int level)$/;"	f	file:
sp804_state	.\arm_timer.c	/^} sp804_state;$/;"	t	typeref:struct:__anon7	file:
sp804_write	.\arm_timer.c	/^static void sp804_write(void *opaque, target_phys_addr_t offset,$/;"	f	file:
sp804_writefn	.\arm_timer.c	/^static CPUWriteMemoryFunc *sp804_writefn[] = {$/;"	v	file:
sparc32_dma_init	.\sparc32_dma.c	/^void *sparc32_dma_init(target_phys_addr_t daddr, qemu_irq parent_irq,$/;"	f
sparc_arch_cfg	.\firmware_abi.h	/^struct sparc_arch_cfg {$/;"	s
sparc_iommu_memory_read	.\sun4m.h	/^static inline void sparc_iommu_memory_read(void *opaque,$/;"	f
sparc_iommu_memory_rw	.\iommu.c	/^void sparc_iommu_memory_rw(void *opaque, target_phys_addr_t addr,$/;"	f
sparc_iommu_memory_write	.\sun4m.h	/^static inline void sparc_iommu_memory_write(void *opaque,$/;"	f
spcr	.\omap.c	/^    uint16_t spcr[2];$/;"	m	struct:omap_mcbsp_s	file:
speaker	.\sb16.c	/^    int speaker;$/;"	m	struct:SB16State	file:
speaker	.\sb16.c	/^static void speaker (SB16State *s, int on)$/;"	f	file:
speaker_data_on	.\ppc_prep.c	/^int speaker_data_on;$/;"	v
speaker_ioport_read	.\ppc_prep.c	/^static uint32_t speaker_ioport_read (void *opaque, uint32_t addr)$/;"	f	file:
speaker_ioport_write	.\ppc_prep.c	/^static void speaker_ioport_write (void *opaque, uint32_t addr, uint32_t val)$/;"	f	file:
special_fully_nested_mode	.\i8259.c	/^    uint8_t special_fully_nested_mode;$/;"	m	struct:PicState	file:
special_mask	.\i8259.c	/^    uint8_t special_mask;$/;"	m	struct:PicState	file:
speed	.\usb.h	/^    int speed;$/;"	m	struct:USBDevice
speedo_offsets	.\eepro100.c	/^enum speedo_offsets {$/;"	g	file:
spi	.\pxa2xx_mmci.c	/^    uint32_t spi;$/;"	m	struct:pxa2xx_mmci_s	file:
spi	.\sd.c	/^    int spi;$/;"	m	struct:SDState	file:
spitz	.\spitz.c	/^enum spitz_model_e { spitz, akita, borzoi, terrier };$/;"	e	enum:spitz_model_e	file:
spitz_adc_temp_on	.\spitz.c	/^static void spitz_adc_temp_on(void *opaque, int line, int level)$/;"	f	file:
spitz_akita_i2c_setup	.\spitz.c	/^static void spitz_akita_i2c_setup(struct pxa2xx_state_s *cpu)$/;"	f	file:
spitz_bl_bit5	.\spitz.c	/^static inline void spitz_bl_bit5(void *opaque, int line, int level)$/;"	f	file:
spitz_bl_power	.\spitz.c	/^static inline void spitz_bl_power(void *opaque, int line, int level)$/;"	f	file:
spitz_bl_update	.\spitz.c	/^static void spitz_bl_update(struct pxa2xx_state_s *s)$/;"	f	file:
spitz_bootparam	.\spitz.c	/^} spitz_bootparam = {$/;"	v	typeref:struct:sl_param_info
spitz_common_init	.\spitz.c	/^static void spitz_common_init(int ram_size, int vga_ram_size,$/;"	f	file:
spitz_gpio_invert	.\spitz.c	/^static int spitz_gpio_invert[5] = { 0, 0, 0, 0, 0, };$/;"	v	file:
spitz_gpio_key_sense	.\spitz.c	/^static const int spitz_gpio_key_sense[SPITZ_KEY_SENSE_NUM] = {$/;"	v	file:
spitz_gpio_key_strobe	.\spitz.c	/^static const int spitz_gpio_key_strobe[SPITZ_KEY_STROBE_NUM] = {$/;"	v	file:
spitz_gpio_setup	.\spitz.c	/^static void spitz_gpio_setup(struct pxa2xx_state_s *cpu, int slots)$/;"	f	file:
spitz_gpiomap	.\spitz.c	/^static const int spitz_gpiomap[5] = {$/;"	v	file:
spitz_hsync	.\spitz.c	/^static int spitz_hsync;$/;"	v	file:
spitz_i2c_setup	.\spitz.c	/^static void spitz_i2c_setup(struct pxa2xx_state_s *cpu)$/;"	f	file:
spitz_init	.\spitz.c	/^static void spitz_init(int ram_size, int vga_ram_size,$/;"	f	file:
spitz_keyboard_handler	.\spitz.c	/^static void spitz_keyboard_handler(struct spitz_keyboard_s *s, int keycode)$/;"	f	file:
spitz_keyboard_keydown	.\spitz.c	/^static void spitz_keyboard_keydown(struct spitz_keyboard_s *s, int keycode)$/;"	f	file:
spitz_keyboard_load	.\spitz.c	/^static int spitz_keyboard_load(QEMUFile *f, void *opaque, int version_id)$/;"	f	file:
spitz_keyboard_pre_map	.\spitz.c	/^static void spitz_keyboard_pre_map(struct spitz_keyboard_s *s)$/;"	f	file:
spitz_keyboard_register	.\spitz.c	/^static void spitz_keyboard_register(struct pxa2xx_state_s *cpu)$/;"	f	file:
spitz_keyboard_s	.\spitz.c	/^struct spitz_keyboard_s {$/;"	s	file:
spitz_keyboard_save	.\spitz.c	/^static void spitz_keyboard_save(QEMUFile *f, void *opaque)$/;"	f	file:
spitz_keyboard_sense_update	.\spitz.c	/^static void spitz_keyboard_sense_update(struct spitz_keyboard_s *s)$/;"	f	file:
spitz_keyboard_strobe	.\spitz.c	/^static void spitz_keyboard_strobe(void *opaque, int line, int level)$/;"	f	file:
spitz_keyboard_tick	.\spitz.c	/^static void spitz_keyboard_tick(void *opaque)$/;"	f	file:
spitz_keymap	.\spitz.c	/^static int spitz_keymap[SPITZ_KEY_SENSE_NUM + 1][SPITZ_KEY_STROBE_NUM] = {$/;"	v	file:
spitz_lcd_hsync_handler	.\spitz.c	/^static void spitz_lcd_hsync_handler(void *opaque, int line, int level)$/;"	f	file:
spitz_lcdtg_dac_put	.\spitz.c	/^static void spitz_lcdtg_dac_put(void *opaque, uint8_t cmd)$/;"	f	file:
spitz_microdrive_attach	.\spitz.c	/^static void spitz_microdrive_attach(struct pxa2xx_state_s *cpu)$/;"	f	file:
spitz_model_e	.\spitz.c	/^enum spitz_model_e { spitz, akita, borzoi, terrier };$/;"	g	file:
spitz_out_switch	.\spitz.c	/^static void spitz_out_switch(void *opaque, int line, int level)$/;"	f	file:
spitz_printf	.\spitz.c	24;"	d	file:
spitz_scoop_gpio_setup	.\spitz.c	/^static void spitz_scoop_gpio_setup(struct pxa2xx_state_s *cpu,$/;"	f	file:
spitz_scoop_init	.\spitz.c	/^static struct scoop_info_s *spitz_scoop_init(struct pxa2xx_state_s *cpu,$/;"	f	file:
spitz_ssp_attach	.\spitz.c	/^static void spitz_ssp_attach(struct pxa2xx_state_s *cpu)$/;"	f	file:
spitz_ssp_load	.\spitz.c	/^static int spitz_ssp_load(QEMUFile *f, void *opaque, int version_id)$/;"	f	file:
spitz_ssp_save	.\spitz.c	/^static void spitz_ssp_save(QEMUFile *f, void *opaque)$/;"	f	file:
spitz_wm8750_addr	.\spitz.c	/^static void spitz_wm8750_addr(void *opaque, int line, int level)$/;"	f	file:
spitzpda_machine	.\spitz.c	/^QEMUMachine spitzpda_machine = {$/;"	v
sptr	.\sh_serial.c	/^    uint8_t sptr;$/;"	m	struct:__anon96	file:
spurious_vec	.\apic.c	/^    uint32_t spurious_vec;$/;"	m	struct:APICState	file:
spve	.\openpic.c	/^    uint32_t spve; \/* Spurious vector register *\/$/;"	m	struct:openpic_t	file:
sr	.\cuda.c	/^    uint8_t sr;     \/* Shift register *\/$/;"	m	struct:CUDAState	file:
sr	.\mcf_uart.c	/^    uint8_t sr;$/;"	m	struct:__anon33	file:
sr	.\pl022.c	/^    uint32_t sr;$/;"	m	struct:__anon53	file:
sr	.\ppc405_uc.c	/^    uint32_t sr;$/;"	m	struct:ppc405_dma_t	file:
sr	.\ppc405_uc.c	/^    uint32_t sr;$/;"	m	struct:ppc405ep_cpc_t	file:
sr	.\sh_serial.c	/^    uint8_t sr; \/* fsr \/ ssr *\/$/;"	m	struct:__anon96	file:
sr_mask	.\vga.c	/^const uint8_t sr_mask[8] = {$/;"	v
sram_size	.\omap.h	/^    unsigned long sram_size;$/;"	m	struct:omap_mpu_state_s
src	.\omap.c	/^        target_phys_addr_t src, dest;$/;"	m	struct:omap_dma_channel_s::omap_dma_reg_set_s	file:
src	.\omap.h	/^    enum omap_dma_port src;$/;"	m	struct:omap_dma_lcd_channel_s	typeref:enum:omap_dma_lcd_channel_s::omap_dma_port
src	.\openpic.c	/^    IRQ_src_t src[MAX_IRQ];$/;"	m	struct:openpic_t	file:
src	.\pl080.c	/^    uint32_t src;$/;"	m	struct:__anon57	file:
src	.\pxa2xx_dma.c	/^    target_phys_addr_t src;$/;"	m	struct:pxa2xx_dma_channel_s	file:
src_f1_bottom	.\omap.h	/^    target_phys_addr_t src_f1_bottom;$/;"	m	struct:omap_dma_lcd_channel_s
src_f1_top	.\omap.h	/^    target_phys_addr_t src_f1_top;$/;"	m	struct:omap_dma_lcd_channel_s
src_f2_bottom	.\omap.h	/^    target_phys_addr_t src_f2_bottom;$/;"	m	struct:omap_dma_lcd_channel_s
src_f2_top	.\omap.h	/^    target_phys_addr_t src_f2_top;$/;"	m	struct:omap_dma_lcd_channel_s
srgr	.\omap.c	/^    uint16_t srgr[2];$/;"	m	struct:omap_mcbsp_s	file:
srr	.\ppc405_uc.c	/^    uint32_t srr;$/;"	m	struct:ppc405ep_cpc_t	file:
ss1000_init	.\sun4m.c	/^static void ss1000_init(int RAM_size, int vga_ram_size,$/;"	f	file:
ss1000_machine	.\sun4m.c	/^QEMUMachine ss1000_machine = {$/;"	v
ss10_init	.\sun4m.c	/^static void ss10_init(int RAM_size, int vga_ram_size,$/;"	f	file:
ss10_machine	.\sun4m.c	/^QEMUMachine ss10_machine = {$/;"	v
ss2000_init	.\sun4m.c	/^static void ss2000_init(int RAM_size, int vga_ram_size,$/;"	f	file:
ss2000_machine	.\sun4m.c	/^QEMUMachine ss2000_machine = {$/;"	v
ss20_init	.\sun4m.c	/^static void ss20_init(int RAM_size, int vga_ram_size,$/;"	f	file:
ss20_machine	.\sun4m.c	/^QEMUMachine ss20_machine = {$/;"	v
ss2_init	.\sun4m.c	/^static void ss2_init(int RAM_size, int vga_ram_size,$/;"	f	file:
ss2_machine	.\sun4m.c	/^QEMUMachine ss2_machine = {$/;"	v
ss5_init	.\sun4m.c	/^static void ss5_init(int RAM_size, int vga_ram_size,$/;"	f	file:
ss5_machine	.\sun4m.c	/^QEMUMachine ss5_machine = {$/;"	v
ss600mp_init	.\sun4m.c	/^static void ss600mp_init(int RAM_size, int vga_ram_size,$/;"	f	file:
ss600mp_machine	.\sun4m.c	/^QEMUMachine ss600mp_machine = {$/;"	v
ssacd	.\pxa2xx.c	/^    uint8_t ssacd;$/;"	m	struct:pxa2xx_ssp_s	file:
sscr	.\pxa2xx.c	/^    uint32_t sscr[2];$/;"	m	struct:pxa2xx_ssp_s	file:
ssctl	.\stellaris.c	/^    uint32_t ssctl[4];$/;"	m	struct:__anon112	file:
ssd0303_cmd	.\ssd0303.c	/^enum ssd0303_cmd {$/;"	g	file:
ssd0303_event	.\ssd0303.c	/^static void ssd0303_event(i2c_slave *i2c, enum i2c_event event)$/;"	f	file:
ssd0303_init	.\ssd0303.c	/^void ssd0303_init(DisplayState *ds, i2c_bus *bus, int address)$/;"	f
ssd0303_invalidate_display	.\ssd0303.c	/^static void ssd0303_invalidate_display(void * opaque)$/;"	f	file:
ssd0303_mode	.\ssd0303.c	/^enum ssd0303_mode$/;"	g	file:
ssd0303_recv	.\ssd0303.c	/^static int ssd0303_recv(i2c_slave *i2c)$/;"	f	file:
ssd0303_send	.\ssd0303.c	/^static int ssd0303_send(i2c_slave *i2c, uint8_t data)$/;"	f	file:
ssd0303_state	.\ssd0303.c	/^} ssd0303_state;$/;"	t	typeref:struct:__anon105	file:
ssd0303_update_display	.\ssd0303.c	/^static void ssd0303_update_display(void *opaque)$/;"	f	file:
ssd0323_cd	.\ssd0323.c	/^static void ssd0323_cd(void *opaque, int n, int level)$/;"	f	file:
ssd0323_init	.\ssd0323.c	/^void *ssd0323_init(DisplayState *ds, qemu_irq *cmd_p)$/;"	f
ssd0323_invalidate_display	.\ssd0323.c	/^static void ssd0323_invalidate_display(void * opaque)$/;"	f	file:
ssd0323_mode	.\ssd0323.c	/^enum ssd0323_mode$/;"	g	file:
ssd0323_state	.\ssd0323.c	/^} ssd0323_state;$/;"	t	typeref:struct:__anon106	file:
ssd0323_update_display	.\ssd0323.c	/^static void ssd0323_update_display(void *opaque)$/;"	f	file:
ssd0323_xfer_ssi	.\ssd0323.c	/^int ssd0323_xfer_ssi(void *opaque, int data)$/;"	f
ssi_sd_init	.\ssi-sd.c	/^void *ssi_sd_init(BlockDriverState *bs)$/;"	f
ssi_sd_mode	.\ssi-sd.c	/^} ssi_sd_mode;$/;"	t	typeref:enum:__anon107	file:
ssi_sd_state	.\ssi-sd.c	/^} ssi_sd_state;$/;"	t	typeref:struct:__anon108	file:
ssi_sd_xfer	.\ssi-sd.c	/^int ssi_sd_xfer(void *opaque, int val)$/;"	f
ssi_xfer_cb	.\primecell.h	/^typedef int (*ssi_xfer_cb)(void *, int);$/;"	t
ssid	.\lsi53c895a.c	/^    uint8_t ssid;$/;"	m	struct:__anon25	file:
ssitr	.\pxa2xx.c	/^    uint32_t ssitr;$/;"	m	struct:pxa2xx_ssp_s	file:
ssmux	.\stellaris.c	/^    uint32_t ssmux[4];$/;"	m	struct:__anon112	file:
ssp	.\pxa.h	/^    struct pxa2xx_ssp_s **ssp;$/;"	m	struct:pxa2xx_state_s	typeref:struct:pxa2xx_state_s::pxa2xx_ssp_s
sspri	.\stellaris.c	/^    uint32_t sspri;$/;"	m	struct:__anon112	file:
sspsp	.\pxa2xx.c	/^    uint32_t sspsp;$/;"	m	struct:pxa2xx_ssp_s	file:
ssrsa	.\pxa2xx.c	/^    uint8_t ssrsa;$/;"	m	struct:pxa2xx_ssp_s	file:
sssr	.\pxa2xx.c	/^    uint32_t sssr;$/;"	m	struct:pxa2xx_ssp_s	file:
sstat0	.\lsi53c895a.c	/^    uint8_t sstat0;$/;"	m	struct:__anon25	file:
sstat1	.\lsi53c895a.c	/^    uint8_t sstat1;$/;"	m	struct:__anon25	file:
ssto	.\pxa2xx.c	/^    uint32_t ssto;$/;"	m	struct:pxa2xx_ssp_s	file:
sstsa	.\pxa2xx.c	/^    uint8_t sstsa;$/;"	m	struct:pxa2xx_ssp_s	file:
ssys_read	.\stellaris.c	/^static uint32_t ssys_read(void *opaque, target_phys_addr_t offset)$/;"	f	file:
ssys_readfn	.\stellaris.c	/^static CPUReadMemoryFunc *ssys_readfn[] = {$/;"	v	file:
ssys_reset	.\stellaris.c	/^static void ssys_reset(void *opaque)$/;"	f	file:
ssys_state	.\stellaris.c	/^} ssys_state;$/;"	t	typeref:struct:__anon110	file:
ssys_update	.\stellaris.c	/^static void ssys_update(ssys_state *s)$/;"	f	file:
ssys_write	.\stellaris.c	/^static void ssys_write(void *opaque, target_phys_addr_t offset, uint32_t value)$/;"	f	file:
ssys_writefn	.\stellaris.c	/^static CPUWriteMemoryFunc *ssys_writefn[] = {$/;"	v	file:
st	.\fmopl.h	/^	UINT8 st[2];		\/* timer enable                      *\/$/;"	m	struct:fm_opl_f
st	.\omap.c	/^    int st;$/;"	m	struct:omap_mpu_timer_s	file:
st_result	.\eepro100.c	/^    uint32_t st_result;         \/* Self Test Results *\/$/;"	m	struct:__anon17	file:
st_sign	.\eepro100.c	/^    uint32_t st_sign;           \/* Self Test Signature *\/$/;"	m	struct:__anon17	file:
start	.\eepro100.c	/^    uint32_t start;$/;"	m	struct:__anon16	file:
start	.\ne2000.c	/^    uint32_t start;$/;"	m	struct:NE2000State	file:
start	.\omap.h	/^        int start;$/;"	m	struct:i2s_codec_s::i2s_fifo_s
start_line	.\ssd0303.c	/^    int start_line;$/;"	m	struct:__anon105	file:
start_sect	.\ide.c	/^	uint32_t start_sect;	\/* starting sector counting from 0 *\/$/;"	m	struct:partition	file:
start_stop_pit	.\ppc.c	/^static void start_stop_pit (CPUState *env, ppc_tb_t *tb_env, int is_excp)$/;"	f	file:
start_time	.\pl031.c	/^    uint64_t start_time;$/;"	m	struct:__anon54	file:
startintr	.\pxa2xx_dma.c	/^    uint32_t startintr;$/;"	m	struct:pxa2xx_dma_state_s	file:
stat	.\ide.c	/^    uint8_t stat;$/;"	m	struct:md_s	file:
stat	.\omap_i2c.c	/^    uint16_t stat;$/;"	m	struct:omap_i2c_s	file:
stat_ack_cu_cmd_done	.\eepro100.c	/^    stat_ack_cu_cmd_done = 0x80,$/;"	e	enum:scb_stat_ack	file:
stat_ack_cu_idle	.\eepro100.c	/^    stat_ack_cu_idle = 0x20,$/;"	e	enum:scb_stat_ack	file:
stat_ack_frame_rx	.\eepro100.c	/^    stat_ack_frame_rx = 0x40,$/;"	e	enum:scb_stat_ack	file:
stat_ack_not_ours	.\eepro100.c	/^    stat_ack_not_ours = 0x00,$/;"	e	enum:scb_stat_ack	file:
stat_ack_not_present	.\eepro100.c	/^    stat_ack_not_present = 0xFF,$/;"	e	enum:scb_stat_ack	file:
stat_ack_rnr	.\eepro100.c	/^    stat_ack_rnr = 0x10,$/;"	e	enum:scb_stat_ack	file:
stat_ack_rx	.\eepro100.c	/^    stat_ack_rx = (stat_ack_sw_gen | stat_ack_rnr | stat_ack_frame_rx),$/;"	e	enum:scb_stat_ack	file:
stat_ack_sw_gen	.\eepro100.c	/^    stat_ack_sw_gen = 0x04,$/;"	e	enum:scb_stat_ack	file:
stat_ack_tx	.\eepro100.c	/^    stat_ack_tx = (stat_ack_cu_idle | stat_ack_cu_cmd_done),$/;"	e	enum:scb_stat_ack	file:
stat_int	.\es1370.c	/^    uint32_t stat_int;$/;"	m	struct:chan_bits	file:
statcounter	.\eepro100.c	/^    uint32_t statcounter[19];$/;"	m	struct:__anon16	file:
state	.\fdc.c	/^    uint8_t state;$/;"	m	struct:fdctrl_t	file:
state	.\jazz_led.c	/^    screen_state_t state;$/;"	m	struct:LedState	file:
state	.\omap_lcdc.c	/^    DisplayState *state;$/;"	m	struct:omap_lcd_panel_s	file:
state	.\pcmcia.h	/^    void *state;$/;"	m	struct:pcmcia_card_s
state	.\ppc_prep.c	/^    uint8_t state;$/;"	m	struct:sysctrl_t	file:
state	.\pxa2xx_dma.c	/^    uint32_t state;$/;"	m	struct:pxa2xx_dma_channel_s	file:
state	.\scsi-disk.h	/^    SCSIDeviceState *state;$/;"	m	struct:SCSIDevice
state	.\sd.c	/^    } state;$/;"	m	struct:SDState	typeref:enum:SDState::__anon91	file:
state	.\stellaris.c	/^        uint32_t state;$/;"	m	struct:__anon112::__anon113	file:
state	.\stellaris.c	/^    uint32_t state;$/;"	m	struct:gptm_state	file:
state	.\tc58128.c	/^    state_t state;$/;"	m	struct:__anon120	file:
state	.\tsc210x.c	/^    int state, page, offset, irq;$/;"	m	struct:tsc210x_state_s	file:
state	.\usb-ohci.c	/^    OHCIState state;$/;"	m	struct:__anon124	file:
state	.\usb.h	/^    int state;$/;"	m	struct:USBDevice
state_t	.\tc58128.c	/^typedef enum { WAIT, READ1, READ2, READ3 } state_t;$/;"	t	typeref:enum:__anon119	file:
static_readb	.\palm.c	/^static uint32_t static_readb(void *opaque, target_phys_addr_t offset)$/;"	f	file:
static_readfn	.\palm.c	/^static CPUReadMemoryFunc *static_readfn[] = {$/;"	v	file:
static_readh	.\palm.c	/^static uint32_t static_readh(void *opaque, target_phys_addr_t offset) {$/;"	f	file:
static_readw	.\palm.c	/^static uint32_t static_readw(void *opaque, target_phys_addr_t offset) {$/;"	f	file:
static_write	.\palm.c	/^static void static_write(void *opaque, target_phys_addr_t offset,$/;"	f	file:
static_writefn	.\palm.c	/^static CPUWriteMemoryFunc *static_writefn[] = {$/;"	v	file:
statistics	.\eepro100.c	/^    eepro100_stats_t statistics;        \/* statistical counters *\/$/;"	m	struct:__anon16	file:
statsaddr	.\eepro100.c	/^    uint32_t statsaddr;         \/* pointer to eepro100_stats_t *\/$/;"	m	struct:__anon16	file:
status	.\dma.c	/^    uint8_t status;$/;"	m	struct:dma_cont	file:
status	.\eepro100.c	/^    int16_t status;$/;"	m	struct:__anon12	file:
status	.\eepro100.c	/^    uint16_t status;$/;"	m	struct:__anon11	file:
status	.\es1370.c	/^    uint32_t status;$/;"	m	struct:ES1370State	file:
status	.\fmopl.h	/^	UINT8 status;		\/* status flag                       *\/$/;"	m	struct:fm_opl_f
status	.\i8254.c	/^    uint8_t status;$/;"	m	struct:PITChannelState	file:
status	.\ide.c	/^    uint8_t status;$/;"	m	struct:BMDMAState	file:
status	.\ide.c	/^    uint8_t status;$/;"	m	struct:IDEState	file:
status	.\max7310.c	/^    uint8_t status;$/;"	m	struct:max7310_s	file:
status	.\mpcore.c	/^    uint32_t status;$/;"	m	struct:__anon35	file:
status	.\nand.c	/^    int status;$/;"	m	struct:nand_flash_s	file:
status	.\omap.c	/^    int status;$/;"	m	struct:omap_dma_channel_s	file:
status	.\omap.c	/^    uint8_t status;$/;"	m	struct:omap_rtc_s	file:
status	.\omap_mmc.c	/^    uint16_t status;$/;"	m	struct:omap_mmc_s	file:
status	.\parallel.c	/^    uint8_t status;$/;"	m	struct:ParallelState	file:
status	.\pckbd.c	/^    uint8_t status;$/;"	m	struct:KBDState	file:
status	.\pcnet.c	/^    int16_t status;$/;"	m	struct:pcnet_RMD	file:
status	.\pcnet.c	/^    int16_t status;$/;"	m	struct:pcnet_TMD	file:
status	.\pflash_cfi01.c	/^    uint8_t status;$/;"	m	struct:pflash_t	file:
status	.\pflash_cfi02.c	/^    uint8_t status;$/;"	m	struct:pflash_t	file:
status	.\pl181.c	/^    uint32_t status;$/;"	m	struct:__anon60	file:
status	.\ppc405_uc.c	/^    uint32_t status;$/;"	m	struct:ppc4xx_sdram_t	file:
status	.\pxa.h	/^    uint32_t status;$/;"	m	struct:pxa2xx_i2s_s
status	.\pxa2xx.c	/^    uint16_t status;$/;"	m	struct:pxa2xx_i2c_s	file:
status	.\pxa2xx.c	/^    uint8_t status[2];$/;"	m	struct:pxa2xx_fir_s	file:
status	.\pxa2xx_gpio.c	/^    uint32_t status[PXA2XX_GPIO_BANKS];$/;"	m	struct:pxa2xx_gpio_info_s	file:
status	.\pxa2xx_lcd.c	/^    uint32_t status[2];$/;"	m	struct:pxa2xx_lcdc_s	file:
status	.\pxa2xx_mmci.c	/^    uint32_t status;$/;"	m	struct:pxa2xx_mmci_s	file:
status	.\spitz.c	/^    uint16_t status;$/;"	m	struct:scoop_info_s	file:
status	.\usb-msd.c	/^    uint8_t status;$/;"	m	struct:usb_msd_csw	file:
status	.\usb-ohci.c	/^    uint32_t ctl, status;$/;"	m	struct:__anon123	file:
status	.\usb-uhci.c	/^    uint16_t status;$/;"	m	struct:UHCIState	file:
status	.\vmmouse.c	/^    uint16_t status;$/;"	m	struct:_VMMouseState	file:
status2	.\usb-uhci.c	/^    uint8_t status2; \/* bit 0 and 1 are used to generate UHCI_STS_USBINT *\/$/;"	m	struct:UHCIState	file:
status_latched	.\i8254.c	/^    uint8_t status_latched;$/;"	m	struct:PITChannelState	file:
statusmask	.\fmopl.h	/^	UINT8 statusmask;	\/* status mask                       *\/$/;"	m	struct:fm_opl_f
stellaris_adc_fifo_read	.\stellaris.c	/^static uint32_t stellaris_adc_fifo_read(stellaris_adc_state *s, int n)$/;"	f	file:
stellaris_adc_fifo_write	.\stellaris.c	/^static void stellaris_adc_fifo_write(stellaris_adc_state *s, int n,$/;"	f	file:
stellaris_adc_init	.\stellaris.c	/^static qemu_irq stellaris_adc_init(uint32_t base, qemu_irq irq)$/;"	f	file:
stellaris_adc_read	.\stellaris.c	/^static uint32_t stellaris_adc_read(void *opaque, target_phys_addr_t offset)$/;"	f	file:
stellaris_adc_readfn	.\stellaris.c	/^static CPUReadMemoryFunc *stellaris_adc_readfn[] = {$/;"	v	file:
stellaris_adc_reset	.\stellaris.c	/^static void stellaris_adc_reset(stellaris_adc_state *s)$/;"	f	file:
stellaris_adc_state	.\stellaris.c	/^} stellaris_adc_state;$/;"	t	typeref:struct:__anon112	file:
stellaris_adc_trigger	.\stellaris.c	/^static void stellaris_adc_trigger(void *opaque, int irq, int level)$/;"	f	file:
stellaris_adc_update	.\stellaris.c	/^static void stellaris_adc_update(stellaris_adc_state *s)$/;"	f	file:
stellaris_adc_write	.\stellaris.c	/^static void stellaris_adc_write(void *opaque, target_phys_addr_t offset,$/;"	f	file:
stellaris_adc_writefn	.\stellaris.c	/^static CPUWriteMemoryFunc *stellaris_adc_writefn[] = {$/;"	v	file:
stellaris_board_info	.\stellaris.c	/^} stellaris_board_info;$/;"	t	typeref:struct:__anon109	file:
stellaris_boards	.\stellaris.c	/^static stellaris_board_info stellaris_boards[] = {$/;"	v	file:
stellaris_enet_can_receive	.\stellaris_enet.c	/^static int stellaris_enet_can_receive(void *opaque)$/;"	f	file:
stellaris_enet_init	.\stellaris_enet.c	/^void stellaris_enet_init(NICInfo *nd, uint32_t base, qemu_irq irq)$/;"	f
stellaris_enet_read	.\stellaris_enet.c	/^static uint32_t stellaris_enet_read(void *opaque, target_phys_addr_t offset)$/;"	f	file:
stellaris_enet_readfn	.\stellaris_enet.c	/^static CPUReadMemoryFunc *stellaris_enet_readfn[] = {$/;"	v	file:
stellaris_enet_receive	.\stellaris_enet.c	/^static void stellaris_enet_receive(void *opaque, const uint8_t *buf, int size)$/;"	f	file:
stellaris_enet_reset	.\stellaris_enet.c	/^static void stellaris_enet_reset(stellaris_enet_state *s)$/;"	f	file:
stellaris_enet_state	.\stellaris_enet.c	/^} stellaris_enet_state;$/;"	t	typeref:struct:__anon115	file:
stellaris_enet_update	.\stellaris_enet.c	/^static void stellaris_enet_update(stellaris_enet_state *s)$/;"	f	file:
stellaris_enet_write	.\stellaris_enet.c	/^static void stellaris_enet_write(void *opaque, target_phys_addr_t offset,$/;"	f	file:
stellaris_enet_writefn	.\stellaris_enet.c	/^static CPUWriteMemoryFunc *stellaris_enet_writefn[] = {$/;"	v	file:
stellaris_gamepad_init	.\stellaris_input.c	/^void stellaris_gamepad_init(int n, qemu_irq *irq, const int *keycode)$/;"	f
stellaris_gamepad_put_key	.\stellaris_input.c	/^static void stellaris_gamepad_put_key(void * opaque, int keycode)$/;"	f	file:
stellaris_gptm_init	.\stellaris.c	/^static void stellaris_gptm_init(uint32_t base, qemu_irq irq, qemu_irq trigger)$/;"	f	file:
stellaris_i2c_init	.\stellaris.c	/^static void stellaris_i2c_init(uint32_t base, qemu_irq irq, i2c_bus *bus)$/;"	f	file:
stellaris_i2c_read	.\stellaris.c	/^static uint32_t stellaris_i2c_read(void *opaque, target_phys_addr_t offset)$/;"	f	file:
stellaris_i2c_readfn	.\stellaris.c	/^static CPUReadMemoryFunc *stellaris_i2c_readfn[] = {$/;"	v	file:
stellaris_i2c_reset	.\stellaris.c	/^static void stellaris_i2c_reset(stellaris_i2c_state *s)$/;"	f	file:
stellaris_i2c_state	.\stellaris.c	/^} stellaris_i2c_state;$/;"	t	typeref:struct:__anon111	file:
stellaris_i2c_update	.\stellaris.c	/^static void stellaris_i2c_update(stellaris_i2c_state *s)$/;"	f	file:
stellaris_i2c_write	.\stellaris.c	/^static void stellaris_i2c_write(void *opaque, target_phys_addr_t offset,$/;"	f	file:
stellaris_i2c_writefn	.\stellaris.c	/^static CPUWriteMemoryFunc *stellaris_i2c_writefn[] = {$/;"	v	file:
stellaris_init	.\stellaris.c	/^static void stellaris_init(const char *kernel_filename, const char *cpu_model,$/;"	f	file:
stellaris_ssi_bus_init	.\stellaris.c	/^static void *stellaris_ssi_bus_init(qemu_irq *irqp,$/;"	f	file:
stellaris_ssi_bus_select	.\stellaris.c	/^static void stellaris_ssi_bus_select(void *opaque, int irq, int level)$/;"	f	file:
stellaris_ssi_bus_state	.\stellaris.c	/^} stellaris_ssi_bus_state;$/;"	t	typeref:struct:__anon114	file:
stellaris_ssi_bus_xfer	.\stellaris.c	/^static int stellaris_ssi_bus_xfer(void *opaque, int val)$/;"	f	file:
stellaris_sys_init	.\stellaris.c	/^static void stellaris_sys_init(uint32_t base, qemu_irq irq,$/;"	f	file:
stest1	.\lsi53c895a.c	/^    uint8_t stest1;$/;"	m	struct:__anon25	file:
stest2	.\lsi53c895a.c	/^    uint8_t stest2;$/;"	m	struct:__anon25	file:
stest3	.\lsi53c895a.c	/^    uint8_t stest3;$/;"	m	struct:__anon25	file:
stick_irq	.\sun4u.c	/^void stick_irq(void *opaque)$/;"	f
stime0	.\lsi53c895a.c	/^    uint8_t stime0;$/;"	m	struct:__anon25	file:
stop	.\eepro100.c	/^    uint32_t stop;$/;"	m	struct:__anon16	file:
stop	.\ne2000.c	/^    uint32_t stop;$/;"	m	struct:NE2000State	file:
stop	.\vmware_vga.c	/^            uint32_t stop;$/;"	m	struct:vmsvga_state_s::__anon128::__anon129	file:
stop_time	.\m48t59.c	/^    time_t   stop_time;$/;"	m	struct:m48t59_t	file:
stopintr	.\pxa2xx_dma.c	/^    uint32_t stopintr;$/;"	m	struct:pxa2xx_dma_state_s	file:
stopping	.\ssi-sd.c	/^    int stopping;$/;"	m	struct:__anon108	file:
storage	.\nand.c	/^    uint8_t *storage;$/;"	m	struct:nand_flash_s	file:
storage	.\pflash_cfi01.c	/^    void *storage;$/;"	m	struct:pflash_t	file:
storage	.\pflash_cfi02.c	/^    void *storage;$/;"	m	struct:pflash_t	file:
store_40x_dbcr0	.\ppc405_uc.c	/^void store_40x_dbcr0 (CPUState *env, uint32_t val)$/;"	f
store_40x_pit	.\ppc.c	/^void store_40x_pit (CPUState *env, target_ulong val)$/;"	f
store_booke_tcr	.\ppc.c	/^void store_booke_tcr (CPUState *env, target_ulong val)$/;"	f
store_booke_tsr	.\ppc.c	/^void store_booke_tsr (CPUState *env, target_ulong val)$/;"	f
str	.\fdc.c	/^    const char *str;$/;"	m	struct:fd_format_t	file:
strobe	.\spitz.c	/^    qemu_irq *strobe;$/;"	m	struct:spitz_keyboard_s	file:
strobe_state	.\spitz.c	/^    uint16_t strobe_state;$/;"	m	struct:spitz_keyboard_s	file:
struct_ident	.\firmware_abi.h	/^    uint8_t  struct_ident[0x10];$/;"	m	struct:ohwcfg_v3_t
struct_version	.\firmware_abi.h	/^    uint32_t struct_version;$/;"	m	struct:ohwcfg_v3_t
sts	.\ppc405_uc.c	/^    uint8_t sts;$/;"	m	struct:ppc4xx_i2c_t	file:
subpanel	.\omap_lcdc.c	/^    uint32_t subpanel;$/;"	m	struct:omap_lcd_panel_s	file:
sun4c_check_interrupts	.\sun4c_intctl.c	/^static void sun4c_check_interrupts(void *opaque)$/;"	f	file:
sun4c_counter_base	.\sun4m.c	/^    target_phys_addr_t sun4c_intctl_base, sun4c_counter_base;$/;"	m	struct:hwdef	file:
sun4c_hw_init	.\sun4m.c	/^static void sun4c_hw_init(const struct hwdef *hwdef, int RAM_size,$/;"	f	file:
sun4c_intctl_base	.\sun4m.c	/^    target_phys_addr_t sun4c_intctl_base, sun4c_counter_base;$/;"	m	struct:hwdef	file:
sun4c_intctl_init	.\sun4c_intctl.c	/^void *sun4c_intctl_init(target_phys_addr_t addr, qemu_irq **irq,$/;"	f
sun4c_intctl_load	.\sun4c_intctl.c	/^static int sun4c_intctl_load(QEMUFile *f, void *opaque, int version_id)$/;"	f	file:
sun4c_intctl_mem_read	.\sun4c_intctl.c	/^static CPUReadMemoryFunc *sun4c_intctl_mem_read[3] = {$/;"	v	file:
sun4c_intctl_mem_readb	.\sun4c_intctl.c	/^static uint32_t sun4c_intctl_mem_readb(void *opaque, target_phys_addr_t addr)$/;"	f	file:
sun4c_intctl_mem_write	.\sun4c_intctl.c	/^static CPUWriteMemoryFunc *sun4c_intctl_mem_write[3] = {$/;"	v	file:
sun4c_intctl_mem_writeb	.\sun4c_intctl.c	/^static void sun4c_intctl_mem_writeb(void *opaque, target_phys_addr_t addr, uint32_t val)$/;"	f	file:
sun4c_intctl_reset	.\sun4c_intctl.c	/^static void sun4c_intctl_reset(void *opaque)$/;"	f	file:
sun4c_intctl_save	.\sun4c_intctl.c	/^static void sun4c_intctl_save(QEMUFile *f, void *opaque)$/;"	f	file:
sun4c_irq_info	.\sun4c_intctl.c	/^void sun4c_irq_info(void *opaque)$/;"	f
sun4c_pic_info	.\sun4c_intctl.c	/^void sun4c_pic_info(void *opaque)$/;"	f
sun4c_set_irq	.\sun4c_intctl.c	/^static void sun4c_set_irq(void *opaque, int irq, int level)$/;"	f	file:
sun4d_hw_init	.\sun4m.c	/^static void sun4d_hw_init(const struct sun4d_hwdef *hwdef, int RAM_size,$/;"	f	file:
sun4d_hwdef	.\sun4m.c	/^struct sun4d_hwdef {$/;"	s	file:
sun4d_hwdefs	.\sun4m.c	/^static const struct sun4d_hwdef sun4d_hwdefs[] = {$/;"	v	typeref:struct:sun4d_hwdef	file:
sun4m	.\fdc.c	/^    int sun4m;$/;"	m	struct:fdctrl_t	file:
sun4m_fdctrl_init	.\fdc.c	/^fdctrl_t *sun4m_fdctrl_init (qemu_irq irq, target_phys_addr_t io_base,$/;"	f
sun4m_hw_init	.\sun4m.c	/^static void sun4m_hw_init(const struct hwdef *hwdef, int RAM_size,$/;"	f	file:
sun4m_load_kernel	.\sun4m.c	/^static unsigned long sun4m_load_kernel(const char *kernel_filename,$/;"	f	file:
sun4u_NVRAM_set_params	.\sun4u.c	/^static int sun4u_NVRAM_set_params (m48t59_t *nvram, uint16_t NVRAM_size,$/;"	f	file:
sun4u_init	.\sun4u.c	/^static void sun4u_init(int ram_size, int vga_ram_size,$/;"	f	file:
sun4u_machine	.\sun4u.c	/^QEMUMachine sun4u_machine = {$/;"	v
sunkbd_event	.\slavio_serial.c	/^static void sunkbd_event(void *opaque, int ch)$/;"	f	file:
sunmouse_event	.\slavio_serial.c	/^static void sunmouse_event(void *opaque,$/;"	f	file:
svgaid	.\vmware_vga.c	/^    uint32_t svgaid;$/;"	m	struct:vmsvga_state_s	file:
swar1	.\pxa.h	/^    uint32_t swar1;$/;"	m	struct:pxa2xx_state_s
swar2	.\pxa.h	/^    uint32_t swar2;$/;"	m	struct:pxa2xx_state_s
swivr	.\mcf5206.c	/^    uint8_t swivr;$/;"	m	struct:__anon27	file:
sxfer	.\lsi53c895a.c	/^    uint8_t sxfer;$/;"	m	struct:__anon25	file:
sxt24	.\lsi53c895a.c	/^static inline int32_t sxt24(int32_t n)$/;"	f	file:
sync	.\omap.c	/^    int sync;$/;"	m	struct:omap_dma_channel_s	file:
sync	.\pl080.c	/^    uint32_t sync;$/;"	m	struct:__anon58	file:
sync_error	.\omap_lcdc.c	/^    int sync_error;$/;"	m	struct:omap_lcd_panel_s	file:
syncing	.\vmware_vga.c	/^    int syncing;$/;"	m	struct:vmsvga_state_s	file:
sys_id	.\arm_sysctl.c	/^    uint32_t sys_id;$/;"	m	struct:__anon5	file:
sys_ind	.\ide.c	/^	uint8_t sys_ind;		\/* What partition type *\/$/;"	m	struct:partition	file:
sysclk	.\ppc405_uc.c	/^    uint32_t sysclk;$/;"	m	struct:ppc405cr_cpc_t	file:
sysclk	.\ppc405_uc.c	/^    uint32_t sysclk;$/;"	m	struct:ppc405ep_cpc_t	file:
syscontrol	.\ppc_prep.c	/^    uint8_t syscontrol;$/;"	m	struct:sysctrl_t	file:
sysctrl	.\ppc_prep.c	/^static sysctrl_t *sysctrl;$/;"	v	file:
sysctrl	.\slavio_misc.c	/^    uint32_t sysctrl;$/;"	m	struct:MiscState	file:
sysctrl_t	.\ppc_prep.c	/^typedef struct sysctrl_t {$/;"	s	file:
sysctrl_t	.\ppc_prep.c	/^} sysctrl_t;$/;"	t	typeref:struct:sysctrl_t	file:
system_clock_scale	.\arm-misc.h	/^int system_clock_scale;$/;"	v
system_clock_scale	.\armv7m_nvic.c	/^int system_clock_scale;$/;"	v
systick	.\armv7m_nvic.c	/^    } systick;$/;"	m	struct:__anon3	typeref:struct:__anon3::__anon4	file:
systick_reload	.\armv7m_nvic.c	/^static void systick_reload(nvic_state *s, int reset)$/;"	f	file:
systick_scale	.\armv7m_nvic.c	/^static inline int64_t systick_scale(nvic_state *s)$/;"	f	file:
systick_timer_tick	.\armv7m_nvic.c	/^static void systick_timer_tick(void * opaque)$/;"	f	file:
t	.\pxa2xx_template.h	/^static drawfn glue(glue(pxa2xx_draw_fn_, BITS), t)[16] =$/;"	v
tag	.\lsi53c895a.c	/^    uint32_t tag;$/;"	m	struct:__anon24	file:
tag	.\scsi-disk.c	/^    uint32_t tag;$/;"	m	struct:SCSIRequest	file:
tag	.\scsi-generic.c	/^    uint32_t tag;$/;"	m	struct:SCSIRequest	file:
tag	.\usb-msd.c	/^    uint32_t tag;$/;"	m	struct:__anon122	file:
tag	.\usb-msd.c	/^    uint32_t tag;$/;"	m	struct:usb_msd_cbw	file:
tag	.\usb-msd.c	/^    uint32_t tag;$/;"	m	struct:usb_msd_csw	file:
taihu_405ep_init	.\ppc405_boards.c	/^static void taihu_405ep_init(int ram_size, int vga_ram_size,$/;"	f	file:
taihu_cpld_init	.\ppc405_boards.c	/^static void taihu_cpld_init (uint32_t base)$/;"	f	file:
taihu_cpld_read	.\ppc405_boards.c	/^static CPUReadMemoryFunc *taihu_cpld_read[] = {$/;"	v	file:
taihu_cpld_readb	.\ppc405_boards.c	/^static uint32_t taihu_cpld_readb (void *opaque, target_phys_addr_t addr)$/;"	f	file:
taihu_cpld_readl	.\ppc405_boards.c	/^static uint32_t taihu_cpld_readl (void *opaque, target_phys_addr_t addr)$/;"	f	file:
taihu_cpld_readw	.\ppc405_boards.c	/^static uint32_t taihu_cpld_readw (void *opaque, target_phys_addr_t addr)$/;"	f	file:
taihu_cpld_reset	.\ppc405_boards.c	/^static void taihu_cpld_reset (void *opaque)$/;"	f	file:
taihu_cpld_t	.\ppc405_boards.c	/^struct taihu_cpld_t {$/;"	s	file:
taihu_cpld_t	.\ppc405_boards.c	/^typedef struct taihu_cpld_t taihu_cpld_t;$/;"	t	typeref:struct:taihu_cpld_t	file:
taihu_cpld_write	.\ppc405_boards.c	/^static CPUWriteMemoryFunc *taihu_cpld_write[] = {$/;"	v	file:
taihu_cpld_writeb	.\ppc405_boards.c	/^static void taihu_cpld_writeb (void *opaque,$/;"	f	file:
taihu_cpld_writel	.\ppc405_boards.c	/^static void taihu_cpld_writel (void *opaque,$/;"	f	file:
taihu_cpld_writew	.\ppc405_boards.c	/^static void taihu_cpld_writew (void *opaque,$/;"	f	file:
taihu_machine	.\ppc405_boards.c	/^QEMUMachine taihu_machine = {$/;"	v
tail	.\usb-ohci.c	/^    uint32_t tail;$/;"	m	struct:ohci_ed	file:
tally_counters	.\rtl8139.c	/^    RTL8139TallyCounters tally_counters;$/;"	m	struct:RTL8139State	file:
target_base	.\mst_fpga.c	/^	target_phys_addr_t target_base;$/;"	m	struct:mst_irq_state	file:
target_base	.\spitz.c	/^    target_phys_addr_t target_base;$/;"	m	struct:scoop_info_s	file:
target_base	.\spitz.c	/^    target_phys_addr_t target_base;$/;"	m	struct:sl_nand_s	file:
target_cpu	.\slavio_intctl.c	/^    uint32_t target_cpu;$/;"	m	struct:SLAVIO_INTCTLState	file:
tb	.\mcf_uart.c	/^    uint8_t tb;$/;"	m	struct:__anon33	file:
tb1	.\max111x.c	/^    uint8_t tb1, rb2, rb3;$/;"	m	struct:max111x_s	file:
tb_freq	.\ppc.c	/^    uint32_t tb_freq;      \/* TB frequency                    *\/$/;"	m	struct:ppc_tb_t	file:
tb_freq	.\ppc405_uc.c	/^    uint32_t tb_freq;$/;"	m	struct:ppc4xx_gpt_t	file:
tb_offset	.\ppc.c	/^    int64_t  tb_offset;    \/* Compensation                    *\/$/;"	m	struct:ppc_tb_t	file:
tb_offset	.\ppc405_uc.c	/^    int64_t tb_offset;$/;"	m	struct:ppc4xx_gpt_t	file:
tbadr	.\pcnet.c	/^    uint32_t tbadr;$/;"	m	struct:pcnet_TMD	file:
tbd_count	.\eepro100.c	/^    uint8_t tbd_count;          \/* TBD number *\/$/;"	m	struct:__anon11	file:
tc1_ck	.\omap1_clk.c	/^static struct clk tc1_ck = {$/;"	v	typeref:struct:clk	file:
tc2_ck	.\omap1_clk.c	/^static struct clk tc2_ck = {$/;"	v	typeref:struct:clk	file:
tc58128	.\tc58128.c	/^static sh7750_io_device tc58128 = {$/;"	v	file:
tc58128_cb	.\tc58128.c	/^int tc58128_cb(uint16_t porta, uint16_t portb,$/;"	f
tc58128_dev	.\tc58128.c	/^} tc58128_dev;$/;"	t	typeref:struct:__anon120	file:
tc58128_devs	.\tc58128.c	/^static tc58128_dev tc58128_devs[2];$/;"	v	file:
tc58128_init	.\tc58128.c	/^int tc58128_init(struct SH7750State *s, char *zone1, char *zone2)$/;"	f
tc_ck	.\omap1_clk.c	/^static struct clk tc_ck = {$/;"	v	typeref:struct:clk	file:
tc_int	.\pl080.c	/^    uint8_t tc_int;$/;"	m	struct:__anon58	file:
tc_mask	.\pl080.c	/^    uint8_t tc_mask;$/;"	m	struct:__anon58	file:
tcb_bytes	.\eepro100.c	/^    uint16_t tcb_bytes;         \/* transmit command block byte count (in lower 14 bits *\/$/;"	m	struct:__anon11	file:
tcmi_base	.\omap.h	/^    target_phys_addr_t tcmi_base;$/;"	m	struct:omap_mpu_state_s
tcmi_regs	.\omap.h	/^    uint32_t tcmi_regs[17];$/;"	m	struct:omap_mpu_state_s
tcnt	.\eepro100.c	/^    uint16_t tcnt;$/;"	m	struct:__anon16	file:
tcnt	.\ne2000.c	/^    uint16_t tcnt;$/;"	m	struct:NE2000State	file:
tcnt	.\sh_timer.c	/^    uint32_t tcnt;$/;"	m	struct:__anon97	file:
tcor	.\sh_timer.c	/^    uint32_t tcor;$/;"	m	struct:__anon97	file:
tcp_header	.\rtl8139.c	/^typedef struct tcp_header$/;"	s	file:
tcp_header	.\rtl8139.c	/^} tcp_header;$/;"	t	typeref:struct:tcp_header	file:
tcpr	.\sh_timer.c	/^    uint32_t tcpr;$/;"	m	struct:__anon97	file:
tcq	.\scsi-disk.c	/^    int tcq;$/;"	m	struct:SCSIDeviceState	file:
tcr	.\mcf5206.c	/^    uint16_t tcr;$/;"	m	struct:__anon26	file:
tcr	.\mcf_fec.c	/^    uint32_t tcr;$/;"	m	struct:__anon30	file:
tcr	.\ppc405_uc.c	/^    uint32_t tcr;$/;"	m	struct:ppc405_gpio_t	file:
tcr	.\pxa2xx_lcd.c	/^    uint32_t tcr;$/;"	m	struct:pxa2xx_lcdc_s	file:
tcr	.\sh_timer.c	/^    uint32_t tcr;$/;"	m	struct:__anon97	file:
tcr	.\smc91c111.c	/^    uint16_t tcr;$/;"	m	struct:__anon103	file:
tctl	.\stellaris_enet.c	/^    uint32_t tctl;$/;"	m	struct:__anon115	file:
tcx24_draw_line32	.\tcx.c	/^static inline void tcx24_draw_line32(TCXState *s1, uint8_t *d,$/;"	f	file:
tcx24_invalidate_display	.\tcx.c	/^static void tcx24_invalidate_display(void *opaque)$/;"	f	file:
tcx24_screen_dump	.\tcx.c	/^static void tcx24_screen_dump(void *opaque, const char *filename)$/;"	f	file:
tcx24_update_display	.\tcx.c	/^static void tcx24_update_display(void *opaque)$/;"	f	file:
tcx_base	.\sun4m.c	/^    target_phys_addr_t tcx_base, cs_base, power_base;$/;"	m	struct:hwdef	file:
tcx_base	.\sun4m.c	/^    target_phys_addr_t tcx_base;$/;"	m	struct:sun4d_hwdef	file:
tcx_dac_read	.\tcx.c	/^static CPUReadMemoryFunc *tcx_dac_read[3] = {$/;"	v	file:
tcx_dac_readl	.\tcx.c	/^static uint32_t tcx_dac_readl(void *opaque, target_phys_addr_t addr)$/;"	f	file:
tcx_dac_write	.\tcx.c	/^static CPUWriteMemoryFunc *tcx_dac_write[3] = {$/;"	v	file:
tcx_dac_writel	.\tcx.c	/^static void tcx_dac_writel(void *opaque, target_phys_addr_t addr, uint32_t val)$/;"	f	file:
tcx_draw_line16	.\tcx.c	/^static void tcx_draw_line16(TCXState *s1, uint8_t *d,$/;"	f	file:
tcx_draw_line32	.\tcx.c	/^static void tcx_draw_line32(TCXState *s1, uint8_t *d,$/;"	f	file:
tcx_draw_line8	.\tcx.c	/^static void tcx_draw_line8(TCXState *s1, uint8_t *d,$/;"	f	file:
tcx_dummy_read	.\tcx.c	/^static CPUReadMemoryFunc *tcx_dummy_read[3] = {$/;"	v	file:
tcx_dummy_readl	.\tcx.c	/^static uint32_t tcx_dummy_readl(void *opaque, target_phys_addr_t addr)$/;"	f	file:
tcx_dummy_write	.\tcx.c	/^static CPUWriteMemoryFunc *tcx_dummy_write[3] = {$/;"	v	file:
tcx_dummy_writel	.\tcx.c	/^static void tcx_dummy_writel(void *opaque, target_phys_addr_t addr,$/;"	f	file:
tcx_init	.\tcx.c	/^void tcx_init(DisplayState *ds, target_phys_addr_t addr, uint8_t *vram_base,$/;"	f
tcx_invalidate_display	.\tcx.c	/^static void tcx_invalidate_display(void *opaque)$/;"	f	file:
tcx_load	.\tcx.c	/^static int tcx_load(QEMUFile *f, void *opaque, int version_id)$/;"	f	file:
tcx_reset	.\tcx.c	/^static void tcx_reset(void *opaque)$/;"	f	file:
tcx_save	.\tcx.c	/^static void tcx_save(QEMUFile *f, void *opaque)$/;"	f	file:
tcx_screen_dump	.\tcx.c	/^static void tcx_screen_dump(void *opaque, const char *filename)$/;"	f	file:
tcx_update_display	.\tcx.c	/^static void tcx_update_display(void *opaque)$/;"	f	file:
tdra	.\pcnet.c	/^    uint32_t rdra, tdra;$/;"	m	struct:PCNetState_st	file:
tdra	.\pcnet.c	/^    uint32_t tdra;$/;"	m	struct:pcnet_initblk16	file:
tdra	.\pcnet.c	/^    uint32_t tdra;$/;"	m	struct:pcnet_initblk32	file:
temp	.\lsi53c895a.c	/^    uint32_t temp;$/;"	m	struct:__anon25	file:
ter	.\mcf5206.c	/^    uint16_t ter;$/;"	m	struct:__anon26	file:
terrier	.\spitz.c	/^enum spitz_model_e { spitz, akita, borzoi, terrier };$/;"	e	enum:spitz_model_e	file:
terrier_init	.\spitz.c	/^static void terrier_init(int ram_size, int vga_ram_size,$/;"	f	file:
terrierpda_machine	.\spitz.c	/^QEMUMachine terrierpda_machine = {$/;"	v
test	.\omap_i2c.c	/^    uint16_t test;$/;"	m	struct:omap_i2c_s	file:
test_bit	.\openpic.c	/^static inline int test_bit (uint32_t *field, int bit)$/;"	f	file:
test_dbg_ctrl	.\omap.h	/^    uint32_t test_dbg_ctrl[1];$/;"	m	struct:omap_mpu_state_s
test_reg	.\sb16.c	/^    uint8_t test_reg;$/;"	m	struct:SB16State	file:
tft	.\omap_lcdc.c	/^    int tft;$/;"	m	struct:omap_lcd_panel_s	file:
tfwr	.\mcf_fec.c	/^    uint32_t tfwr;$/;"	m	struct:__anon30	file:
th_ack	.\rtl8139.c	/^    uint32_t th_ack;			\/* acknowledgement number *\/$/;"	m	struct:tcp_header	file:
th_dport	.\rtl8139.c	/^    uint16_t th_dport;		\/* destination port *\/$/;"	m	struct:tcp_header	file:
th_offset_flags	.\rtl8139.c	/^    uint16_t th_offset_flags; \/* data offset, reserved 6 bits, TCP protocol flags *\/$/;"	m	struct:tcp_header	file:
th_seq	.\rtl8139.c	/^    uint32_t th_seq;			\/* sequence number *\/$/;"	m	struct:tcp_header	file:
th_sport	.\rtl8139.c	/^    uint16_t th_sport;		\/* source port *\/$/;"	m	struct:tcp_header	file:
th_sum	.\rtl8139.c	/^    uint16_t th_sum;			\/* checksum *\/$/;"	m	struct:tcp_header	file:
th_urp	.\rtl8139.c	/^    uint16_t th_urp;			\/* urgent pointer *\/$/;"	m	struct:tcp_header	file:
th_win	.\rtl8139.c	/^    uint16_t th_win;			\/* window *\/$/;"	m	struct:tcp_header	file:
thr	.\stellaris_enet.c	/^    uint32_t thr;$/;"	m	struct:__anon115	file:
thr_ipending	.\serial.c	/^    int thr_ipending;$/;"	m	struct:SerialState	file:
ti	.\omap.c	/^    time_t ti;$/;"	m	struct:omap_rtc_s	file:
ti_buf	.\esp.c	/^    uint8_t ti_buf[TI_BUFSZ];$/;"	m	struct:ESPState	file:
ti_rptr	.\esp.c	/^    uint32_t ti_rptr, ti_wptr;$/;"	m	struct:ESPState	file:
ti_size	.\esp.c	/^    int32_t ti_size;$/;"	m	struct:ESPState	file:
ti_wptr	.\esp.c	/^    uint32_t ti_rptr, ti_wptr;$/;"	m	struct:ESPState	file:
tibc	.\openpic.c	/^	uint32_t tibc;  \/* Global timer base count register *\/$/;"	m	struct:openpic_t::__anon44	file:
ticc	.\openpic.c	/^	uint32_t ticc;  \/* Global timer current count register *\/$/;"	m	struct:openpic_t::__anon44	file:
tick	.\armv7m_nvic.c	/^        int64_t tick;$/;"	m	struct:__anon3::__anon4	file:
tick	.\eeprom93xx.c	/^    uint8_t  tick;$/;"	m	struct:_eeprom_t	file:
tick	.\mips_malta.c	/^  uint8_t tick;$/;"	m	struct:_eeprom24c0x_t	file:
tick	.\mpcore.c	/^    int64_t tick;$/;"	m	struct:__anon35	file:
tick	.\omap.c	/^    uint64_t tick;$/;"	m	struct:omap_rtc_s	file:
tick	.\rtl8139.c	/^    uint32_t tick;$/;"	m	struct:EEprom9346	file:
tick	.\stellaris.c	/^    int64_t tick[2];$/;"	m	struct:gptm_state	file:
tick_irq	.\sun4u.c	/^void tick_irq(void *opaque)$/;"	f
tick_offset	.\pl031.c	/^    uint32_t tick_offset;$/;"	m	struct:__anon54	file:
ticking	.\adlib.c	/^    int ticking[2];$/;"	m	struct:__anon2	file:
tifr	.\openpic.c	/^    uint32_t tifr; \/* Timer frequency reporting register *\/$/;"	m	struct:openpic_t	file:
time	.\omap.c	/^    int64_t time;$/;"	m	struct:omap_mpu_timer_s	file:
time_const	.\sb16.c	/^    int time_const;$/;"	m	struct:SB16State	file:
time_offset	.\m48t59.c	/^    time_t   time_offset;$/;"	m	struct:m48t59_t	file:
timer	.\apic.c	/^    QEMUTimer *timer;$/;"	m	struct:APICState	file:
timer	.\arm_timer.c	/^    ptimer_state *timer;$/;"	m	struct:__anon6	file:
timer	.\arm_timer.c	/^    void *timer[2];$/;"	m	struct:__anon7	file:
timer	.\arm_timer.c	/^    void *timer[3];$/;"	m	struct:__anon8	file:
timer	.\armv7m_nvic.c	/^        QEMUTimer *timer;$/;"	m	struct:__anon3::__anon4	file:
timer	.\cuda.c	/^    QEMUTimer *timer;$/;"	m	struct:CUDATimer	file:
timer	.\mcf5206.c	/^    m5206_timer_state *timer[2];$/;"	m	struct:__anon27	file:
timer	.\mcf5206.c	/^    ptimer_state *timer;$/;"	m	struct:__anon26	file:
timer	.\mcf5208.c	/^    m5208_timer_state timer[2];$/;"	m	struct:__anon29	file:
timer	.\mcf5208.c	/^    ptimer_state *timer;$/;"	m	struct:__anon28	file:
timer	.\mpcore.c	/^    QEMUTimer *timer;$/;"	m	struct:__anon35	file:
timer	.\mpcore.c	/^    mpcore_timer_state timer[8];$/;"	m	struct:mpcore_priv_state	file:
timer	.\omap.c	/^    QEMUTimer *timer;$/;"	m	struct:omap_mpu_timer_s	file:
timer	.\omap.c	/^    struct omap_mpu_timer_s timer;$/;"	m	struct:omap_32khz_timer_s	typeref:struct:omap_32khz_timer_s::omap_mpu_timer_s	file:
timer	.\omap.c	/^    struct omap_mpu_timer_s timer;$/;"	m	struct:omap_watchdog_timer_s	typeref:struct:omap_watchdog_timer_s::omap_mpu_timer_s	file:
timer	.\omap.h	/^    struct omap_mpu_timer_s *timer[3];$/;"	m	struct:omap_mpu_state_s	typeref:struct:omap_mpu_state_s::omap_mpu_timer_s
timer	.\pcnet.c	/^    uint64_t timer;$/;"	m	struct:PCNetState_st	file:
timer	.\pflash_cfi01.c	/^    QEMUTimer *timer;$/;"	m	struct:pflash_t	file:
timer	.\pflash_cfi02.c	/^    QEMUTimer *timer;$/;"	m	struct:pflash_t	file:
timer	.\pl031.c	/^    QEMUTimer *timer;$/;"	m	struct:__anon54	file:
timer	.\ppc405_uc.c	/^    struct QEMUTimer *timer;$/;"	m	struct:ppc4xx_gpt_t	typeref:struct:ppc4xx_gpt_t::QEMUTimer	file:
timer	.\ptimer.c	/^    QEMUTimer *timer;$/;"	m	struct:ptimer_state	file:
timer	.\pxa2xx_timer.c	/^    struct pxa2xx_timer0_s timer[4];$/;"	m	struct:__anon86	typeref:struct:__anon86::pxa2xx_timer0_s	file:
timer	.\rtl8139.c	/^    QEMUTimer *timer;$/;"	m	struct:RTL8139State	file:
timer	.\sh_timer.c	/^    ptimer_state *timer;$/;"	m	struct:__anon97	file:
timer	.\sh_timer.c	/^    void *timer[3];$/;"	m	struct:__anon98	file:
timer	.\slavio_timer.c	/^    ptimer_state *timer;$/;"	m	struct:SLAVIO_TIMERState	file:
timer	.\stellaris.c	/^    QEMUTimer *timer[2];$/;"	m	struct:gptm_state	file:
timer	.\tsc210x.c	/^    QEMUTimer *timer;$/;"	m	struct:tsc210x_state_s	file:
timer0	.\etraxfs_timer.c	/^static struct fs_timer_t timer0;$/;"	v	typeref:struct:fs_timer_t	file:
timer0	.\fdc.c	/^    uint8_t timer0;$/;"	m	struct:fdctrl_t	file:
timer1	.\fdc.c	/^    uint8_t timer1;$/;"	m	struct:fdctrl_t	file:
timer_ack_irq	.\etraxfs_timer.c	/^static void timer_ack_irq(void)$/;"	f	file:
timer_handler	.\adlib.c	/^static void timer_handler (int c, double interval_Sec)$/;"	f	file:
timer_irq	.\etraxfs_timer.c	/^static void timer_irq(void *opaque)$/;"	f	file:
timer_read	.\etraxfs_timer.c	/^static CPUReadMemoryFunc *timer_read[] = {$/;"	v	file:
timer_readb	.\etraxfs_timer.c	/^static uint32_t timer_readb (void *opaque, target_phys_addr_t addr)$/;"	f	file:
timer_readl	.\etraxfs_timer.c	/^static uint32_t timer_readl (void *opaque, target_phys_addr_t addr)$/;"	f	file:
timer_readw	.\etraxfs_timer.c	/^static uint32_t timer_readw (void *opaque, target_phys_addr_t addr)$/;"	f	file:
timer_write	.\etraxfs_timer.c	/^static CPUWriteMemoryFunc *timer_write[] = {$/;"	v	file:
timer_writeb	.\etraxfs_timer.c	/^timer_writeb (void *opaque, target_phys_addr_t addr, uint32_t value)$/;"	f	file:
timer_writel	.\etraxfs_timer.c	/^timer_writel (void *opaque, target_phys_addr_t addr, uint32_t value)$/;"	f	file:
timer_writew	.\etraxfs_timer.c	/^timer_writew (void *opaque, target_phys_addr_t addr, uint32_t value)$/;"	f	file:
timers	.\cuda.c	/^    CUDATimer timers[2];$/;"	m	struct:CUDAState	file:
timers	.\openpic.c	/^    } timers[MAX_TMR];$/;"	m	struct:openpic_t	typeref:struct:openpic_t::__anon44	file:
times	.\omap_i2c.c	/^    uint8_t times[2];$/;"	m	struct:omap_i2c_s	file:
timing	.\omap_lcdc.c	/^    uint32_t timing[3];$/;"	m	struct:omap_lcd_panel_s	file:
timing	.\pl110.c	/^    uint32_t timing[4];$/;"	m	struct:__anon59	file:
timing	.\tsc210x.c	/^    int timing;$/;"	m	struct:tsc210x_state_s	file:
tipb	.\omap.h	/^    tipb,$/;"	e	enum:omap_dma_port
tipb_ck	.\omap1_clk.c	/^static struct clk tipb_ck = {$/;"	v	typeref:struct:clk	file:
tipb_mpui	.\omap.h	/^    tipb_mpui,$/;"	e	enum:omap_dma_port
tlen	.\pcnet.c	/^    uint8_t tlen;$/;"	m	struct:pcnet_initblk32	file:
tm	.\omap.c	/^    QEMUTimer *tm;$/;"	m	struct:omap_dma_s	file:
tm	.\omap.c	/^    QEMUTimer *tm;$/;"	m	struct:omap_lpg_s	file:
tm	.\pxa2xx_timer.c	/^    struct pxa2xx_timer0_s tm;$/;"	m	struct:pxa2xx_timer4_s	typeref:struct:pxa2xx_timer4_s::pxa2xx_timer0_s	file:
tm4	.\pxa2xx_timer.c	/^    struct pxa2xx_timer4_s *tm4;$/;"	m	struct:__anon86	typeref:struct:__anon86::pxa2xx_timer4_s	file:
tmr	.\apic.c	/^    uint32_t tmr[8];  \/* trigger mode register *\/$/;"	m	struct:APICState	file:
tmr	.\mcf5206.c	/^    uint16_t tmr;$/;"	m	struct:__anon26	file:
tmr_overflow_time	.\acpi.c	/^    int64_t tmr_overflow_time;$/;"	m	struct:PIIX4PMState	file:
tmr_timer	.\acpi.c	/^    QEMUTimer *tmr_timer;$/;"	m	struct:PIIX4PMState	file:
tmu012_init	.\sh_timer.c	/^void tmu012_init(target_phys_addr_t base, int feat, uint32_t freq,$/;"	f
tmu012_read	.\sh_timer.c	/^static uint32_t tmu012_read(void *opaque, target_phys_addr_t offset)$/;"	f	file:
tmu012_readfn	.\sh_timer.c	/^static CPUReadMemoryFunc *tmu012_readfn[] = {$/;"	v	file:
tmu012_state	.\sh_timer.c	/^} tmu012_state;$/;"	t	typeref:struct:__anon98	file:
tmu012_write	.\sh_timer.c	/^static void tmu012_write(void *opaque, target_phys_addr_t offset,$/;"	f	file:
tmu012_writefn	.\sh_timer.c	/^static CPUWriteMemoryFunc *tmu012_writefn[] = {$/;"	v	file:
toBCD	.\m48t59.c	/^static inline uint8_t toBCD (uint8_t value)$/;"	f	file:
to_bcd	.\mc146818rtc.c	/^static inline int to_bcd(RTCState *s, int a)$/;"	f	file:
tocr	.\sh_timer.c	/^    uint32_t tocr;$/;"	m	struct:__anon98	file:
token	.\usb-uhci.c	/^    uint32_t token;$/;"	m	struct:UHCI_TD	file:
total_len	.\pflash_cfi01.c	/^    target_ulong total_len;$/;"	m	struct:pflash_t	file:
total_len	.\pflash_cfi02.c	/^    uint32_t total_len;$/;"	m	struct:pflash_t	file:
touch_keyword	.\spitz.c	/^    uint32_t touch_keyword;$/;"	m	struct:sl_param_info	file:
touch_xd	.\spitz.c	/^    int32_t touch_xd;$/;"	m	struct:sl_param_info	file:
touch_xp	.\spitz.c	/^    int32_t touch_xp;$/;"	m	struct:sl_param_info	file:
touch_yd	.\spitz.c	/^    int32_t touch_yd;$/;"	m	struct:sl_param_info	file:
touch_yp	.\spitz.c	/^    int32_t touch_yp;$/;"	m	struct:sl_param_info	file:
tpr	.\apic.c	/^    uint8_t tpr;$/;"	m	struct:APICState	file:
tpsr	.\eepro100.c	/^    uint8_t tpsr;$/;"	m	struct:__anon16	file:
tpsr	.\ne2000.c	/^    uint8_t tpsr;$/;"	m	struct:NE2000State	file:
tr	.\ppc405_uc.c	/^    uint32_t tr;$/;"	m	struct:ppc4xx_sdram_t	file:
track	.\fdc.c	/^    uint8_t track;$/;"	m	struct:fdrive_t	file:
transfer	.\omap_mmc.c	/^    int transfer;$/;"	m	struct:omap_mmc_s	file:
transfer_handler	.\dma.c	/^    DMA_transfer_handler transfer_handler;$/;"	m	struct:dma_regs	file:
translate	.\ps2.c	/^    int translate;$/;"	m	struct:__anon79	file:
transp	.\pxa2xx_lcd.c	/^    int transp;$/;"	m	struct:pxa2xx_lcdc_s	file:
transparent_copy	.\omap.c	/^    int transparent_copy;$/;"	m	struct:omap_dma_channel_s	file:
trgbr	.\pxa2xx_lcd.c	/^    uint32_t trgbr;$/;"	m	struct:pxa2xx_lcdc_s	file:
trigger	.\arm_gic.c	/^    unsigned trigger:1; \/* nonzero = edge triggered.  *\/$/;"	m	struct:gic_irq_state	file:
trigger	.\stellaris.c	/^    qemu_irq trigger;$/;"	m	struct:gptm_state	file:
trr	.\mcf5206.c	/^    uint16_t trr;$/;"	m	struct:__anon26	file:
tsc2101_rates	.\tsc210x.c	/^static const struct tsc210x_rate_info_s tsc2101_rates[] = {$/;"	v	typeref:struct:tsc210x_rate_info_s	file:
tsc2102_audio_output_update	.\tsc210x.c	/^static void tsc2102_audio_output_update(struct tsc210x_state_s *s)$/;"	f	file:
tsc2102_audio_rate_update	.\tsc210x.c	/^static void tsc2102_audio_rate_update(struct tsc210x_state_s *s)$/;"	f	file:
tsc2102_audio_register_read	.\tsc210x.c	/^static uint16_t tsc2102_audio_register_read(struct tsc210x_state_s *s, int reg)$/;"	f	file:
tsc2102_audio_register_write	.\tsc210x.c	/^static void tsc2102_audio_register_write($/;"	f	file:
tsc2102_control_register_read	.\tsc210x.c	/^static uint16_t tsc2102_control_register_read($/;"	f	file:
tsc2102_control_register_write	.\tsc210x.c	/^static void tsc2102_control_register_write($/;"	f	file:
tsc2102_data_register_read	.\tsc210x.c	/^static uint16_t tsc2102_data_register_read(struct tsc210x_state_s *s, int reg)$/;"	f	file:
tsc2102_data_register_write	.\tsc210x.c	/^static void tsc2102_data_register_write($/;"	f	file:
tsc2102_iid	.\tsc210x.c	/^static int tsc2102_iid = 0;$/;"	v	file:
tsc2102_init	.\tsc210x.c	/^struct uwire_slave_s *tsc2102_init(qemu_irq pint, AudioState *audio)$/;"	f
tsc2102_rates	.\tsc210x.c	/^static const struct tsc210x_rate_info_s tsc2102_rates[] = {$/;"	v	typeref:struct:tsc210x_rate_info_s	file:
tsc210x_audio_out_cb	.\tsc210x.c	/^static void tsc210x_audio_out_cb(struct tsc210x_state_s *s, int free_b)$/;"	f	file:
tsc210x_codec	.\tsc210x.c	/^struct i2s_codec_s *tsc210x_codec(struct uwire_slave_s *chip)$/;"	f
tsc210x_i2s_set_rate	.\tsc210x.c	/^static void tsc210x_i2s_set_rate(struct tsc210x_state_s *s, int in, int out)$/;"	f	file:
tsc210x_i2s_swallow	.\tsc210x.c	/^static void tsc210x_i2s_swallow(struct tsc210x_state_s *s)$/;"	f	file:
tsc210x_load	.\tsc210x.c	/^static int tsc210x_load(QEMUFile *f, void *opaque, int version_id)$/;"	f	file:
tsc210x_out_flush	.\tsc210x.c	/^static inline void tsc210x_out_flush(struct tsc210x_state_s *s, int len)$/;"	f	file:
tsc210x_pin_update	.\tsc210x.c	/^static void tsc210x_pin_update(struct tsc210x_state_s *s)$/;"	f	file:
tsc210x_rate_info_s	.\tsc210x.c	/^struct tsc210x_rate_info_s {$/;"	s	file:
tsc210x_read	.\tsc210x.c	/^static uint16_t tsc210x_read(struct tsc210x_state_s *s)$/;"	f	file:
tsc210x_reset	.\tsc210x.c	/^static void tsc210x_reset(struct tsc210x_state_s *s)$/;"	f	file:
tsc210x_save	.\tsc210x.c	/^static void tsc210x_save(QEMUFile *f, void *opaque)$/;"	f	file:
tsc210x_state_s	.\tsc210x.c	/^struct tsc210x_state_s {$/;"	s	file:
tsc210x_timer_tick	.\tsc210x.c	/^static void tsc210x_timer_tick(void *opaque)$/;"	f	file:
tsc210x_touchscreen_event	.\tsc210x.c	/^static void tsc210x_touchscreen_event(void *opaque,$/;"	f	file:
tsc210x_write	.\tsc210x.c	/^static void tsc210x_write(struct tsc210x_state_s *s, uint16_t value)$/;"	f	file:
tsr	.\eepro100.c	/^    uint8_t tsr;$/;"	m	struct:__anon16	file:
tsr	.\ne2000.c	/^    uint8_t tsr;$/;"	m	struct:NE2000State	file:
tsrh	.\ppc405_uc.c	/^    uint32_t tsrh;$/;"	m	struct:ppc405_gpio_t	file:
tsrl	.\ppc405_uc.c	/^    uint32_t tsrl;$/;"	m	struct:ppc405_gpio_t	file:
tstr	.\sh_timer.c	/^    uint32_t tstr;$/;"	m	struct:__anon98	file:
tx	.\slavio_serial.c	/^    uint8_t rx, tx, wregs[SERIAL_REGS], rregs[SERIAL_REGS];$/;"	m	struct:ChannelState	file:
tx_alloc	.\smc91c111.c	/^    int tx_alloc;$/;"	m	struct:__anon103	file:
tx_buffer	.\mipsnet.c	/^    uint8_t tx_buffer[MAX_ETH_FRAME_SIZE];$/;"	m	struct:MIPSnetState	file:
tx_busy	.\pcnet.c	/^    int tx_busy;$/;"	m	struct:PCNetState_st	file:
tx_config_bits	.\rtl8139.c	/^enum tx_config_bits {$/;"	g	file:
tx_count	.\mipsnet.c	/^    uint32_t tx_count;$/;"	m	struct:MIPSnetState	file:
tx_deferred	.\eepro100.c	/^        tx_underruns, tx_lost_crs, tx_deferred, tx_single_collisions,$/;"	m	struct:__anon13	file:
tx_desc_addr	.\eepro100.c	/^    uint32_t tx_desc_addr;      \/* transmit buffer decsriptor array address. *\/$/;"	m	struct:__anon11	file:
tx_descriptor	.\mcf_fec.c	/^    uint32_t tx_descriptor;$/;"	m	struct:__anon30	file:
tx_dma	.\omap_mmc.c	/^    int tx_dma;$/;"	m	struct:omap_mmc_s	file:
tx_enabled	.\mcf_uart.c	/^    int tx_enabled;$/;"	m	struct:__anon33	file:
tx_fifo	.\pl022.c	/^    uint16_t tx_fifo[8];$/;"	m	struct:__anon53	file:
tx_fifo	.\pxa2xx_mmci.c	/^    uint8_t tx_fifo[64];$/;"	m	struct:pxa2xx_mmci_s	file:
tx_fifo	.\smc91c111.c	/^    int tx_fifo[NUM_PACKETS];$/;"	m	struct:__anon103	file:
tx_fifo	.\stellaris_enet.c	/^    uint8_t tx_fifo[2048];$/;"	m	struct:__anon115	file:
tx_fifo_done	.\smc91c111.c	/^    int tx_fifo_done[NUM_PACKETS];$/;"	m	struct:__anon103	file:
tx_fifo_done_len	.\smc91c111.c	/^    int tx_fifo_done_len;$/;"	m	struct:__anon103	file:
tx_fifo_head	.\pl022.c	/^    int tx_fifo_head;$/;"	m	struct:__anon53	file:
tx_fifo_len	.\pl022.c	/^    int tx_fifo_len;$/;"	m	struct:__anon53	file:
tx_fifo_len	.\smc91c111.c	/^    int tx_fifo_len;$/;"	m	struct:__anon103	file:
tx_fifo_len	.\stellaris_enet.c	/^    int tx_fifo_len;$/;"	m	struct:__anon115	file:
tx_frame_len	.\stellaris_enet.c	/^    int tx_frame_len;$/;"	m	struct:__anon115	file:
tx_good_frames	.\eepro100.c	/^    uint32_t tx_good_frames, tx_max_collisions, tx_late_collisions,$/;"	m	struct:__anon13	file:
tx_late_collisions	.\eepro100.c	/^    uint32_t tx_good_frames, tx_max_collisions, tx_late_collisions,$/;"	m	struct:__anon13	file:
tx_len	.\pxa.h	/^    int tx_len;$/;"	m	struct:pxa2xx_i2s_s
tx_len	.\pxa2xx_mmci.c	/^    int tx_len;$/;"	m	struct:pxa2xx_mmci_s	file:
tx_lost_crs	.\eepro100.c	/^        tx_underruns, tx_lost_crs, tx_deferred, tx_single_collisions,$/;"	m	struct:__anon13	file:
tx_max_collisions	.\eepro100.c	/^    uint32_t tx_good_frames, tx_max_collisions, tx_late_collisions,$/;"	m	struct:__anon13	file:
tx_multiple_collisions	.\eepro100.c	/^        tx_multiple_collisions, tx_total_collisions;$/;"	m	struct:__anon13	file:
tx_rate	.\omap.c	/^    int tx_rate;$/;"	m	struct:omap_mcbsp_s	file:
tx_rate	.\omap.h	/^    int tx_rate;$/;"	m	struct:i2s_codec_s
tx_req	.\omap.c	/^    int tx_req;$/;"	m	struct:omap_mcbsp_s	file:
tx_single_collisions	.\eepro100.c	/^        tx_underruns, tx_lost_crs, tx_deferred, tx_single_collisions,$/;"	m	struct:__anon13	file:
tx_start	.\omap.h	/^    qemu_irq tx_start;$/;"	m	struct:i2s_codec_s
tx_start	.\pxa2xx_mmci.c	/^    int tx_start;$/;"	m	struct:pxa2xx_mmci_s	file:
tx_swallow	.\omap.h	/^    void (*tx_swallow)(void *opaque);$/;"	m	struct:i2s_codec_s
tx_threshold	.\eepro100.c	/^    uint8_t tx_threshold;       \/* transmit threshold *\/$/;"	m	struct:__anon11	file:
tx_total_collisions	.\eepro100.c	/^        tx_multiple_collisions, tx_total_collisions;$/;"	m	struct:__anon13	file:
tx_underruns	.\eepro100.c	/^        tx_underruns, tx_lost_crs, tx_deferred, tx_single_collisions,$/;"	m	struct:__anon13	file:
tx_written	.\mipsnet.c	/^    uint32_t tx_written;$/;"	m	struct:MIPSnetState	file:
txbuf	.\omap.c	/^    uint16_t txbuf;$/;"	m	struct:omap_uwire_s	file:
txcarr	.\ppc405_uc.c	/^    uint32_t txcarr;$/;"	m	struct:ppc40x_mal_t	file:
txcasr	.\ppc405_uc.c	/^    uint32_t txcasr;$/;"	m	struct:ppc40x_mal_t	file:
txctpr	.\ppc405_uc.c	/^    uint32_t txctpr[4];$/;"	m	struct:ppc40x_mal_t	file:
txdeir	.\ppc405_uc.c	/^    uint32_t txdeir;$/;"	m	struct:ppc40x_mal_t	file:
txdrq	.\omap.c	/^    qemu_irq txdrq;$/;"	m	struct:omap_mcbsp_s	file:
txdrq	.\omap.c	/^    qemu_irq txdrq;$/;"	m	struct:omap_uwire_s	file:
txeobisr	.\ppc405_uc.c	/^    uint32_t txeobisr;$/;"	m	struct:ppc40x_mal_t	file:
txint	.\slavio_serial.c	/^    int rxint, txint, rxint_under_svc, txint_under_svc;$/;"	m	struct:ChannelState	file:
txint_under_svc	.\slavio_serial.c	/^    int rxint, txint, rxint_under_svc, txint_under_svc;$/;"	m	struct:ChannelState	file:
txirq	.\omap.c	/^    qemu_irq txirq;$/;"	m	struct:omap_mcbsp_s	file:
txirq	.\omap.c	/^    qemu_irq txirq;$/;"	m	struct:omap_uwire_s	file:
txlen	.\omap_i2c.c	/^    int txlen;$/;"	m	struct:omap_i2c_s	file:
type	.\firmware_abi.h	/^    uint8_t type;$/;"	m	struct:Sun_nvram
type	.\fmopl.h	/^	UINT8 type;			\/* chip type                         *\/$/;"	m	struct:fm_opl_f
type	.\ide.c	/^    int type; \/* see IDE_TYPE_xxx *\/$/;"	m	struct:PCIIDEState	file:
type	.\m48t59.c	/^    int type; \/\/ 2 = m48t02, 8 = m48t08, 59 = m48t59$/;"	m	struct:m48t59_t	file:
type	.\omap.c	/^    int type;$/;"	m	struct:omap_dma_channel_s	file:
type	.\openpic.c	/^    int type;$/;"	m	struct:IRQ_src_t	file:
type	.\pci.h	/^    uint8_t type;$/;"	m	struct:PCIIORegion
type	.\pl011.c	/^    enum pl011_type type;$/;"	m	struct:__anon52	typeref:enum:__anon52::pl011_type	file:
type	.\slavio_serial.c	/^    chn_type_t type;$/;"	m	struct:ChannelState	file:
type	.\usb-ohci.c	/^    enum ohci_type type;$/;"	m	struct:__anon123	typeref:enum:__anon123::ohci_type	file:
ua	.\lsi53c895a.c	/^    uint32_t ua;$/;"	m	struct:__anon25	file:
uart	.\mcf5206.c	/^    void *uart[2];$/;"	m	struct:__anon27	file:
uart	.\mips_malta.c	/^    SerialState *uart;$/;"	m	struct:__anon34	file:
uart	.\omap.h	/^    struct omap_uart_s *uart[3];$/;"	m	struct:omap_mpu_state_s	typeref:struct:omap_mpu_state_s::omap_uart_s
uart1_1510	.\omap1_clk.c	/^static struct clk uart1_1510 = {$/;"	v	typeref:struct:clk	file:
uart1_16xx	.\omap1_clk.c	/^static struct clk uart1_16xx = {$/;"	v	typeref:struct:clk	file:
uart2_ck	.\omap1_clk.c	/^static struct clk uart2_ck = {$/;"	v	typeref:struct:clk	file:
uart3_1510	.\omap1_clk.c	/^static struct clk uart3_1510 = {$/;"	v	typeref:struct:clk	file:
uart3_16xx	.\omap1_clk.c	/^static struct clk uart3_16xx = {$/;"	v	typeref:struct:clk	file:
ube16_to_cpu	.\ide.c	/^static inline int ube16_to_cpu(const uint8_t *buf)$/;"	f	file:
ube32_to_cpu	.\ide.c	/^static inline int ube32_to_cpu(const uint8_t *buf)$/;"	f	file:
ucr	.\ppc405_uc.c	/^    uint32_t ucr;$/;"	m	struct:ppc405ep_cpc_t	file:
udp_header	.\rtl8139.c	/^typedef struct udp_header$/;"	s	file:
udp_header	.\rtl8139.c	/^} udp_header;$/;"	t	typeref:struct:udp_header	file:
uh_dport	.\rtl8139.c	/^    uint16_t uh_dport; \/* destination port *\/$/;"	m	struct:udp_header	file:
uh_sport	.\rtl8139.c	/^    uint16_t uh_sport; \/* source port *\/$/;"	m	struct:udp_header	file:
uh_sum	.\rtl8139.c	/^    uint16_t uh_sum;   \/* udp checksum *\/$/;"	m	struct:udp_header	file:
uh_ulen	.\rtl8139.c	/^    uint16_t uh_ulen;  \/* udp length *\/$/;"	m	struct:udp_header	file:
uhci_async_complete_packet	.\usb-uhci.c	/^static void uhci_async_complete_packet(USBPacket * packet, void *opaque)$/;"	f	file:
uhci_attach	.\usb-uhci.c	/^static void uhci_attach(USBPort *port1, USBDevice *dev)$/;"	f	file:
uhci_broadcast_packet	.\usb-uhci.c	/^static int uhci_broadcast_packet(UHCIState *s, USBPacket *p)$/;"	f	file:
uhci_frame_timer	.\usb-uhci.c	/^static void uhci_frame_timer(void *opaque)$/;"	f	file:
uhci_handle_td	.\usb-uhci.c	/^static int uhci_handle_td(UHCIState *s, UHCI_TD *td, uint32_t *int_mask,$/;"	f	file:
uhci_ioport_readb	.\usb-uhci.c	/^static uint32_t uhci_ioport_readb(void *opaque, uint32_t addr)$/;"	f	file:
uhci_ioport_readl	.\usb-uhci.c	/^static uint32_t uhci_ioport_readl(void *opaque, uint32_t addr)$/;"	f	file:
uhci_ioport_readw	.\usb-uhci.c	/^static uint32_t uhci_ioport_readw(void *opaque, uint32_t addr)$/;"	f	file:
uhci_ioport_writeb	.\usb-uhci.c	/^static void uhci_ioport_writeb(void *opaque, uint32_t addr, uint32_t val)$/;"	f	file:
uhci_ioport_writel	.\usb-uhci.c	/^static void uhci_ioport_writel(void *opaque, uint32_t addr, uint32_t val)$/;"	f	file:
uhci_ioport_writew	.\usb-uhci.c	/^static void uhci_ioport_writew(void *opaque, uint32_t addr, uint32_t val)$/;"	f	file:
uhci_map	.\usb-uhci.c	/^static void uhci_map(PCIDevice *pci_dev, int region_num,$/;"	f	file:
uhci_reset	.\usb-uhci.c	/^static void uhci_reset(UHCIState *s)$/;"	f	file:
uhci_resume	.\usb-uhci.c	/^static void uhci_resume (void *opaque)$/;"	f	file:
uhci_update_irq	.\usb-uhci.c	/^static void uhci_update_irq(UHCIState *s)$/;"	f	file:
uiccr	.\ppc4xx_devs.c	/^    uint32_t uiccr;  \/* Critical register *\/$/;"	m	struct:ppcuic_t	file:
uicer	.\ppc4xx_devs.c	/^    uint32_t uicer;  \/* Enable register *\/$/;"	m	struct:ppcuic_t	file:
uicpr	.\ppc4xx_devs.c	/^    uint32_t uicpr;  \/* Polarity register *\/$/;"	m	struct:ppcuic_t	file:
uicsr	.\ppc4xx_devs.c	/^    uint32_t uicsr;  \/* Status register *\/$/;"	m	struct:ppcuic_t	file:
uictr	.\ppc4xx_devs.c	/^    uint32_t uictr;  \/* Triggering register *\/$/;"	m	struct:ppcuic_t	file:
uicvcr	.\ppc4xx_devs.c	/^    uint32_t uicvcr; \/* Vector configuration register *\/$/;"	m	struct:ppcuic_t	file:
uicvr	.\ppc4xx_devs.c	/^    uint32_t uicvr;$/;"	m	struct:ppcuic_t	file:
uivr	.\mcf5206.c	/^    uint8_t uivr[2];$/;"	m	struct:__anon27	file:
ulpd_gauge_start	.\omap.h	/^    int64_t ulpd_gauge_start;$/;"	m	struct:omap_mpu_state_s
ulpd_pm_base	.\omap.h	/^    target_phys_addr_t ulpd_pm_base;$/;"	m	struct:omap_mpu_state_s
ulpd_pm_regs	.\omap.h	/^    uint32_t ulpd_pm_regs[21];$/;"	m	struct:omap_mpu_state_s
unassigned_mmio_read	.\ppc4xx_devs.c	/^static CPUReadMemoryFunc *unassigned_mmio_read[3] = {$/;"	v	file:
unassigned_mmio_readb	.\ppc4xx_devs.c	/^static uint32_t unassigned_mmio_readb (void *opaque, target_phys_addr_t addr)$/;"	f	file:
unassigned_mmio_write	.\ppc4xx_devs.c	/^static CPUWriteMemoryFunc *unassigned_mmio_write[3] = {$/;"	v	file:
unassigned_mmio_writeb	.\ppc4xx_devs.c	/^static void unassigned_mmio_writeb (void *opaque,$/;"	f	file:
unin_read	.\ppc_chrp.c	/^static CPUReadMemoryFunc *unin_read[] = {$/;"	v	file:
unin_readl	.\ppc_chrp.c	/^static uint32_t unin_readl (void *opaque, target_phys_addr_t addr)$/;"	f	file:
unin_write	.\ppc_chrp.c	/^static CPUWriteMemoryFunc *unin_write[] = {$/;"	v	file:
unin_writel	.\ppc_chrp.c	/^static void unin_writel (void *opaque, target_phys_addr_t addr, uint32_t value)$/;"	f	file:
unused	.\firmware_abi.h	/^    uint8_t unused[51];$/;"	m	struct:sparc_arch_cfg
unused	.\firmware_abi.h	/^    uint8_t unused[7];$/;"	m	struct:Sun_nvram
up	.\pxa2xx_lcd.c	/^        int up;$/;"	m	struct:pxa2xx_lcdc_s::__anon85	file:
upbase	.\pl110.c	/^    uint32_t upbase;$/;"	m	struct:__anon59	file:
update_arg	.\ps2.c	/^    void *update_arg;$/;"	m	struct:__anon78	file:
update_basic_params	.\vga.c	/^static int update_basic_params(VGAState *s)$/;"	f	file:
update_irq	.\ps2.c	/^    void (*update_irq)(void *, int);$/;"	m	struct:__anon78	file:
update_palette16	.\vga.c	/^static int update_palette16(VGAState *s)$/;"	f	file:
update_palette256	.\vga.c	/^static int update_palette256(VGAState *s)$/;"	f	file:
update_palette_entries	.\tcx.c	/^static void update_palette_entries(TCXState *s, int start, int end)$/;"	f	file:
update_pam	.\piix_pci.c	/^static void update_pam(PCIDevice *d, uint32_t start, uint32_t end, int r)$/;"	f	file:
usb_attach	.\usb.c	/^void usb_attach(USBPort *port, USBDevice *dev)$/;"	f
usb_attachfn	.\usb.h	/^typedef void (*usb_attachfn)(USBPort *port, USBDevice *dev);$/;"	t
usb_bit_time	.\usb-ohci.c	/^static int64_t usb_bit_time;$/;"	v	file:
usb_buf	.\usb-msd.c	/^    uint8_t *usb_buf;$/;"	m	struct:__anon122	file:
usb_buf	.\usb-ohci.c	/^    uint8_t usb_buf[8192];$/;"	m	struct:__anon123	file:
usb_buf	.\usb-uhci.c	/^    uint8_t usb_buf[2048];$/;"	m	struct:UHCIState	file:
usb_cancel_packet	.\usb.h	/^static inline void usb_cancel_packet(USBPacket * p)$/;"	f
usb_clk0	.\omap1_clk.c	/^static struct clk usb_clk0 = {	\/* 6 MHz output on W4_USB_CLK0 *\/$/;"	v	typeref:struct:clk	file:
usb_defer_packet	.\usb.h	/^static inline void usb_defer_packet(USBPacket *p, USBCallback *cancel,$/;"	f
usb_frame_time	.\usb-ohci.c	/^static int64_t usb_frame_time;$/;"	v	file:
usb_generic_handle_packet	.\usb.c	/^int usb_generic_handle_packet(USBDevice *s, USBPacket *p)$/;"	f
usb_hhc_ck1510	.\omap1_clk.c	/^static struct clk usb_hhc_ck1510 = {$/;"	v	typeref:struct:clk	file:
usb_hhc_ck16xx	.\omap1_clk.c	/^static struct clk usb_hhc_ck16xx = {$/;"	v	typeref:struct:clk	file:
usb_hid_handle_control	.\usb-hid.c	/^static int usb_hid_handle_control(USBDevice *dev, int request, int value,$/;"	f	file:
usb_hid_handle_data	.\usb-hid.c	/^static int usb_hid_handle_data(USBDevice *dev, USBPacket *p)$/;"	f	file:
usb_hid_handle_destroy	.\usb-hid.c	/^static void usb_hid_handle_destroy(USBDevice *dev)$/;"	f	file:
usb_hid_usage_keys	.\usb-hid.c	/^static const uint8_t usb_hid_usage_keys[0x100] = {$/;"	v	file:
usb_hub_attach	.\usb-hub.c	/^static void usb_hub_attach(USBPort *port1, USBDevice *dev)$/;"	f	file:
usb_hub_broadcast_packet	.\usb-hub.c	/^static int usb_hub_broadcast_packet(USBHubState *s, USBPacket *p)$/;"	f	file:
usb_hub_handle_control	.\usb-hub.c	/^static int usb_hub_handle_control(USBDevice *dev, int request, int value,$/;"	f	file:
usb_hub_handle_data	.\usb-hub.c	/^static int usb_hub_handle_data(USBDevice *dev, USBPacket *p)$/;"	f	file:
usb_hub_handle_destroy	.\usb-hub.c	/^static void usb_hub_handle_destroy(USBDevice *dev)$/;"	f	file:
usb_hub_handle_packet	.\usb-hub.c	/^static int usb_hub_handle_packet(USBDevice *dev, USBPacket *p)$/;"	f	file:
usb_hub_handle_reset	.\usb-hub.c	/^static void usb_hub_handle_reset(USBDevice *dev)$/;"	f	file:
usb_hub_init	.\usb-hub.c	/^USBDevice *usb_hub_init(int nb_ports)$/;"	f
usb_keyboard_event	.\usb-hid.c	/^static void usb_keyboard_event(void *opaque, int keycode)$/;"	f	file:
usb_keyboard_handle_reset	.\usb-hid.c	/^static void usb_keyboard_handle_reset(USBDevice *dev)$/;"	f	file:
usb_keyboard_init	.\usb-hid.c	/^USBDevice *usb_keyboard_init(void)$/;"	f
usb_keyboard_poll	.\usb-hid.c	/^static int usb_keyboard_poll(USBKeyboardState *s, uint8_t *buf, int len)$/;"	f	file:
usb_keyboard_write	.\usb-hid.c	/^static int usb_keyboard_write(USBKeyboardState *s, uint8_t *buf, int len)$/;"	f	file:
usb_len	.\usb-msd.c	/^    uint32_t usb_len;$/;"	m	struct:__anon122	file:
usb_mouse_event	.\usb-hid.c	/^static void usb_mouse_event(void *opaque,$/;"	f	file:
usb_mouse_event	.\usb-wacom.c	/^static void usb_mouse_event(void *opaque,$/;"	f	file:
usb_mouse_handle_reset	.\usb-hid.c	/^static void usb_mouse_handle_reset(USBDevice *dev)$/;"	f	file:
usb_mouse_init	.\usb-hid.c	/^USBDevice *usb_mouse_init(void)$/;"	f
usb_mouse_poll	.\usb-hid.c	/^static int usb_mouse_poll(USBHIDState *hs, uint8_t *buf, int len)$/;"	f	file:
usb_mouse_poll	.\usb-wacom.c	/^static int usb_mouse_poll(USBWacomState *s, uint8_t *buf, int len)$/;"	f	file:
usb_msd_cancel_io	.\usb-msd.c	/^static void usb_msd_cancel_io(USBPacket *p, void *opaque)$/;"	f	file:
usb_msd_cbw	.\usb-msd.c	/^struct usb_msd_cbw {$/;"	s	file:
usb_msd_command_complete	.\usb-msd.c	/^static void usb_msd_command_complete(void *opaque, int reason, uint32_t tag,$/;"	f	file:
usb_msd_copy_data	.\usb-msd.c	/^static void usb_msd_copy_data(MSDState *s)$/;"	f	file:
usb_msd_csw	.\usb-msd.c	/^struct usb_msd_csw {$/;"	s	file:
usb_msd_handle_control	.\usb-msd.c	/^static int usb_msd_handle_control(USBDevice *dev, int request, int value,$/;"	f	file:
usb_msd_handle_data	.\usb-msd.c	/^static int usb_msd_handle_data(USBDevice *dev, USBPacket *p)$/;"	f	file:
usb_msd_handle_destroy	.\usb-msd.c	/^static void usb_msd_handle_destroy(USBDevice *dev)$/;"	f	file:
usb_msd_handle_reset	.\usb-msd.c	/^static void usb_msd_handle_reset(USBDevice *dev)$/;"	f	file:
usb_msd_init	.\usb-msd.c	/^USBDevice *usb_msd_init(const char *filename)$/;"	f
usb_msd_send_status	.\usb-msd.c	/^static void usb_msd_send_status(MSDState *s)$/;"	f	file:
usb_ohci_init	.\usb-ohci.c	/^static void usb_ohci_init(OHCIState *ohci, int num_ports, int devfn,$/;"	f	file:
usb_ohci_init_pci	.\usb-ohci.c	/^void usb_ohci_init_pci(struct PCIBus *bus, int num_ports, int devfn)$/;"	f
usb_ohci_init_pxa	.\usb-ohci.c	/^void usb_ohci_init_pxa(target_phys_addr_t base, int num_ports, int devfn,$/;"	f
usb_packet	.\usb-ohci.c	/^    USBPacket usb_packet;$/;"	m	struct:__anon123	file:
usb_packet	.\usb-uhci.c	/^    USBPacket usb_packet;$/;"	m	struct:UHCIState	file:
usb_packet_complete	.\usb.h	/^static inline void usb_packet_complete(USBPacket *p)$/;"	f
usb_send_msg	.\usb.c	/^void usb_send_msg(USBDevice *dev, int msg)$/;"	f
usb_tablet_event	.\usb-hid.c	/^static void usb_tablet_event(void *opaque,$/;"	f	file:
usb_tablet_init	.\usb-hid.c	/^USBDevice *usb_tablet_init(void)$/;"	f
usb_tablet_poll	.\usb-hid.c	/^static int usb_tablet_poll(USBHIDState *hs, uint8_t *buf, int len)$/;"	f	file:
usb_uhci_piix3_init	.\usb-uhci.c	/^void usb_uhci_piix3_init(PCIBus *bus, int devfn)$/;"	f
usb_uhci_piix4_init	.\usb-uhci.c	/^void usb_uhci_piix4_init(PCIBus *bus, int devfn)$/;"	f
usb_w2fc_mclk	.\omap1_clk.c	/^static struct clk usb_w2fc_mclk = {$/;"	v	typeref:struct:clk	file:
usb_wacom_event	.\usb-wacom.c	/^static void usb_wacom_event(void *opaque,$/;"	f	file:
usb_wacom_handle_control	.\usb-wacom.c	/^static int usb_wacom_handle_control(USBDevice *dev, int request, int value,$/;"	f	file:
usb_wacom_handle_data	.\usb-wacom.c	/^static int usb_wacom_handle_data(USBDevice *dev, USBPacket *p)$/;"	f	file:
usb_wacom_handle_destroy	.\usb-wacom.c	/^static void usb_wacom_handle_destroy(USBDevice *dev)$/;"	f	file:
usb_wacom_handle_reset	.\usb-wacom.c	/^static void usb_wacom_handle_reset(USBDevice *dev)$/;"	f	file:
usb_wacom_init	.\usb-wacom.c	/^USBDevice *usb_wacom_init(void)$/;"	f
usb_wacom_poll	.\usb-wacom.c	/^static int usb_wacom_poll(USBWacomState *s, uint8_t *buf, int len)$/;"	f	file:
use_hdma	.\sb16.c	/^    int use_hdma;$/;"	m	struct:SB16State	file:
use_vectors	.\ppc4xx_devs.c	/^    int use_vectors;$/;"	m	struct:ppcuic_t	file:
usecount	.\omap1_clk.c	/^    int usecount;		\/* Automatically idle when unused *\/$/;"	m	struct:clk	file:
user0	.\stellaris.c	/^    uint32_t user0;$/;"	m	struct:__anon110	file:
user1	.\stellaris.c	/^    uint32_t user1;$/;"	m	struct:__anon110	file:
users	.\omap1_clk.c	/^    qemu_irq users[16];		\/* Who to notify on change *\/$/;"	m	struct:clk	file:
ustat	.\stellaris.c	/^    uint32_t ustat;$/;"	m	struct:__anon112	file:
uuid	.\spitz.c	/^    char uuid[16];$/;"	m	struct:sl_param_info	file:
uuid_keyword	.\spitz.c	/^    uint32_t uuid_keyword;$/;"	m	struct:sl_param_info	file:
uwire_slave_s	.\omap.h	/^struct uwire_slave_s {$/;"	s
v2x6	.\sb16.c	/^    int v2x6;$/;"	m	struct:SB16State	file:
vab_init	.\versatilepb.c	/^static void vab_init(int ram_size, int vga_ram_size,$/;"	f	file:
val	.\omap.c	/^    uint32_t val;$/;"	m	struct:omap_mpu_timer_s	file:
valid	.\firmware_abi.h	/^    uint8_t valid;$/;"	m	struct:sparc_arch_cfg
value	.\pxa2xx_timer.c	/^    uint32_t value;$/;"	m	struct:pxa2xx_timer0_s	file:
value	.\sh_intc.h	/^    unsigned long value;$/;"	m	struct:intc_mask_reg
value	.\sh_intc.h	/^    unsigned long value;$/;"	m	struct:intc_prio_reg
vbe_ioport_read_data	.\vga.c	/^static uint32_t vbe_ioport_read_data(void *opaque, uint32_t addr)$/;"	f	file:
vbe_ioport_read_index	.\vga.c	/^static uint32_t vbe_ioport_read_index(void *opaque, uint32_t addr)$/;"	f	file:
vbe_ioport_write_data	.\vga.c	/^static void vbe_ioport_write_data(void *opaque, uint32_t addr, uint32_t val)$/;"	f	file:
vbe_ioport_write_index	.\vga.c	/^static void vbe_ioport_write_index(void *opaque, uint32_t addr, uint32_t val)$/;"	f	file:
vc	.\eepro100.c	/^    VLANClientState *vc;$/;"	m	struct:__anon16	file:
vc	.\mcf_fec.c	/^    VLANClientState *vc;$/;"	m	struct:__anon30	file:
vc	.\mipsnet.c	/^    VLANClientState *vc;$/;"	m	struct:MIPSnetState	file:
vc	.\ne2000.c	/^    VLANClientState *vc;$/;"	m	struct:NE2000State	file:
vc	.\pcnet.c	/^    VLANClientState *vc;$/;"	m	struct:PCNetState_st	file:
vc	.\rtl8139.c	/^    VLANClientState *vc;$/;"	m	struct:RTL8139State	file:
vc	.\smc91c111.c	/^    VLANClientState *vc;$/;"	m	struct:__anon103	file:
vc	.\stellaris_enet.c	/^    VLANClientState *vc;$/;"	m	struct:__anon115	file:
vect	.\sh_intc.h	/^    unsigned short vect;$/;"	m	struct:intc_source
vect	.\sh_intc.h	/^    unsigned short vect;$/;"	m	struct:intc_vect
vect_addr	.\pl190.c	/^    uint32_t vect_addr[PL190_NUM_PRIO];$/;"	m	struct:__anon61	file:
vect_control	.\pl190.c	/^    uint8_t vect_control[16];$/;"	m	struct:__anon61	file:
vectors	.\sh7750.c	/^static struct intc_vect vectors[] = {$/;"	v	typeref:struct:intc_vect	file:
vectors_dma4	.\sh7750.c	/^static struct intc_vect vectors_dma4[] = {$/;"	v	typeref:struct:intc_vect	file:
vectors_dma8	.\sh7750.c	/^static struct intc_vect vectors_dma8[] = {$/;"	v	typeref:struct:intc_vect	file:
vectors_irlm	.\sh7750.c	/^static struct intc_vect vectors_irlm[] = {$/;"	v	typeref:struct:intc_vect	file:
vectors_pci	.\sh7750.c	/^static struct intc_vect vectors_pci[] = {$/;"	v	typeref:struct:intc_vect	file:
vectors_tmu34	.\sh7750.c	/^static struct intc_vect vectors_tmu34[] = {$/;"	v	typeref:struct:intc_vect	file:
veni	.\openpic.c	/^    uint32_t veni; \/* Vendor identification register *\/$/;"	m	struct:openpic_t	file:
ver	.\sb16.c	/^    int ver;$/;"	m	struct:SB16State	file:
ver_hi	.\sb16.c	/^    int ver_hi;$/;"	m	struct:__anon88	file:
ver_lo	.\sb16.c	/^    int ver_lo;$/;"	m	struct:__anon88	file:
verdex_init	.\gumstix.c	/^static void verdex_init(int ram_size, int vga_ram_size,$/;"	f	file:
verdex_machine	.\gumstix.c	/^QEMUMachine verdex_machine = {$/;"	v
versatile	.\pl110.c	/^    int versatile;$/;"	m	struct:__anon59	file:
versatile_init	.\versatilepb.c	/^static void versatile_init(int ram_size, int vga_ram_size,$/;"	f	file:
versatileab_machine	.\versatilepb.c	/^QEMUMachine versatileab_machine = {$/;"	v
versatilepb_machine	.\versatilepb.c	/^QEMUMachine versatilepb_machine = {$/;"	v
version	.\fdc.c	/^    uint8_t version;$/;"	m	struct:fdctrl_t	file:
version	.\iommu.c	/^    uint32_t version;$/;"	m	struct:IOMMUState	file:
vga_common_init	.\vga.c	/^void vga_common_init(VGAState *s, DisplayState *ds, uint8_t *vga_ram_base,$/;"	f
vga_draw_blank	.\vga.c	/^static void vga_draw_blank(VGAState *s, int full_update)$/;"	f	file:
vga_draw_glyph16_table	.\vga.c	/^static vga_draw_glyph8_func *vga_draw_glyph16_table[NB_DEPTHS] = {$/;"	v	file:
vga_draw_glyph8_func	.\vga.c	/^typedef void vga_draw_glyph8_func(uint8_t *d, int linesize,$/;"	t	file:
vga_draw_glyph8_table	.\vga.c	/^static vga_draw_glyph8_func *vga_draw_glyph8_table[NB_DEPTHS] = {$/;"	v	file:
vga_draw_glyph9_func	.\vga.c	/^typedef void vga_draw_glyph9_func(uint8_t *d, int linesize,$/;"	t	file:
vga_draw_glyph9_table	.\vga.c	/^static vga_draw_glyph9_func *vga_draw_glyph9_table[NB_DEPTHS] = {$/;"	v	file:
vga_draw_graphic	.\vga.c	/^static void vga_draw_graphic(VGAState *s, int full_update)$/;"	f	file:
vga_draw_line_func	.\vga.c	/^typedef void vga_draw_line_func(VGAState *s1, uint8_t *d,$/;"	t	file:
vga_draw_line_table	.\vga.c	/^static vga_draw_line_func *vga_draw_line_table[NB_DEPTHS * VGA_DRAW_LINE_NB] = {$/;"	v	file:
vga_draw_text	.\vga.c	/^static void vga_draw_text(VGAState *s, int full_update)$/;"	f	file:
vga_get_bpp	.\vga.c	/^static int vga_get_bpp(VGAState *s)$/;"	f	file:
vga_get_offsets	.\vga.c	/^static void vga_get_offsets(VGAState *s,$/;"	f	file:
vga_get_resolution	.\vga.c	/^static void vga_get_resolution(VGAState *s, int *pwidth, int *pheight)$/;"	f	file:
vga_init	.\vga.c	/^void vga_init(VGAState *s)$/;"	f
vga_invalidate_display	.\shix.c	/^void vga_invalidate_display()$/;"	f
vga_invalidate_display	.\vga.c	/^static void vga_invalidate_display(void *opaque)$/;"	f	file:
vga_invalidate_scanlines	.\vga.c	/^void vga_invalidate_scanlines(VGAState *s, int y1, int y2)$/;"	f
vga_ioport_read	.\cirrus_vga.c	/^static uint32_t vga_ioport_read(void *opaque, uint32_t addr)$/;"	f	file:
vga_ioport_read	.\vga.c	/^static uint32_t vga_ioport_read(void *opaque, uint32_t addr)$/;"	f	file:
vga_ioport_write	.\cirrus_vga.c	/^static void vga_ioport_write(void *opaque, uint32_t addr, uint32_t val)$/;"	f	file:
vga_ioport_write	.\vga.c	/^static void vga_ioport_write(void *opaque, uint32_t addr, uint32_t val)$/;"	f	file:
vga_load	.\vga.c	/^static int vga_load(QEMUFile *f, void *opaque, int version_id)$/;"	f	file:
vga_map	.\vga.c	/^static void vga_map(PCIDevice *pci_dev, int region_num,$/;"	f	file:
vga_mem_read	.\vga.c	/^static CPUReadMemoryFunc *vga_mem_read[3] = {$/;"	v	file:
vga_mem_readb	.\vga.c	/^uint32_t vga_mem_readb(void *opaque, target_phys_addr_t addr)$/;"	f
vga_mem_readl	.\vga.c	/^static uint32_t vga_mem_readl(void *opaque, target_phys_addr_t addr)$/;"	f	file:
vga_mem_readw	.\vga.c	/^static uint32_t vga_mem_readw(void *opaque, target_phys_addr_t addr)$/;"	f	file:
vga_mem_write	.\vga.c	/^static CPUWriteMemoryFunc *vga_mem_write[3] = {$/;"	v	file:
vga_mem_writeb	.\vga.c	/^void vga_mem_writeb(void *opaque, target_phys_addr_t addr, uint32_t val)$/;"	f
vga_mem_writel	.\vga.c	/^static void vga_mem_writel(void *opaque, target_phys_addr_t addr, uint32_t val)$/;"	f	file:
vga_mem_writew	.\vga.c	/^static void vga_mem_writew(void *opaque, target_phys_addr_t addr, uint32_t val)$/;"	f	file:
vga_mm_init	.\vga.c	/^static void vga_mm_init(VGAState *s, target_phys_addr_t vram_base,$/;"	f	file:
vga_mm_read_ctrl	.\vga.c	/^static CPUReadMemoryFunc *vga_mm_read_ctrl[] = {$/;"	v	file:
vga_mm_readb	.\vga.c	/^static uint32_t vga_mm_readb (void *opaque, target_phys_addr_t addr)$/;"	f	file:
vga_mm_readl	.\vga.c	/^static uint32_t vga_mm_readl (void *opaque, target_phys_addr_t addr)$/;"	f	file:
vga_mm_readw	.\vga.c	/^static uint32_t vga_mm_readw (void *opaque, target_phys_addr_t addr)$/;"	f	file:
vga_mm_write_ctrl	.\vga.c	/^static CPUWriteMemoryFunc *vga_mm_write_ctrl[] = {$/;"	v	file:
vga_mm_writeb	.\vga.c	/^static void vga_mm_writeb (void *opaque,$/;"	f	file:
vga_mm_writel	.\vga.c	/^static void vga_mm_writel (void *opaque,$/;"	f	file:
vga_mm_writew	.\vga.c	/^static void vga_mm_writew (void *opaque,$/;"	f	file:
vga_osi_call	.\ppc_oldworld.c	/^static int vga_osi_call (CPUState *env)$/;"	f	file:
vga_reset	.\vga.c	/^static void vga_reset(VGAState *s)$/;"	f	file:
vga_save	.\vga.c	/^static void vga_save(QEMUFile *f, void *opaque)$/;"	f	file:
vga_save_dpy_refresh	.\vga.c	/^static void vga_save_dpy_refresh(DisplayState *s)$/;"	f	file:
vga_save_dpy_resize	.\vga.c	/^static void vga_save_dpy_resize(DisplayState *s, int w, int h)$/;"	f	file:
vga_save_dpy_update	.\vga.c	/^static void vga_save_dpy_update(DisplayState *s,$/;"	f	file:
vga_save_h	.\vga.c	/^static int vga_save_w, vga_save_h;$/;"	v	file:
vga_save_w	.\vga.c	/^static int vga_save_w, vga_save_h;$/;"	v	file:
vga_screen_dump	.\shix.c	/^void vga_screen_dump(const char *filename)$/;"	f
vga_screen_dump	.\vga.c	/^static void vga_screen_dump(void *opaque, const char *filename)$/;"	f	file:
vga_state	.\vga.c	/^    VGAState vga_state;$/;"	m	struct:PCIVGAState	file:
vga_update_display	.\shix.c	/^void vga_update_display()$/;"	f
vga_update_display	.\vga.c	/^static void vga_update_display(void *opaque)$/;"	f	file:
vhs	.\sd.c	/^    uint32_t vhs;$/;"	m	struct:SDState	file:
vib	.\fmopl.c	/^static INT32 vib;$/;"	v	file:
vib	.\fmopl.h	/^	UINT8 vib;		\/* vibrate flag                        *\/$/;"	m	struct:fm_opl_slot
vibCnt	.\fmopl.h	/^	INT32 vibCnt;$/;"	m	struct:fm_opl_f
vibIncr	.\fmopl.c	/^static INT32 vibIncr;$/;"	v	file:
vibIncr	.\fmopl.h	/^	INT32 vibIncr;$/;"	m	struct:fm_opl_f
vib_table	.\fmopl.c	/^INT32  *vib_table;$/;"	v
vib_table	.\fmopl.h	/^	INT32 *vib_table;$/;"	m	struct:fm_opl_f
vmmouse_data	.\vmmouse.c	/^static void vmmouse_data(VMMouseState *s, uint32_t *data, uint32_t size)$/;"	f	file:
vmmouse_disable	.\vmmouse.c	/^static void vmmouse_disable(VMMouseState *s)$/;"	f	file:
vmmouse_get_data	.\vmmouse.c	/^static void vmmouse_get_data(uint32_t *data)$/;"	f	file:
vmmouse_get_status	.\vmmouse.c	/^static uint32_t vmmouse_get_status(VMMouseState *s)$/;"	f	file:
vmmouse_init	.\vmmouse.c	/^void *vmmouse_init(void *m)$/;"	f
vmmouse_ioport_read	.\vmmouse.c	/^static uint32_t vmmouse_ioport_read(void *opaque, uint32_t addr)$/;"	f	file:
vmmouse_load	.\vmmouse.c	/^static int vmmouse_load(QEMUFile *f, void *opaque, int version_id)$/;"	f	file:
vmmouse_mouse_event	.\vmmouse.c	/^static void vmmouse_mouse_event(void *opaque, int x, int y, int dz, int buttons_state)$/;"	f	file:
vmmouse_read_id	.\vmmouse.c	/^static void vmmouse_read_id(VMMouseState *s)$/;"	f	file:
vmmouse_request_absolute	.\vmmouse.c	/^static void vmmouse_request_absolute(VMMouseState *s)$/;"	f	file:
vmmouse_request_relative	.\vmmouse.c	/^static void vmmouse_request_relative(VMMouseState *s)$/;"	f	file:
vmmouse_save	.\vmmouse.c	/^static void vmmouse_save(QEMUFile *f, void *opaque)$/;"	f	file:
vmmouse_set_data	.\vmmouse.c	/^static void vmmouse_set_data(const uint32_t *data)$/;"	f	file:
vmmouse_update_handler	.\vmmouse.c	/^static void vmmouse_update_handler(VMMouseState *s)$/;"	f	file:
vmport_cmd_get_version	.\vmport.c	/^static uint32_t vmport_cmd_get_version(void *opaque, uint32_t addr)$/;"	f	file:
vmport_cmd_ram_size	.\vmport.c	/^static uint32_t vmport_cmd_ram_size(void *opaque, uint32_t addr)$/;"	f	file:
vmport_init	.\vmport.c	/^void vmport_init(CPUState *env)$/;"	f
vmport_ioport_read	.\vmport.c	/^static uint32_t vmport_ioport_read(void *opaque, uint32_t addr)$/;"	f	file:
vmport_register	.\vmport.c	/^void vmport_register(unsigned char command, IOPortReadFunc *func, void *opaque)$/;"	f
vmsvga_bios_read	.\vmware_vga.c	/^static uint32_t vmsvga_bios_read(void *opaque, uint32_t address)$/;"	f	file:
vmsvga_bios_write	.\vmware_vga.c	/^static void vmsvga_bios_write(void *opaque, uint32_t address, uint32_t data)$/;"	f	file:
vmsvga_copy_rect	.\vmware_vga.c	/^static inline void vmsvga_copy_rect(struct vmsvga_state_s *s,$/;"	f	file:
vmsvga_cursor_define	.\vmware_vga.c	/^static inline void vmsvga_cursor_define(struct vmsvga_state_s *s,$/;"	f	file:
vmsvga_cursor_definition_s	.\vmware_vga.c	/^struct vmsvga_cursor_definition_s {$/;"	s	file:
vmsvga_fifo_empty	.\vmware_vga.c	/^static inline int vmsvga_fifo_empty(struct vmsvga_state_s *s)$/;"	f	file:
vmsvga_fifo_read	.\vmware_vga.c	/^static inline uint32_t vmsvga_fifo_read(struct vmsvga_state_s *s)$/;"	f	file:
vmsvga_fifo_run	.\vmware_vga.c	/^static void vmsvga_fifo_run(struct vmsvga_state_s *s)$/;"	f	file:
vmsvga_fill_rect	.\vmware_vga.c	/^static inline void vmsvga_fill_rect(struct vmsvga_state_s *s,$/;"	f	file:
vmsvga_guest_id	.\vmware_vga.c	/^static const char *vmsvga_guest_id[] = {$/;"	v	file:
vmsvga_index_read	.\vmware_vga.c	/^static uint32_t vmsvga_index_read(void *opaque, uint32_t address)$/;"	f	file:
vmsvga_index_write	.\vmware_vga.c	/^static void vmsvga_index_write(void *opaque, uint32_t address, uint32_t index)$/;"	f	file:
vmsvga_init	.\vmware_vga.c	/^static void vmsvga_init(struct vmsvga_state_s *s, DisplayState *ds,$/;"	f	file:
vmsvga_invalidate_display	.\vmware_vga.c	/^static void vmsvga_invalidate_display(void *opaque)$/;"	f	file:
vmsvga_load	.\vmware_vga.c	/^static int vmsvga_load(struct vmsvga_state_s *s, QEMUFile *f)$/;"	f	file:
vmsvga_rect_s	.\vmware_vga.c	/^    struct vmsvga_rect_s {$/;"	s	struct:vmsvga_state_s	file:
vmsvga_reset	.\vmware_vga.c	/^static void vmsvga_reset(struct vmsvga_state_s *s)$/;"	f	file:
vmsvga_save	.\vmware_vga.c	/^static void vmsvga_save(struct vmsvga_state_s *s, QEMUFile *f)$/;"	f	file:
vmsvga_screen_dump	.\vmware_vga.c	/^static void vmsvga_screen_dump(void *opaque, const char *filename)$/;"	f	file:
vmsvga_size	.\vmware_vga.c	/^static inline void vmsvga_size(struct vmsvga_state_s *s)$/;"	f	file:
vmsvga_state_s	.\vmware_vga.c	/^struct vmsvga_state_s {$/;"	s	file:
vmsvga_update_display	.\vmware_vga.c	/^static void vmsvga_update_display(void *opaque)$/;"	f	file:
vmsvga_update_rect	.\vmware_vga.c	/^static inline void vmsvga_update_rect(struct vmsvga_state_s *s,$/;"	f	file:
vmsvga_update_rect_delayed	.\vmware_vga.c	/^static inline void vmsvga_update_rect_delayed(struct vmsvga_state_s *s,$/;"	f	file:
vmsvga_update_rect_delayed	.\vmware_vga.c	317;"	d	file:
vmsvga_update_rect_flush	.\vmware_vga.c	/^static inline void vmsvga_update_rect_flush(struct vmsvga_state_s *s)$/;"	f	file:
vmsvga_update_screen	.\vmware_vga.c	/^static inline void vmsvga_update_screen(struct vmsvga_state_s *s)$/;"	f	file:
vmsvga_value_read	.\vmware_vga.c	/^static uint32_t vmsvga_value_read(void *opaque, uint32_t address)$/;"	f	file:
vmsvga_value_write	.\vmware_vga.c	/^static void vmsvga_value_write(void *opaque, uint32_t address, uint32_t value)$/;"	f	file:
vmsvga_vram_read	.\vmware_vga.c	/^static CPUReadMemoryFunc *vmsvga_vram_read[] = {$/;"	v	file:
vmsvga_vram_readb	.\vmware_vga.c	/^static uint32_t vmsvga_vram_readb(void *opaque, target_phys_addr_t addr)$/;"	f	file:
vmsvga_vram_readl	.\vmware_vga.c	/^static uint32_t vmsvga_vram_readl(void *opaque, target_phys_addr_t addr)$/;"	f	file:
vmsvga_vram_readw	.\vmware_vga.c	/^static uint32_t vmsvga_vram_readw(void *opaque, target_phys_addr_t addr)$/;"	f	file:
vmsvga_vram_write	.\vmware_vga.c	/^static CPUWriteMemoryFunc *vmsvga_vram_write[] = {$/;"	v	file:
vmsvga_vram_writeb	.\vmware_vga.c	/^static void vmsvga_vram_writeb(void *opaque, target_phys_addr_t addr,$/;"	f	file:
vmsvga_vram_writel	.\vmware_vga.c	/^static void vmsvga_vram_writel(void *opaque, target_phys_addr_t addr,$/;"	f	file:
vmsvga_vram_writew	.\vmware_vga.c	/^static void vmsvga_vram_writew(void *opaque, target_phys_addr_t addr,$/;"	f	file:
voice	.\adlib.c	/^    SWVoiceOut *voice;$/;"	m	struct:__anon2	file:
voice	.\pcspk.c	/^    SWVoiceOut *voice;$/;"	m	struct:__anon51	file:
voice	.\sb16.c	/^    SWVoiceOut *voice;$/;"	m	struct:SB16State	file:
voltage_ctrl	.\omap.h	/^    uint32_t voltage_ctrl[1];$/;"	m	struct:omap_mpu_state_s
volume	.\tsc210x.c	/^    uint16_t volume;$/;"	m	struct:tsc210x_state_s	file:
volume_change	.\tsc210x.c	/^    int64_t volume_change;$/;"	m	struct:tsc210x_state_s	file:
vpb_init	.\versatilepb.c	/^static void vpb_init(int ram_size, int vga_ram_size,$/;"	f	file:
vpb_pci_config_addr	.\versatile_pci.c	/^static inline uint32_t vpb_pci_config_addr(target_phys_addr_t addr)$/;"	f	file:
vpb_sic_init	.\versatilepb.c	/^static qemu_irq *vpb_sic_init(uint32_t base, qemu_irq *parent, int irq)$/;"	f	file:
vpb_sic_read	.\versatilepb.c	/^static uint32_t vpb_sic_read(void *opaque, target_phys_addr_t offset)$/;"	f	file:
vpb_sic_readfn	.\versatilepb.c	/^static CPUReadMemoryFunc *vpb_sic_readfn[] = {$/;"	v	file:
vpb_sic_set_irq	.\versatilepb.c	/^static void vpb_sic_set_irq(void *opaque, int irq, int level)$/;"	f	file:
vpb_sic_state	.\versatilepb.c	/^typedef struct vpb_sic_state$/;"	s	file:
vpb_sic_state	.\versatilepb.c	/^} vpb_sic_state;$/;"	t	typeref:struct:vpb_sic_state	file:
vpb_sic_update	.\versatilepb.c	/^static void vpb_sic_update(vpb_sic_state *s)$/;"	f	file:
vpb_sic_update_pic	.\versatilepb.c	/^static void vpb_sic_update_pic(vpb_sic_state *s)$/;"	f	file:
vpb_sic_write	.\versatilepb.c	/^static void vpb_sic_write(void *opaque, target_phys_addr_t offset,$/;"	f	file:
vpb_sic_writefn	.\versatilepb.c	/^static CPUWriteMemoryFunc *vpb_sic_writefn[] = {$/;"	v	file:
vram	.\tcx.c	/^    uint8_t *vram;$/;"	m	struct:TCXState	file:
vram	.\vmware_vga.c	/^    uint8_t *vram;$/;"	m	struct:vmsvga_state_s	file:
vram24	.\tcx.c	/^    uint32_t *vram24, *cplane;$/;"	m	struct:TCXState	file:
vram24_offset	.\tcx.c	/^    ram_addr_t vram_offset, vram24_offset, cplane_offset;$/;"	m	struct:TCXState	file:
vram_offset	.\tcx.c	/^    ram_addr_t vram_offset, vram24_offset, cplane_offset;$/;"	m	struct:TCXState	file:
vram_size	.\sun4m.c	/^    long vram_size, nvram_size;$/;"	m	struct:hwdef	file:
vram_size	.\sun4m.c	/^    unsigned long vram_size, nvram_size;$/;"	m	struct:sun4d_hwdef	file:
vram_size	.\vmware_vga.c	/^    int vram_size;$/;"	m	struct:vmsvga_state_s	file:
vrc	.\omap.h	/^        uint8_t vrc;$/;"	m	struct:omap_mpu_state_s::__anon39
vsync_cb	.\pxa2xx_lcd.c	/^    qemu_irq vsync_cb;$/;"	m	struct:pxa2xx_lcdc_s	file:
w	.\vmware_vga.c	/^        int x, y, w, h;$/;"	m	struct:vmsvga_state_s::vmsvga_rect_s	file:
wPortChange	.\usb-hub.c	/^    uint16_t wPortChange;$/;"	m	struct:USBHubPort	file:
wPortStatus	.\usb-hub.c	/^    uint16_t wPortStatus;$/;"	m	struct:USBHubPort	file:
waiting	.\lsi53c895a.c	/^    int waiting;$/;"	m	struct:__anon25	file:
waiting_end_prog	.\omap.c	/^    int waiting_end_prog;$/;"	m	struct:omap_dma_channel_s	file:
wakeup	.\omap.c	/^    qemu_irq wakeup;$/;"	m	struct:omap_mpuio_s	file:
wakeup	.\omap.h	/^    qemu_irq wakeup;$/;"	m	struct:omap_mpu_state_s
watchdog_cb	.\m48t59.c	/^static void watchdog_cb (void *opaque)$/;"	f	file:
wavesel	.\fmopl.h	/^	UINT8 wavesel;$/;"	m	struct:fm_opl_f
wavetable	.\fmopl.h	/^	INT32 **wavetable;$/;"	m	struct:fm_opl_slot
wblue	.\vmware_vga.c	/^    uint32_t wblue;$/;"	m	struct:vmsvga_state_s	file:
wcycle	.\pflash_cfi01.c	/^    int wcycle; \/* if 0, the flash is read normally *\/$/;"	m	struct:pflash_t	file:
wcycle	.\pflash_cfi02.c	/^    int wcycle; \/* if 0, the flash is read normally *\/$/;"	m	struct:pflash_t	file:
wd_timer	.\m48t59.c	/^    struct QEMUTimer *wd_timer;$/;"	m	struct:m48t59_t	typeref:struct:m48t59_t::QEMUTimer	file:
wdt	.\omap.h	/^    struct omap_watchdog_timer_s *wdt;$/;"	m	struct:omap_mpu_state_s	typeref:struct:omap_mpu_state_s::omap_watchdog_timer_s
wdt_next	.\ppc.c	/^    uint64_t wdt_next;    \/* Tick for next WDT interrupt  *\/$/;"	m	struct:ppcemb_timer_t	file:
wdt_timer	.\ppc.c	/^    struct QEMUTimer *wdt_timer;$/;"	m	struct:ppcemb_timer_t	typeref:struct:ppcemb_timer_t::QEMUTimer	file:
wgreen	.\vmware_vga.c	/^    uint32_t wgreen;$/;"	m	struct:vmsvga_state_s	file:
width	.\firmware_abi.h	/^    uint16_t width;$/;"	m	struct:ohwcfg_v3_t
width	.\nand.c	/^    int width;$/;"	m	struct:nand_info_s	file:
width	.\omap_lcdc.c	/^    int width;$/;"	m	struct:omap_lcd_panel_s	file:
width	.\pflash_cfi01.c	/^    int width;$/;"	m	struct:pflash_t	file:
width	.\pflash_cfi02.c	/^    int width;$/;"	m	struct:pflash_t	file:
width	.\tcx.c	/^    uint16_t width, height, depth;$/;"	m	struct:TCXState	file:
width	.\vmware_vga.c	/^    int width;$/;"	m	struct:vmsvga_cursor_definition_s	file:
width	.\vmware_vga.c	/^    int width;$/;"	m	struct:vmsvga_state_s	file:
width_intr	.\omap.c	/^    int width_intr;$/;"	m	struct:omap_tipb_bridge_s	file:
wm8750_adc_dat	.\wm8750.c	/^uint32_t wm8750_adc_dat(void *opaque)$/;"	f
wm8750_audio_in_cb	.\wm8750.c	/^static void wm8750_audio_in_cb(void *opaque, int avail_b)$/;"	f	file:
wm8750_audio_out_cb	.\wm8750.c	/^static void wm8750_audio_out_cb(void *opaque, int free_b)$/;"	f	file:
wm8750_dac_dat	.\wm8750.c	/^void wm8750_dac_dat(void *opaque, uint32_t sample)$/;"	f
wm8750_data_req_set	.\wm8750.c	/^void wm8750_data_req_set(i2c_slave *i2c,$/;"	f
wm8750_event	.\wm8750.c	/^static void wm8750_event(i2c_slave *i2c, enum i2c_event event)$/;"	f	file:
wm8750_fini	.\wm8750.c	/^static void wm8750_fini(i2c_slave *i2c)$/;"	f	file:
wm8750_iid	.\wm8750.c	/^static int wm8750_iid = 0;$/;"	v	file:
wm8750_in_load	.\wm8750.c	/^static inline void wm8750_in_load(struct wm8750_s *s)$/;"	f	file:
wm8750_init	.\wm8750.c	/^i2c_slave *wm8750_init(i2c_bus *bus, AudioState *audio)$/;"	f
wm8750_load	.\wm8750.c	/^static int wm8750_load(QEMUFile *f, void *opaque, int version_id)$/;"	f	file:
wm8750_mask_update	.\wm8750.c	/^static void inline wm8750_mask_update(struct wm8750_s *s)$/;"	f	file:
wm8750_out_flush	.\wm8750.c	/^static inline void wm8750_out_flush(struct wm8750_s *s)$/;"	f	file:
wm8750_reset	.\wm8750.c	/^void wm8750_reset(i2c_slave *i2c)$/;"	f
wm8750_rx	.\wm8750.c	/^static int wm8750_rx(i2c_slave *i2c)$/;"	f	file:
wm8750_s	.\wm8750.c	/^struct wm8750_s {$/;"	s	file:
wm8750_save	.\wm8750.c	/^static void wm8750_save(QEMUFile *f, void *opaque)$/;"	f	file:
wm8750_set_format	.\wm8750.c	/^static void wm8750_set_format(struct wm8750_s *s)$/;"	f	file:
wm8750_tx	.\wm8750.c	/^static int wm8750_tx(i2c_slave *i2c, uint8_t data)$/;"	f	file:
wm_rate_s	.\wm8750.c	/^struct wm_rate_s {$/;"	s	file:
wm_rate_table	.\wm8750.c	/^static const struct wm_rate_s wm_rate_table[] = {$/;"	v	typeref:struct:wm_rate_s	file:
wp	.\nand.c	/^    int cle, ale, ce, wp, gnd;$/;"	m	struct:nand_flash_s	file:
wp_groups	.\sd.c	/^    int *wp_groups;$/;"	m	struct:SDState	file:
wp_switch	.\sd.c	/^    int wp_switch;$/;"	m	struct:SDState	file:
wptr	.\adb.c	/^    int rptr, wptr, count;$/;"	m	struct:KBDState	file:
wptr	.\ps2.c	/^    int rptr, wptr, count;$/;"	m	struct:__anon77	file:
wptr	.\slavio_serial.c	/^    int rptr, wptr, count;$/;"	m	struct:__anon101	file:
wred	.\vmware_vga.c	/^    uint32_t wred;$/;"	m	struct:vmsvga_state_s	file:
wregs	.\esp.c	/^    uint8_t wregs[ESP_REGS];$/;"	m	struct:ESPState	file:
wregs	.\slavio_serial.c	/^    uint8_t rx, tx, wregs[SERIAL_REGS], rregs[SERIAL_REGS];$/;"	m	struct:ChannelState	file:
write	.\omap.h	/^        void (*write[3])(struct omap_mpu_state_s *s,$/;"	m	struct:omap_mpu_state_s::omap_dma_port_if_s
write_IRQreg	.\openpic.c	/^static inline void write_IRQreg (openpic_t *opp, int n_IRQ,$/;"	f	file:
write_audio	.\adlib.c	/^static int write_audio (AdlibState *s, int samples)$/;"	f	file:
write_audio	.\sb16.c	/^static int write_audio (SB16State *s, int nchan, int dma_pos,$/;"	f	file:
write_bootloader	.\mips_malta.c	/^static void write_bootloader (CPUState *env, unsigned long bios_offset, int64_t kernel_entry)$/;"	f	file:
write_chan	.\dma.c	/^static void write_chan (void *opaque, uint32_t nport, uint32_t data)$/;"	f	file:
write_cmd	.\pckbd.c	/^    uint8_t write_cmd; \/* if non zero, write data to port 60 is expected *\/$/;"	m	struct:KBDState	file:
write_cmd	.\ps2.c	/^    int32_t write_cmd;$/;"	m	struct:__anon78	file:
write_cont	.\dma.c	/^static void write_cont (void *opaque, uint32_t nport, uint32_t data)$/;"	f	file:
write_ctrl	.\etraxfs_timer.c	/^static void write_ctrl(struct fs_timer_t *t, uint32_t v)$/;"	f	file:
write_data	.\scsi-disk.h	/^    int (*write_data)(SCSIDevice *s, uint32_t tag);$/;"	m	struct:SCSIDevice
write_data	.\smbus.h	/^    void (*write_data)(SMBusDevice *dev, uint8_t cmd, uint8_t *buf, int len);$/;"	m	struct:SMBusDevice
write_error	.\ppc.c	/^    int (*write_error)(int dcrn);$/;"	m	struct:ppc_dcr_t	file:
write_fn	.\nvram.h	/^    nvram_write_t write_fn;$/;"	m	struct:nvram_t
write_latch	.\i8254.c	/^    uint8_t write_latch;$/;"	m	struct:PITChannelState	file:
write_page	.\dma.c	/^static void write_page (void *opaque, uint32_t nport, uint32_t data)$/;"	f	file:
write_pageh	.\dma.c	/^static void write_pageh (void *opaque, uint32_t nport, uint32_t data)$/;"	f	file:
write_response	.\esp.c	/^static void write_response(ESPState *s)$/;"	f	file:
write_state	.\i8254.c	/^    uint8_t write_state;$/;"	m	struct:PITChannelState	file:
writeable	.\eeprom93xx.c	/^    uint8_t  writeable;$/;"	m	struct:_eeprom_t	file:
writefn	.\pxa2xx.c	/^    void (*writefn)(void *opaque, uint32_t value);$/;"	m	struct:pxa2xx_ssp_s	file:
writemode	.\ds1225y.c	/^    writemode,$/;"	e	enum:__anon10	file:
x	.\tsc210x.c	/^    int x, y;$/;"	m	struct:tsc210x_state_s	file:
x	.\usb-hid.c	/^    int x, y;$/;"	m	struct:USBMouseState	file:
x	.\usb-wacom.c	/^    int x, y;$/;"	m	struct:USBWacomState	file:
x	.\vmware_vga.c	/^        int x, y, w, h;$/;"	m	struct:vmsvga_state_s::vmsvga_rect_s	file:
x	.\vmware_vga.c	/^        int x;$/;"	m	struct:vmsvga_state_s::__anon127	file:
xcer	.\omap.c	/^    uint16_t xcer[8];$/;"	m	struct:omap_mcbsp_s	file:
xcr	.\omap.c	/^    uint16_t xcr[2];$/;"	m	struct:omap_mcbsp_s	file:
xfer_cb	.\pl022.c	/^    int (*xfer_cb)(void *, int);$/;"	m	struct:__anon53	file:
xfer_cb	.\stellaris.c	/^    ssi_xfer_cb xfer_cb[2];$/;"	m	struct:__anon114	file:
xfrcnt	.\ppc405_uc.c	/^    uint8_t xfrcnt;$/;"	m	struct:ppc4xx_i2c_t	file:
xmit_pos	.\pcnet.c	/^    int xmit_pos, recv_pos;$/;"	m	struct:PCNetState_st	file:
xmt_tco_frames	.\eepro100.c	/^    uint16_t xmt_tco_frames, rcv_tco_frames;$/;"	m	struct:__anon13	file:
xres	.\pxa2xx_lcd.c	/^    int xres, yres;$/;"	m	struct:pxa2xx_lcdc_s	file:
xtal_osc12m	.\omap1_clk.c	/^static struct clk xtal_osc12m = {$/;"	v	typeref:struct:clk	file:
xtal_osc32k	.\omap1_clk.c	/^static struct clk xtal_osc32k = {$/;"	v	typeref:struct:clk	file:
xtcntlss	.\ppc405_uc.c	/^    uint8_t xtcntlss;$/;"	m	struct:ppc4xx_i2c_t	file:
y	.\tsc210x.c	/^    int x, y;$/;"	m	struct:tsc210x_state_s	file:
y	.\usb-hid.c	/^    int x, y;$/;"	m	struct:USBMouseState	file:
y	.\usb-wacom.c	/^    int x, y;$/;"	m	struct:USBWacomState	file:
y	.\vmware_vga.c	/^        int x, y, w, h;$/;"	m	struct:vmsvga_state_s::vmsvga_rect_s	file:
y	.\vmware_vga.c	/^        int y;$/;"	m	struct:vmsvga_state_s::__anon127	file:
yres	.\pxa2xx_lcd.c	/^    int xres, yres;$/;"	m	struct:pxa2xx_lcdc_s	file:
zeros	.\rtl8139.c	/^    uint8_t  zeros;$/;"	m	struct:ip_pseudo_header	file:
